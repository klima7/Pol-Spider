[
    {
        "query_en": "SELECT count(*) FROM singer",
        "question_en": "How many singers do we have?",
        "db_id": "concert_singer",
        "query_pl": "SELECT count(*) FROM singer",
        "question_pl": "Ilu mamy wokalistów?"
    },
    {
        "query_en": "SELECT count(*) FROM singer",
        "question_en": "What is the total number of singers?",
        "db_id": "concert_singer",
        "query_pl": "SELECT count(*) FROM singer",
        "question_pl": "Jaka jest łączna liczba wokalistów?"
    },
    {
        "query_en": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "question_en": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "question_pl": "Pokaż imię i nazwisko, kraj, wiek wszystkich piosenkarzy uporządkowanych według wieku od najstarszego do najmłodszego."
    },
    {
        "query_en": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "question_en": "What are the names, countries, and ages for every singer in descending order of age?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "question_pl": "Jakie są imiona, kraje i wiek każdego piosenkarza w kolejności malejącej według wieku?"
    },
    {
        "query_en": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "question_en": "What is the average, minimum, and maximum age of all singers from France?",
        "db_id": "concert_singer",
        "query_pl": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  \"Francja\"",
        "question_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich piosenkarzy z Francji?"
    },
    {
        "query_en": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "question_en": "What is the average, minimum, and maximum age for all French singers?",
        "db_id": "concert_singer",
        "query_pl": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  \"Francja\"",
        "question_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich francuskich piosenkarzy?"
    },
    {
        "query_en": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "question_en": "Show the name and the release year of the song by the youngest singer.",
        "db_id": "concert_singer",
        "query_pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "question_pl": "Pokaż nazwę i rok wydania utworu najmłodszego piosenkarza."
    },
    {
        "query_en": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "question_en": "What are the names and release years for all the songs of the youngest singer?",
        "db_id": "concert_singer",
        "query_pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "question_pl": "Jakie są nazwy i lata wydania wszystkich piosenek najmłodszego piosenkarza?"
    },
    {
        "query_en": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "question_en": "What are all distinct countries where singers above age 20 are from?",
        "db_id": "concert_singer",
        "query_pl": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "question_pl": "Z jakich krajów pochodzą piosenkarze powyżej 20 roku życia?"
    },
    {
        "query_en": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "question_en": "What are  the different countries with singers above age 20?",
        "db_id": "concert_singer",
        "query_pl": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "question_pl": "W jakich krajach są piosenkarze powyżej 20 roku życia?"
    },
    {
        "query_en": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "question_en": "Show all countries and the number of singers in each country.",
        "db_id": "concert_singer",
        "query_pl": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "question_pl": "Pokaż wszystkie kraje i liczbę piosenkarzy w każdym z nich."
    },
    {
        "query_en": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "question_en": "How many singers are from each country?",
        "db_id": "concert_singer",
        "query_pl": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "question_pl": "Ilu piosenkarzy pochodzi z każdego kraju?"
    },
    {
        "query_en": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "question_en": "List all song names by singers above the average age.",
        "db_id": "concert_singer",
        "query_pl": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "question_pl": "Wymień wszystkie nazwy piosenek piosenkarzy powyżej średniego wieku."
    },
    {
        "query_en": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "question_en": "What are all the song names by singers who are older than average?",
        "db_id": "concert_singer",
        "query_pl": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "question_pl": "Jakie są nazwy piosenek piosenkarzy, którzy są starsi niż przeciętnie?"
    },
    {
        "query_en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question_en": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "db_id": "concert_singer",
        "query_pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question_pl": "Pokaż lokalizację i nazwę wszystkich stadionów o pojemności od 5000 do 10000."
    },
    {
        "query_en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question_en": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "db_id": "concert_singer",
        "query_pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "question_pl": "Jakie są lokalizacje i nazwy wszystkich stacji o pojemności od 5000 do 10000?"
    },
    {
        "query_en": "select max(capacity), average from stadium",
        "question_en": "What is the maximum capacity and the average of all stadiums ?",
        "db_id": "concert_singer",
        "query_pl": "select max(capacity), average from stadium",
        "question_pl": "Jaka jest maksymalna pojemność i średnia pojemność wszystkich stadionów?"
    },
    {
        "query_en": "select avg(capacity) ,  max(capacity) from stadium",
        "question_en": "What is the average and maximum capacities for all stadiums ?",
        "db_id": "concert_singer",
        "query_pl": "select avg(capacity) ,  max(capacity) from stadium",
        "question_pl": "Jaka jest średnia i maksymalna pojemność wszystkich stadionów?"
    },
    {
        "query_en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question_en": "What is the name and capacity for the stadium with highest average attendance?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question_pl": "Jaka jest nazwa i pojemność stadionu z najwyższą średnią frekwencją?"
    },
    {
        "query_en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question_en": "What is the name and capacity for the stadium with the highest average attendance?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "question_pl": "Jak nazywa się stadion o największej średniej frekwencji i jaką ma pojemność?"
    },
    {
        "query_en": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "question_en": "How many concerts are there in year 2014 or 2015?",
        "db_id": "concert_singer",
        "query_pl": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "question_pl": "Ile koncertów odbędzie się w 2014 lub 2015 roku?"
    },
    {
        "query_en": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "question_en": "How many concerts occurred in 2014 or 2015?",
        "db_id": "concert_singer",
        "query_pl": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "question_pl": "Ile koncertów odbyło się w 2014 lub 2015 roku?"
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "question_en": "Show the stadium name and the number of concerts in each stadium.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "question_pl": "Pokaż nazwę stadionu i liczbę koncertów na każdym stadionie."
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "question_en": "For each stadium, how many concerts play there?",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "question_pl": "Ile koncertów odbywa się na każdym stadionie?"
    },
    {
        "query_en": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Pokaż nazwę i pojemność stadionu z największą liczbą koncertów w roku 2014 lub później."
    },
    {
        "query_en": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
        "question_en": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
        "db_id": "concert_singer",
        "query_pl": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
        "question_pl": "Jak nazywa się i jaką pojemność ma stadion, na którym odbyło się najwięcej koncertów po 2013 roku?"
    },
    {
        "query_en": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which year has most number of concerts?",
        "db_id": "concert_singer",
        "query_pl": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który rok ma najwięcej koncertów?"
    },
    {
        "query_en": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the year that had the most concerts?",
        "db_id": "concert_singer",
        "query_pl": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "W którym roku odbyło się najwięcej koncertów?"
    },
    {
        "query_en": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "question_en": "Show the stadium names without any concert.",
        "db_id": "concert_singer",
        "query_pl": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "question_pl": "Pokaż nazwy stadionów bez żadnego koncertu."
    },
    {
        "query_en": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "question_en": "What are the names of the stadiums without any concerts?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "question_pl": "Jak nazywają się stadiony, na których nie ma koncertów?"
    },
    {
        "query_en": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "question_en": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "db_id": "concert_singer",
        "query_pl": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "question_pl": "Pokaż kraje, z których pochodzą piosenkarz w wieku powyżej 40 lat i piosenkarz w wieku poniżej 30 lat."
    },
    {
        "query_en": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "question_en": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "db_id": "concert_singer",
        "query_pl": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "question_pl": "Pokaż nazwy wszystkich stadionów z wyjątkiem stadionów, na których odbył się koncert w 2014 roku."
    },
    {
        "query_en": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "question_en": "What are the names of all stadiums that did not have a concert in 2014?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "question_pl": "Jak nazywają się wszystkie stadiony, na których nie odbył się koncert w 2014 roku?"
    },
    {
        "query_en": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "question_en": "Show the name and theme for all concerts and the number of singers in each concert.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "question_pl": "Pokaż nazwę i temat wszystkich koncertów oraz liczbę wokalistów na każdym koncercie."
    },
    {
        "query_en": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
        "question_en": "What are the names , themes , and number of singers for every concert ?",
        "db_id": "concert_singer",
        "query_pl": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
        "question_pl": "Jakie są nazwy, tematy i liczba wokalistów na każdym koncercie?"
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "question_en": "List singer names and number of concerts for each singer.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "question_pl": "Wymień nazwiska piosenkarzy i liczbę koncertów każdego z nich."
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "question_en": "What are the names of the singers and number of concerts for each person?",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "question_pl": "Jakie są nazwiska piosenkarzy i liczba koncertów dla każdej osoby?"
    },
    {
        "query_en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "question_en": "List all singer names in concerts in year 2014.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "question_pl": "Wymień wszystkie nazwiska piosenkarzy na koncertach w 2014 roku."
    },
    {
        "query_en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "question_en": "What are the names of the singers who performed in a concert in 2014?",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "question_pl": "Jak nazywają się piosenkarze, którzy wystąpili na koncercie w 2014 roku?"
    },
    {
        "query_en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "question_en": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "question_pl": "Jak nazywa się i z jakiego kraju pochodzi piosenkarz, którego utwór nosi tytuł \"Hey\"?"
    },
    {
        "query_en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "question_en": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "db_id": "concert_singer",
        "query_pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "question_pl": "Jak nazywa się i z jakiego kraju pochodzi każdy piosenkarz, który ma w tytule utwór ze słowem \"Hey\"?"
    },
    {
        "query_en": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "question_en": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "question_pl": "Znajdź nazwy i lokalizacje stadionów, na których odbyły się koncerty w latach 2014 i 2015."
    },
    {
        "query_en": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "question_en": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "db_id": "concert_singer",
        "query_pl": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "question_pl": "Jakie są nazwy i lokalizacje stadionów, na których odbyły się koncerty w 2014 i 2015 roku?"
    },
    {
        "query_en": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "question_en": "Find the number of concerts happened in the stadium with the highest capacity .",
        "db_id": "concert_singer",
        "query_pl": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "question_pl": "Znajdź liczbę koncertów, które odbyły się na stadionie o największej pojemności."
    },
    {
        "query_en": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "question_en": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
        "db_id": "concert_singer",
        "query_pl": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "question_pl": "Jaka jest liczba koncertów, które odbyły się na stadionie o największej pojemności?"
    },
    {
        "query_en": "SELECT count(*) FROM pets WHERE weight  >  10",
        "question_en": "Find the number of pets whose weight is heavier than 10.",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM pets WHERE weight  >  10",
        "question_pl": "Znajdź liczbę zwierząt, których waga jest większa niż 10."
    },
    {
        "query_en": "SELECT count(*) FROM pets WHERE weight  >  10",
        "question_en": "How many pets have a greater weight than 10?",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM pets WHERE weight  >  10",
        "question_pl": "Ile zwierząt ma wagę większą niż 10?"
    },
    {
        "query_en": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_en": "Find the weight of the youngest dog.",
        "db_id": "pets_1",
        "query_pl": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_pl": "Znajdź wagę najmłodszego psa."
    },
    {
        "query_en": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_en": "How much does the youngest dog weigh?",
        "db_id": "pets_1",
        "query_pl": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_pl": "Ile waży najmłodszy pies?"
    },
    {
        "query_en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "question_en": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "db_id": "pets_1",
        "query_pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "question_pl": "Znajdź maksymalną wagę dla każdego typu zwierzęcia. Wymień maksymalną wagę i typ zwierzęcia."
    },
    {
        "query_en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "question_en": "List the maximum weight and type for each type of pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "question_pl": "Wymień maksymalną wagę i typ dla każdego rodzaju zwierzęcia."
    },
    {
        "query_en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "question_en": "Find number of pets owned by students who are older than 20.",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "question_pl": "Znajdź liczbę zwierząt domowych posiadanych przez uczniów w wieku powyżej 20 lat."
    },
    {
        "query_en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "question_en": "How many pets are owned by students that have an age greater than 20?",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "question_pl": "Ile zwierząt domowych posiadają uczniowie w wieku powyżej 20 lat?"
    },
    {
        "query_en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "question_en": "Find the number of dog pets that are raised by female students (with sex F).",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  \"pies\"",
        "question_pl": "Znajdź liczbę psów, które są wychowywane przez studentki (z płcią F)."
    },
    {
        "query_en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "question_en": "How many dog pets are raised by female students?",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  \"F\" AND T3.pettype  =  \"pies\"",
        "question_pl": "Ile psich pupili jest wychowywanych przez studentki?"
    },
    {
        "query_en": "SELECT count(DISTINCT pettype) FROM pets",
        "question_en": "Find the number of distinct type of pets.",
        "db_id": "pets_1",
        "query_pl": "SELECT count(DISTINCT pettype) FROM pets",
        "question_pl": "Znajdź liczbę różnych typów zwierząt domowych."
    },
    {
        "query_en": "SELECT count(DISTINCT pettype) FROM pets",
        "question_en": "How many different types of pet are there?",
        "db_id": "pets_1",
        "query_pl": "SELECT count(DISTINCT pettype) FROM pets",
        "question_pl": "Ile jest różnych rodzajów zwierząt domowych?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "question_en": "Find the first name of students who have cat or dog pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" OR T3.pettype  =  \"pies\"",
        "question_pl": "Znajdź imiona uczniów, którzy mają kota lub psa."
    },
    {
        "query_en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "question_en": "What are the first names of every student who has a cat or dog as a pet?",
        "db_id": "pets_1",
        "query_pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" OR T3.pettype  =  \"pies\"",
        "question_pl": "Jakie są imiona każdego ucznia, który ma kota lub psa jako zwierzę domowe?"
    },
    {
        "query_en": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
        "question_en": "Find the first name of students who have both cat and dog pets .",
        "db_id": "pets_1",
        "query_pl": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  \"kot\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  \"pies\"",
        "question_pl": "Znajdź imiona uczniów, którzy mają zarówno kota, jak i psa."
    },
    {
        "query_en": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "question_en": "What are the students' first names who have both cats and dogs as pets?",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\"",
        "question_pl": "Jakie są imiona uczniów, którzy mają zarówno koty, jak i psy jako zwierzęta domowe?"
    },
    {
        "query_en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "question_en": "Find the major and age of students who do not have a cat pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")",
        "question_pl": "Znajdź kierunek studiów i wiek studentów, którzy nie mają kota."
    },
    {
        "query_en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "question_en": "What major is every student who does not own a cat as a pet, and also how old are they?",
        "db_id": "pets_1",
        "query_pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")",
        "question_pl": "Na jakim kierunku jest każdy student, który nie posiada kota jako zwierzęcia domowego, a także ile ma lat?"
    },
    {
        "query_en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "question_en": "Find the id of students who do not have a cat pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\"",
        "question_pl": "Znajdź identyfikator uczniów, którzy nie mają kota."
    },
    {
        "query_en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "question_en": "What are the ids of the students who do not own cats as pets?",
        "db_id": "pets_1",
        "query_pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\"",
        "question_pl": "Jakie są identyfikatory uczniów, którzy nie posiadają kotów jako zwierząt domowych?"
    },
    {
        "query_en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "question_en": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\" AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")",
        "question_pl": "Znajdź imię i wiek uczniów, którzy mają psa, ale nie mają kota."
    },
    {
        "query_en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "question_en": "What is the first name of every student who has a dog but does not have a cat?",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\" AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")",
        "question_pl": "Jak ma na imię każdy uczeń, który ma psa, ale nie ma kota?"
    },
    {
        "query_en": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_en": "Find the type and weight of the youngest pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_pl": "Znajdź typ i wagę najmłodszego zwierzaka."
    },
    {
        "query_en": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_en": "What type of pet is the youngest animal, and how much does it weigh?",
        "db_id": "pets_1",
        "query_pl": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "question_pl": "Jakiego rodzaju zwierzęciem jest najmłodsze zwierzę i ile waży?"
    },
    {
        "query_en": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "question_en": "Find the id and weight of all pets whose age is older than 1.",
        "db_id": "pets_1",
        "query_pl": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "question_pl": "Znajdź identyfikator i wagę wszystkich zwierząt, których wiek jest większy niż 1."
    },
    {
        "query_en": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "question_en": "What is the id and weight of every pet who is older than 1?",
        "db_id": "pets_1",
        "query_pl": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "question_pl": "Jaki jest identyfikator i waga każdego zwierzęcia, które ma więcej niż 1 rok?"
    },
    {
        "query_en": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "question_en": "Find the average and maximum age for each type of pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "question_pl": "Znajdź średni i maksymalny wiek dla każdego typu zwierzęcia."
    },
    {
        "query_en": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "question_en": "What is the average and maximum age for each pet type?",
        "db_id": "pets_1",
        "query_pl": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "question_pl": "Jaki jest średni i maksymalny wiek dla każdego typu zwierzęcia?"
    },
    {
        "query_en": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "question_en": "Find the average weight for each pet type.",
        "db_id": "pets_1",
        "query_pl": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "question_pl": "Znajdź średnią wagę dla każdego typu zwierzęcia."
    },
    {
        "query_en": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "question_en": "What is the average weight for each type of pet?",
        "db_id": "pets_1",
        "query_pl": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "question_pl": "Jaka jest średnia waga dla każdego typu zwierzęcia?"
    },
    {
        "query_en": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "question_en": "Find the first name and age of students who have a pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "question_pl": "Znajdź imię i wiek uczniów, którzy mają zwierzę domowe."
    },
    {
        "query_en": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "question_en": "What are the different first names and ages of the students who do have pets?",
        "db_id": "pets_1",
        "query_pl": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "question_pl": "Jakie są imiona i wiek uczniów, którzy mają zwierzęta?"
    },
    {
        "query_en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "question_en": "Find the id of the pet owned by student whose last name is ‘Smith’.",
        "db_id": "pets_1",
        "query_pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "question_pl": "Znajdź identyfikator zwierzęcia należącego do ucznia, którego nazwisko to \"Smith\"."
    },
    {
        "query_en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "question_en": "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "db_id": "pets_1",
        "query_pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "question_pl": "Jaki jest identyfikator zwierzęcia należącego do ucznia o nazwisku \"Smith\"?"
    },
    {
        "query_en": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "question_en": "Find the number of pets for each student who has any pet and student id.",
        "db_id": "pets_1",
        "query_pl": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "question_pl": "Znajdź liczbę zwierząt domowych dla każdego ucznia, który ma jakiekolwiek zwierzę domowe i identyfikator ucznia."
    },
    {
        "query_en": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
        "question_en": "For students who have pets , how many pets does each student have ? list their ids instead of names .",
        "db_id": "pets_1",
        "query_pl": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
        "question_pl": "W przypadku uczniów, którzy mają zwierzęta domowe, ile zwierząt ma każdy uczeń? Wymień ich identyfikatory zamiast imion."
    },
    {
        "query_en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "question_en": "Find the first name and gender of student who have more than one pet.",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "question_pl": "Znajdź imię i płeć ucznia, który ma więcej niż jedno zwierzę domowe."
    },
    {
        "query_en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "question_en": "What is the first name and gender of the all the students who have more than one pet?",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "question_pl": "Jakie jest imię i płeć wszystkich uczniów, którzy mają więcej niż jedno zwierzę domowe?"
    },
    {
        "query_en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "question_en": "Find the last name of the student who has a cat that is age 3.",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  \"kot\"",
        "question_pl": "Znajdź nazwisko ucznia, który ma kota w wieku 3 lat."
    },
    {
        "query_en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "question_en": "What is the last name of the student who has a cat that is 3 years old?",
        "db_id": "pets_1",
        "query_pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  \"kot\"",
        "question_pl": "Jak nazywa się uczeń, który ma kota w wieku 3 lat?"
    },
    {
        "query_en": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "question_en": "Find the average age of students who do not have any pet .",
        "db_id": "pets_1",
        "query_pl": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "question_pl": "Znajdź średni wiek uczniów, którzy nie mają zwierząt domowych."
    },
    {
        "query_en": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "question_en": "What is the average age for all students who do not own any pets ?",
        "db_id": "pets_1",
        "query_pl": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "question_pl": "Jaki jest średni wiek wszystkich studentów, którzy nie posiadają zwierząt domowych?"
    },
    {
        "query_en": "SELECT count(*) FROM CONTINENTS;",
        "question_en": "How many continents are there?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CONTINENTS;",
        "question_pl": "Ile jest kontynentów?"
    },
    {
        "query_en": "SELECT count(*) FROM CONTINENTS;",
        "question_en": "What is the number of continents?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CONTINENTS;",
        "question_pl": "Jaka jest liczba kontynentów?"
    },
    {
        "query_en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "question_en": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "question_pl": "Ile krajów ma każdy kontynent? Wymień identyfikator kontynentu, nazwę kontynentu i liczbę krajów."
    },
    {
        "query_en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "question_en": "For each continent, list its id, name, and how many countries it has?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "question_pl": "Dla każdego kontynentu wymień jego identyfikator, nazwę i liczbę krajów?"
    },
    {
        "query_en": "SELECT count(*) FROM COUNTRIES;",
        "question_en": "How many countries are listed?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM COUNTRIES;",
        "question_pl": "Ile krajów znajduje się na liście?"
    },
    {
        "query_en": "SELECT count(*) FROM COUNTRIES;",
        "question_en": "How many countries exist?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM COUNTRIES;",
        "question_pl": "Ile krajów istnieje?"
    },
    {
        "query_en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "question_en": "How many models does each car maker produce? List maker full name, id and the number.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "question_pl": "Ile modeli produkują poszczególni producenci samochodów? Wymień pełną nazwę producenta, identyfikator i numer."
    },
    {
        "query_en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "question_en": "What is the full name of each car maker, along with its id and how many models it produces?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "question_pl": "Jaka jest pełna nazwa każdego producenta samochodów, wraz z jego identyfikatorem i liczbą produkowanych modeli?"
    },
    {
        "query_en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "question_en": "Which model of the car has the minimum horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "question_pl": "Który model samochodu ma najmniejszą moc?"
    },
    {
        "query_en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "question_en": "What is the model of the car with the smallest amount of horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "question_pl": "Jaki jest model samochodu o najmniejszej mocy?"
    },
    {
        "query_en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "question_en": "Find the model of the car whose weight is below the average weight.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "question_pl": "Znajdź model samochodu, którego waga jest poniżej średniej wagi."
    },
    {
        "query_en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "question_en": "What is the model for the car with a weight smaller than the average?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "question_pl": "Jaki jest model samochodu o masie mniejszej niż średnia?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "question_en": "Find the name of the makers that produced some cars in the year of 1970?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "question_pl": "Znajdź nazwy producentów, którzy wyprodukowali kilka samochodów w 1970 roku?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "question_en": "What is the name of the different car makers who produced a car in 1970?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "question_pl": "Jak nazywają się różni producenci samochodów, którzy wyprodukowali samochód w 1970 roku?"
    },
    {
        "query_en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "question_en": "Find the make and production time of the cars that were produced in the earliest year?",
        "db_id": "car_1",
        "query_pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "question_pl": "Znajdź markę i czas produkcji samochodów, które zostały wyprodukowane w najwcześniejszym roku?"
    },
    {
        "query_en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "question_en": "What is the maker of the carr produced in the earliest year and what year was it?",
        "db_id": "car_1",
        "query_pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "question_pl": "Jaki jest producent samochodu wyprodukowanego w najwcześniejszym roku i który to był rok?"
    },
    {
        "query_en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "question_en": "Which distinct car models are the produced after 1980?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "question_pl": "Które modele samochodów są produkowane po 1980 roku?"
    },
    {
        "query_en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "question_en": "What are the different models for the cards produced after 1980?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "question_pl": "Jakie są różne modele kart wyprodukowanych po 1980 roku?"
    },
    {
        "query_en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "question_en": "How many car makers are there in each continents? List the continent name and the count.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "question_pl": "Ilu producentów samochodów jest na każdym kontynencie? Wymień nazwę kontynentu i liczbę producentów."
    },
    {
        "query_en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "question_en": "What is the name of each continent and how many car makers are there in each one?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "question_pl": "Jak nazywają się poszczególne kontynenty i ilu producentów samochodów jest na każdym z nich?"
    },
    {
        "query_en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "question_en": "Which of the countries has the most car makers? List the country name.",
        "db_id": "car_1",
        "query_pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "question_pl": "Który z krajów ma najwięcej producentów samochodów? Wymień nazwę kraju."
    },
    {
        "query_en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "question_en": "What is the name of the country with the most car makers?",
        "db_id": "car_1",
        "query_pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "question_pl": "Jak nazywa się kraj z największą liczbą producentów samochodów?"
    },
    {
        "query_en": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
        "question_en": "How many car models are produced by each maker ? Only list the count and the maker full name .",
        "db_id": "car_1",
        "query_pl": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
        "question_pl": "Ile modeli samochodów wyprodukowali poszczególni producenci? Wymień tylko liczbę i pełną nazwę producenta."
    },
    {
        "query_en": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "question_en": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "db_id": "car_1",
        "query_pl": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "question_pl": "Jaka jest liczba modeli samochodów produkowanych przez każdego producenta i jaki jest identyfikator oraz pełna nazwa każdego producenta?"
    },
    {
        "query_en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "question_en": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "question_pl": "Jakie jest przyspieszenie samochodu marki amc hornet sportabout (sw)?"
    },
    {
        "query_en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "question_en": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "question_pl": "Jak bardzo przyspiesza samochód, który robi amc hornet sportabout (sw)?"
    },
    {
        "query_en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "question_en": "How many car makers are there in france?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  \"francja\";",
        "question_pl": "Ilu producentów samochodów jest we Francji?"
    },
    {
        "query_en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "question_en": "What is the number of makers of care in France?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  \"francja\";",
        "question_pl": "Jaka jest liczba twórców opieki we Francji?"
    },
    {
        "query_en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "question_en": "How many car models are produced in the usa?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  \"uSA\";",
        "question_pl": "Ile modeli samochodów jest produkowanych w USA?"
    },
    {
        "query_en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "question_en": "What is the count of the car models produced in the United States?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  \"uSA\";",
        "question_pl": "Jaka jest liczba modeli samochodów produkowanych w Stanach Zjednoczonych?"
    },
    {
        "query_en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "question_en": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "question_pl": "Jaka jest średnia mil na galon (mpg) samochodów z 4 cylindrami?"
    },
    {
        "query_en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "question_en": "What is the average miles per gallon of all the cards with 4 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "question_pl": "Jaka jest średnia mil na galon wszystkich kart z 4 cylindrami?"
    },
    {
        "query_en": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "question_en": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
        "db_id": "car_1",
        "query_pl": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "question_pl": "Jaka jest najmniejsza waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?"
    },
    {
        "query_en": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "question_en": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
        "db_id": "car_1",
        "query_pl": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "question_pl": "Jaka jest minimalna waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?"
    },
    {
        "query_en": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "question_en": "What are all the makers and models?",
        "db_id": "car_1",
        "query_pl": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "question_pl": "Jacy są wszyscy producenci i modele?"
    },
    {
        "query_en": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "question_en": "What are the makers and models?",
        "db_id": "car_1",
        "query_pl": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "question_pl": "Jacy są producenci i modele?"
    },
    {
        "query_en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "question_en": "What are the countries having at least one car maker? List name and id.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "question_pl": "Jakie kraje mają co najmniej jednego producenta samochodów? Wymień nazwę i identyfikator."
    },
    {
        "query_en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "question_en": "What are the names and ids of all countries with at least one car maker?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "question_pl": "Jakie są nazwy i identyfikatory wszystkich krajów z co najmniej jednym producentem samochodów?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "question_en": "What is the number of the cars with horsepower more than 150?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "question_pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "question_en": "What is the number of cars with a horsepower greater than 150?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "question_pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?"
    },
    {
        "query_en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "question_en": "What is the average weight of cars each year?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "question_pl": "Jaka jest średnia waga samochodów każdego roku?"
    },
    {
        "query_en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "question_en": "What is the average weight and year for each year?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "question_pl": "Jaka jest średnia waga i rok dla każdego roku?"
    },
    {
        "query_en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "question_en": "Which countries in europe have at least 3 car manufacturers?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  \"europa\" GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "question_pl": "Które kraje w Europie mają co najmniej 3 producentów samochodów?"
    },
    {
        "query_en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "question_en": "What are the names of all European countries with at least 3 manufacturers?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "question_pl": "Jak nazywają się wszystkie kraje europejskie z co najmniej 3 producentami?"
    },
    {
        "query_en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_en": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_pl": "Jaka jest maksymalna moc i marka modeli samochodów z 3 cylindrami?"
    },
    {
        "query_en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_en": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "db_id": "car_1",
        "query_pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_pl": "Jaka jest największa moc w modelach z 3 cylindrami i jaka to marka?"
    },
    {
        "query_en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "question_en": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "question_pl": "Który model oszczędza najwięcej benzyny? Oznacza to, że ma maksymalną liczbę mil na galon."
    },
    {
        "query_en": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
        "question_en": "What is the car model with the highest mpg ?",
        "db_id": "car_1",
        "query_pl": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
        "question_pl": "Jaki jest model samochodu o najwyższym mpg?"
    },
    {
        "query_en": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "question_en": "What is the average horsepower of the cars before 1980?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "question_pl": "Jaka jest średnia moc samochodów sprzed 1980 roku?"
    },
    {
        "query_en": "select avg(horsepower) from cars_data where year  <  1980;",
        "question_en": "What is the average horsepower for all cars produced before 1980 ?",
        "db_id": "car_1",
        "query_pl": "select avg(horsepower) from cars_data where year  <  1980;",
        "question_pl": "Jaka jest średnia moc wszystkich samochodów wyprodukowanych przed 1980 rokiem?"
    },
    {
        "query_en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "question_en": "What is the average edispl of the cars of model volvo?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "question_pl": "Jaka jest średnia prędkość samochodów modelu volvo?"
    },
    {
        "query_en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "question_en": "What is the average edispl for all volvos?",
        "db_id": "car_1",
        "query_pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "question_pl": "Jaki jest średni edispl dla wszystkich volvo?"
    },
    {
        "query_en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "question_en": "What is the maximum accelerate for different number of cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "question_pl": "Jakie jest maksymalne przyspieszenie dla różnej liczby cylindrów?"
    },
    {
        "query_en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "question_en": "What is the maximum accelerate for all the different cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "question_pl": "Jakie jest maksymalne przyspieszenie dla wszystkich cylindrów?"
    },
    {
        "query_en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "question_en": "Which model has the most version(make) of cars?",
        "db_id": "car_1",
        "query_pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "question_pl": "Który model ma najwięcej wersji (marek) samochodów?"
    },
    {
        "query_en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "question_en": "What model has the most different versions?",
        "db_id": "car_1",
        "query_pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "question_pl": "Który model ma najwięcej różnych wersji?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "question_en": "How many cars have more than 4 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "question_pl": "Ile samochodów ma więcej niż 4 cylindry?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "question_en": "What is the number of cars with more than 4 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "question_pl": "Jaka jest liczba samochodów z więcej niż 4 cylindrami?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "question_en": "how many cars were produced in 1980?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "question_pl": "Ile samochodów wyprodukowano w 1980 roku?"
    },
    {
        "query_en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "question_en": "In 1980, how many cars were made?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "question_pl": "Ile samochodów wyprodukowano w 1980 roku?"
    },
    {
        "query_en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "question_en": "How many car models were produced by the maker with full name American Motor Company?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "question_pl": "Ile modeli samochodów zostało wyprodukowanych przez producenta o pełnej nazwie American Motor Company?"
    },
    {
        "query_en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "question_en": "What is the number of car models created by the car maker American Motor Company?",
        "db_id": "car_1",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "question_pl": "Jaka jest liczba modeli samochodów stworzonych przez producenta samochodów American Motor Company?"
    },
    {
        "query_en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_en": "Which makers designed more than 3 car models? List full name and the id.",
        "db_id": "car_1",
        "query_pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_pl": "Którzy producenci zaprojektowali więcej niż 3 modele samochodów? Wymień pełną nazwę i identyfikator."
    },
    {
        "query_en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_en": "What are the names and ids of all makers with more than 3 models?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_pl": "Jakie są nazwy i identyfikatory wszystkich producentów posiadających więcej niż 3 modele?"
    },
    {
        "query_en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "question_en": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "question_pl": "Jakie charakterystyczne modele są produkowane przez producenta o pełnej nazwie General Motors lub ważą więcej niż 3500?"
    },
    {
        "query_en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "question_en": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "question_pl": "Jakie są różne modele stworzone przez producenta samochodów General Motors lub ważące ponad 3500?"
    },
    {
        "query_en": "select distinct year from cars_data where weight between 3000 and 4000;",
        "question_en": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
        "db_id": "car_1",
        "query_pl": "select distinct year from cars_data where weight between 3000 and 4000;",
        "question_pl": "W których latach produkowano samochody ważące nie mniej niż 3000 i nie więcej niż 4000?"
    },
    {
        "query_en": "select distinct year from cars_data where weight between 3000 and 4000;",
        "question_en": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
        "db_id": "car_1",
        "query_pl": "select distinct year from cars_data where weight between 3000 and 4000;",
        "question_pl": "W jakich latach produkowano samochody ważące mniej niż 4000 i samochody ważące więcej niż 3000?"
    },
    {
        "query_en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "question_en": "What is the horsepower of the car with the largest accelerate?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "question_pl": "Jaka jest moc samochodu z największym przyspieszeniem?"
    },
    {
        "query_en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "question_en": "What is the horsepower of the car with the greatest accelerate?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "question_pl": "Jaka jest moc samochodu z największym przyspieszeniem?"
    },
    {
        "query_en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "question_en": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "question_pl": "Dla modelu volvo, ile cylindrów ma samochód z najmniejszym przyspieszeniem?"
    },
    {
        "query_en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "question_en": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "question_pl": "W przypadku modelu volvo, ile cylindrów ma wersja z najmniejszym przyspieszeniem?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "question_en": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "question_pl": "Ile samochodów ma większe przyspieszenie niż samochód o największej mocy?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "question_en": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "question_pl": "Jaka jest liczba samochodów z większym przyspieszeniem niż ten z największą mocą?"
    },
    {
        "query_en": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "question_en": "How many countries has more than 2 car makers ?",
        "db_id": "car_1",
        "query_pl": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "question_pl": "Ile krajów ma więcej niż 2 producentów samochodów?"
    },
    {
        "query_en": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "question_en": "What is the number of countries with more than 2 car makers ?",
        "db_id": "car_1",
        "query_pl": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "question_pl": "Jaka jest liczba krajów z więcej niż 2 producentami samochodów?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "question_en": "How many cars has over 6 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "question_pl": "Ile samochodów ma ponad 6 cylindrów?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "question_en": "What is the number of carsw ith over 6 cylinders?",
        "db_id": "car_1",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "question_pl": "Jaka jest liczba samochodów z ponad 6 cylindrami?"
    },
    {
        "query_en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_en": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_pl": "W przypadku samochodów z 4 cylindrami, który model ma największą moc?"
    },
    {
        "query_en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_en": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "question_pl": "Który model samochodu z 4 cylindrami ma największą moc?"
    },
    {
        "query_en": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "question_en": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "db_id": "car_1",
        "query_pl": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "question_pl": "Spośród samochodów o mocy większej niż najniższa, które nie mają więcej niż 3 cylindry? Wymień markę i nazwę samochodu."
    },
    {
        "query_en": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
        "question_en": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
        "db_id": "car_1",
        "query_pl": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
        "question_pl": "Wśród samochodów, które nie mają minimalnej mocy, jakie są identyfikatory marek i nazwy wszystkich tych, które mają mniej niż 4 cylindry?"
    },
    {
        "query_en": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "question_en": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
        "db_id": "car_1",
        "query_pl": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "question_pl": "Jaka jest maksymalna liczba mil na galon samochodu z 8 cylindrami lub wyprodukowanego przed 1980 rokiem?"
    },
    {
        "query_en": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "question_en": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
        "db_id": "car_1",
        "query_pl": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "question_pl": "Jaki jest maksymalny mpg samochodów, które miały 8 cylindrów lub które zostały wyprodukowane przed 1980 rokiem?"
    },
    {
        "query_en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "question_en": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "question_pl": "Które modele są lżejsze niż 3500, ale nie są produkowane przez \"Ford Motor Company\"?"
    },
    {
        "query_en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "question_en": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "db_id": "car_1",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "question_pl": "Jakie są różne modele, które są lżejsze niż 3500, ale nie zostały zbudowane przez Ford Motor Company?"
    },
    {
        "query_en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "question_en": "What are the name of the countries where there is not a single car maker?",
        "db_id": "car_1",
        "query_pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "question_pl": "Jak nazywają się kraje, w których nie ma ani jednego producenta samochodów?"
    },
    {
        "query_en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "question_en": "What are the names of the countries with no car makers?",
        "db_id": "car_1",
        "query_pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "question_pl": "Jak nazywają się kraje, w których nie ma producentów samochodów?"
    },
    {
        "query_en": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
        "question_en": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
        "db_id": "car_1",
        "query_pl": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
        "question_pl": "Którzy producenci samochodów produkują co najmniej 2 modele i więcej niż 3 modele? Wymień id i producenta."
    },
    {
        "query_en": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_en": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "question_pl": "Jakie są identyfikatory i producenci wszystkich producentów samochodów, którzy produkują co najmniej 2 modele i więcej niż 3 samochody?"
    },
    {
        "query_en": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "question_en": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "db_id": "car_1",
        "query_pl": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "question_pl": "Jakie są identyfikatory i nazwy krajów, które mają więcej niż 3 producentów samochodów lub produkują model \"fiat\"?"
    },
    {
        "query_en": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
        "question_en": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
        "db_id": "car_1",
        "query_pl": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  \"fiat\";",
        "question_pl": "Jakie są identyfikatory i nazwy wszystkich krajów, które mają więcej niż 3 producentów samochodów lub produkują model Fiata?"
    },
    {
        "query_en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_en": "Which country does Airline \"JetBlue Airways\" belong to?",
        "db_id": "flight_2",
        "query_pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_pl": "Do jakiego kraju należy linia lotnicza \"JetBlue Airways\"?"
    },
    {
        "query_en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_en": "What country is Jetblue Airways affiliated with?",
        "db_id": "flight_2",
        "query_pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_pl": "Z jakim krajem powiązane są linie Jetblue Airways?"
    },
    {
        "query_en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_en": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "db_id": "flight_2",
        "query_pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_pl": "Jaki jest skrót od linii lotniczej \"JetBlue Airways\"?"
    },
    {
        "query_en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_en": "Which abbreviation corresponds to Jetblue Airways?",
        "db_id": "flight_2",
        "query_pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "question_pl": "Który skrót odpowiada Jetblue Airways?"
    },
    {
        "query_en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_en": "List all airline names and their abbreviations in \"USA\".",
        "db_id": "flight_2",
        "query_pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_pl": "Wymień wszystkie nazwy linii lotniczych i ich skróty w \"USA\"."
    },
    {
        "query_en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_en": "What are the airline names and abbreviations for airlines in the USA?",
        "db_id": "flight_2",
        "query_pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_pl": "Jakie są nazwy i skróty linii lotniczych w USA?"
    },
    {
        "query_en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "question_en": "List the airport code and name in the city of Anthony.",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "question_pl": "Wymień kod i nazwę lotniska w mieście Anthony."
    },
    {
        "query_en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "question_en": "Give the airport code and airport name corresonding to the city Anthony.",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "question_pl": "Podaj kod lotniska i nazwę lotniska odpowiadającą miastu Anthony."
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES",
        "question_en": "How many airlines do we have?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES",
        "question_pl": "Ile mamy linii lotniczych?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES",
        "question_en": "What is the total number of airlines?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES",
        "question_pl": "Jaka jest łączna liczba linii lotniczych?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRPORTS",
        "question_en": "How many airports do we have?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRPORTS",
        "question_pl": "Ile mamy lotnisk?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRPORTS",
        "question_en": "Return the number of  airports.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRPORTS",
        "question_pl": "Zwróć liczbę lotnisk."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS",
        "question_en": "How many flights do we have?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS",
        "question_pl": "Ile mamy lotów?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS",
        "question_en": "Return the number of flights.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS",
        "question_pl": "Zwróć liczbę lotów."
    },
    {
        "query_en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "question_en": "Which airline has abbreviation 'UAL'?",
        "db_id": "flight_2",
        "query_pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "question_pl": "Która linia lotnicza ma skrót \"UAL\"?"
    },
    {
        "query_en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "question_en": "Give the airline with abbreviation 'UAL'.",
        "db_id": "flight_2",
        "query_pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "question_pl": "Podaj linię lotniczą ze skrótem \"UAL\"."
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_en": "How many airlines are from USA?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_pl": "Ile linii lotniczych pochodzi z USA?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_en": "Return the number of airlines in the USA.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "question_pl": "Zwróć liczbę linii lotniczych w USA."
    },
    {
        "query_en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "question_en": "Which city and country is the Alton airport at?",
        "db_id": "flight_2",
        "query_pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "question_pl": "W jakim mieście i kraju znajduje się lotnisko Alton?"
    },
    {
        "query_en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "question_en": "Give the city and country for the Alton airport.",
        "db_id": "flight_2",
        "query_pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "question_pl": "Podaj miasto i kraj, w którym znajduje się lotnisko Alton."
    },
    {
        "query_en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "question_en": "What is the airport name for airport 'AKO'?",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "question_pl": "Jaka jest nazwa lotniska 'AKO'?"
    },
    {
        "query_en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "question_en": "Return the name of the airport with code 'AKO'.",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "question_pl": "Zwróć nazwę lotniska z kodem \"AKO\"."
    },
    {
        "query_en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "question_en": "What are airport names at City 'Aberdeen'?",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "question_pl": "Jakie są nazwy lotnisk w City 'Aberdeen'?"
    },
    {
        "query_en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "question_en": "What are the names of airports in Aberdeen?",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "question_pl": "Jak nazywają się lotniska w Aberdeen?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_en": "How many flights depart from 'APG'?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_pl": "Ile lotów rozpoczyna się od \"APG\"?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_en": "Count the number of flights departing from 'APG'.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_pl": "Policz liczbę lotów odlatujących z \"APG\"."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "question_en": "How many flights have destination ATO?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "question_pl": "Ile lotów ma miejsce docelowe ATO?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "question_en": "Count the number of flights into ATO.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "question_pl": "Policz liczbę lotów do ATO."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "How many flights depart from City Aberdeen?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Ile lotów rozpoczyna się od City Aberdeen?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "Return the number of flights departing from Aberdeen.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Zwróć liczbę lotów rozpoczynających się w Aberdeen."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "How many flights arriving in Aberdeen city?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Ile lotów przylatuje do miasta Aberdeen?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "Return the number of flights arriving in Aberdeen.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Zwróć liczbę lotów przylatujących do Aberdeen."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "question_en": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "question_pl": "Ile lotów rozpoczyna się w mieście \"Aberdeen\" i ma miejsce docelowe w mieście \"Ashley\"?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "question_en": "How many flights fly from Aberdeen to Ashley?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "question_pl": "Ile jest lotów z Aberdeen do Ashley?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "question_en": "How many flights does airline 'JetBlue Airways' have?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "question_pl": "Ile lotów obsługują linie lotnicze \"JetBlue Airways\"?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "question_en": "Give the number of Jetblue Airways flights.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "question_pl": "Podaj liczbę lotów linii Jetblue Airways."
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "question_en": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "question_pl": "Ile lotów \"United Airlines\" odbywa się na lotnisko \"ASY\"?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "question_en": "Count the number of United Airlines flights arriving in ASY Airport.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "question_pl": "Policz liczbę lotów United Airlines przylatujących na lotnisko ASY."
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "question_en": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "question_pl": "Ile lotów linii \"United Airlines\" odlatuje z lotniska \"AHD\"?"
    },
    {
        "query_en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "question_en": "Return the number of United Airlines flights leaving from AHD Airport.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "question_pl": "Zwróć liczbę lotów United Airlines z lotniska AHD."
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "question_en": "How many United Airlines flights go to City 'Aberdeen'?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "question_pl": "Ile lotów United Airlines odbywa się do miasta Aberdeen?"
    },
    {
        "query_en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "question_en": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "question_pl": "Policz liczbę lotów United Airlines, które przylatują do Aberdeen."
    },
    {
        "query_en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which city has most number of arriving flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Które miasto ma największą liczbę przylatujących lotów?"
    },
    {
        "query_en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which city has the most frequent destination airport?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Które miasto ma najczęściej wybierane lotnisko docelowe?"
    },
    {
        "query_en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which city has most number of departing flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Które miasto ma najwięcej odlatujących lotów?"
    },
    {
        "query_en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which city is the most frequent source airport?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Które miasto jest najczęściej wybieranym lotniskiem?"
    },
    {
        "query_en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the code of airport that has the highest number of flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest kod lotniska, które obsługuje największą liczbę lotów?"
    },
    {
        "query_en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the airport code of the airport with the most flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest kod lotniska obsługującego najwięcej lotów?"
    },
    {
        "query_en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "question_en": "What is the code of airport that has fewest number of flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "question_pl": "Jaki jest kod lotniska, które ma najmniejszą liczbę lotów?"
    },
    {
        "query_en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "question_en": "Give the code of the airport with the least flights.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "question_pl": "Podaj kod lotniska z najmniejszą liczbą lotów."
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which airline has most number of flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Która linia lotnicza ma najwięcej lotów?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What airline serves the most flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Która linia lotnicza obsługuje najwięcej lotów?"
    },
    {
        "query_en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "question_en": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "question_pl": "Znajdź skrót i kraj linii lotniczej, która ma najmniejszą liczbę lotów?"
    },
    {
        "query_en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "question_en": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "question_pl": "Jaki jest skrót nazwy linii lotniczej z najmniejszą liczbą lotów i w jakim kraju się ona znajduje?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "question_en": "What are airlines that have some flight departing from airport 'AHD'?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "question_pl": "Jakie linie lotnicze oferują loty z lotniska 'AHD'?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "question_en": "Which airlines have a flight with source airport AHD?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "question_pl": "Które linie lotnicze mają loty ze źródłowym lotniskiem AHD?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "question_en": "What are airlines that have flights arriving at airport 'AHD'?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "question_pl": "Jakie linie lotnicze obsługują loty na lotnisko 'AHD'?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "question_en": "Which airlines have a flight with destination airport AHD?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "question_pl": "Które linie lotnicze mają loty z lotniskiem docelowym AHD?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "question_en": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "question_pl": "Znajdź wszystkie linie lotnicze, które oferują loty z obu lotnisk 'APG' i 'CVO'."
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "question_en": "Which airlines have departing flights from both APG and CVO airports?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "question_pl": "Które linie lotnicze oferują loty z lotnisk APG i CVO?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "question_en": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "question_pl": "Znajdź wszystkie linie lotnicze, które mają loty z lotniska 'CVO', ale nie z 'APG'."
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "question_en": "Which airlines have departures from CVO but not from APG airports?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "question_pl": "Które linie lotnicze mają wyloty z CVO, ale nie z lotnisk APG?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "question_en": "Find all airlines that have at least 10 flights.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "question_pl": "Znajdź wszystkie linie lotnicze, które mają co najmniej 10 lotów."
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "question_en": "Which airlines have at least 10 flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "question_pl": "Które linie lotnicze mają co najmniej 10 lotów?"
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "question_en": "Find all airlines that have fewer than 200 flights.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "question_pl": "Znajdź wszystkie linie lotnicze, które wykonują mniej niż 200 lotów."
    },
    {
        "query_en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "question_en": "Which airlines have less than 200 flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "question_pl": "Które linie lotnicze obsługują mniej niż 200 lotów?"
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "question_en": "What are flight numbers of Airline \"United Airlines\"?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "question_pl": "Jakie są numery lotów linii lotniczych \"United Airlines\"?"
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "question_en": "Which flight numbers correspond to United Airlines flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "question_pl": "Które numery lotów odpowiadają lotom United Airlines?"
    },
    {
        "query_en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_en": "What are flight numbers of flights departing from Airport \"APG\"?",
        "db_id": "flight_2",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_pl": "Jakie są numery lotów odlatujących z lotniska \"APG\"?"
    },
    {
        "query_en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_en": "Give the flight numbers of flights leaving from APG.",
        "db_id": "flight_2",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "question_pl": "Podaj numery lotów odlatujących z APG."
    },
    {
        "query_en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "question_en": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "db_id": "flight_2",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "question_pl": "Jakie są numery lotów przylatujących na lotnisko \"APG\"?"
    },
    {
        "query_en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "question_en": "Give the flight numbers of flights landing at APG.",
        "db_id": "flight_2",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "question_pl": "Podaj numery lotów lądujących w APG."
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Jakie są numery lotów odlatujących z miasta \"Aberdeen \"?"
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "Give the flight numbers of flights leaving from Aberdeen.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Podaj numery lotów odlatujących z Aberdeen."
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Jakie są numery lotów przylatujących do miasta \"Aberdeen\"?"
    },
    {
        "query_en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_en": "Give the flight numbers of flights arriving in Aberdeen.",
        "db_id": "flight_2",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "question_pl": "Podaj numery lotów przylatujących do Aberdeen."
    },
    {
        "query_en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "question_en": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "question_pl": "Znajdź liczbę lotów lądujących w mieście Aberdeen lub Abilene."
    },
    {
        "query_en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "question_en": "How many flights land in Aberdeen or Abilene?",
        "db_id": "flight_2",
        "query_pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "question_pl": "Ile lotów ląduje w Aberdeen lub Abilene?"
    },
    {
        "query_en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "question_en": "Find the name of airports which do not have any flight in and out.",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "question_pl": "Znajdź nazwy lotnisk, które nie obsługują żadnych lotów tam i z powrotem."
    },
    {
        "query_en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "question_en": "Which airports do not have departing or arriving flights?",
        "db_id": "flight_2",
        "query_pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "question_pl": "Które lotniska nie mają odlatujących lub przylatujących lotów?"
    },
    {
        "query_en": "SELECT count(*) FROM employee",
        "question_en": "How many employees are there?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) FROM employee",
        "question_pl": "Ilu masz pracowników?"
    },
    {
        "query_en": "SELECT count(*) FROM employee",
        "question_en": "Count the number of employees",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) FROM employee",
        "question_pl": "Policz liczbę pracowników"
    },
    {
        "query_en": "SELECT name FROM employee ORDER BY age",
        "question_en": "Sort employee names by their age in ascending order.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM employee ORDER BY age",
        "question_pl": "Sortuj nazwiska pracowników według ich wieku w porządku rosnącym."
    },
    {
        "query_en": "SELECT name FROM employee ORDER BY age",
        "question_en": "List the names of employees and sort in ascending order of age.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM employee ORDER BY age",
        "question_pl": "Wypisz nazwiska pracowników i posortuj je rosnąco według wieku."
    },
    {
        "query_en": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "question_en": "What is the number of employees from each city?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "question_pl": "Jaka jest liczba pracowników z każdego miasta?"
    },
    {
        "query_en": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "question_en": "Count the number of employees for each city.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "question_pl": "Policz liczbę pracowników w każdym mieście."
    },
    {
        "query_en": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "question_en": "Which cities do more than one employee under age 30 come from?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "question_pl": "Z których miast pochodzi więcej niż jeden pracownik w wieku poniżej 30 lat?"
    },
    {
        "query_en": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "question_en": "Find the cities that have more than one employee under age 30.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "question_pl": "Znajdź miasta, które mają więcej niż jednego pracownika poniżej 30 roku życia."
    },
    {
        "query_en": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "question_en": "Find the number of shops in each location.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "question_pl": "Znajdź liczbę sklepów w każdej lokalizacji."
    },
    {
        "query_en": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "question_en": "How many shops are there in each location?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "question_pl": "Ile sklepów znajduje się w każdej lokalizacji?"
    },
    {
        "query_en": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "question_en": "Find the manager name and district of the shop whose number of products is the largest.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "question_pl": "Znajdź nazwisko kierownika i dzielnicę sklepu, w którym liczba produktów jest największa."
    },
    {
        "query_en": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "question_en": "What are the manager name and district of the shop that sells the largest number of products?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "question_pl": "Jaka jest nazwa kierownika i dzielnica sklepu, który sprzedaje największą liczbę produktów?"
    },
    {
        "query_en": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "question_en": "find the minimum and maximum number of products of all stores.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "question_pl": "znajdź minimalną i maksymalną liczbę produktów we wszystkich sklepach."
    },
    {
        "query_en": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "question_en": "What are the minimum and maximum number of products across all the shops?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "question_pl": "Jaka jest minimalna i maksymalna liczba produktów we wszystkich sklepach?"
    },
    {
        "query_en": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "question_en": "Return the name, location and district of all shops in descending order of number of products.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "question_pl": "Zwróć nazwę, lokalizację i dzielnicę wszystkich sklepów w porządku malejącym według liczby produktów."
    },
    {
        "query_en": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "question_en": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "question_pl": "Posortuj wszystkie sklepy według liczby produktów w porządku malejącym i zwróć nazwę, lokalizację i dzielnicę każdego sklepu."
    },
    {
        "query_en": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "question_en": "Find the names of stores whose number products is more than the average number of products.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "question_pl": "Znajdź nazwy sklepów, w których liczba produktów jest większa niż średnia liczba produktów."
    },
    {
        "query_en": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "question_en": "Which shops' number products is above the average? Give me the shop names.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "question_pl": "W których sklepach liczba produktów jest powyżej średniej? Podaj nazwy sklepów."
    },
    {
        "query_en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "question_en": "find the name of employee who was awarded the most times in the evaluation.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "znajdź imię i nazwisko pracownika, który został nagrodzony najwięcej razy w ocenie."
    },
    {
        "query_en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which employee received the most awards in evaluations? Give me the employee name.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który pracownik otrzymał najwięcej nagród w ocenie? Podaj imię i nazwisko pracownika."
    },
    {
        "query_en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "question_en": "Find the name of the employee who got the highest one time bonus.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "question_pl": "Znajdź nazwisko pracownika, który otrzymał najwyższą jednorazową premię."
    },
    {
        "query_en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "question_en": "Which employee received the biggest bonus? Give me the employee name.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "question_pl": "Który pracownik otrzymał największą premię? Podaj imię i nazwisko pracownika."
    },
    {
        "query_en": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "question_en": "Find the names of employees who never won any award in the evaluation.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "question_pl": "Znajdź nazwiska pracowników, którzy nigdy nie zdobyli żadnej nagrody w ocenie."
    },
    {
        "query_en": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "question_en": "What are the names of the employees who never received any evaluation?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "question_pl": "Jakie są nazwiska pracowników, którzy nigdy nie otrzymali żadnej oceny?"
    },
    {
        "query_en": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the shop that is hiring the largest number of employees?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się sklep, który zatrudnia największą liczbę pracowników?"
    },
    {
        "query_en": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which shop has the most employees? Give me the shop name.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który sklep zatrudnia najwięcej pracowników? Podaj nazwę sklepu."
    },
    {
        "query_en": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "question_en": "Find the name of the shops that do not hire any employee.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "question_pl": "Znajdź nazwy sklepów, które nie zatrudniają żadnego pracownika."
    },
    {
        "query_en": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "question_en": "Which shops run with no employees? Find the shop names",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "question_pl": "Które sklepy działają bez pracowników? Znajdź nazwy sklepów"
    },
    {
        "query_en": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "question_en": "Find the number of employees hired in each shop; show the shop name as well.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "question_pl": "Znajdź liczbę pracowników zatrudnionych w każdym sklepie; podaj również nazwę sklepu."
    },
    {
        "query_en": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "question_en": "For each shop, return the number of employees working there and the name of the shop.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "question_pl": "Dla każdego sklepu podaj liczbę zatrudnionych w nim pracowników oraz nazwę sklepu."
    },
    {
        "query_en": "SELECT sum(bonus) FROM evaluation",
        "question_en": "What is total bonus given in all evaluations?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT sum(bonus) FROM evaluation",
        "question_pl": "Jaka jest łączna premia przyznana we wszystkich ocenach?"
    },
    {
        "query_en": "SELECT sum(bonus) FROM evaluation",
        "question_en": "Find the total amount of bonus given in all the evaluations.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT sum(bonus) FROM evaluation",
        "question_pl": "Znajdź łączną kwotę premii przyznanych we wszystkich ocenach."
    },
    {
        "query_en": "SELECT * FROM hiring",
        "question_en": "Give me all the information about hiring.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT * FROM hiring",
        "question_pl": "Podaj mi wszystkie informacje o zatrudnieniu."
    },
    {
        "query_en": "SELECT * FROM hiring",
        "question_en": "What is all the information about hiring?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT * FROM hiring",
        "question_pl": "Jakie są wszystkie informacje na temat zatrudniania?"
    },
    {
        "query_en": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "question_en": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "question_pl": "W której dzielnicy znajdują się zarówno sklepy z mniej niż 3000 produktów, jak i sklepy z ponad 10000 produktów?"
    },
    {
        "query_en": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "question_en": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "question_pl": "Znajdź dzielnice, w których znajdują się zarówno sklepy sprzedające mniej niż 3000 produktów, jak i sklepy sprzedające więcej niż 10000 produktów."
    },
    {
        "query_en": "SELECT count(DISTINCT LOCATION) FROM shop",
        "question_en": "How many different store locations are there?",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(DISTINCT LOCATION) FROM shop",
        "question_pl": "Ile jest różnych lokalizacji sklepów?"
    },
    {
        "query_en": "SELECT count(DISTINCT LOCATION) FROM shop",
        "question_en": "Count the number of distinct store locations.",
        "db_id": "employee_hire_evaluation",
        "query_pl": "SELECT count(DISTINCT LOCATION) FROM shop",
        "question_pl": "Policz liczbę odrębnych lokalizacji sklepów."
    },
    {
        "query_en": "SELECT count(*) FROM Documents",
        "question_en": "How many documents do we have?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Documents",
        "question_pl": "Ile mamy dokumentów?"
    },
    {
        "query_en": "SELECT count(*) FROM Documents",
        "question_en": "Count the number of documents.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Documents",
        "question_pl": "Policz liczbę dokumentów."
    },
    {
        "query_en": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "question_en": "List document IDs, document names, and document descriptions for all documents.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "question_pl": "Wyświetl identyfikatory, nazwy i opisy wszystkich dokumentów."
    },
    {
        "query_en": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "question_en": "What are the ids, names, and descriptions for all documents?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "question_pl": "Jakie są identyfikatory, nazwy i opisy wszystkich dokumentów?"
    },
    {
        "query_en": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "question_en": "What is the document name and template id for document with description with the letter 'w' in it?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "question_pl": "Jaka jest nazwa dokumentu i identyfikator szablonu dla dokumentu z opisem zawierającym literę \"w\"?"
    },
    {
        "query_en": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "question_en": "Return the names and template ids for documents that contain the letter w in their description.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "question_pl": "Zwróć nazwy i identyfikatory szablonów dla dokumentów zawierających literę w w opisie."
    },
    {
        "query_en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "question_en": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "question_pl": "Jaki jest identyfikator dokumentu, identyfikator szablonu i opis dokumentu o nazwie \"Robbin CV\"?"
    },
    {
        "query_en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "question_en": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "question_pl": "Zwróć identyfikator dokumentu, identyfikator szablonu i opis dokumentu o nazwie Robbin CV."
    },
    {
        "query_en": "SELECT count(DISTINCT template_id) FROM Documents",
        "question_en": "How many different templates do all document use?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(DISTINCT template_id) FROM Documents",
        "question_pl": "Z ilu różnych szablonów korzystają wszystkie dokumenty?"
    },
    {
        "query_en": "SELECT count(DISTINCT template_id) FROM Documents",
        "question_en": "Count the number of different templates used for documents.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(DISTINCT template_id) FROM Documents",
        "question_pl": "Policz liczbę różnych szablonów używanych dla dokumentów."
    },
    {
        "query_en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "question_en": "How many documents are using the template with type code 'PPT'?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "question_pl": "Ile dokumentów korzysta z szablonu o kodzie typu \"PPT\"?"
    },
    {
        "query_en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "question_en": "Count the number of documents that use the PPT template type.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "question_pl": "Policz liczbę dokumentów korzystających z szablonu typu PPT."
    },
    {
        "query_en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "question_en": "Show all template ids and number of documents using each template.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "question_pl": "Pokaż wszystkie identyfikatory szablonów i liczbę dokumentów korzystających z każdego szablonu."
    },
    {
        "query_en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "question_en": "What are all different template ids used for documents, and how many times were each of them used?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "question_pl": "Jakie są różne identyfikatory szablonów używane w dokumentach i ile razy użyto każdego z nich?"
    },
    {
        "query_en": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the id and type code for the template used by the most documents?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator i kod typu szablonu używanego przez większość dokumentów?"
    },
    {
        "query_en": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the id and type code of the template that is used for the greatest number of documents.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwróć identyfikator i kod typu szablonu, który jest używany w największej liczbie dokumentów."
    },
    {
        "query_en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "question_en": "Show ids for all templates that are used by more than one document.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "question_pl": "Pokaż identyfikatory wszystkich szablonów, które są używane przez więcej niż jeden dokument."
    },
    {
        "query_en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "question_en": "What are the template ids of any templates used in more than a single document?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "question_pl": "Jakie są identyfikatory szablonów używanych w więcej niż jednym dokumencie?"
    },
    {
        "query_en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "question_en": "Show ids for all templates not used by any document.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "question_pl": "Pokaż identyfikatory wszystkich szablonów nieużywanych przez żaden dokument."
    },
    {
        "query_en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "question_en": "What are the ids for templates that are not used in any documents?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "question_pl": "Jakie są identyfikatory szablonów, które nie są używane w żadnych dokumentach?"
    },
    {
        "query_en": "SELECT count(*) FROM Templates",
        "question_en": "How many templates do we have?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Templates",
        "question_pl": "Ile mamy szablonów?"
    },
    {
        "query_en": "SELECT count(*) FROM Templates",
        "question_en": "Count the number of templates.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Templates",
        "question_pl": "Policz liczbę szablonów."
    },
    {
        "query_en": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "question_en": "Show template ids, version numbers, and template type codes for all templates.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "question_pl": "Pokaż identyfikatory szablonów, numery wersji i kody typów szablonów dla wszystkich szablonów."
    },
    {
        "query_en": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "question_en": "What are the ids, version numbers, and type codes for each template?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "question_pl": "Jakie są identyfikatory, numery wersji i kody typów dla każdego szablonu?"
    },
    {
        "query_en": "SELECT DISTINCT template_type_code FROM Templates",
        "question_en": "Show all distinct template type codes for all templates.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT DISTINCT template_type_code FROM Templates",
        "question_pl": "Pokaż wszystkie odrębne kody typów szablonów dla wszystkich szablonów."
    },
    {
        "query_en": "SELECT DISTINCT template_type_code FROM Templates",
        "question_en": "What are the different template type codes?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT DISTINCT template_type_code FROM Templates",
        "question_pl": "Jakie są różne kody typów szablonów?"
    },
    {
        "query_en": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "question_en": "What are the ids of templates with template type code PP or PPT?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "question_pl": "Jakie są identyfikatory szablonów z kodem typu szablonu PP lub PPT?"
    },
    {
        "query_en": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "question_en": "Return the ids of templates that have the code PP or PPT.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "question_pl": "Zwraca identyfikatory szablonów z kodem PP lub PPT."
    },
    {
        "query_en": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "question_en": "How many templates have template type code CV?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "question_pl": "Ile szablonów ma kod CV typu szablonu?"
    },
    {
        "query_en": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "question_en": "Count the number of templates of the type CV.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "question_pl": "Policz liczbę szablonów typu CV."
    },
    {
        "query_en": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "question_en": "What is the version number and template type code for the template with version number later than 5?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "question_pl": "Jaki jest numer wersji i kod typu szablonu dla szablonu z numerem wersji późniejszym niż 5?"
    },
    {
        "query_en": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "question_en": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "question_pl": "Zwróć numery wersji i kody typów szablonów z numerem wersji większym niż 5."
    },
    {
        "query_en": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "question_en": "Show all template type codes and number of templates for each.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "question_pl": "Pokaż wszystkie kody typów szablonów i liczbę szablonów dla każdego z nich."
    },
    {
        "query_en": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "question_en": "What are the different template type codes, and how many templates correspond to each?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "question_pl": "Jakie są różne kody typów szablonów i ile szablonów odpowiada każdemu z nich?"
    },
    {
        "query_en": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which template type code has most number of templates?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który kod typu szablonu ma największą liczbę szablonów?"
    },
    {
        "query_en": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the type code of the template type that the most templates belong to.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwraca kod typu szablonu, do którego należy większość szablonów."
    },
    {
        "query_en": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "question_en": "Show all template type codes with less than three templates.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "question_pl": "Pokaż wszystkie kody typów szablonów z mniej niż trzema szablonami."
    },
    {
        "query_en": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "question_en": "What are the codes of template types that have fewer than 3 templates?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "question_pl": "Jakie są kody typów szablonów, które mają mniej niż 3 szablony?"
    },
    {
        "query_en": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "question_en": "What the smallest version number and its template type code?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "question_pl": "Jaki jest najmniejszy numer wersji i kod typu szablonu?"
    },
    {
        "query_en": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "question_en": "Return the lowest version number, along with its corresponding template type code.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "question_pl": "Zwróć najniższy numer wersji wraz z odpowiadającym mu kodem typu szablonu."
    },
    {
        "query_en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "question_en": "What is the template type code of the template used by document with the name \"Data base\"?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "question_pl": "Jaki jest kod typu szablonu używanego przez dokument o nazwie \"Data base\"?"
    },
    {
        "query_en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "question_en": "Return the template type code of the template that is used by a document named Data base.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "question_pl": "Zwraca kod typu szablonu używanego przez dokument o nazwie Data base."
    },
    {
        "query_en": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "question_en": "Show all document names using templates with template type code BK.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "question_pl": "Pokaż wszystkie nazwy dokumentów używające szablonów z kodem typu szablonu BK."
    },
    {
        "query_en": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "question_en": "What are the names of documents that use templates with the code BK?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "question_pl": "Jakie są nazwy dokumentów, które używają szablonów z kodem BK?"
    },
    {
        "query_en": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "question_en": "Show all template type codes and the number of documents using each type.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "question_pl": "Pokaż wszystkie kody typów szablonów i liczbę dokumentów korzystających z każdego typu."
    },
    {
        "query_en": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "question_en": "What are the different template type codes, and how many documents use each type?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "question_pl": "Jakie są różne kody typów szablonów i ile dokumentów korzysta z każdego typu?"
    },
    {
        "query_en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which template type code is used by most number of documents?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który kod typu szablonu jest używany przez największą liczbę dokumentów?"
    },
    {
        "query_en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the code of the template type that is most commonly used in documents.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwróć kod typu szablonu, który jest najczęściej używany w dokumentach."
    },
    {
        "query_en": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "question_en": "Show all template type codes that are not used by any document.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "question_pl": "Pokaż wszystkie kody typów szablonów, które nie są używane przez żaden dokument."
    },
    {
        "query_en": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "question_en": "What are the codes of template types that are not used for any document?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "question_pl": "Jakie są kody typów szablonów, które nie są używane w żadnym dokumencie?"
    },
    {
        "query_en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "question_en": "Show all template type codes and descriptions.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "question_pl": "Pokaż wszystkie kody i opisy typów szablonów."
    },
    {
        "query_en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "question_en": "What are the type codes and descriptions for all template types?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "question_pl": "Jakie są kody typów i opisy dla wszystkich typów szablonów?"
    },
    {
        "query_en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "question_en": "What is the template type descriptions for template type code \"AD\".",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "question_pl": "Jaki jest opis typu szablonu dla kodu typu szablonu \"AD\"."
    },
    {
        "query_en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "question_en": "Return the template type description of the template type with the code AD.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "question_pl": "Zwróć opis typu szablonu z kodem AD."
    },
    {
        "query_en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "question_en": "What is the template type code for template type description \"Book\".",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Książka\"",
        "question_pl": "Jaki jest kod typu szablonu dla opisu typu szablonu \"Książka\"."
    },
    {
        "query_en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "question_en": "Return the type code of the template type with the description \"Book\".",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "question_pl": "Zwróć kod typu szablonu z opisem \"Book\"."
    },
    {
        "query_en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "question_en": "What are the distinct template type descriptions for the templates ever used by any document?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "question_pl": "Jakie są odrębne opisy typów szablonów dla szablonów kiedykolwiek używanych w jakimkolwiek dokumencie?"
    },
    {
        "query_en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "question_en": "Return the different descriptions for templates that have been used in a document.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "question_pl": "Zwróć różne opisy szablonów, które zostały użyte w dokumencie."
    },
    {
        "query_en": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "question_en": "What are the template ids with template type description \"Presentation\".",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Prezentacja\"",
        "question_pl": "Jakie są identyfikatory szablonów z opisem typu szablonu \"Prezentacja\"."
    },
    {
        "query_en": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "question_en": "Return the ids corresponding to templates with the description 'Presentation'.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "question_pl": "Zwróć identyfikatory odpowiadające szablonom z opisem \"Presentation\"."
    },
    {
        "query_en": "SELECT count(*) FROM Paragraphs",
        "question_en": "How many paragraphs in total?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Paragraphs",
        "question_pl": "Ile masz w sumie akapitów?"
    },
    {
        "query_en": "SELECT count(*) FROM Paragraphs",
        "question_en": "Count the number of paragraphs.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Paragraphs",
        "question_pl": "Policz liczbę akapitów."
    },
    {
        "query_en": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "question_en": "How many paragraphs for the document with name 'Summer Show'?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "question_pl": "Ile akapitów zawiera dokument o nazwie \"Summer Show\"?"
    },
    {
        "query_en": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "question_en": "Count the number of paragraphs in the document named 'Summer Show'.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "question_pl": "Policz liczbę akapitów w dokumencie o nazwie \"Summer Show\"."
    },
    {
        "query_en": "select other_details from paragraphs where paragraph_text like 'korea'",
        "question_en": "Show paragraph details for paragraph with text 'Korea ' .",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "select other_details from paragraphs where paragraph_text like 'korea'",
        "question_pl": "Pokaż szczegóły akapitu dla akapitu z tekstem \"Korea\"."
    },
    {
        "query_en": "select other_details from paragraphs where paragraph_text like 'korea'",
        "question_en": "What are the details for the paragraph that includes the text 'Korea ' ?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "select other_details from paragraphs where paragraph_text like 'korea'",
        "question_pl": "Jakie są szczegóły akapitu zawierającego tekst \"Korea\"?"
    },
    {
        "query_en": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "question_en": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "question_pl": "Pokaż wszystkie identyfikatory akapitów i teksty dla dokumentu o nazwie \"Welcome to NY\"."
    },
    {
        "query_en": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "question_en": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "question_pl": "Jakie są identyfikatory i teksty akapitów w dokumencie zatytułowanym \"Welcome to NY\"?"
    },
    {
        "query_en": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "question_en": "Show all paragraph texts for the document \"Customer reviews\".",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Opinie klientów\"",
        "question_pl": "Pokaż wszystkie akapity dla dokumentu \"Opinie klientów\"."
    },
    {
        "query_en": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "question_en": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Opinie klientów\"",
        "question_pl": "Jakie są teksty akapitów dla dokumentu o nazwie \"Opinie klientów\"?"
    },
    {
        "query_en": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "question_en": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "question_pl": "Pokaż wszystkie identyfikatory dokumentów i liczbę akapitów w każdym z nich. Uporządkuj według identyfikatora dokumentu."
    },
    {
        "query_en": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "question_en": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "question_pl": "Zwróć różne identyfikatory dokumentów wraz z liczbą akapitów odpowiadających każdemu z nich, uporządkowane według identyfikatora."
    },
    {
        "query_en": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "question_en": "Show all document ids, names and the number of paragraphs in each document.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "question_pl": "Pokaż wszystkie identyfikatory dokumentów, nazwy i liczbę akapitów w każdym dokumencie."
    },
    {
        "query_en": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "question_en": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "question_pl": "Jakie są identyfikatory i nazwy każdego dokumentu, a także liczba akapitów w każdym z nich?"
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "question_en": "List all document ids with at least two paragraphs.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "question_pl": "Wymień wszystkie identyfikatory dokumentów z co najmniej dwoma akapitami."
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "question_en": "What are the ids of documents that have 2 or more paragraphs?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "question_pl": "Jakie są identyfikatory dokumentów, które mają 2 lub więcej akapitów?"
    },
    {
        "query_en": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the document id and name with greatest number of paragraphs?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator i nazwa dokumentu z największą liczbą akapitów?"
    },
    {
        "query_en": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the id and name of the document with the most paragraphs.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwróć identyfikator i nazwę dokumentu z największą liczbą akapitów."
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "question_en": "What is the document id with least number of paragraphs?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "question_pl": "Jaki jest identyfikator dokumentu z najmniejszą liczbą akapitów?"
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "question_en": "Return the id of the document with the fewest paragraphs.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "question_pl": "Zwróć identyfikator dokumentu z najmniejszą liczbą akapitów."
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "question_en": "What is the document id with 1 to 2 paragraphs?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "question_pl": "Jaki jest identyfikator dokumentu zawierającego od 1 do 2 akapitów?"
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "question_en": "Give the ids of documents that have between one and two paragraphs.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "question_pl": "Podaj identyfikatory dokumentów zawierających od jednego do dwóch akapitów."
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "question_en": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Brazylia\" INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Irlandia\"",
        "question_pl": "Pokaż identyfikator dokumentu z tekstem akapitu \"Brazylia\" i \"Irlandia\"."
    },
    {
        "query_en": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "question_en": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "db_id": "cre_Doc_Template_Mgt",
        "query_pl": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Brazylia\" INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Irlandia\"",
        "question_pl": "Jakie są identyfikatory dokumentów zawierających tekst akapitu \"Brazylia\" i \"Irlandia\"?"
    },
    {
        "query_en": "SELECT count(*) FROM teacher",
        "question_en": "How many teachers are there?",
        "db_id": "course_teach",
        "query_pl": "SELECT count(*) FROM teacher",
        "question_pl": "Ilu jest nauczycieli?"
    },
    {
        "query_en": "SELECT count(*) FROM teacher",
        "question_en": "What is the total count of teachers?",
        "db_id": "course_teach",
        "query_pl": "SELECT count(*) FROM teacher",
        "question_pl": "Jaka jest całkowita liczba nauczycieli?"
    },
    {
        "query_en": "SELECT Name FROM teacher ORDER BY Age ASC",
        "question_en": "List the names of teachers in ascending order of age.",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher ORDER BY Age ASC",
        "question_pl": "Wymień nazwiska nauczycieli w kolejności rosnącej według wieku."
    },
    {
        "query_en": "SELECT Name FROM teacher ORDER BY Age ASC",
        "question_en": "What are the names of the teachers ordered by ascending age?",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher ORDER BY Age ASC",
        "question_pl": "Jak nazywają się nauczyciele uporządkowani według rosnącego wieku?"
    },
    {
        "query_en": "SELECT Age ,  Hometown FROM teacher",
        "question_en": "What are the age and hometown of teachers?",
        "db_id": "course_teach",
        "query_pl": "SELECT Age ,  Hometown FROM teacher",
        "question_pl": "W jakim wieku i z jakiego miasta pochodzą nauczyciele?"
    },
    {
        "query_en": "SELECT Age ,  Hometown FROM teacher",
        "question_en": "What is the age and hometown of every teacher?",
        "db_id": "course_teach",
        "query_pl": "SELECT Age ,  Hometown FROM teacher",
        "question_pl": "Jaki jest wiek i miejsce zamieszkania każdego nauczyciela?"
    },
    {
        "query_en": "select name from teacher where hometown != \"little lever urban district\"",
        "question_en": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
        "db_id": "course_teach",
        "query_pl": "select name from teacher where hometown != \"dzielnica miejska little lever\"",
        "question_pl": "Wymień nazwiska nauczycieli, których rodzinnym miastem nie jest Little Lever Urban District."
    },
    {
        "query_en": "select name from teacher where hometown != \"little lever urban district\"",
        "question_en": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
        "db_id": "course_teach",
        "query_pl": "select name from teacher where hometown != \"dzielnica miejska little lever\"",
        "question_pl": "Jak nazywają się nauczyciele, których rodzinnym miastem nie jest Little Lever Urban District?"
    },
    {
        "query_en": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "question_en": "Show the name of teachers aged either 32 or 33?",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "question_pl": "Pokaż nazwiska nauczycieli w wieku 32 lub 33 lat?"
    },
    {
        "query_en": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "question_en": "What are the names of the teachers who are aged either 32 or 33?",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "question_pl": "Jak nazywają się nauczyciele, którzy mają 32 lub 33 lata?"
    },
    {
        "query_en": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "question_en": "What is the hometown of the youngest teacher?",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "question_pl": "Jakie jest rodzinne miasto najmłodszego nauczyciela?"
    },
    {
        "query_en": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "question_en": "Where is the youngest teacher from?",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "question_pl": "Skąd pochodzi najmłodszy nauczyciel?"
    },
    {
        "query_en": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "question_en": "Show different hometown of teachers and the number of teachers from each hometown.",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "question_pl": "Pokaż różne miasta rodzinne nauczycieli i liczbę nauczycieli z każdego miasta."
    },
    {
        "query_en": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "question_en": "For each hometown, how many teachers are there?",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "question_pl": "Ilu nauczycieli jest w każdym rodzinnym mieście?"
    },
    {
        "query_en": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "List the most common hometown of teachers.",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Wymień najczęstsze miasta rodzinne nauczycieli."
    },
    {
        "query_en": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "What is the most commmon hometowns for teachers?",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Jakie są najczęstsze miasta rodzinne nauczycieli?"
    },
    {
        "query_en": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "question_en": "Show the hometowns shared by at least two teachers.",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "question_pl": "Pokaż miasta rodzinne przynajmniej dwóch nauczycieli."
    },
    {
        "query_en": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "question_en": "What are the towns from which at least two teachers come from?",
        "db_id": "course_teach",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "question_pl": "Z jakich miast pochodzi co najmniej dwóch nauczycieli?"
    },
    {
        "query_en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "question_en": "Show names of teachers and the courses they are arranged to teach.",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "question_pl": "Pokaż nazwiska nauczycieli i kursy, które mają prowadzić."
    },
    {
        "query_en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "question_en": "What is the name of each teacher and what course they teach?",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "question_pl": "Jak nazywa się każdy nauczyciel i jakiego przedmiotu uczy?"
    },
    {
        "query_en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "question_en": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "question_pl": "Pokaż nazwiska nauczycieli i kursy, których uczą, w rosnącej kolejności alfabetycznej od nazwiska nauczyciela."
    },
    {
        "query_en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "question_en": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "question_pl": "Jak nazywają się nauczyciele i kursy, których uczą, w rosnącej kolejności alfabetycznej według nazwiska nauczyciela?"
    },
    {
        "query_en": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "question_en": "Show the name of the teacher for the math course.",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Matematyka\"",
        "question_pl": "Pokaż imię i nazwisko nauczyciela przedmiotu matematyka."
    },
    {
        "query_en": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "question_en": "What are the names of the people who teach math courses?",
        "db_id": "course_teach",
        "query_pl": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Matematyka\"",
        "question_pl": "Jak nazywają się osoby prowadzące kursy matematyki?"
    },
    {
        "query_en": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "question_en": "Show names of teachers and the number of courses they teach.",
        "db_id": "course_teach",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "question_pl": "Pokaż nazwiska nauczycieli i liczbę prowadzonych przez nich kursów."
    },
    {
        "query_en": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "question_en": "What are the names of the teachers and how many courses do they teach?",
        "db_id": "course_teach",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "question_pl": "Jak nazywają się nauczyciele i ile kursów prowadzą?"
    },
    {
        "query_en": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "question_en": "Show names of teachers that teach at least two courses.",
        "db_id": "course_teach",
        "query_pl": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "question_pl": "Pokaż nazwiska nauczycieli, którzy prowadzą co najmniej dwa kursy."
    },
    {
        "query_en": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "question_en": "What are the names of the teachers who teach at least two courses?",
        "db_id": "course_teach",
        "query_pl": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "question_pl": "Jak nazywają się nauczyciele, którzy prowadzą co najmniej dwa kursy?"
    },
    {
        "query_en": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "question_en": "List the names of teachers who have not been arranged to teach courses.",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "question_pl": "Wymień nazwiska nauczycieli, którzy nie zostali wyznaczeni do prowadzenia kursów."
    },
    {
        "query_en": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "question_en": "What are the names of the teachers whose courses have not been arranged?",
        "db_id": "course_teach",
        "query_pl": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "question_pl": "Jakie są nazwiska nauczycieli, których kursy nie zostały zorganizowane?"
    },
    {
        "query_en": "SELECT count(*) FROM visitor WHERE age  <  30",
        "question_en": "How many visitors below age 30 are there?",
        "db_id": "museum_visit",
        "query_pl": "SELECT count(*) FROM visitor WHERE age  <  30",
        "question_pl": "Ilu jest odwiedzających w wieku poniżej 30 lat?"
    },
    {
        "query_en": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "question_en": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "db_id": "museum_visit",
        "query_pl": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "question_pl": "Znajdź nazwiska odwiedzających, których poziom członkostwa jest wyższy niż 4, i uporządkuj wyniki według poziomu od wysokiego do niskiego."
    },
    {
        "query_en": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "question_en": "What is the average age of the visitors whose membership level is not higher than 4?",
        "db_id": "museum_visit",
        "query_pl": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "question_pl": "Jaki jest średni wiek odwiedzających, których poziom członkostwa nie jest wyższy niż 4?"
    },
    {
        "query_en": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "question_en": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "db_id": "museum_visit",
        "query_pl": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "question_pl": "Znajdź nazwę i poziom członkostwa odwiedzających, których poziom członkostwa jest wyższy niż 4, i posortuj według ich wieku od starszych do młodszych."
    },
    {
        "query_en": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "question_en": "Find the id and name of the museum that has the most staff members?",
        "db_id": "museum_visit",
        "query_pl": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "question_pl": "Znajdź identyfikator i nazwę muzeum, które ma najwięcej pracowników?"
    },
    {
        "query_en": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "question_en": "Find the average number of staff working for the museums that were open before 2009.",
        "db_id": "museum_visit",
        "query_pl": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "question_pl": "Znajdź średnią liczbę pracowników zatrudnionych w muzeach otwartych przed 2009 rokiem."
    },
    {
        "query_en": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "question_en": "What are the opening year and staff number of the museum named Plaza Museum?",
        "db_id": "museum_visit",
        "query_pl": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "question_pl": "Jaki jest rok otwarcia i liczba pracowników muzeum o nazwie Plaza Museum?"
    },
    {
        "query_en": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "question_en": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "db_id": "museum_visit",
        "query_pl": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "question_pl": "znajdź nazwy muzeów, które zatrudniają więcej pracowników niż minimalna liczba pracowników wszystkich muzeów otwartych po 2010 roku."
    },
    {
        "query_en": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "question_en": "find the id, name and age for visitors who visited some museums more than once.",
        "db_id": "museum_visit",
        "query_pl": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "question_pl": "Znajdź identyfikator, imię i nazwisko oraz wiek odwiedzających, którzy odwiedzili niektóre muzea więcej niż raz."
    },
    {
        "query_en": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "question_en": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "db_id": "museum_visit",
        "query_pl": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator, imię i nazwisko oraz poziom członkostwa odwiedzających, którzy wydali łącznie najwięcej pieniędzy na wszystkie bilety do muzeum?"
    },
    {
        "query_en": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What are the id and name of the museum visited most times?",
        "db_id": "museum_visit",
        "query_pl": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator i nazwa najczęściej odwiedzanego muzeum?"
    },
    {
        "query_en": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "question_en": "What is the name of the museum that had no visitor yet?",
        "db_id": "museum_visit",
        "query_pl": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "question_pl": "Jak nazywa się muzeum, które nie miało jeszcze zwiedzającego?"
    },
    {
        "query_en": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "question_en": "Find the name and age of the visitor who bought the most tickets at once.",
        "db_id": "museum_visit",
        "query_pl": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "question_pl": "Znajdź imię i nazwisko oraz wiek gościa, który kupił najwięcej biletów naraz."
    },
    {
        "query_en": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "question_en": "What are the average and maximum number of tickets bought in all visits?",
        "db_id": "museum_visit",
        "query_pl": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "question_pl": "Jaka jest średnia i maksymalna liczba biletów zakupionych podczas wszystkich wizyt?"
    },
    {
        "query_en": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "question_en": "What is the total ticket expense of the visitors whose membership level is 1?",
        "db_id": "museum_visit",
        "query_pl": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "question_pl": "Jaki jest całkowity koszt biletów dla odwiedzających, których poziom członkostwa wynosi 1?"
    },
    {
        "query_en": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "question_en": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "db_id": "museum_visit",
        "query_pl": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "question_pl": "Jak nazywa się zwiedzający, który odwiedził zarówno muzeum otwarte przed 2009 r., jak i muzeum otwarte po 2011 r.?"
    },
    {
        "query_en": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "question_en": "Find the number of visitors who did not visit any museum opened after 2010.",
        "db_id": "museum_visit",
        "query_pl": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "question_pl": "Znajdź liczbę odwiedzających, którzy nie odwiedzili żadnego muzeum otwartego po 2010 roku."
    },
    {
        "query_en": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "question_en": "How many museums were opened after 2013 or before 2008?",
        "db_id": "museum_visit",
        "query_pl": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "question_pl": "Ile muzeów zostało otwartych po 2013 lub przed 2008 rokiem?"
    },
    {
        "query_en": "SELECT count(*) FROM players",
        "question_en": "Find the total number of players.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM players",
        "question_pl": "Znajdź całkowitą liczbę graczy."
    },
    {
        "query_en": "SELECT count(*) FROM players",
        "question_en": "How many players are there?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM players",
        "question_pl": "Ilu jest graczy?"
    },
    {
        "query_en": "SELECT count(*) FROM matches",
        "question_en": "Find the total number of matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM matches",
        "question_pl": "Znajdź całkowitą liczbę dopasowań."
    },
    {
        "query_en": "SELECT count(*) FROM matches",
        "question_en": "Count the number of matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM matches",
        "question_pl": "Policz liczbę dopasowań."
    },
    {
        "query_en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "question_en": "List the first name and birth date of all players from the country with code USA.",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "question_pl": "Wymień imię i datę urodzenia wszystkich graczy z kraju z kodem USA."
    },
    {
        "query_en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "question_en": "What are the first names and birth dates of players from the USA?",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "question_pl": "Jakie są imiona i daty urodzenia zawodników z USA?"
    },
    {
        "query_en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "question_en": "Find the average age of losers and winners of all matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "question_pl": "Znajdź średni wiek przegranych i zwycięzców wszystkich meczów."
    },
    {
        "query_en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "question_en": "What are the average ages of losers and winners across matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "question_pl": "Jaki jest średni wiek przegranych i zwycięzców w poszczególnych meczach?"
    },
    {
        "query_en": "SELECT avg(winner_rank) FROM matches",
        "question_en": "Find the average rank of winners in all matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(winner_rank) FROM matches",
        "question_pl": "Znajdź średnią pozycję zwycięzców we wszystkich meczach."
    },
    {
        "query_en": "SELECT avg(winner_rank) FROM matches",
        "question_en": "What is the average rank for winners in all matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(winner_rank) FROM matches",
        "question_pl": "Jaka jest średnia pozycja zwycięzców we wszystkich meczach?"
    },
    {
        "query_en": "SELECT min(loser_rank) FROM matches",
        "question_en": "Find the highest rank of losers in all matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT min(loser_rank) FROM matches",
        "question_pl": "Znajdź najwyższy ranking przegranych we wszystkich meczach."
    },
    {
        "query_en": "SELECT min(loser_rank) FROM matches",
        "question_en": "What is the best rank of losers across all matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT min(loser_rank) FROM matches",
        "question_pl": "Jaki jest najlepszy ranking przegranych we wszystkich meczach?"
    },
    {
        "query_en": "SELECT count(DISTINCT country_code) FROM players",
        "question_en": "find the number of distinct country codes of all players.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT country_code) FROM players",
        "question_pl": "znajdź liczbę różnych kodów krajów wszystkich graczy."
    },
    {
        "query_en": "SELECT count(DISTINCT country_code) FROM players",
        "question_en": "How many distinct countries do players come from?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT country_code) FROM players",
        "question_pl": "Z ilu różnych krajów pochodzą gracze?"
    },
    {
        "query_en": "SELECT count(DISTINCT loser_name) FROM matches",
        "question_en": "Find the number of distinct name of losers.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT loser_name) FROM matches",
        "question_pl": "Znajdź liczbę różnych nazw przegranych."
    },
    {
        "query_en": "SELECT count(DISTINCT loser_name) FROM matches",
        "question_en": "How many different loser names are there?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT loser_name) FROM matches",
        "question_pl": "Ile jest różnych imion przegranych?"
    },
    {
        "query_en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "question_en": "Find the name of tourney that has more than 10 matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "question_pl": "Znajdź nazwę turnieju, w którym rozegrano więcej niż 10 meczów."
    },
    {
        "query_en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "question_en": "What are the names of tournaments that have more than 10 matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "question_pl": "Jak nazywają się turnieje, w których odbywa się więcej niż 10 meczów?"
    },
    {
        "query_en": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "question_en": "List the names of all winners who played in both 2013 and 2016.",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "question_pl": "Wymień nazwiska wszystkich zwycięzców, którzy grali zarówno w 2013, jak i 2016 roku."
    },
    {
        "query_en": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "question_en": "What are the names of players who won in both 2013 and 2016?",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "question_pl": "Jakie są nazwiska graczy, którzy wygrali zarówno w 2013, jak i 2016 roku?"
    },
    {
        "query_en": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "question_en": "List the number of all matches who played in years of 2013 or 2016.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "question_pl": "Wymień liczbę wszystkich meczów rozegranych w latach 2013 lub 2016."
    },
    {
        "query_en": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "question_en": "How many matches were played in 2013 or 2016?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "question_pl": "Ile meczów rozegrano w 2013 lub 2016 roku?"
    },
    {
        "query_en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "question_en": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "question_pl": "Jaki jest kod kraju i imię zawodniczek, które wygrały w turniejach WTA Championships i Australian Open?"
    },
    {
        "query_en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "question_en": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "question_pl": "Jakie są imiona i kody krajów zawodniczek, które wygrały zarówno WTA Championships, jak i Australian Open?"
    },
    {
        "query_en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "question_en": "Find the first name and country code of the oldest player.",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "question_pl": "Znajdź imię i kod kraju najstarszego gracza."
    },
    {
        "query_en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "question_en": "What is the first name and country code of the oldest player?",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "question_pl": "Jakie jest imię i kod kraju najstarszego gracza?"
    },
    {
        "query_en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "question_en": "List the first and last name of all players in the order of birth date.",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "question_pl": "Wymień imiona i nazwiska wszystkich graczy w kolejności od daty urodzenia."
    },
    {
        "query_en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "question_en": "What are the full names of all players, sorted by birth date?",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich graczy, posortowane według daty urodzenia?"
    },
    {
        "query_en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "question_en": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  \"L\" ORDER BY birth_date",
        "question_pl": "Wymień imię i nazwisko wszystkich graczy, którzy są leworęczni / lewonożni w kolejności daty urodzenia."
    },
    {
        "query_en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "question_en": "What are the full names of all left handed players, in order of birth date?",
        "db_id": "wta_1",
        "query_pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  \"L\" ORDER BY birth_date",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich leworęcznych graczy, w kolejności od daty urodzenia?"
    },
    {
        "query_en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "question_en": "Find the first name and country code of the player who did the most number of tours.",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "question_pl": "Znajdź imię i nazwisko oraz kod kraju gracza, który odbył najwięcej tras koncertowych."
    },
    {
        "query_en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "question_en": "What is the first name and country code of the player with the most tours?",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "question_pl": "Jakie jest imię i kod kraju gracza z największą liczbą podróży?"
    },
    {
        "query_en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Find the year that has the most number of matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Znajdź rok z największą liczbą dopasowań."
    },
    {
        "query_en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which year had the most matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "W którym roku rozegrano najwięcej meczów?"
    },
    {
        "query_en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Find the name and rank points of the winner who won the most times.",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Znajdź imię i nazwisko oraz punkty rankingowe zwycięzcy, który wygrał najwięcej razy."
    },
    {
        "query_en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się zwycięzca, który wygrał najwięcej meczów i ile punktów rankingowych ma ten gracz?"
    },
    {
        "query_en": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "question_en": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "question_pl": "Znajdź nazwisko zwycięzcy, który ma najwięcej punktów rankingowych i brał udział w turnieju Australian Open."
    },
    {
        "query_en": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "question_en": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "question_pl": "Jak nazywa się zwycięzca z największą liczbą punktów rankingowych, który brał udział w turnieju Australian Open?"
    },
    {
        "query_en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "question_en": "find the names of loser and winner who played in the match with greatest number of minutes.",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "question_pl": "Znajdź nazwiska przegranego i zwycięzcy, którzy rozegrali w meczu największą liczbę minut."
    },
    {
        "query_en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "question_en": "What are the names of the winner and loser who played in the longest match?",
        "db_id": "wta_1",
        "query_pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "question_pl": "Jak nazywają się zwycięzca i przegrany, którzy grali w najdłuższym meczu?"
    },
    {
        "query_en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_en": "Find the average ranking for each player and their first name.",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_pl": "Znajdź średni ranking dla każdego gracza i jego imienia."
    },
    {
        "query_en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_en": "What are the first names of all players, and their average rankings?",
        "db_id": "wta_1",
        "query_pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_pl": "Jakie są imiona wszystkich graczy i ich średnie rankingi?"
    },
    {
        "query_en": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_en": "Find the total ranking points for each player and their first name.",
        "db_id": "wta_1",
        "query_pl": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_pl": "Znajdź łączną liczbę punktów rankingowych dla każdego gracza i jego imię."
    },
    {
        "query_en": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_en": "What are the first names of all players, and their total ranking points?",
        "db_id": "wta_1",
        "query_pl": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "question_pl": "Jakie są imiona wszystkich graczy i ich łączna liczba punktów rankingowych?"
    },
    {
        "query_en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "question_en": "find the number of players for each country.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "question_pl": "Znajdź liczbę graczy dla każdego kraju."
    },
    {
        "query_en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "question_en": "How many players are from each country?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "question_pl": "Ilu graczy pochodzi z każdego kraju?"
    },
    {
        "query_en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "find the code of the country where has the greatest number of players.",
        "db_id": "wta_1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Znajdź kod kraju, w którym jest najwięcej graczy."
    },
    {
        "query_en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the code of the country with the most players?",
        "db_id": "wta_1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest kod kraju z największą liczbą graczy?"
    },
    {
        "query_en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "question_en": "Find the codes of countries that have more than 50 players.",
        "db_id": "wta_1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "question_pl": "Znajdź kody krajów, które mają więcej niż 50 graczy."
    },
    {
        "query_en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "question_en": "What are the codes of countries with more than 50 players?",
        "db_id": "wta_1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "question_pl": "Jakie są kody krajów z ponad 50 graczami?"
    },
    {
        "query_en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "question_en": "Find the total number of tours for each ranking date.",
        "db_id": "wta_1",
        "query_pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "question_pl": "Znajdź całkowitą liczbę podróży dla każdej daty rankingu."
    },
    {
        "query_en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "question_en": "How many total tours were there for each ranking date?",
        "db_id": "wta_1",
        "query_pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "question_pl": "Ile było łącznie wycieczek dla każdej daty rankingu?"
    },
    {
        "query_en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "question_en": "Find the number of matches happened in each year.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "question_pl": "Znajdź liczbę meczów rozegranych w każdym roku."
    },
    {
        "query_en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "question_en": "How many matches were played in each year?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "question_pl": "Ile meczów rozegrano w każdym roku?"
    },
    {
        "query_en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "question_en": "Find the name and rank of the 3 youngest winners across all matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "question_pl": "Znajdź nazwisko i rangę 3 najmłodszych zwycięzców we wszystkich meczach."
    },
    {
        "query_en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "question_en": "What are the names and ranks of the three youngest winners across all matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "question_pl": "Jakie są nazwiska i rangi trzech najmłodszych zwycięzców we wszystkich meczach?"
    },
    {
        "query_en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "question_en": "How many different winners both participated in the WTA Championships and were left handed?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  \"Mistrzostwa WTA\" AND winner_hand  =  \"L\"",
        "question_pl": "Ilu różnych zwycięzców brało udział w Mistrzostwach WTA i było leworęcznych?"
    },
    {
        "query_en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "question_en": "Find the number of left handed winners who participated in the WTA Championships.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  \"Mistrzostwa WTA\" AND winner_hand  =  \"L\"",
        "question_pl": "Znajdź liczbę leworęcznych zwycięzców, którzy wzięli udział w Mistrzostwach WTA."
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "question_en": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "question_pl": "Znajdź imię, kod kraju i datę urodzenia zwycięzcy, który zdobył najwięcej punktów rankingowych we wszystkich meczach."
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "question_en": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "db_id": "wta_1",
        "query_pl": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "question_pl": "Jakie jest imię, kod kraju i data urodzenia gracza z największą liczbą punktów w rankingu zwycięzców we wszystkich meczach?"
    },
    {
        "query_en": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "question_en": "Find the number of players for each hand type.",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "question_pl": "Znajdź liczbę graczy dla każdego typu rozdania."
    },
    {
        "query_en": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "question_en": "How many players are there for each hand type?",
        "db_id": "wta_1",
        "query_pl": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "question_pl": "Ilu jest graczy dla każdego typu ręki?"
    },
    {
        "query_en": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
        "question_en": "How many ships ended up being 'Captured'?",
        "db_id": "battle_death",
        "query_pl": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  \"Przechwycony\"",
        "question_pl": "Ile statków zostało ostatecznie \"przechwyconych\"?"
    },
    {
        "query_en": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "question_en": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "db_id": "battle_death",
        "query_pl": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "question_pl": "Wymień nazwę i tonaż w kolejności alfaetycznej dla nazw."
    },
    {
        "query_en": "SELECT name ,  date FROM battle",
        "question_en": "List the name, date and result of each battle.",
        "db_id": "battle_death",
        "query_pl": "SELECT name ,  date FROM battle",
        "question_pl": "Wymień nazwę, datę i wynik każdej bitwy."
    },
    {
        "query_en": "SELECT max(killed) ,  min(killed) FROM death",
        "question_en": "What is maximum and minimum death toll caused each time?",
        "db_id": "battle_death",
        "query_pl": "SELECT max(killed) ,  min(killed) FROM death",
        "question_pl": "Jaka jest maksymalna i minimalna liczba ofiar śmiertelnych za każdym razem?"
    },
    {
        "query_en": "SELECT avg(injured) FROM death",
        "question_en": "What is the average number of injuries caused each time?",
        "db_id": "battle_death",
        "query_pl": "SELECT avg(injured) FROM death",
        "question_pl": "Jaka jest średnia liczba obrażeń odniesionych za każdym razem?"
    },
    {
        "query_en": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "question_en": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "db_id": "battle_death",
        "query_pl": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "question_pl": "Jakie są sytuacje śmierci i obrażeń spowodowanych przez statek o tonażu \"t\"?"
    },
    {
        "query_en": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "question_en": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "db_id": "battle_death",
        "query_pl": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "question_pl": "Jak nazywają się i jakie są wyniki bitew, w których bułgarskim dowódcą nie jest \"Boril\"?"
    },
    {
        "query_en": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "question_en": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "db_id": "battle_death",
        "query_pl": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "question_pl": "Jakie są różne identyfikatory i nazwy bitew, w których utracono okręty typu \"Brig\"?"
    },
    {
        "query_en": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "question_en": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "db_id": "battle_death",
        "query_pl": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "question_pl": "Jakie są identyfikatory i nazwy bitew, w których zginęło łącznie ponad 10 osób."
    },
    {
        "query_en": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the ship id and name that caused most total injuries?",
        "db_id": "battle_death",
        "query_pl": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator i nazwa statku, który spowodował najwięcej obrażeń?"
    },
    {
        "query_en": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "question_en": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "db_id": "battle_death",
        "query_pl": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  \"Baldwin I\"",
        "question_pl": "Jakie są różne nazwy bitew między bułgarskim dowódcą \"Kaloyanem\" a łacińskim dowódcą \"Baldwinem I\"?"
    },
    {
        "query_en": "SELECT count(DISTINCT RESULT) FROM battle",
        "question_en": "How many different results are there for the battles?",
        "db_id": "battle_death",
        "query_pl": "SELECT count(DISTINCT RESULT) FROM battle",
        "question_pl": "Ile jest różnych wyników bitew?"
    },
    {
        "query_en": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "question_en": "How many battles did not lose any ship with tonnage '225'?",
        "db_id": "battle_death",
        "query_pl": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "question_pl": "W ilu bitwach nie zginął żaden okręt o tonażu \"225\"?"
    },
    {
        "query_en": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "question_en": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "db_id": "battle_death",
        "query_pl": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "question_pl": "Wymień nazwę i datę bitwy, w której zginął okręt o nazwie \"Lettice\" i okręt o nazwie \"HMS Atalanta\"."
    },
    {
        "query_en": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
        "question_en": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "db_id": "battle_death",
        "query_pl": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  \"Kanał La Manche\"",
        "question_pl": "Pokaż nazwy, wyniki i bułgarskich dowódców bitew, w których nie utracono żadnych okrętów w \"kanale La Manche\"."
    },
    {
        "query_en": "SELECT note FROM death WHERE note LIKE '%East%'",
        "question_en": "What are the notes of the death events which has substring 'East'?",
        "db_id": "battle_death",
        "query_pl": "SELECT note FROM death WHERE note LIKE '%East%'",
        "question_pl": "Jakie są notatki ze zdarzeń śmierci, które mają podciąg \"East\"?"
    },
    {
        "query_en": "SELECT line_1 ,  line_2 FROM addresses",
        "question_en": "what are all the addresses including line 1 and line 2?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT line_1 ,  line_2 FROM addresses",
        "question_pl": "Jakie są wszystkie adresy, w tym linia 1 i linia 2?"
    },
    {
        "query_en": "SELECT line_1 ,  line_2 FROM addresses",
        "question_en": "What is the first and second line for all addresses?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT line_1 ,  line_2 FROM addresses",
        "question_pl": "Jaki jest pierwszy i drugi wiersz dla wszystkich adresów?"
    },
    {
        "query_en": "SELECT count(*) FROM Courses",
        "question_en": "How many courses in total are listed?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Courses",
        "question_pl": "Ile kursów znajduje się na liście?"
    },
    {
        "query_en": "SELECT count(*) FROM Courses",
        "question_en": "How many courses are there?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Courses",
        "question_pl": "Ile jest kursów?"
    },
    {
        "query_en": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "question_en": "How is the math course described?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT course_description FROM Courses WHERE course_name  =  \"matematyka\"",
        "question_pl": "Jak opisany jest kurs matematyki?"
    },
    {
        "query_en": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "question_en": "What are the descriptions for all the math courses?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT course_description FROM Courses WHERE course_name  =  \"matematyka\"",
        "question_pl": "Jakie są opisy wszystkich kursów matematycznych?"
    },
    {
        "query_en": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "question_en": "What is the zip code of the address in the city Port Chelsea?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "question_pl": "Jaki jest kod pocztowy adresu w mieście Port Chelsea?"
    },
    {
        "query_en": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "question_en": "What is the zip code for Port Chelsea?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "question_pl": "Jaki jest kod pocztowy dla Port Chelsea?"
    },
    {
        "query_en": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which department offers the most number of degrees? List department name and id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który wydział oferuje najwięcej stopni naukowych? Wymień nazwę i identyfikator wydziału."
    },
    {
        "query_en": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
        "question_en": "What is the name and id of the department with the most number of degrees ?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
        "question_pl": "Jaka jest nazwa i identyfikator wydziału z największą liczbą stopni naukowych?"
    },
    {
        "query_en": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "question_en": "How many departments offer any degree?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "question_pl": "Ile wydziałów oferuje jakikolwiek stopień naukowy?"
    },
    {
        "query_en": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "question_en": "How many different departments offer degrees?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "question_pl": "Ile różnych wydziałów oferuje stopnie naukowe?"
    },
    {
        "query_en": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "question_en": "How many different degree names are offered?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "question_pl": "Ile różnych nazw stopni jest oferowanych?"
    },
    {
        "query_en": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "question_en": "How many different degrees are offered?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "question_pl": "Ile różnych stopni naukowych jest oferowanych?"
    },
    {
        "query_en": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "question_en": "How many degrees does the engineering department offer?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  \"inżynier\"",
        "question_pl": "Ile stopni naukowych oferuje wydział inżynierii?"
    },
    {
        "query_en": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "question_en": "How many degrees does the engineering department have?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  \"inżynier\"",
        "question_pl": "Ile stopni naukowych ma dział inżynierii?"
    },
    {
        "query_en": "SELECT section_name ,  section_description FROM Sections",
        "question_en": "What are the names and descriptions of all the sections?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_name ,  section_description FROM Sections",
        "question_pl": "Jakie są nazwy i opisy wszystkich sekcji?"
    },
    {
        "query_en": "SELECT section_name ,  section_description FROM Sections",
        "question_en": "What are the names and descriptions for all the sections?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_name ,  section_description FROM Sections",
        "question_pl": "Jakie są nazwy i opisy wszystkich sekcji?"
    },
    {
        "query_en": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "question_en": "What are the names and id of courses having at most 2 sections?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "question_pl": "Jakie są nazwy i identyfikatory kursów mających co najwyżej 2 sekcje?"
    },
    {
        "query_en": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "question_en": "What are the names and ids of every course with less than 2 sections?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "question_pl": "Jakie są nazwy i identyfikatory każdego kursu z mniej niż 2 sekcjami?"
    },
    {
        "query_en": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question_en": "List the section_name in reversed lexicographical order.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question_pl": "Wymień nazwę sekcji w odwróconym porządku leksykograficznym."
    },
    {
        "query_en": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question_en": "What are the names of the sections in reverse alphabetical order?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "question_pl": "Jak nazywają się sekcje w odwrotnej kolejności alfabetycznej?"
    },
    {
        "query_en": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the semester which most student registered in? Show both the name and the id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Na jaki semestr zarejestrowała się większość studentów? Pokaż zarówno nazwę, jak i identyfikator."
    },
    {
        "query_en": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "For each semester, what is the name and id of the one with the most students registered?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Dla każdego semestru, jaka jest nazwa i identyfikator semestru z największą liczbą zarejestrowanych studentów?"
    },
    {
        "query_en": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question_en": "What is the description of the department whose name has the substring the computer?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question_pl": "Jaki jest opis działu, którego nazwa zawiera podciąg komputer?"
    },
    {
        "query_en": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question_en": "What is the department description for the one whose name has the word computer?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "question_pl": "Jaki jest opis działu, którego nazwa zawiera słowo \"komputer\"?"
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "question_en": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "question_pl": "Kto jest zapisany na 2 programy studiów w jednym semestrze? Wymień imię, drugie imię i nazwisko oraz identyfikator."
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "question_en": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "question_pl": "Jakie są imiona, imiona średnie i nazwiska, wraz z identyfikatorami, wszystkich studentów, którzy zapisali się na 2 programy studiów w jednym semestrze?"
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "question_en": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  \"Licencjat\"",
        "question_pl": "Kto jest zapisany na studia licencjackie? Wymień imię, drugie imię, nazwisko."
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "question_en": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  \"Licencjat\"",
        "question_pl": "Jakie są imiona, drugie imiona i nazwiska wszystkich osób zapisanych na studia licencjackie?"
    },
    {
        "query_en": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Find the kind of program which most number of students are enrolled in?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Znajdź rodzaj programu, na który zapisuje się najwięcej studentów?"
    },
    {
        "query_en": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the degree summary name that has the most number of students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaka jest nazwa podsumowania stopnia, na który zapisało się najwięcej studentów?"
    },
    {
        "query_en": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Znajdź program, do którego zapisało się najwięcej studentów. Wymień zarówno identyfikator, jak i podsumowanie."
    },
    {
        "query_en": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the program id and the summary of the degree that has the most students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator programu i podsumowanie stopnia, na który zapisało się najwięcej studentów?"
    },
    {
        "query_en": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który student zapisał się najwięcej razy na dowolny program? Wymień identyfikator, imię, drugie imię, nazwisko, liczbę zapisów i identyfikator studenta."
    },
    {
        "query_en": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko, wraz z identyfikatorem i liczbą zapisów, studenta, który zapisał się najwięcej razy na dowolny program?"
    },
    {
        "query_en": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "question_en": "Which semesters do not have any student enrolled? List the semester name.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "question_pl": "Na które semestry nie zapisał się żaden student? Wymień nazwę semestru."
    },
    {
        "query_en": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "question_en": "What is the name of the semester with no students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "question_pl": "Jak nazywa się semestr, na który nie zapisał się żaden student?"
    },
    {
        "query_en": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "question_en": "What are all the course names of the courses which ever have students enrolled in?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "question_pl": "Jakie są nazwy wszystkich kursów, na które zapisani są studenci?"
    },
    {
        "query_en": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "question_en": "What are the names of all courses that have some students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "question_pl": "Jakie są nazwy wszystkich kursów, na które zapisanych jest kilku studentów?"
    },
    {
        "query_en": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What's the name of the course with most number of enrollments?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się kurs z największą liczbą zapisów?"
    },
    {
        "query_en": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the course with the most students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się kurs, na który zapisało się najwięcej studentów?"
    },
    {
        "query_en": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "question_en": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  \"Karolina Północna\" EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "question_pl": "Znajdź nazwiska studentów, którzy obecnie mieszkają w stanie Karolina Północna, ale nie zarejestrowali się na żaden program studiów."
    },
    {
        "query_en": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "question_en": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  \"Karolina Północna\" EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "question_pl": "Jak nazywają się studenci, którzy mieszkają w Karolinie Północnej, ale nie zarejestrowali się na żadne studia?"
    },
    {
        "query_en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "question_en": "Show the date and id of the transcript with at least 2 course results.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "question_pl": "Pokaż datę i identyfikator transkrypcji z co najmniej 2 wynikami kursów."
    },
    {
        "query_en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "question_en": "What is the date and id of the transcript with at least 2 courses listed?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "question_pl": "Jaka jest data i identyfikator transkryptu z wymienionymi co najmniej 2 kursami?"
    },
    {
        "query_en": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "question_en": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "question_pl": "Jaki jest numer telefonu mężczyzny o imieniu Timmothy i nazwisku Ward?"
    },
    {
        "query_en": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
        "question_en": "What is the mobile phone number of the student named Timmothy Ward ?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "select cell_mobile_number from students where first_name  =  \"timmothy\" and last_name  =  \"oddział\"",
        "question_pl": "Jaki jest numer telefonu komórkowego ucznia o imieniu Timmothy Ward?"
    },
    {
        "query_en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question_en": "Who is the first student to register? List the first name, middle name and last name.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question_pl": "Kto zarejestrował się jako pierwszy? Wymień imię, drugie imię i nazwisko."
    },
    {
        "query_en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question_en": "What is the first, middle, and last name of the first student to register?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko pierwszego zarejestrowanego ucznia?"
    },
    {
        "query_en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "question_en": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "question_pl": "Kto jest najwcześniejszym absolwentem szkoły? Wymień imię, drugie imię i nazwisko."
    },
    {
        "query_en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "question_en": "What is the first, middle, and last name of the earliest school graduate?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko najwcześniejszego absolwenta szkoły?"
    },
    {
        "query_en": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "question_en": "Whose permanent address is different from his or her current address? List his or her first name.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "question_pl": "Czyj stały adres różni się od obecnego adresu? Wymień imię tej osoby."
    },
    {
        "query_en": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "question_en": "What is the first name of the student whose permanent address is different from his or her current one?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "question_pl": "Jakie jest imię ucznia, którego stały adres zamieszkania różni się od obecnego?"
    },
    {
        "query_en": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which address holds the most number of students currently? List the address id and all lines.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Pod którym adresem mieszka obecnie najwięcej studentów? Wymień identyfikator adresu i wszystkie linie."
    },
    {
        "query_en": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the id, line 1, and line 2 of the address with the most students?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest identyfikator, linia 1 i linia 2 adresu z największą liczbą uczniów?"
    },
    {
        "query_en": "SELECT avg(transcript_date) FROM Transcripts",
        "question_en": "On average, when were the transcripts printed?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT avg(transcript_date) FROM Transcripts",
        "question_pl": "Kiedy średnio wydrukowano transkrypcje?"
    },
    {
        "query_en": "SELECT avg(transcript_date) FROM Transcripts",
        "question_en": "What is the average transcript date?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT avg(transcript_date) FROM Transcripts",
        "question_pl": "Jaka jest średnia data transkrypcji?"
    },
    {
        "query_en": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question_en": "When is the first transcript released? List the date and details.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question_pl": "Kiedy zostanie opublikowana pierwsza transkrypcja? Podaj datę i szczegóły."
    },
    {
        "query_en": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question_en": "What is the earliest date of a transcript release, and what details can you tell me?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "question_pl": "Jaka jest najwcześniejsza data wydania transkrypcji i jakie szczegóły możesz mi podać?"
    },
    {
        "query_en": "SELECT count(*) FROM Transcripts",
        "question_en": "How many transcripts are released?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Transcripts",
        "question_pl": "Ile transkrypcji zostało wydanych?"
    },
    {
        "query_en": "SELECT count(*) FROM Transcripts",
        "question_en": "How many transcripts are listed?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) FROM Transcripts",
        "question_pl": "Ile transkrypcji znajduje się na liście?"
    },
    {
        "query_en": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question_en": "What is the last transcript release date?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question_pl": "Jaka jest data wydania ostatniej transkrypcji?"
    },
    {
        "query_en": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question_en": "When was the last transcript released?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "question_pl": "Kiedy opublikowano ostatnią transkrypcję?"
    },
    {
        "query_en": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Ile razy maksymalnie wynik zapisu na kurs może pojawić się w różnych transkrypcjach? Pokaż również identyfikator zapisu na kurs."
    },
    {
        "query_en": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaka jest maksymalna liczba przypadków, w których kurs pojawia się w różnych transkrypcjach i jaki jest identyfikator zapisu na ten kurs?"
    },
    {
        "query_en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "question_en": "Show the date of the transcript which shows the least number of results, also list the id.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "question_pl": "Pokaż datę transkrypcji, która pokazuje najmniejszą liczbę wyników, a także podaj identyfikator."
    },
    {
        "query_en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "question_en": "What is the date and id of the transcript with the least number of results?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "question_pl": "Jaka jest data i identyfikator transkrypcji z najmniejszą liczbą wyników?"
    },
    {
        "query_en": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "question_en": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Mistrz\" INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Licencjat\"",
        "question_pl": "Znajdź semestr, na który zapisali się zarówno studenci studiów magisterskich, jak i licencjackich."
    },
    {
        "query_en": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "question_en": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Mistrz\" INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Licencjat\"",
        "question_pl": "Jaki jest numer semestru, na który zapisani byli zarówno studenci studiów magisterskich, jak i licencjackich?"
    },
    {
        "query_en": "SELECT count(DISTINCT current_address_id) FROM Students",
        "question_en": "How many different addresses do the students currently live?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT current_address_id) FROM Students",
        "question_pl": "Pod iloma różnymi adresami mieszkają obecnie uczniowie?"
    },
    {
        "query_en": "SELECT count(DISTINCT current_address_id) FROM Students",
        "question_en": "What are the different addresses that have students living there?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT count(DISTINCT current_address_id) FROM Students",
        "question_pl": "Jakie są różne adresy, pod którymi mieszkają studenci?"
    },
    {
        "query_en": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question_en": "List all the student details in reversed lexicographical order.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question_pl": "Wymień wszystkie dane ucznia w odwróconym porządku leksykograficznym."
    },
    {
        "query_en": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question_en": "What other details can you tell me about students in reverse alphabetical order?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "question_pl": "Jakie inne szczegóły możesz mi powiedzieć o uczniach w odwrotnej kolejności alfabetycznej?"
    },
    {
        "query_en": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "question_en": "Describe the section h.",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "question_pl": "Opisz sekcję h."
    },
    {
        "query_en": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "question_en": "What is the description for the section named h?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "question_pl": "Jaki jest opis sekcji o nazwie h?"
    },
    {
        "query_en": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "question_en": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
        "db_id": "student_transcripts_tracking",
        "query_pl": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  \"haiti\" or t1.cell_mobile_number  =  '09700166582'",
        "question_pl": "Znajdź imiona uczniów, którzy na stałe mieszkają w kraju Haiti lub mają numer telefonu komórkowego 09700166582 ."
    },
    {
        "query_en": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "question_en": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
        "db_id": "student_transcripts_tracking",
        "query_pl": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  \"haiti\" or t1.cell_mobile_number  =  '09700166582'",
        "question_pl": "Jakie są imiona studentów, którzy mieszkają na Haiti na stałe lub mają numer telefonu komórkowego 09700166582 ?"
    },
    {
        "query_en": "SELECT Title FROM Cartoon ORDER BY title",
        "question_en": "List the title of all cartoons in alphabetical order.",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon ORDER BY title",
        "question_pl": "Wymień tytuły wszystkich kreskówek w kolejności alfabetycznej."
    },
    {
        "query_en": "SELECT Title FROM Cartoon ORDER BY title",
        "question_en": "What are the titles of the cartoons sorted alphabetically?",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon ORDER BY title",
        "question_pl": "Jakie są tytuły kreskówek posortowanych alfabetycznie?"
    },
    {
        "query_en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "question_en": "List all cartoon directed by \"Ben Jones\".",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "question_pl": "Lista wszystkich kreskówek wyreżyserowanych przez \"Bena Jonesa\"."
    },
    {
        "query_en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "question_en": "What are the names of all cartoons directed by Ben Jones?",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "question_pl": "Jak nazywają się wszystkie kreskówki wyreżyserowane przez Bena Jonesa?"
    },
    {
        "query_en": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "question_en": "How many cartoons were written by \"Joseph Kuhr\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "question_pl": "Ile komiksów zostało napisanych przez \"Josepha Kuhra\"?"
    },
    {
        "query_en": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "question_en": "What is the number of cartoones written by Joseph Kuhr?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "question_pl": "Jaka jest liczba komiksów napisanych przez Josepha Kuhra?"
    },
    {
        "query_en": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "question_en": "list all cartoon titles and their directors ordered by their air date",
        "db_id": "tvshow",
        "query_pl": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "question_pl": "lista wszystkich tytułów kreskówek i ich reżyserów uporządkowana według daty emisji"
    },
    {
        "query_en": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "question_en": "What is the name and directors of all the cartoons that are ordered by air date?",
        "db_id": "tvshow",
        "query_pl": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "question_pl": "Jaka jest nazwa i reżyserzy wszystkich kreskówek, które są uporządkowane według daty emisji?"
    },
    {
        "query_en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "question_en": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "question_pl": "Wymień tytuły wszystkich kreskówek wyreżyserowanych przez \"Bena Jonesa\" lub \"Brandona Viettiego\"."
    },
    {
        "query_en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "question_en": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "db_id": "tvshow",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "question_pl": "Jakie są tytuły wszystkich kreskówek wyreżyserowanych przez Bena Jonesa lub Brandona Viettiego?"
    },
    {
        "query_en": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "question_en": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "db_id": "tvshow",
        "query_pl": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "question_pl": "Który kraj ma najwięcej kanałów telewizyjnych? Wymień kraj i liczbę kanałów telewizyjnych, które posiada."
    },
    {
        "query_en": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "question_en": "What is the country with the most number of TV Channels and how many does it have?",
        "db_id": "tvshow",
        "query_pl": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "question_pl": "Jaki jest kraj z największą liczbą kanałów telewizyjnych i ile ich ma?"
    },
    {
        "query_en": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "question_en": "List the number of different series names and contents in the TV Channel table.",
        "db_id": "tvshow",
        "query_pl": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "question_pl": "Wymień liczbę różnych nazw serii i treści w tabeli kanałów TV."
    },
    {
        "query_en": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "question_en": "How many different series and contents are listed in the TV Channel table?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "question_pl": "Ile różnych seriali i treści jest wymienionych w tabeli kanałów telewizyjnych?"
    },
    {
        "query_en": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_en": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_pl": "Jaka jest zawartość kanału telewizyjnego o nazwie \"Sky Radio\"?"
    },
    {
        "query_en": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_en": "What is the content of the series Sky Radio?",
        "db_id": "tvshow",
        "query_pl": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_pl": "Jaka jest zawartość serialu Sky Radio?"
    },
    {
        "query_en": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_en": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_pl": "Jaka jest opcja pakietu kanału telewizyjnego o nazwie \"Sky Radio\"?"
    },
    {
        "query_en": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_en": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "db_id": "tvshow",
        "query_pl": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "question_pl": "Jakie są opcje pakietów kanałów telewizyjnych, których nazwy seriali to Sky Radio?"
    },
    {
        "query_en": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "question_en": "How many TV Channel using language English?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Angielski\";",
        "question_pl": "Ile kanałów telewizyjnych używa języka angielskiego?"
    },
    {
        "query_en": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "question_en": "How many TV Channels use the English language?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Angielski\";",
        "question_pl": "Ile kanałów telewizyjnych używa języka angielskiego?"
    },
    {
        "query_en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "question_en": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "db_id": "tvshow",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "question_pl": "Wymień język i najmniejszą liczbę kanałów telewizyjnych. Wymień język i liczbę kanałów telewizyjnych."
    },
    {
        "query_en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "question_en": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "db_id": "tvshow",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "question_pl": "Jakie są języki używane przez najmniejszą liczbę kanałów telewizyjnych i ile kanałów ich używa?"
    },
    {
        "query_en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "question_en": "List each language and the number of TV Channels using it.",
        "db_id": "tvshow",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "question_pl": "Wymień każdy język i liczbę kanałów telewizyjnych, które go używają."
    },
    {
        "query_en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "question_en": "For each language, list the number of TV Channels that use it.",
        "db_id": "tvshow",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "question_pl": "Dla każdego języka podaj liczbę kanałów telewizyjnych, które go używają."
    },
    {
        "query_en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "question_en": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "question_pl": "Na jakim kanale telewizyjnym emitowana jest kreskówka \"The Rise of the Blue Beetle!\"? Wymień nazwę serii kanału telewizyjnego."
    },
    {
        "query_en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "question_en": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Powstanie Niebieskiego Żuka!\";",
        "question_pl": "Jak nazywa się kanał telewizyjny, na którym emitowana jest kreskówka \"The Rise of the Blue Beetle\"?"
    },
    {
        "query_en": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_en": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "db_id": "tvshow",
        "query_pl": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_pl": "Wymień tytuły wszystkich kreskówek wyświetlanych na kanale telewizyjnym o nazwie \"Sky Radio\"."
    },
    {
        "query_en": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_en": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_pl": "Jaki tytuł noszą wszystkie kreskówki emitowane na kanale telewizyjnym o nazwie \"Sky Radio\"?"
    },
    {
        "query_en": "SELECT Episode FROM TV_series ORDER BY rating",
        "question_en": "List the Episode of all TV series sorted by rating.",
        "db_id": "tvshow",
        "query_pl": "SELECT Episode FROM TV_series ORDER BY rating",
        "question_pl": "Lista odcinków wszystkich seriali telewizyjnych posortowanych według oceny."
    },
    {
        "query_en": "SELECT Episode FROM TV_series ORDER BY rating",
        "question_en": "What are all of the episodes ordered by ratings?",
        "db_id": "tvshow",
        "query_pl": "SELECT Episode FROM TV_series ORDER BY rating",
        "question_pl": "Jakie są wszystkie odcinki uporządkowane według oglądalności?"
    },
    {
        "query_en": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "question_en": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
        "db_id": "tvshow",
        "query_pl": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "question_pl": "Lista 3 najwyżej ocenianych seriali telewizyjnych. Wymień odcinek i ocenę serialu telewizyjnego."
    },
    {
        "query_en": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "question_en": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "db_id": "tvshow",
        "query_pl": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "question_pl": "Jakie są 3 najwyżej ocenione odcinki w tabeli seriali telewizyjnych i jakie były te oceny?"
    },
    {
        "query_en": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "question_en": "What is minimum and maximum share of TV series?",
        "db_id": "tvshow",
        "query_pl": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "question_pl": "Jaki jest minimalny i maksymalny udział seriali telewizyjnych?"
    },
    {
        "query_en": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "question_en": "What is the maximum and minimum share for the TV series?",
        "db_id": "tvshow",
        "query_pl": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "question_pl": "Jaki jest maksymalny i minimalny udział w serialu?"
    },
    {
        "query_en": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_en": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT Air_Date FROM TV_series WHERE Episode = \"Miłość na całe życie\";",
        "question_pl": "Jaka jest data emisji serialu z odcinkiem \"Miłość na całe życie\"?"
    },
    {
        "query_en": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_en": "When did the episode \"A Love of a Lifetime\" air?",
        "db_id": "tvshow",
        "query_pl": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_pl": "Kiedy wyemitowano odcinek \"A Love of a Lifetime\"?"
    },
    {
        "query_en": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_en": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"Miłość na całe życie\";",
        "question_pl": "Jaka jest tygodniowa ranga serialu telewizyjnego z odcinkiem \"Miłość na całe życie\"?"
    },
    {
        "query_en": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_en": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "question_pl": "Jaka jest tygodniowa ranga odcinka \"A Love of a Lifetime\"?"
    },
    {
        "query_en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "question_en": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"Miłość na całe życie\";",
        "question_pl": "Jaki jest kanał telewizyjny serialu z odcinkiem \"Miłość na całe życie\"? Wymień nazwę serialu na kanale telewizyjnym."
    },
    {
        "query_en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "question_en": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "question_pl": "Jak nazywa się serial z odcinkiem \"A Love of a Lifetime\"?"
    },
    {
        "query_en": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_en": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
        "db_id": "tvshow",
        "query_pl": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_pl": "Lista odcinków wszystkich seriali telewizyjnych pokazywanych na kanale telewizyjnym o nazwie \"Sky Radio\"."
    },
    {
        "query_en": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_en": "What is the episode for the TV series named \"Sky Radio\"?",
        "db_id": "tvshow",
        "query_pl": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "question_pl": "Jaki jest odcinek serialu telewizyjnego o nazwie \"Sky Radio\"?"
    },
    {
        "query_en": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "question_en": "Find the number of cartoons directed by each of the listed directors.",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "question_pl": "Znajdź liczbę kreskówek wyreżyserowanych przez każdego z wymienionych reżyserów."
    },
    {
        "query_en": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "question_en": "How many cartoons did each director create?",
        "db_id": "tvshow",
        "query_pl": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "question_pl": "Ile kreskówek stworzył każdy z reżyserów?"
    },
    {
        "query_en": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "question_en": "Find the production code and channel of the most recently aired cartoon .",
        "db_id": "tvshow",
        "query_pl": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "question_pl": "Znajdź kod produkcji i kanał ostatnio emitowanej kreskówki."
    },
    {
        "query_en": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "question_en": "What is the produdction code and channel of the most recent cartoon ?",
        "db_id": "tvshow",
        "query_pl": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "question_pl": "Jaki jest kod produkcji i kanał najnowszej kreskówki?"
    },
    {
        "query_en": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "question_en": "Find the package choice and series name of the TV channel that has high definition TV.",
        "db_id": "tvshow",
        "query_pl": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"tak\"",
        "question_pl": "Znajdź wybór pakietu i nazwę serii kanału telewizyjnego, który oferuje telewizję w wysokiej rozdzielczości."
    },
    {
        "query_en": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "question_en": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "db_id": "tvshow",
        "query_pl": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"tak\"",
        "question_pl": "Jakie są opcje pakietów i nazwy seriali dla kanału telewizyjnego obsługującego telewizję wysokiej rozdzielczości?"
    },
    {
        "query_en": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "question_en": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\"",
        "question_pl": "Kanały telewizyjne w których krajach puszczają kreskówkę napisaną przez Todda Caseya?"
    },
    {
        "query_en": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "question_en": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "question_pl": "W jakich krajach w telewizji emitowane są kreskówki, których autorem jest Todd Casey?"
    },
    {
        "query_en": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "question_en": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "db_id": "tvshow",
        "query_pl": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\"",
        "question_pl": "Kanały telewizyjne w których krajach nie puszczają żadnej kreskówki napisanej przez Todda Caseya?"
    },
    {
        "query_en": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "question_en": "What are the countries that are not playing cartoons written by Todd Casey?",
        "db_id": "tvshow",
        "query_pl": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\"",
        "question_pl": "Jakie kraje nie grają w kreskówki napisane przez Todda Caseya?"
    },
    {
        "query_en": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "question_en": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Michael Chang\" INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Ben Jones\"",
        "question_pl": "Znajdź nazwę serii i kraj kanału telewizyjnego, który puszcza kreskówki wyreżyserowane przez Bena Jonesa i Michaela Changa?"
    },
    {
        "query_en": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "question_en": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "db_id": "tvshow",
        "query_pl": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Michael Chang\" INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Ben Jones\"",
        "question_pl": "Jaka jest nazwa serii i kraj wszystkich kanałów telewizyjnych, które puszczają kreskówki wyreżyserowane przez Bena Jonesa i kreskówki wyreżyserowane przez Michaela Changa?"
    },
    {
        "query_en": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "question_en": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "db_id": "tvshow",
        "query_pl": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != \"Angielski\"",
        "question_pl": "znajdź proporcje pikseli i naród kanałów telewizyjnych, które nie używają języka angielskiego."
    },
    {
        "query_en": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "question_en": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "db_id": "tvshow",
        "query_pl": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != \"Angielski\"",
        "question_pl": "Jaki jest współczynnik proporcji pikseli i kraj pochodzenia wszystkich kanałów telewizyjnych, które nie używają języka angielskiego?"
    },
    {
        "query_en": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "question_en": "find id of the tv channels that from the countries where have more than two tv channels.",
        "db_id": "tvshow",
        "query_pl": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "question_pl": "Znajdź identyfikatory kanałów telewizyjnych z krajów, w których są więcej niż dwa kanały telewizyjne."
    },
    {
        "query_en": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "question_en": "What are the ids of all tv channels that have more than 2 TV channels?",
        "db_id": "tvshow",
        "query_pl": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "question_pl": "Jakie są identyfikatory wszystkich kanałów telewizyjnych, które mają więcej niż 2 kanały telewizyjne?"
    },
    {
        "query_en": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "question_en": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "db_id": "tvshow",
        "query_pl": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\"",
        "question_pl": "Znajdź identyfikator kanałów telewizyjnych, które nie puszczają żadnej kreskówki wyreżyserowanej przez Bena Jonesa."
    },
    {
        "query_en": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "question_en": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "db_id": "tvshow",
        "query_pl": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\"",
        "question_pl": "Jakie są identyfikatory kanałów telewizyjnych, które nie mają żadnych kreskówek wyreżyserowanych przez Bena Jonesa?"
    },
    {
        "query_en": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "question_en": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "db_id": "tvshow",
        "query_pl": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\")",
        "question_pl": "Znajdź opcję pakietu kanału telewizyjnego, który nie ma żadnej kreskówki wyreżyserowanej przez Bena Jonesa."
    },
    {
        "query_en": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "question_en": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "db_id": "tvshow",
        "query_pl": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\")",
        "question_pl": "Jakie są opcje pakietów wszystkich kanałów telewizyjnych, które nie odtwarzają żadnych kreskówek wyreżyserowanych przez Bena Jonesa?"
    },
    {
        "query_en": "SELECT count(*) FROM poker_player",
        "question_en": "How many poker players are there?",
        "db_id": "poker_player",
        "query_pl": "SELECT count(*) FROM poker_player",
        "question_pl": "Ilu jest pokerzystów?"
    },
    {
        "query_en": "SELECT count(*) FROM poker_player",
        "question_en": "Count the number of poker players.",
        "db_id": "poker_player",
        "query_pl": "SELECT count(*) FROM poker_player",
        "question_pl": "Policz liczbę pokerzystów."
    },
    {
        "query_en": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "question_en": "List the earnings of poker players in descending order.",
        "db_id": "poker_player",
        "query_pl": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "question_pl": "Wymień zarobki pokerzystów w kolejności malejącej."
    },
    {
        "query_en": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "question_en": "What are the earnings of poker players, ordered descending by value?",
        "db_id": "poker_player",
        "query_pl": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "question_pl": "Jakie są zarobki pokerzystów, uporządkowane malejąco według wartości?"
    },
    {
        "query_en": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "question_en": "List the final tables made and the best finishes of poker players.",
        "db_id": "poker_player",
        "query_pl": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "question_pl": "Wymień rozegrane stoły finałowe i najlepsze finisze pokerzystów."
    },
    {
        "query_en": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "question_en": "What are the final tables made and best finishes for all poker players?",
        "db_id": "poker_player",
        "query_pl": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "question_pl": "Jak wyglądają stoły finałowe i najlepsze finisze wszystkich pokerzystów?"
    },
    {
        "query_en": "SELECT avg(Earnings) FROM poker_player",
        "question_en": "What is the average earnings of poker players?",
        "db_id": "poker_player",
        "query_pl": "SELECT avg(Earnings) FROM poker_player",
        "question_pl": "Jakie są średnie zarobki pokerzystów?"
    },
    {
        "query_en": "SELECT avg(Earnings) FROM poker_player",
        "question_en": "Return the average earnings across all poker players.",
        "db_id": "poker_player",
        "query_pl": "SELECT avg(Earnings) FROM poker_player",
        "question_pl": "Zwróć średnie zarobki wszystkich pokerzystów."
    },
    {
        "query_en": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "question_en": "What is the money rank of the poker player with the highest earnings?",
        "db_id": "poker_player",
        "query_pl": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "question_pl": "Jaka jest ranga pieniężna pokerzysty z najwyższymi zarobkami?"
    },
    {
        "query_en": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "question_en": "Return the money rank of the player with the greatest earnings.",
        "db_id": "poker_player",
        "query_pl": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "question_pl": "Zwróć rangę pieniężną gracza z największymi zarobkami."
    },
    {
        "query_en": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "question_en": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "db_id": "poker_player",
        "query_pl": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "question_pl": "Jaka jest maksymalna liczba stołów finałowych wśród pokerzystów z zarobkami poniżej 200000?"
    },
    {
        "query_en": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "question_en": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "db_id": "poker_player",
        "query_pl": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "question_pl": "Zwróć maksymalną liczbę stołów finałowych wykonanych przez wszystkich pokerzystów, którzy mają zarobki poniżej 200000."
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "question_en": "What are the names of poker players?",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "question_pl": "Jak nazywają się pokerzyści?"
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "question_en": "Return the names of all the poker players.",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "question_pl": "Zwróć nazwiska wszystkich pokerzystów."
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "question_en": "What are the names of poker players whose earnings is higher than 300000?",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "question_pl": "Jakie są nazwiska pokerzystów, których zarobki przekraczają 300000?"
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "question_en": "Give the names of poker players who have earnings above 300000.",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "question_pl": "Podaj nazwiska pokerzystów, którzy mają zarobki powyżej 300000."
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "question_en": "List the names of poker players ordered by the final tables made in ascending order.",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "question_pl": "Wymień nazwiska pokerzystów uporządkowane według stołów finałowych w kolejności rosnącej."
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "question_en": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "question_pl": "Jakie są nazwiska pokerzystów, uporządkowane rosnąco według liczby stołów finałowych, przy których zasiadali?"
    },
    {
        "query_en": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "question_en": "What is the birth date of the poker player with the lowest earnings?",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "question_pl": "Jaka jest data urodzenia pokerzysty z najniższymi zarobkami?"
    },
    {
        "query_en": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "question_en": "Return the birth date of the poker player with the lowest earnings.",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "question_pl": "Zwróć datę urodzenia pokerzysty z najniższymi zarobkami."
    },
    {
        "query_en": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "question_en": "What is the money rank of the tallest poker player?",
        "db_id": "poker_player",
        "query_pl": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "question_pl": "Jaka jest ranga pieniężna najwyższego pokerzysty?"
    },
    {
        "query_en": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "question_en": "Return the money rank of the poker player with the greatest height.",
        "db_id": "poker_player",
        "query_pl": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "question_pl": "Zwróć rangę pieniężną pokerzysty z największą wysokością."
    },
    {
        "query_en": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "question_en": "What is the average earnings of poker players with height higher than 200?",
        "db_id": "poker_player",
        "query_pl": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "question_pl": "Jakie są średnie zarobki pokerzystów o wzroście powyżej 200?"
    },
    {
        "query_en": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "question_en": "Give average earnings of poker players who are taller than 200.",
        "db_id": "poker_player",
        "query_pl": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "question_pl": "Podaj średnie zarobki pokerzystów, którzy są wyżsi niż 200."
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "question_en": "What are the names of poker players in descending order of earnings?",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "question_pl": "Jakie są nazwiska pokerzystów w kolejności malejących zarobków?"
    },
    {
        "query_en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "question_en": "Return the names of poker players sorted by their earnings descending.",
        "db_id": "poker_player",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "question_pl": "Zwróć nazwiska pokerzystów posortowane malejąco według ich zarobków."
    },
    {
        "query_en": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "question_en": "What are different nationalities of people and the corresponding number of people from each nation?",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "question_pl": "Jakie są różne narodowości ludzi i odpowiadająca im liczba osób z każdego narodu?"
    },
    {
        "query_en": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "question_en": "How many people are there of each nationality?",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "question_pl": "Ile jest osób każdej narodowości?"
    },
    {
        "query_en": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "What is the most common nationality of people?",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Jaka jest najczęstsza narodowość ludzi?"
    },
    {
        "query_en": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Give the nationality that is most common across all people.",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Podaj narodowość, która jest najbardziej powszechna wśród wszystkich ludzi."
    },
    {
        "query_en": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "question_en": "What are the nationalities that are shared by at least two people?",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "question_pl": "Jakie są narodowości, które są wspólne dla co najmniej dwóch osób?"
    },
    {
        "query_en": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "question_en": "Return the nationalities for which there are two or more people.",
        "db_id": "poker_player",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "question_pl": "Zwróć narodowości, dla których istnieją dwie lub więcej osób."
    },
    {
        "query_en": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "question_en": "List the names and birth dates of people in ascending alphabetical order of name.",
        "db_id": "poker_player",
        "query_pl": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "question_pl": "Wymień imiona i daty urodzenia osób w rosnącej kolejności alfabetycznej."
    },
    {
        "query_en": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "question_en": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "db_id": "poker_player",
        "query_pl": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "question_pl": "Jakie są imiona i daty urodzenia osób uporządkowanych alfabetycznie według ich imion?"
    },
    {
        "query_en": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "question_en": "Show names of people whose nationality is not \"Russia\".",
        "db_id": "poker_player",
        "query_pl": "SELECT Name FROM people WHERE Nationality != \"Rosja\"",
        "question_pl": "Pokaż nazwiska osób, których narodowość nie jest \"rosyjska\"."
    },
    {
        "query_en": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "question_en": "What are the names of people who are not from Russia?",
        "db_id": "poker_player",
        "query_pl": "SELECT Name FROM people WHERE Nationality != \"Rosja\"",
        "question_pl": "Jak nazywają się ludzie, którzy nie pochodzą z Rosji?"
    },
    {
        "query_en": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "question_en": "List the names of people that are not poker players.",
        "db_id": "poker_player",
        "query_pl": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "question_pl": "Wymień nazwiska osób, które nie są pokerzystami."
    },
    {
        "query_en": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "question_en": "What are the names of people who do not play poker?",
        "db_id": "poker_player",
        "query_pl": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "question_pl": "Jak nazywają się ludzie, którzy nie grają w pokera?"
    },
    {
        "query_en": "SELECT count(DISTINCT Nationality) FROM people",
        "question_en": "How many distinct nationalities are there?",
        "db_id": "poker_player",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM people",
        "question_pl": "Ile jest różnych narodowości?"
    },
    {
        "query_en": "SELECT count(DISTINCT Nationality) FROM people",
        "question_en": "Count the number of different nationalities.",
        "db_id": "poker_player",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM people",
        "question_pl": "Policz liczbę różnych narodowości."
    },
    {
        "query_en": "SELECT count(*) FROM area_code_state",
        "question_en": "How many states are there?",
        "db_id": "voter_1",
        "query_pl": "SELECT count(*) FROM area_code_state",
        "question_pl": "Ile jest stanów?"
    },
    {
        "query_en": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "question_en": "List the contestant numbers and names, ordered by contestant name descending.",
        "db_id": "voter_1",
        "query_pl": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "question_pl": "Wymień numery i nazwiska zawodników, uporządkowane malejąco według nazwiska zawodnika."
    },
    {
        "query_en": "SELECT vote_id ,  phone_number ,  state FROM votes",
        "question_en": "List the vote ids, phone numbers and states of all votes.",
        "db_id": "voter_1",
        "query_pl": "SELECT vote_id ,  phone_number ,  state FROM votes",
        "question_pl": "Wyświetl identyfikatory głosów, numery telefonów i stany wszystkich głosów."
    },
    {
        "query_en": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "question_en": "What are the maximum and minimum values of area codes?",
        "db_id": "voter_1",
        "query_pl": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "question_pl": "Jakie są maksymalne i minimalne wartości numerów kierunkowych?"
    },
    {
        "query_en": "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "question_en": "What is last date created of votes from the state 'CA'?",
        "db_id": "voter_1",
        "query_pl": "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "question_pl": "Jaka jest ostatnia data utworzenia głosów ze stanu \"CA\"?"
    },
    {
        "query_en": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "question_en": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "db_id": "voter_1",
        "query_pl": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "question_pl": "Jak nazywają się uczestnicy, których imiona nie brzmią \"Jessie Alloway\"?"
    },
    {
        "query_en": "SELECT DISTINCT state ,  created FROM votes",
        "question_en": "What are the distinct states and create time of all votes?",
        "db_id": "voter_1",
        "query_pl": "SELECT DISTINCT state ,  created FROM votes",
        "question_pl": "Jakie są poszczególne stany i czas utworzenia wszystkich głosów?"
    },
    {
        "query_en": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "question_en": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "db_id": "voter_1",
        "query_pl": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "question_pl": "Jakie są numery i nazwiska uczestników, którzy oddali co najmniej dwa głosy?"
    },
    {
        "query_en": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "question_en": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "db_id": "voter_1",
        "query_pl": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "question_pl": "Spośród wszystkich uczestników, którzy wzięli udział w głosowaniu, jaki jest numer i nazwisko uczestnika, który otrzymał najmniej głosów?"
    },
    {
        "query_en": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "question_en": "What are the number of votes from state 'NY' or 'CA'?",
        "db_id": "voter_1",
        "query_pl": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "question_pl": "Jaka jest liczba głosów ze stanu \"NY\" lub \"CA\"?"
    },
    {
        "query_en": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "question_en": "How many contestants did not get voted?",
        "db_id": "voter_1",
        "query_pl": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "question_pl": "Ilu uczestników nie otrzymało głosów?"
    },
    {
        "query_en": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the area code in which the most voters voted?",
        "db_id": "voter_1",
        "query_pl": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jaki jest numer kierunkowy obszaru, na którym głosowało najwięcej wyborców?"
    },
    {
        "query_en": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "question_en": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "db_id": "voter_1",
        "query_pl": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "question_pl": "Jakie są daty utworzenia, stany i numery telefonów głosów oddanych na zawodniczkę o imieniu \"Tabatha Gehling\"?"
    },
    {
        "query_en": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "question_en": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "db_id": "voter_1",
        "query_pl": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "question_pl": "Wymień numery kierunkowe, pod którymi głosujący oddali głosy zarówno na zawodniczkę \"Tabatha Gehling\", jak i na zawodniczkę \"Kelly Clauss\"."
    },
    {
        "query_en": "select contestant_name from contestants where contestant_name like \"%al%\"",
        "question_en": "Return the names of the contestants whose names contain the substring 'Al' .",
        "db_id": "voter_1",
        "query_pl": "select contestant_name from contestants where contestant_name like \"%al%\"",
        "question_pl": "Zwróć nazwiska zawodników, których nazwiska zawierają podciąg \"Al\"."
    },
    {
        "query_en": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "question_en": "What are the names of all the countries that became independent after 1950?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "question_pl": "Jak nazywają się wszystkie kraje, które uzyskały niepodległość po 1950 roku?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "question_en": "Give the names of the nations that were founded after 1950.",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "question_pl": "Podaj nazwy państw, które powstały po 1950 roku."
    },
    {
        "query_en": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "question_en": "How many countries have a republic as their form of government?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republika\"",
        "question_pl": "W ilu krajach formą rządu jest republika?"
    },
    {
        "query_en": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "question_en": "How many countries have governments that are republics?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republika\"",
        "question_pl": "Ile krajów ma rządy, które są republikami?"
    },
    {
        "query_en": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "question_en": "What is the total surface area of the countries in the Caribbean region?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Karaiby\"",
        "question_pl": "Jaka jest łączna powierzchnia krajów w regionie Karaibów?"
    },
    {
        "query_en": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "question_en": "How much surface area do the countires in the Carribean cover together?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Karaiby\"",
        "question_pl": "Jaką powierzchnię zajmują łącznie kraje Karaibów?"
    },
    {
        "query_en": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "question_en": "Which continent is Anguilla in?",
        "db_id": "world_1",
        "query_pl": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "question_pl": "Na którym kontynencie leży Anguilla?"
    },
    {
        "query_en": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "question_en": "What is the continent name which Anguilla belongs to?",
        "db_id": "world_1",
        "query_pl": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "question_pl": "Jak nazywa się kontynent, do którego należy Anguilla?"
    },
    {
        "query_en": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "question_en": "Which region is the city Kabul located in?",
        "db_id": "world_1",
        "query_pl": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "question_pl": "W którym regionie znajduje się miasto Kabul?"
    },
    {
        "query_en": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "question_en": "What region is Kabul in?",
        "db_id": "world_1",
        "query_pl": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "question_pl": "W jakim regionie znajduje się Kabul?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "question_en": "Which language is the most popular in Aruba?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "question_pl": "Jaki język jest najbardziej popularny na Arubie?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "question_en": "What language is predominantly spoken in Aruba?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "question_pl": "Jakim językiem najczęściej mówi się na Arubie?"
    },
    {
        "query_en": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "question_en": "What are the population and life expectancies in Brazil?",
        "db_id": "world_1",
        "query_pl": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazylia\"",
        "question_pl": "Jaka jest populacja i średnia długość życia w Brazylia?"
    },
    {
        "query_en": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "question_en": "Give me Brazil’s population and life expectancies.",
        "db_id": "world_1",
        "query_pl": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazylia\"",
        "question_pl": "Podaj mi populację Brazylii i średnią długość życia."
    },
    {
        "query_en": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "question_en": "What are the region and population of Angola?",
        "db_id": "world_1",
        "query_pl": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "question_pl": "Jaki jest region i ludność Angola?"
    },
    {
        "query_en": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "question_en": "What region does Angola belong to and what is its population?",
        "db_id": "world_1",
        "query_pl": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "question_pl": "Do jakiego regionu należy Angola i jaka jest jego populacja?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "question_en": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Afryka Środkowa\"",
        "question_pl": "Jaka jest średnia oczekiwana długość życia w krajach regionu Afryki Środkowej?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "question_en": "How long is the people’s average life expectancy in Central Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Afryka Środkowa\"",
        "question_pl": "Jaka jest średnia długość życia mieszkańców Afryki Środkowej?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "question_en": "What is the name of country that has the shortest life expectancy in Asia?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\" ORDER BY LifeExpectancy LIMIT 1",
        "question_pl": "Jak nazywa się kraj, w którym średnia długość życia jest najkrótsza w Azji?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "question_en": "Give the name of the country in Asia with the lowest life expectancy.",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\" ORDER BY LifeExpectancy LIMIT 1",
        "question_pl": "Podaj nazwę kraju w Azji o najniższej średniej długości życia."
    },
    {
        "query_en": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "question_en": "What is the total population and maximum GNP in Asia?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Azja\"",
        "question_pl": "Jaka jest całkowita populacja i maksymalny PNB w Azja?"
    },
    {
        "query_en": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "question_en": "How many people live in Asia, and what is the largest GNP among them?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Azja\"",
        "question_pl": "Ile osób mieszka w Azji i jaki jest wśród nich największy PNB?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "question_en": "What is the average life expectancy in African countries that are republics?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Afryka\" AND GovernmentForm  =  \"Republika\"",
        "question_pl": "Jaka jest średnia długość życia w krajach afrykańskich, które są republikami?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "question_en": "Give the average life expectancy for countries in Africa which are republics?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Afryka\" AND GovernmentForm  =  \"Republika\"",
        "question_pl": "Podaj średnią długość życia w krajach Afryki, które są republikami?"
    },
    {
        "query_en": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "question_en": "What is the total surface area of the continents Asia and Europe?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Azja\" OR Continent  =  \"Europa\"",
        "question_pl": "Jaka jest łączna powierzchnia kontynentów Azji i Europy?"
    },
    {
        "query_en": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "question_en": "Give the total surface area covered by countries in Asia or Europe.",
        "db_id": "world_1",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Azja\" OR Continent  =  \"Europa\"",
        "question_pl": "Podaj całkowitą powierzchnię zajmowaną przez kraje Azji lub Europy."
    },
    {
        "query_en": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "question_en": "How many people live in Gelderland district?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "question_pl": "Ile osób żyje w powiecie Gelderland?"
    },
    {
        "query_en": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "question_en": "What is the total population of Gelderland district?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "question_pl": "Jaka jest całkowita populacja Gelderland district?"
    },
    {
        "query_en": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "question_en": "What is the average GNP and total population in all nations whose government is US territory?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Terytorium USA\"",
        "question_pl": "Jaki jest średni PNB i całkowita populacja we wszystkich krajach, których rządem jest terytorium USA?"
    },
    {
        "query_en": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "question_en": "Give the mean GNP and total population of nations which are considered US territory.",
        "db_id": "world_1",
        "query_pl": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Terytorium USA\"",
        "question_pl": "Podaj średni PNB i całkowitą populację krajów, które są uważane za terytorium USA."
    },
    {
        "query_en": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "question_en": "How many unique languages are spoken in the world?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "question_pl": "Ile unikalnych języków jest używanych na świecie?"
    },
    {
        "query_en": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "question_en": "What is the number of distinct languages used around the world?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "question_pl": "Jaka jest liczba różnych języków używanych na całym świecie?"
    },
    {
        "query_en": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "question_en": "How many type of governments are in Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Afryka\"",
        "question_pl": "Ile rodzajów rządów jest w Afryce?"
    },
    {
        "query_en": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "question_en": "How many different forms of governments are there in Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Afryka\"",
        "question_pl": "Ile różnych form rządów istnieje w Afryce?"
    },
    {
        "query_en": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "question_en": "What is the total number of languages used in Aruba?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "question_pl": "Jaka jest łączna liczba języków używanych w kraju Aruba?"
    },
    {
        "query_en": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "question_en": "How many languages are spoken in Aruba?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "question_pl": "Ile języków jest używanych w kraju Aruba?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "question_en": "How many official languages does Afghanistan have?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afganistan\" AND IsOfficial  =  \"T\"",
        "question_pl": "Ile języków urzędowych ma Afganistan?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "question_en": "How many official languages are spoken in Afghanistan?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afganistan\" AND IsOfficial  =  \"T\"",
        "question_pl": "Ile języków urzędowych jest używanych w Afganistanie?"
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "What is name of the country that speaks the largest number of languages?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się kraj, w którym mówi się największą liczbą języków?"
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Give the name of the nation that uses the greatest amount of languages.",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Podaj nazwę narodu, który używa największej liczby języków."
    },
    {
        "query_en": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Which continent has the most diverse languages?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Który kontynent ma najbardziej zróżnicowane języki?"
    },
    {
        "query_en": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Which continent speaks the most languages?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Na którym kontynencie mówi się największą liczbą języków?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "question_en": "How many countries speak both English and Dutch?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\")",
        "question_pl": "W ilu krajach mówi się zarówno po angielsku, jak i po holendersku?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "question_en": "What is the number of nations that use English and Dutch?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\")",
        "question_pl": "Jaka jest liczba krajów używających języka angielskiego i holenderskiego?"
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "question_en": "What are the names of nations speak both English and French?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\"",
        "question_pl": "Jakie są nazwy narodów mówiących zarówno po angielsku, jak i po francusku?"
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "question_en": "Give the names of nations that speak both English and French.",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\"",
        "question_pl": "Podaj nazwy krajów, w których mówi się zarówno po angielsku, jak i po francusku."
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "question_en": "What are the names of nations where both English and French are official languages?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\" AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Jak nazywają się kraje, w których angielski i francuski są językami urzędowymi?"
    },
    {
        "query_en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "question_en": "Give the names of countries with English and French as official languages.",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\" AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Podaj nazwy krajów, w których angielski i francuski są językami urzędowymi."
    },
    {
        "query_en": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "question_en": "What is the number of distinct continents where Chinese is spoken?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chiński\"",
        "question_pl": "Na ilu różnych kontynentach mówi się po chińsku?"
    },
    {
        "query_en": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "question_en": "How many continents speak Chinese?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chiński\"",
        "question_pl": "Na ilu kontynentach mówi się po chińsku?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "question_en": "What are the regions that use English or Dutch?",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" OR T2.Language  =  \"Holenderski\"",
        "question_pl": "W jakich regionach używa się języka angielskiego lub holenderskiego?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "question_en": "Which regions speak Dutch or English?",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" OR T2.Language  =  \"Holenderski\"",
        "question_pl": "W których regionach mówi się po holendersku lub angielsku?"
    },
    {
        "query_en": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
        "question_en": "What are the countries where either English or Dutch is the official language ?",
        "db_id": "world_1",
        "query_pl": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"angielski\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"holenderski\" and isofficial  =  \"t\"",
        "question_pl": "W jakich krajach językiem urzędowym jest angielski lub niderlandzki?"
    },
    {
        "query_en": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "question_en": "Which countries have either English or Dutch as an official language?",
        "db_id": "world_1",
        "query_pl": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\" AND IsOfficial  =  \"T\"",
        "question_pl": "W których krajach językiem urzędowym jest angielski lub niderlandzki?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "question_en": "Which language is the most popular on the Asian continent?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Azja\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "question_pl": "Który język jest najpopularniejszy na kontynencie azjatyckim?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "question_en": "What is the language that is used by the largest number of Asian nations?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Azja\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "question_pl": "Jakim językiem posługuje się największa liczba krajów azjatyckich?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "question_en": "Which languages are spoken by only one country in republic governments?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republika\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "question_pl": "Którymi językami posługuje się tylko jeden kraj w rządach republikańskich?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "question_en": "What languages are only used by a single country with a republic government?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republika\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "question_pl": "Jakie języki są używane tylko przez jeden kraj z rządem republikańskim?"
    },
    {
        "query_en": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "question_en": "Find the city with the largest population that uses English.",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" ORDER BY T1.Population DESC LIMIT 1",
        "question_pl": "Znajdź miasto o największej populacji posługującej się językiem angielskim."
    },
    {
        "query_en": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "question_en": "What is the most populace city that speaks English?",
        "db_id": "world_1",
        "query_pl": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" ORDER BY T1.Population DESC LIMIT 1",
        "question_pl": "Jakie jest najbardziej zaludnione miasto, które mówi po angielsku?"
    },
    {
        "query_en": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "question_en": "Find the name, population and expected life length of asian country with the largest area?",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Azja\" ORDER BY SurfaceArea DESC LIMIT 1",
        "question_pl": "Znajdź nazwę, populację i oczekiwaną długość życia kraju azjatyckiego o największej powierzchni?"
    },
    {
        "query_en": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "question_en": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Azja\" ORDER BY SurfaceArea DESC LIMIT 1",
        "question_pl": "Jaka jest nazwa, populacja i średnia długość życia największego kraju azjatyckiego pod względem powierzchni?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "question_en": "What is average life expectancy in the countries where English is not the official language?",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\")",
        "question_pl": "Jaka jest średnia długość życia w krajach, w których angielski nie jest językiem urzędowym?"
    },
    {
        "query_en": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "question_en": "Give the mean life expectancy of countries in which English is not the official language.",
        "db_id": "world_1",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\")",
        "question_pl": "Podaj średnią długość życia w krajach, w których angielski nie jest językiem urzędowym."
    },
    {
        "query_en": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "question_en": "What is the total number of people living in the nations that do not use English?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\")",
        "question_pl": "Jaka jest łączna liczba osób mieszkających w krajach, które nie używają języka angielskiego?"
    },
    {
        "query_en": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "question_en": "How many people live in countries that do not speak English?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\")",
        "question_pl": "Ile osób mieszka w krajach, w których nie mówi się po angielsku?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "question_en": "What is the official language spoken in the country whose head of state is Beatrix?",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Jaki jest język urzędowy używany w kraju, którego głową jest Beatrix?"
    },
    {
        "query_en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "question_en": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "db_id": "world_1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Jaki jest język urzędowy używany w kraju, którego głową jest Beatrix."
    },
    {
        "query_en": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "question_en": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Jaka jest łączna liczba języków urzędowych używanych w krajach, które zostały założone przed 1930 rokiem?"
    },
    {
        "query_en": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "question_en": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "db_id": "world_1",
        "query_pl": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "question_pl": "Jaka jest łączna liczba odrębnych języków urzędowych w krajach założonych przed 1930 rokiem?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "question_en": "What are the countries that have greater surface area than any country in Europe?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europa\")",
        "question_pl": "Które kraje mają większą powierzchnię niż jakikolwiek kraj w Europie?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "question_en": "Which countries have greater area than that of any country in Europe?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europa\")",
        "question_pl": "Które kraje mają większą powierzchnię niż jakikolwiek kraj w Europie?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
        "question_en": "What are the African countries that have a  population less than any country in Asia?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Afryka\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Azja\")",
        "question_pl": "Które kraje afrykańskie mają populację mniejszą niż jakikolwiek kraj w Azji?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
        "question_en": "Which African countries have a smaller population than that of any country in Asia?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Afryka\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Azja\")",
        "question_pl": "Które kraje afrykańskie mają mniejszą populację niż jakikolwiek kraj w Azji?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
        "question_en": "Which Asian countries have a population that is larger than any country in Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Afryka\")",
        "question_pl": "Które kraje azjatyckie mają populację większą niż jakikolwiek kraj w Afryce?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
        "question_en": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Afryka\")",
        "question_pl": "Które kraje azjatyckie mają populację większą niż jakikolwiek kraj w Afryce?"
    },
    {
        "query_en": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "question_en": "What are the country codes for countries that do not speak English?",
        "db_id": "world_1",
        "query_pl": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\"",
        "question_pl": "Jakie są kody krajów, w których nie mówi się po angielsku?"
    },
    {
        "query_en": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "question_en": "Return the country codes for countries that do not speak English.",
        "db_id": "world_1",
        "query_pl": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\"",
        "question_pl": "Zwróć kody krajów, w których nie mówi się po angielsku."
    },
    {
        "query_en": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "question_en": "What are the country codes of countries where people use languages other than English?",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Angielski\"",
        "question_pl": "Jakie są kody krajów, w których ludzie używają języków innych niż angielski?"
    },
    {
        "query_en": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "question_en": "Give the country codes for countries in which people speak langauges that are not English.",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Angielski\"",
        "question_pl": "Podaj kody krajów, w których ludzie posługują się językami innymi niż angielski."
    },
    {
        "query_en": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "question_en": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "db_id": "world_1",
        "query_pl": "SELECT Code FROM country WHERE GovernmentForm != \"Republika\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\"",
        "question_pl": "Jakie są kody krajów, w których nie mówi się po angielsku i których formularze rządowe nie są republikańskie?"
    },
    {
        "query_en": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "question_en": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "db_id": "world_1",
        "query_pl": "SELECT Code FROM country WHERE GovernmentForm != \"Republika\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\"",
        "question_pl": "Zwróć kody krajów, w których nie mówi się po angielsku i których rządy nie są republikami."
    },
    {
        "query_en": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "question_en": "Which cities are in European countries where English is not the official language?",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"Europa\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"Angielski\")",
        "question_pl": "Które miasta znajdują się w krajach europejskich, w których angielski nie jest językiem urzędowym?"
    },
    {
        "query_en": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "question_en": "What are the names of cities in Europe for which English is not the official language?",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"Europa\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"Angielski\")",
        "question_pl": "Jakie są nazwy miast w Europie, w których angielski nie jest językiem urzędowym?"
    },
    {
        "query_en": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
        "question_en": "Which unique cities are in Asian countries where Chinese is the official language ?",
        "db_id": "world_1",
        "query_pl": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  \"chiński\" and t1.continent  =  \"azja\"",
        "question_pl": "Jakie wyjątkowe miasta znajdują się w krajach azjatyckich, w których językiem urzędowym jest chiński?"
    },
    {
        "query_en": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "question_en": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "db_id": "world_1",
        "query_pl": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  \"T\" AND T2.Language  =  \"Chiński\" AND T1.Continent  =  \"Azja\"",
        "question_pl": "Zwróć różne nazwy miast w Azji, w których językiem urzędowym jest chiński."
    },
    {
        "query_en": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "question_en": "What are the name, independence year, and surface area of the country with the smallest population?",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "question_pl": "Jaka jest nazwa, rok uzyskania niepodległości i powierzchnia kraju o najmniejszej liczbie ludności?"
    },
    {
        "query_en": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "question_en": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "question_pl": "Podaj nazwę, rok uzyskania niepodległości i powierzchnię kraju o najniższej liczbie ludności."
    },
    {
        "query_en": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "question_en": "What are the population, name and leader of the country with the largest area?",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "question_pl": "Jaka jest populacja, nazwa i lider kraju o największej powierzchni?"
    },
    {
        "query_en": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "question_en": "Give the name, population, and head of state for the country that has the largest area.",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "question_pl": "Podaj nazwę, liczbę ludności i głowę państwa kraju o największej powierzchni."
    },
    {
        "query_en": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "question_en": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "question_pl": "Zwróć nazwę kraju i liczbę używanych języków dla każdego kraju, w którym używane są co najmniej 3 języki."
    },
    {
        "query_en": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "question_en": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "db_id": "world_1",
        "query_pl": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "question_pl": "Jak nazywają się kraje, w których mówi się więcej niż dwoma językami i iloma językami się posługują?"
    },
    {
        "query_en": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "question_en": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "question_pl": "Znajdź liczbę miast w każdym okręgu, których populacja jest większa niż średnia populacja miast?"
    },
    {
        "query_en": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "question_en": "How many cities in each district have a population that is above the average population across all cities?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "question_pl": "Ile miast w każdym okręgu ma populację wyższą niż średnia populacja wszystkich miast?"
    },
    {
        "query_en": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "question_en": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "question_pl": "Znajdź nazwę formy rządu i całkowitą populację dla każdej formy rządu, której średnia długość życia jest dłuższa niż 72 lata."
    },
    {
        "query_en": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "question_en": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "question_pl": "Jakie są różne formy rządowe i jaka jest całkowita populacja każdej z nich dla form rządowych, których średnia długość życia przekracza 72 lata?"
    },
    {
        "query_en": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "question_en": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "question_pl": "Znajdź średnią długość życia i całkowitą populację dla każdego kontynentu, na którym średnia długość życia jest krótsza niż 72 lata?"
    },
    {
        "query_en": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "question_en": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "db_id": "world_1",
        "query_pl": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "question_pl": "Jakie są różne kontynenty oraz całkowita liczba ludności i średnia długość życia odpowiadająca każdemu z nich, dla kontynentów, których średnia długość życia jest niższa niż 72 lata?"
    },
    {
        "query_en": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "question_en": "What are the names and areas of countries with the top 5 largest area?",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "question_pl": "Jakie są nazwy i obszary krajów o 5 największych powierzchniach?"
    },
    {
        "query_en": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "question_en": "Return the names and surface areas of the 5 largest countries.",
        "db_id": "world_1",
        "query_pl": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "question_pl": "Podaj nazwy i powierzchnie 5 największych krajów."
    },
    {
        "query_en": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "question_en": "What are names of countries with the top 3 largest population?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "question_pl": "Jakie są nazwy krajów o 3 największych populacjach?"
    },
    {
        "query_en": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "question_en": "Return the names of the 3 most populated countries.",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "question_pl": "Zwróć nazwy 3 najbardziej zaludnionych krajów."
    },
    {
        "query_en": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "question_en": "What are the names of the nations with the 3 lowest populations?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "question_pl": "Jak nazywają się kraje o 3 najniższych populacjach?"
    },
    {
        "query_en": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "question_en": "Return the names of the 3 countries with the fewest people.",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "question_pl": "Podaj nazwy 3 krajów z najmniejszą liczbą mieszkańców."
    },
    {
        "query_en": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "question_en": "how many countries are in Asia?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) FROM country WHERE continent  =  \"Azja\"",
        "question_pl": "Ile krajów znajduje się w Azji?"
    },
    {
        "query_en": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "question_en": "Count the number of countries in Asia.",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) FROM country WHERE continent  =  \"Azja\"",
        "question_pl": "Policz liczbę krajów w Azji."
    },
    {
        "query_en": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "question_en": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE continent  =  \"Europa\" AND Population  =  \"80000\"",
        "question_pl": "Jak nazywają się kraje, które znajdują się na kontynencie europejskim i mają 80000 mieszkańców?"
    },
    {
        "query_en": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "question_en": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "db_id": "world_1",
        "query_pl": "SELECT Name FROM country WHERE continent  =  \"Europa\" AND Population  =  \"80000\"",
        "question_pl": "Podaj nazwy krajów, które znajdują się w Europie i mają populację równą 80000."
    },
    {
        "query_en": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "question_en": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
        "db_id": "world_1",
        "query_pl": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"ameryka Północna\" and surfacearea  >  3000",
        "question_pl": "Jaka jest łączna populacja i średnia powierzchnia krajów na kontynencie Ameryki Północnej, których powierzchnia jest większa niż 3000?"
    },
    {
        "query_en": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "question_en": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
        "db_id": "world_1",
        "query_pl": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"ameryka Północna\" and surfacearea  >  3000",
        "question_pl": "Podaj całkowitą liczbę ludności i średnią powierzchnię odpowiadającą krajom w Ameryce Północnej, które mają powierzchnię większą niż 3000 ."
    },
    {
        "query_en": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "question_en": "What are the cities whose population is between 160000 and 900000?",
        "db_id": "world_1",
        "query_pl": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "question_pl": "Jakie są miasta, których populacja wynosi od 160000 do 900000?"
    },
    {
        "query_en": "select name from city where population between 160000 and 900000",
        "question_en": "Return the names of cities that have a population between 160000 and 900000 .",
        "db_id": "world_1",
        "query_pl": "select name from city where population between 160000 and 900000",
        "question_pl": "Zwróć nazwy miast o liczbie mieszkańców między 160000 a 900000."
    },
    {
        "query_en": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which language is spoken by the largest number of countries?",
        "db_id": "world_1",
        "query_pl": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Którym językiem posługuje się największa liczba krajów?"
    },
    {
        "query_en": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Give the language that is spoken in the most countries.",
        "db_id": "world_1",
        "query_pl": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Podaj język, którym mówi się w największej liczbie krajów."
    },
    {
        "query_en": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "question_en": "What is the language spoken by the largest percentage of people in each country?",
        "db_id": "world_1",
        "query_pl": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "question_pl": "Jakim językiem posługuje się największy odsetek ludzi w każdym kraju?"
    },
    {
        "query_en": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "question_en": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "db_id": "world_1",
        "query_pl": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "question_pl": "Jakie są kody różnych krajów i jakimi językami posługuje się największy odsetek ludzi w każdym z nich?"
    },
    {
        "query_en": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "question_en": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode",
        "question_pl": "Jaka jest łączna liczba krajów, w których językiem hiszpańskim posługuje się największy odsetek ludzi?"
    },
    {
        "query_en": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "question_en": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "db_id": "world_1",
        "query_pl": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode",
        "question_pl": "Policz liczbę krajów, w których hiszpański jest najczęściej używanym językiem."
    },
    {
        "query_en": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "question_en": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "db_id": "world_1",
        "query_pl": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode",
        "question_pl": "Jakie są kody krajów, w których językiem hiszpańskim posługuje się największy odsetek ludzi?"
    },
    {
        "query_en": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "question_en": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "db_id": "world_1",
        "query_pl": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode",
        "question_pl": "Zwróć kody krajów, w których dominującym językiem jest hiszpański."
    },
    {
        "query_en": "SELECT count(*) FROM conductor",
        "question_en": "How many conductors are there?",
        "db_id": "orchestra",
        "query_pl": "SELECT count(*) FROM conductor",
        "question_pl": "Ilu jest przewodników?"
    },
    {
        "query_en": "SELECT count(*) FROM conductor",
        "question_en": "Count the number of conductors.",
        "db_id": "orchestra",
        "query_pl": "SELECT count(*) FROM conductor",
        "question_pl": "Policz liczbę przewodów."
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question_en": "List the names of conductors in ascending order of age.",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question_pl": "Wymień nazwiska dyrygentów w kolejności rosnącej według wieku."
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question_en": "What are the names of conductors, ordered by age?",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Age ASC",
        "question_pl": "Jak nazywają się dyrygenci uporządkowani według wieku?"
    },
    {
        "query_en": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "question_en": "What are the names of conductors whose nationalities are not \"USA\"?",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "question_pl": "Jak nazywają się dyrygenci, których narodowość nie brzmi \"USA\"?"
    },
    {
        "query_en": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "question_en": "Return the names of conductors that do not have the nationality \"USA\".",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "question_pl": "Zwróć nazwiska przewodników, którzy nie mają obywatelstwa \"USA\"."
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question_en": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question_pl": "Jakie są wytwórnie płytowe orkiestr w porządku malejącym według lat, w których zostały założone?"
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question_en": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "question_pl": "Zwróć wytwórnie płytowe orkiestr, posortowane malejąco według lat, w których zostały założone."
    },
    {
        "query_en": "SELECT avg(Attendance) FROM SHOW",
        "question_en": "What is the average attendance of shows?",
        "db_id": "orchestra",
        "query_pl": "SELECT avg(Attendance) FROM SHOW",
        "question_pl": "Jaka jest średnia frekwencja na pokazach?"
    },
    {
        "query_en": "SELECT avg(Attendance) FROM SHOW",
        "question_en": "Return the average attendance across all shows.",
        "db_id": "orchestra",
        "query_pl": "SELECT avg(Attendance) FROM SHOW",
        "question_pl": "Zwróć średnią frekwencję na wszystkich pokazach."
    },
    {
        "query_en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "question_en": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "db_id": "orchestra",
        "query_pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Finał na żywo\"",
        "question_pl": "Jaki jest maksymalny i minimalny udział występów, których typ nie jest \"finałem na żywo\"?"
    },
    {
        "query_en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "question_en": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
        "db_id": "orchestra",
        "query_pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "question_pl": "Zwróć maksymalne i minimalne udziały dla występów, które nie mają typu \"Live final\"."
    },
    {
        "query_en": "SELECT count(DISTINCT Nationality) FROM conductor",
        "question_en": "How many different nationalities do conductors have?",
        "db_id": "orchestra",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM conductor",
        "question_pl": "Ile różnych narodowości mają dyrygenci?"
    },
    {
        "query_en": "SELECT count(DISTINCT Nationality) FROM conductor",
        "question_en": "Count the number of different nationalities of conductors.",
        "db_id": "orchestra",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM conductor",
        "question_pl": "Policz liczbę różnych narodowości dyrygentów."
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question_en": "List names of conductors in descending order of years of work.",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question_pl": "Wymień nazwiska dyrygentów w kolejności malejącej według lat pracy."
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question_en": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "question_pl": "Jakie są nazwiska dyrygentów, posortowane malejąco według liczby przepracowanych lat?"
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question_en": "List the name of the conductor with the most years of work.",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question_pl": "Wymień nazwisko dyrygenta z największą liczbą lat pracy."
    },
    {
        "query_en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question_en": "What is the name of the conductor who has worked the greatest number of years?",
        "db_id": "orchestra",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "question_pl": "Jak nazywa się dyrygent, który przepracował największą liczbę lat?"
    },
    {
        "query_en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "question_en": "Show the names of conductors and the orchestras they have conducted.",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "question_pl": "Pokaż nazwiska dyrygentów i orkiestry, którymi dyrygowali."
    },
    {
        "query_en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "question_en": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "question_pl": "Jakie są nazwiska dyrygentów i orkiestr, którymi dyrygowali?"
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "question_en": "Show the names of conductors that have conducted more than one orchestras.",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "question_pl": "Podaj nazwiska dyrygentów, którzy prowadzili więcej niż jedną orkiestrę."
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "question_en": "What are the names of conductors who have conducted at more than one orchestra?",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "question_pl": "Jakie są nazwiska dyrygentów, którzy dyrygowali więcej niż jedną orkiestrą?"
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Show the name of the conductor that has conducted the most number of orchestras.",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Wskaż nazwisko dyrygenta, który poprowadził najwięcej orkiestr."
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "What is the name of the conductor who has conducted the most orchestras?",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się dyrygent, który poprowadził najwięcej orkiestr?"
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "question_en": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "question_pl": "Podaj nazwisko dyrygenta, który prowadził orkiestry założone po 2008 roku."
    },
    {
        "query_en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "question_en": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "db_id": "orchestra",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "question_pl": "Jakie są nazwiska dyrygentów, którzy prowadzili orkiestry założone po 2008 roku?"
    },
    {
        "query_en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "question_en": "Please show the different record companies and the corresponding number of orchestras.",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "question_pl": "Wskaż różne wytwórnie płytowe i odpowiadającą im liczbę orkiestr."
    },
    {
        "query_en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "question_en": "How many orchestras does each record company manage?",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "question_pl": "Iloma orkiestrami zarządza każda wytwórnia płytowa?"
    },
    {
        "query_en": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "question_en": "Please show the record formats of orchestras in ascending order of count.",
        "db_id": "orchestra",
        "query_pl": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "question_pl": "Pokaż formaty nagrań orkiestr w kolejności rosnącej."
    },
    {
        "query_en": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "question_en": "What are the major record formats of orchestras, sorted by their frequency?",
        "db_id": "orchestra",
        "query_pl": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "question_pl": "Jakie są główne formaty nagrań orkiestr, posortowane według częstotliwości?"
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "List the record company shared by the most number of orchestras.",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Wymień wytwórnię, z którą współpracuje najwięcej orkiestr."
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "What is the record company used by the greatest number of orchestras?",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Z usług jakiej wytwórni korzysta największa liczba orkiestr?"
    },
    {
        "query_en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "question_en": "List the names of orchestras that have no performance.",
        "db_id": "orchestra",
        "query_pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "question_pl": "Wymień nazwy orkiestr, które nie mają występów."
    },
    {
        "query_en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "question_en": "What are the orchestras that do not have any performances?",
        "db_id": "orchestra",
        "query_pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "question_pl": "Jakie są orkiestry, które nie mają żadnych występów?"
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "question_en": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "question_pl": "Pokaż wytwórnie płytowe współdzielone przez orkiestry założone przed 2003 rokiem i po 2003 roku."
    },
    {
        "query_en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "question_en": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "db_id": "orchestra",
        "query_pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "question_pl": "Z usług jakich wytwórni korzystają zarówno orkiestry założone przed 2003 rokiem, jak i te założone po 2003 roku?"
    },
    {
        "query_en": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "question_en": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "db_id": "orchestra",
        "query_pl": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "question_pl": "Znajdź liczbę orkiestr, których format nagrań to \"CD\" lub \"DVD\"."
    },
    {
        "query_en": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "question_en": "Count the number of orchestras that have CD or DVD as their record format.",
        "db_id": "orchestra",
        "query_pl": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "question_pl": "Policz liczbę orkiestr, które mają płyty CD lub DVD jako format nagrań."
    },
    {
        "query_en": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "question_en": "Show the years in which orchestras that have given more than one performance are founded.",
        "db_id": "orchestra",
        "query_pl": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "question_pl": "Wskaż lata, w których powstały orkiestry, które dały więcej niż jeden występ."
    },
    {
        "query_en": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "question_en": "What are years of founding for orchestras that have had more than a single performance?",
        "db_id": "orchestra",
        "query_pl": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "question_pl": "Jakie są lata założenia dla orkiestr, które miały więcej niż jeden występ?"
    },
    {
        "query_en": "SELECT count(*) FROM Highschooler",
        "question_en": "How many high schoolers are there?",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Highschooler",
        "question_pl": "Ilu jest licealistów?"
    },
    {
        "query_en": "SELECT count(*) FROM Highschooler",
        "question_en": "Count the number of high schoolers.",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Highschooler",
        "question_pl": "Policz liczbę uczniów szkół średnich."
    },
    {
        "query_en": "SELECT name ,  grade FROM Highschooler",
        "question_en": "Show the names and grades of each high schooler.",
        "db_id": "network_1",
        "query_pl": "SELECT name ,  grade FROM Highschooler",
        "question_pl": "Pokaż nazwiska i oceny każdego ucznia szkoły średniej."
    },
    {
        "query_en": "SELECT name ,  grade FROM Highschooler",
        "question_en": "What are the names and grades for each high schooler?",
        "db_id": "network_1",
        "query_pl": "SELECT name ,  grade FROM Highschooler",
        "question_pl": "Jakie są imiona i stopnie każdego ucznia szkoły średniej?"
    },
    {
        "query_en": "SELECT grade FROM Highschooler",
        "question_en": "Show all the grades of the high schoolers.",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler",
        "question_pl": "Pokaż wszystkie oceny uczniów szkół średnich."
    },
    {
        "query_en": "SELECT grade FROM Highschooler",
        "question_en": "What is the grade of each high schooler?",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler",
        "question_pl": "Jaka jest ocena każdego ucznia szkoły średniej?"
    },
    {
        "query_en": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_en": "What grade is Kyle in?",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_pl": "Do której klasy chodzi Kyle?"
    },
    {
        "query_en": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_en": "Return the grade for the high schooler named Kyle.",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_pl": "Zwróć ocenę licealiście o imieniu Kyle."
    },
    {
        "query_en": "SELECT name FROM Highschooler WHERE grade  =  10",
        "question_en": "Show the names of all high schoolers in grade 10.",
        "db_id": "network_1",
        "query_pl": "SELECT name FROM Highschooler WHERE grade  =  10",
        "question_pl": "Pokaż nazwiska wszystkich licealistów w klasie 10."
    },
    {
        "query_en": "SELECT name FROM Highschooler WHERE grade  =  10",
        "question_en": "What are the names of all high schoolers in grade 10?",
        "db_id": "network_1",
        "query_pl": "SELECT name FROM Highschooler WHERE grade  =  10",
        "question_pl": "Jak nazywają się wszyscy licealiści w klasie 10?"
    },
    {
        "query_en": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_en": "Show the ID of the high schooler named Kyle.",
        "db_id": "network_1",
        "query_pl": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_pl": "Pokaż identyfikator licealisty o imieniu Kyle."
    },
    {
        "query_en": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_en": "What is Kyle's id?",
        "db_id": "network_1",
        "query_pl": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "question_pl": "Jaki jest identyfikator Kyle'a?"
    },
    {
        "query_en": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "question_en": "How many high schoolers are there in grade 9 or 10?",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "question_pl": "Ilu licealistów jest w klasie 9 lub 10?"
    },
    {
        "query_en": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "question_en": "Count the number of high schoolers in grades 9 or 10.",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "question_pl": "Policz liczbę uczniów szkół średnich w klasach 9 lub 10."
    },
    {
        "query_en": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "question_en": "Show the number of high schoolers for each grade.",
        "db_id": "network_1",
        "query_pl": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "question_pl": "Pokaż liczbę uczniów szkół średnich w każdej klasie."
    },
    {
        "query_en": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "question_en": "How many high schoolers are in each grade?",
        "db_id": "network_1",
        "query_pl": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "question_pl": "Ilu licealistów jest w każdej klasie?"
    },
    {
        "query_en": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which grade has the most high schoolers?",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Która klasa ma najwięcej licealistów?"
    },
    {
        "query_en": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the grade that has the greatest number of high schoolers.",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwróć klasę, w której jest najwięcej licealistów."
    },
    {
        "query_en": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "question_en": "Show me all grades that have at least 4 students.",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "question_pl": "Pokaż mi wszystkie klasy, które mają co najmniej 4 uczniów."
    },
    {
        "query_en": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "question_en": "Which grades have 4 or more high schoolers?",
        "db_id": "network_1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "question_pl": "Które klasy mają 4 lub więcej licealistów?"
    },
    {
        "query_en": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "question_en": "Show the student IDs and numbers of friends corresponding to each.",
        "db_id": "network_1",
        "query_pl": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "question_pl": "Pokaż identyfikatory uczniów i numery znajomych odpowiadające każdemu z nich."
    },
    {
        "query_en": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "question_en": "How many friends does each student have?",
        "db_id": "network_1",
        "query_pl": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "question_pl": "Ilu przyjaciół ma każdy uczeń?"
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_en": "Show the names of high school students and their corresponding number of friends.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_pl": "Pokaż nazwiska licealistów i odpowiadającą im liczbę znajomych."
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_en": "What are the names of the high schoolers and how many friends does each have?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_pl": "Jak nazywają się licealiści i ilu przyjaciół ma każdy z nich?"
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the high schooler who has the greatest number of friends?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się licealista, który ma największą liczbę przyjaciół?"
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the name of the high school student with the most friends.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Podaj imię i nazwisko licealisty z największą liczbą przyjaciół."
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "question_en": "Show the names of high schoolers who have at least 3 friends.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "question_pl": "Pokaż nazwiska licealistów, którzy mają co najmniej 3 przyjaciół."
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "question_en": "What are the names of high schoolers who have 3 or more friends?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "question_pl": "Jak nazywają się licealiści, którzy mają 3 lub więcej przyjaciół?"
    },
    {
        "query_en": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "Show the names of all of the high schooler Kyle's friends.",
        "db_id": "network_1",
        "query_pl": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Pokaż imiona wszystkich przyjaciół licealisty Kyle'a."
    },
    {
        "query_en": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "Return the names of friends of the high school student Kyle.",
        "db_id": "network_1",
        "query_pl": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Podaj nazwiska przyjaciół licealisty Kyle'a."
    },
    {
        "query_en": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "How many friends does the high school student Kyle have?",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Ilu przyjaciół ma licealista Kyle?"
    },
    {
        "query_en": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "Count the number of friends Kyle has.",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Policz, ilu przyjaciół ma Kyle."
    },
    {
        "query_en": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "question_en": "Show ids of all students who do not have any friends.",
        "db_id": "network_1",
        "query_pl": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "question_pl": "Pokaż identyfikatory wszystkich uczniów, którzy nie mają żadnych znajomych."
    },
    {
        "query_en": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "question_en": "What are the ids of high school students who do not have friends?",
        "db_id": "network_1",
        "query_pl": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "question_pl": "Jakie są identyfikatory licealistów, którzy nie mają przyjaciół?"
    },
    {
        "query_en": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "question_en": "Show names of all high school students who do not have any friends.",
        "db_id": "network_1",
        "query_pl": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "question_pl": "Pokaż nazwiska wszystkich licealistów, którzy nie mają przyjaciół."
    },
    {
        "query_en": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "question_en": "What are the names of students who have no friends?",
        "db_id": "network_1",
        "query_pl": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "question_pl": "Jak nazywają się uczniowie, którzy nie mają przyjaciół?"
    },
    {
        "query_en": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "question_en": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "db_id": "network_1",
        "query_pl": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "question_pl": "Pokaż identyfikatory licealistów, którzy mają przyjaciół i są lubiani przez kogoś innego."
    },
    {
        "query_en": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "question_en": "What are the ids of students who both have friends and are liked?",
        "db_id": "network_1",
        "query_pl": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "question_pl": "Jakie są identyfikatory uczniów, którzy mają przyjaciół i są lubiani?"
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "question_en": "Show name of all students who have some friends and also are liked by someone else.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "question_pl": "Pokaż nazwiska wszystkich uczniów, którzy mają przyjaciół i są lubiani przez kogoś innego."
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "question_en": "What are the names of high schoolers who both have friends and are liked?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "question_pl": "Jak nazywają się licealiści, którzy mają przyjaciół i są lubiani?"
    },
    {
        "query_en": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "question_en": "Count the number of likes for each student id.",
        "db_id": "network_1",
        "query_pl": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "question_pl": "Policz liczbę polubień dla każdego identyfikatora ucznia."
    },
    {
        "query_en": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "question_en": "How many likes correspond to each student id?",
        "db_id": "network_1",
        "query_pl": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "question_pl": "Ile polubień odpowiada każdemu identyfikatorowi ucznia?"
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_en": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_pl": "Pokaż nazwiska licealistów, którzy mają polubienia, oraz liczbę polubień każdego z nich."
    },
    {
        "query_en": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_en": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "question_pl": "Jak nazywają się licealiści, którzy mają polubienia i ile polubień ma każdy z nich?"
    },
    {
        "query_en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the high schooler who has the greatest number of likes?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się licealista, który ma najwięcej polubień?"
    },
    {
        "query_en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Give the name of the student with the most likes.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Podaj imię ucznia z największą liczbą polubień."
    },
    {
        "query_en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_en": "Show the names of students who have at least 2 likes.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_pl": "Pokaż imiona uczniów, którzy mają co najmniej 2 polubienia."
    },
    {
        "query_en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_en": "What are the names of students who have 2 or more likes?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_pl": "Jak nazywają się uczniowie, którzy mają 2 lub więcej polubień?"
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_en": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_pl": "Pokaż nazwiska uczniów, którzy mają ocenę wyższą niż 5 i co najmniej 2 przyjaciół."
    },
    {
        "query_en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_en": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "db_id": "network_1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "question_pl": "Jak nazywają się licealiści, którzy mają ocenę powyżej 5 i mają 2 lub więcej przyjaciół?"
    },
    {
        "query_en": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "How many likes does Kyle have?",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Ile polubień ma Kyle?"
    },
    {
        "query_en": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_en": "Return the number of likes that the high schooler named Kyle has.",
        "db_id": "network_1",
        "query_pl": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "question_pl": "Zwróć liczbę polubień licealisty o imieniu Kyle."
    },
    {
        "query_en": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_en": "Find the average grade of all students who have some friends.",
        "db_id": "network_1",
        "query_pl": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_pl": "Znajdź średnią ocen wszystkich uczniów, którzy mają znajomych."
    },
    {
        "query_en": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_en": "What is the average grade of students who have friends?",
        "db_id": "network_1",
        "query_pl": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_pl": "Jaka jest średnia ocen uczniów, którzy mają przyjaciół?"
    },
    {
        "query_en": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_en": "Find the minimum grade of students who have no friends.",
        "db_id": "network_1",
        "query_pl": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_pl": "Znajdź minimalną liczbę uczniów, którzy nie mają przyjaciół."
    },
    {
        "query_en": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_en": "What is the lowest grade of students who do not have any friends?",
        "db_id": "network_1",
        "query_pl": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "question_pl": "Jaka jest najniższa ocena uczniów, którzy nie mają żadnych przyjaciół?"
    },
    {
        "query_en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question_en": "Which states have both owners and professionals living there?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question_pl": "W których stanach mieszkają zarówno właściciele, jak i profesjonaliści?"
    },
    {
        "query_en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question_en": "Find the states where both owners and professionals live.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "question_pl": "Znajdź stany, w których mieszkają zarówno właściciele, jak i profesjonaliści."
    },
    {
        "query_en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question_en": "What is the average age of the dogs who have gone through any treatments?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question_pl": "Jaki jest średni wiek psów, które przeszły jakiekolwiek leczenie?"
    },
    {
        "query_en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question_en": "Find the average age of the dogs who went through treatments.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "question_pl": "Znajdź średni wiek psów, które przeszły leczenie."
    },
    {
        "query_en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "question_en": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "question_pl": "Którzy specjaliści mieszkają w stanie Indiana lub przeprowadzili więcej niż 2 zabiegi? Wymień jego imię, nazwisko i telefon komórkowy."
    },
    {
        "query_en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "question_en": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "question_pl": "Znajdź identyfikator, nazwisko i telefon komórkowy specjalistów, którzy mieszkają w stanie Indiana lub wykonali więcej niż dwa zabiegi."
    },
    {
        "query_en": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "question_en": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
        "db_id": "dog_kennels",
        "query_pl": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "question_pl": "Które psy nie kosztowały swojego właściciela więcej niż 1000 za leczenie? Wymień imiona psów."
    },
    {
        "query_en": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "question_en": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
        "db_id": "dog_kennels",
        "query_pl": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "question_pl": "Jak nazywają się psy, na których leczenie właściciel nie wydał więcej niż 1000 zł?"
    },
    {
        "query_en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "question_en": "Which first names are used for professionals or owners but are not used as dog names?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "question_pl": "Które imiona są używane przez profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów?"
    },
    {
        "query_en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "question_en": "Find the first names that are used for professionals or owners but are not used as dog names.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "question_pl": "Znajdź imiona, które są używane dla profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów."
    },
    {
        "query_en": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_en": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_pl": "Który specjalista nie wykonywał żadnych zabiegów na psach? Podaj identyfikator, rolę i adres e-mail specjalisty."
    },
    {
        "query_en": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_en": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_pl": "Podaj mi identyfikator, rolę i adres e-mail specjalistów, którzy nie wykonywali żadnych zabiegów na psach."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which owner owns the most dogs? List the owner id, first name and last name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który właściciel ma najwięcej psów? Wymień identyfikator właściciela, imię i nazwisko."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Return the owner id, first name and last name of the owner who has the most dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Zwróć identyfikator, imię i nazwisko właściciela, który ma najwięcej psów."
    },
    {
        "query_en": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_en": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_pl": "Którzy specjaliści wykonali co najmniej dwa zabiegi? Wymień identyfikator, rolę i imię specjalisty."
    },
    {
        "query_en": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_en": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_pl": "Jaki jest identyfikator, rola i imię specjalistów, którzy wykonali dwa lub więcej zabiegów?"
    },
    {
        "query_en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "What is the name of the breed with the most dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jak nazywa się rasa z największą liczbą psów?"
    },
    {
        "query_en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which breed do the most dogs have? Give me the breed name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Jakiej rasy jest najwięcej psów? Podaj nazwę rasy."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Który właściciel zapłacił za najwięcej zabiegów na swoich psach? Wymień identyfikator i nazwisko właściciela."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_en": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "question_pl": "Podaj mi identyfikator i nazwisko właściciela, który wydał najwięcej na leczenie swoich psów."
    },
    {
        "query_en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "question_en": "What is the description of the treatment type that costs the least money in total?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "question_pl": "Jaki jest opis rodzaju leczenia, które kosztuje łącznie najmniej pieniędzy?"
    },
    {
        "query_en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "question_en": "Give me the description of the treatment type whose total cost is the lowest.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "question_pl": "Podaj opis rodzaju leczenia, którego całkowity koszt jest najniższy."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "question_en": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "question_pl": "Który właściciel zapłacił łącznie największą kwotę za swoje psy? Pokaż identyfikator i kod pocztowy właściciela."
    },
    {
        "query_en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "question_en": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "question_pl": "Znajdź identyfikator i kod pocztowy właściciela, który wydał łącznie najwięcej pieniędzy na swoje psy."
    },
    {
        "query_en": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_en": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_pl": "Którzy specjaliści wykonali co najmniej dwa rodzaje zabiegów? Wymień identyfikator i telefon komórkowy specjalisty."
    },
    {
        "query_en": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_en": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "question_pl": "Znajdź identyfikator i telefon komórkowy specjalistów, którzy wykonują dwa lub więcej rodzajów zabiegów."
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "question_en": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "question_pl": "Jakie są imiona i nazwiska specjalistów, którzy przeprowadzili leczenie przy kosztach poniżej średniej?"
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "question_en": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "question_pl": "Którzy specjaliści przeprowadzili zabieg kosztujący mniej niż średnia? Podaj ich imiona i nazwiska."
    },
    {
        "query_en": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_en": "List the date of each treatment, together with the first name of the professional who operated it.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_pl": "Wymień datę każdego zabiegu wraz z imieniem i nazwiskiem specjalisty, który go przeprowadził."
    },
    {
        "query_en": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_en": "What are the date and the operating professional's first name of each treatment?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "question_pl": "Jaka jest data i imię specjalisty wykonującego każdy zabieg?"
    },
    {
        "query_en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "question_en": "List the cost of each treatment and the corresponding treatment type description.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "question_pl": "Wymień koszt każdego zabiegu i odpowiadający mu opis rodzaju zabiegu."
    },
    {
        "query_en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "question_en": "What are the cost and treatment type description of each treatment?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "question_pl": "Jaki jest koszt i opis każdego rodzaju leczenia?"
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_en": "List each owner's first name, last name, and the size of his for her dog.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_pl": "Wymień imię, nazwisko i wielkość psa każdego właściciela."
    },
    {
        "query_en": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_en": "What are each owner's first name, last name, and the size of their dog?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_pl": "Jakie jest imię, nazwisko i wielkość psa każdego z właścicieli?"
    },
    {
        "query_en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_en": "List pairs of the owner's first name and the dogs's name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_pl": "Wymień pary imion właściciela i psów."
    },
    {
        "query_en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_en": "What are each owner's first name and their dogs's name?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "question_pl": "Jakie jest imię każdego właściciela i imię jego psa?"
    },
    {
        "query_en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "question_en": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "question_pl": "Wymień nazwy psów najrzadszych ras i daty ich leczenia."
    },
    {
        "query_en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "question_en": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "question_pl": "Które psy należą do najrzadszych ras? Podaj ich imiona i daty leczenia."
    },
    {
        "query_en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "question_en": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"Wirginia\"",
        "question_pl": "Które psy są własnością kogoś, kto mieszka w Wirginii? Wymień imię właściciela i imię psa."
    },
    {
        "query_en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "question_en": "Find the first names of owners living in Virginia and the names of dogs they own.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"Wirginia\"",
        "question_pl": "Znajdź imiona właścicieli mieszkających w Wirginii i imiona psów, które posiadają."
    },
    {
        "query_en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "question_en": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "question_pl": "Jaka jest data przybycia i data odejścia psów, które przeszły leczenie?"
    },
    {
        "query_en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "question_en": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "question_pl": "Znajdź datę przybycia i datę odejścia psów, które zostały poddane leczeniu."
    },
    {
        "query_en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "question_en": "List the last name of the owner owning the youngest dog.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "question_pl": "Podaj nazwisko właściciela najmłodszego psa."
    },
    {
        "query_en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "question_en": "Who owns the youngest dog? Give me his or her last name.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "question_pl": "Kto jest właścicielem najmłodszego psa? Podaj jego lub jej nazwisko."
    },
    {
        "query_en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "question_en": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT email_address FROM Professionals WHERE state  =  \"Hawaje\" OR state  =  'Wisconsin'",
        "question_pl": "Wymień adresy e-mail specjalistów, którzy mieszkają na Hawajach lub w stanie Wisconsin."
    },
    {
        "query_en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "question_en": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT email_address FROM Professionals WHERE state  =  \"Hawaje\" OR state  =  'Wisconsin'",
        "question_pl": "Jakie są e-maile profesjonalistów mieszkających na Hawajach lub w stanie Wisconsin?"
    },
    {
        "query_en": "SELECT date_arrived ,  date_departed FROM Dogs",
        "question_en": "What are the arriving date and the departing date of all the dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT date_arrived ,  date_departed FROM Dogs",
        "question_pl": "Jaka jest data przyjazdu i wyjazdu wszystkich psów?"
    },
    {
        "query_en": "SELECT date_arrived ,  date_departed FROM Dogs",
        "question_en": "List the arrival date and the departure date for all the dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT date_arrived ,  date_departed FROM Dogs",
        "question_pl": "Podaj datę przyjazdu i wyjazdu wszystkich psów."
    },
    {
        "query_en": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "question_en": "How many dogs went through any treatments?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "question_pl": "Ile psów przeszło jakiekolwiek leczenie?"
    },
    {
        "query_en": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "question_en": "Count the number of dogs that went through a treatment.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "question_pl": "Policz liczbę psów, które przeszły leczenie."
    },
    {
        "query_en": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "question_en": "How many professionals have performed any treatment to dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "question_pl": "Ilu specjalistów wykonywało jakiekolwiek zabiegi na psach?"
    },
    {
        "query_en": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "question_en": "Find the number of professionals who have ever treated dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "question_pl": "Znajdź liczbę specjalistów, którzy kiedykolwiek leczyli psy."
    },
    {
        "query_en": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "question_en": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "question_pl": "Którzy specjaliści mieszkają w mieście zawierającym podciąg \"West\"? Wymień jego/jej stanowisko, ulicę, miasto i stan."
    },
    {
        "query_en": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "question_en": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "question_pl": "Znajdź rolę, ulicę, miasto i stan specjalistów mieszkających w mieście zawierającym podciąg \"West\"."
    },
    {
        "query_en": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "question_en": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "question_pl": "Którzy właściciele mieszkają w stanie, którego nazwa zawiera podciąg \"North\"? Wymień jego imię, nazwisko i adres e-mail."
    },
    {
        "query_en": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "question_en": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "question_pl": "Zwróć imię, nazwisko i adres e-mail właścicieli mieszkających w stanie, którego nazwa zawiera podciąg \"North\"."
    },
    {
        "query_en": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "question_en": "How many dogs have an age below the average?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "question_pl": "Ile psów ma wiek poniżej średniej?"
    },
    {
        "query_en": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "question_en": "Count the number of dogs of an age below the average.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "question_pl": "Policz liczbę psów w wieku poniżej średniej."
    },
    {
        "query_en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "question_en": "How much does the most recent treatment cost?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "question_pl": "Ile kosztuje ostatnie leczenie?"
    },
    {
        "query_en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "question_en": "Show me the cost of the most recently performed treatment.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "question_pl": "Pokaż koszt ostatnio wykonanego zabiegu."
    },
    {
        "query_en": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question_en": "How many dogs have not gone through any treatment?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "question_pl": "Ile psów nie przeszło żadnego leczenia?"
    },
    {
        "query_en": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
        "question_en": "Tell me the number of dogs that have not received any treatment .",
        "db_id": "dog_kennels",
        "query_pl": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
        "question_pl": "Podaj liczbę psów, które nie zostały poddane żadnemu leczeniu."
    },
    {
        "query_en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question_en": "How many owners temporarily do not have any dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question_pl": "Ilu właścicieli tymczasowo nie posiada psów?"
    },
    {
        "query_en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question_en": "Find the number of owners who do not own any dogs at this moment.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "question_pl": "Znajdź liczbę właścicieli, którzy nie posiadają obecnie żadnych psów."
    },
    {
        "query_en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question_en": "How many professionals did not operate any treatment on dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question_pl": "Ilu specjalistów nie przeprowadziło żadnego zabiegu na psach?"
    },
    {
        "query_en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question_en": "Find the number of professionals who have not treated any dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "question_pl": "Znajdź liczbę specjalistów, którzy nie leczyli żadnego psa."
    },
    {
        "query_en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "question_en": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "question_pl": "Wymień imię, wiek i wagę psów, które zostały porzucone? 1 oznacza tak, a 0 oznacza nie."
    },
    {
        "query_en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "question_en": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "question_pl": "Jakie są imiona, wiek i waga psów, które zostały porzucone? Zwróć uwagę, że 1 oznacza \"tak\", a 0 oznacza \"nie\" w tabelach."
    },
    {
        "query_en": "SELECT avg(age) FROM Dogs",
        "question_en": "What is the average age of all the dogs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT avg(age) FROM Dogs",
        "question_pl": "Jaki jest średni wiek wszystkich psów?"
    },
    {
        "query_en": "SELECT avg(age) FROM Dogs",
        "question_en": "Compute the average age of all the dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT avg(age) FROM Dogs",
        "question_pl": "Oblicz średni wiek wszystkich psów."
    },
    {
        "query_en": "SELECT max(age) FROM Dogs",
        "question_en": "What is the age of the oldest dog?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT max(age) FROM Dogs",
        "question_pl": "Jaki jest wiek najstarszego psa?"
    },
    {
        "query_en": "SELECT max(age) FROM Dogs",
        "question_en": "Tell me the age of the oldest dog.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT max(age) FROM Dogs",
        "question_pl": "Podaj wiek najstarszego psa."
    },
    {
        "query_en": "SELECT charge_type ,  charge_amount FROM Charges",
        "question_en": "How much does each charge type costs? List both charge type and amount.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT charge_type ,  charge_amount FROM Charges",
        "question_pl": "Ile kosztuje każdy rodzaj opłaty? Wymień zarówno rodzaj opłaty, jak i kwotę."
    },
    {
        "query_en": "SELECT charge_type ,  charge_amount FROM Charges",
        "question_en": "List each charge type and its amount.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT charge_type ,  charge_amount FROM Charges",
        "question_pl": "Wymień każdy rodzaj opłaty i jej kwotę."
    },
    {
        "query_en": "SELECT max(charge_amount) FROM Charges",
        "question_en": "How much does the most expensive charge type costs?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT max(charge_amount) FROM Charges",
        "question_pl": "Ile kosztuje najdroższy typ doładowania?"
    },
    {
        "query_en": "SELECT max(charge_amount) FROM Charges",
        "question_en": "What is the charge amount of the most expensive charge type?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT max(charge_amount) FROM Charges",
        "question_pl": "Jaka jest kwota doładowania najdroższego typu doładowania?"
    },
    {
        "query_en": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "question_en": "List the email, cell phone and home phone of all the professionals.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "question_pl": "Podaj adres e-mail, telefon komórkowy i telefon domowy wszystkich specjalistów."
    },
    {
        "query_en": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "question_en": "What are the email, cell phone and home phone of each professional?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "question_pl": "Jaki jest adres e-mail, telefon komórkowy i telefon domowy każdego specjalisty?"
    },
    {
        "query_en": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "question_en": "What are all the possible breed type and size type combinations?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "question_pl": "Jakie są wszystkie możliwe kombinacje typu rasy i rozmiaru?"
    },
    {
        "query_en": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "question_en": "Find the distinct breed type and size type combinations for dogs.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "question_pl": "Znajdź różne kombinacje typu rasy i rozmiaru dla psów."
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "question_en": "List the first name of all the professionals along with the description of the treatment they have done.",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "question_pl": "Wymień imiona i nazwiska wszystkich specjalistów wraz z opisem przeprowadzonego przez nich leczenia."
    },
    {
        "query_en": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "question_en": "What are each professional's first name and description of the treatment they have performed?",
        "db_id": "dog_kennels",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "question_pl": "Podaj imię i nazwisko każdego specjalisty oraz opis zabiegu, który wykonał?"
    },
    {
        "query_en": "SELECT count(*) FROM singer",
        "question_en": "How many singers are there?",
        "db_id": "singer",
        "query_pl": "SELECT count(*) FROM singer",
        "question_pl": "Ilu jest piosenkarzy?"
    },
    {
        "query_en": "SELECT count(*) FROM singer",
        "question_en": "What is the count of singers?",
        "db_id": "singer",
        "query_pl": "SELECT count(*) FROM singer",
        "question_pl": "Jaka jest liczba piosenkarzy?"
    },
    {
        "query_en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question_en": "List the name of singers in ascending order of net worth.",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question_pl": "Wymień nazwiska piosenkarzy w kolejności rosnącej według wartości netto."
    },
    {
        "query_en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question_en": "What are the names of singers ordered by ascending net worth?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "question_pl": "Jakie są nazwiska piosenkarzy uporządkowane według rosnącej wartości netto?"
    },
    {
        "query_en": "SELECT Birth_Year ,  Citizenship FROM singer",
        "question_en": "What are the birth year and citizenship of singers?",
        "db_id": "singer",
        "query_pl": "SELECT Birth_Year ,  Citizenship FROM singer",
        "question_pl": "Jaki jest rok urodzenia i obywatelstwo piosenkarzy?"
    },
    {
        "query_en": "SELECT Birth_Year ,  Citizenship FROM singer",
        "question_en": "What are the birth years and citizenships of the singers?",
        "db_id": "singer",
        "query_pl": "SELECT Birth_Year ,  Citizenship FROM singer",
        "question_pl": "Jakie są lata urodzenia i obywatelstwa piosenkarzy?"
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "question_en": "List the name of singers whose citizenship is not \"France\".",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\"",
        "question_pl": "Wymień nazwiska piosenkarzy, których obywatelstwo nie brzmi \"Francja\"."
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "question_en": "What are the names of the singers who are not French citizens?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\"",
        "question_pl": "Jak nazywają się piosenkarze, którzy nie są obywatelami Francji?"
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "question_en": "Show the name of singers whose birth year is either 1948 or 1949?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "question_pl": "Pokaż nazwiska piosenkarzy, których rok urodzenia to 1948 lub 1949?"
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "question_en": "What are the names of the singers whose birth years are either 1948 or 1949?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "question_pl": "Jak nazywają się piosenkarze, których rok urodzenia to 1948 lub 1949?"
    },
    {
        "query_en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "question_en": "What is the name of the singer with the largest net worth?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "question_pl": "Jak nazywa się piosenkarz o największej wartości netto?"
    },
    {
        "query_en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "question_en": "What is the name of the singer who is worth the most?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "question_pl": "Jak nazywa się piosenkarz, który jest wart najwięcej?"
    },
    {
        "query_en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "question_en": "Show different citizenship of singers and the number of singers of each citizenship.",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "question_pl": "Pokaż różne obywatelstwa piosenkarzy i liczbę piosenkarzy każdego obywatelstwa."
    },
    {
        "query_en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "question_en": "For each citizenship, how many singers are from that country?",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "question_pl": "Dla każdego obywatelstwa, ilu piosenkarzy pochodzi z tego kraju?"
    },
    {
        "query_en": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "question_en": "Please show the most common citizenship of singers.",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "question_pl": "Wskaż najpopularniejsze obywatelstwo piosenkarzy."
    },
    {
        "query_en": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
        "question_en": "What is the most common singer citizenship ?",
        "db_id": "singer",
        "query_pl": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
        "question_pl": "Jakie jest najpopularniejsze obywatelstwo piosenkarza?"
    },
    {
        "query_en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "question_en": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "question_pl": "Pokaż różne obywatelstwa i maksymalną wartość netto piosenkarzy każdego obywatelstwa."
    },
    {
        "query_en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "question_en": "For each citizenship, what is the maximum net worth?",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "question_pl": "Jaka jest maksymalna wartość netto dla każdego obywatelstwa?"
    },
    {
        "query_en": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "question_en": "Show titles of songs and names of singers.",
        "db_id": "singer",
        "query_pl": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "question_pl": "Pokaż tytuły piosenek i nazwiska piosenkarzy."
    },
    {
        "query_en": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "question_en": "What are the song titles and singer names?",
        "db_id": "singer",
        "query_pl": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "question_pl": "Jakie są tytuły piosenek i imiona wokalistów?"
    },
    {
        "query_en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "question_en": "Show distinct names of singers that have songs with sales more than 300000.",
        "db_id": "singer",
        "query_pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "question_pl": "Pokaż różne nazwiska piosenkarzy, którzy mają utwory ze sprzedażą powyżej 300000."
    },
    {
        "query_en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "question_en": "what are the different names of the singers that have sales more than 300000?",
        "db_id": "singer",
        "query_pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "question_pl": "Jakie są różne nazwiska piosenkarzy, których sprzedaż przekroczyła 300000?"
    },
    {
        "query_en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "question_en": "Show the names of singers that have more than one song.",
        "db_id": "singer",
        "query_pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "question_pl": "Pokaż nazwiska piosenkarzy, którzy mają więcej niż jedną piosenkę."
    },
    {
        "query_en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "question_en": "What are the names of the singers that have more than one songs?",
        "db_id": "singer",
        "query_pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "question_pl": "Jak nazywają się piosenkarze, którzy mają więcej niż jedną piosenkę?"
    },
    {
        "query_en": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "question_en": "Show the names of singers and the total sales of their songs.",
        "db_id": "singer",
        "query_pl": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "question_pl": "Pokaż nazwiska piosenkarzy i łączną sprzedaż ich utworów."
    },
    {
        "query_en": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "question_en": "For each singer name, what is the total sales for their songs?",
        "db_id": "singer",
        "query_pl": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "question_pl": "Jaka jest łączna sprzedaż utworów każdego z wymienionych piosenkarzy?"
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "question_en": "List the name of singers that do not have any song.",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "question_pl": "Wymień nazwiska piosenkarzy, którzy nie mają żadnej piosenki."
    },
    {
        "query_en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "question_en": "What is the sname of every sing that does not have any song?",
        "db_id": "singer",
        "query_pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "question_pl": "Jak nazywa się każda piosenka, która nie ma żadnego utworu?"
    },
    {
        "query_en": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "question_en": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "question_pl": "Pokaż obywatelstwo wspólne dla piosenkarzy urodzonych przed 1945 r. i po 1955 r."
    },
    {
        "query_en": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "question_en": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "db_id": "singer",
        "query_pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "question_pl": "Jakie obywatelstwo posiadają piosenkarze urodzeni przed 1945 i po 1955 rokiem?"
    },
    {
        "query_en": "SELECT count(*) FROM Other_Available_Features",
        "question_en": "How many available features are there in total?",
        "db_id": "real_estate_properties",
        "query_pl": "SELECT count(*) FROM Other_Available_Features",
        "question_pl": "Ile jest łącznie dostępnych funkcji?"
    },
    {
        "query_en": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "question_en": "What is the feature type name of feature AirCon?",
        "db_id": "real_estate_properties",
        "query_pl": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "question_pl": "Jaka jest nazwa typu funkcji AirCon?"
    },
    {
        "query_en": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "question_en": "Show the property type descriptions of properties belonging to that code.",
        "db_id": "real_estate_properties",
        "query_pl": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "question_pl": "Pokaż opisy typów właściwości należących do tego kodu."
    },
    {
        "query_en": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
        "question_en": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "db_id": "real_estate_properties",
        "query_pl": "SELECT property_name FROM Properties WHERE property_type_code  =  \"Dom\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartament\" AND room_count  >  1",
        "question_pl": "Jak nazywają się nieruchomości, które są domami lub mieszkaniami z więcej niż 1 pokojem?"
    }
]