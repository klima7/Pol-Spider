[
    {
        "db_id": "college_2",
        "question": "Find out the average salary of professors?",
        "question_pl": "Sprawdź średnie wynagrodzenie profesorów?",
        "query": "SELECT avg(salary) FROM instructor",
        "query_pl": "SELECT avg(salary) FROM instructor"
    },
    {
        "db_id": "train_station",
        "question": "What is the station ID for London Waterloo",
        "question_pl": "Jaki jest identyfikator stacji London Waterloo?",
        "query": "SELECT station_id from station where name = \"London Waterloo\" ",
        "query_pl": "SELECT station_id from station where name = \"Londyn Waterloo\" "
    },
    {
        "db_id": "performance_attendance",
        "question": "When did the violin players perform?",
        "question_pl": "Kiedy wystąpili skrzypkowie?",
        "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"",
        "query_pl": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Skrzypce\""
    },
    {
        "db_id": "cinema",
        "question": "what is the films title that direct by Bill Schreiner?",
        "question_pl": "Jaki tytuł nosi film wyreżyserowany przez Billa Schreinera?",
        "query": "select title from film where directed_by = \"Bill Schreiner\" ",
        "query_pl": "select title from film where directed_by = \"Bill Schreiner\" "
    },
    {
        "db_id": "ship_1",
        "question": "Show me the captain ranks",
        "question_pl": "Pokaż mi stopnie kapitańskie",
        "query": "SELECT rank FROM captain ",
        "query_pl": "SELECT rank FROM captain "
    },
    {
        "db_id": "machine_repair",
        "question": "Who are the technicians from team \"CLE\" and \"CWS\"?",
        "question_pl": "Kim są technicy z drużyn \"CLE\" i \"CWS\"?",
        "query": "select Name from technician where \tTeam='CLE' or team='CWS'",
        "query_pl": "select Name from technician where \tTeam=\"CLE\" or team=\"CWS\""
    },
    {
        "db_id": "student_1",
        "question": "Can you list the class room associated with the name Loria Ondersma in the teachers table?",
        "question_pl": "Czy możesz wymienić salę lekcyjną powiązaną z nazwiskiem Loria Ondersma w tabeli nauczycieli?",
        "query": "SELECT classroom from teachers where lastname = \"ONDERSMA\"",
        "query_pl": "SELECT classroom from teachers where lastname = \"ONDERSMA\""
    },
    {
        "db_id": "chinook_1",
        "question": "What are the duration's of the longest and shortest track in milliseconds.",
        "question_pl": "Jaki jest czas trwania najdłuższej i najkrótszej ścieżki w milisekundach?",
        "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",
        "query_pl": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"
    },
    {
        "db_id": "music_1",
        "question": "Provide all the details of the song Tumi robe nirobe?",
        "question_pl": "Podaj wszystkie szczegóły piosenki Tumi robe nirobe?",
        "query": "select * from song where song_name = \"Tumi robe nirobe\"",
        "query_pl": "select * from song where song_name = \"Szlafrok Tumi nirobe\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "Please list each gender code with its corresponding amount of guests and sort it in descending order by that count?",
        "question_pl": "Wymień każdy kod płci z odpowiadającą mu liczbą gości i posortuj je malejąco według tej liczby?",
        "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What is the total grant amount of the organizations described as research?",
        "question_pl": "Jaka jest łączna kwota dotacji dla organizacji opisanych jako badawcze?",
        "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'",
        "query_pl": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  \"Badania\""
    },
    {
        "db_id": "film_rank",
        "question": "Hey there!  How're you!  Can you provide me with a list of all of the different movie studios?",
        "question_pl": "Cześć!  Jak się masz!  Czy możesz podać mi listę wszystkich różnych studiów filmowych?",
        "query": "SELECT distinct Studio FROM film ",
        "query_pl": "SELECT distinct Studio FROM film "
    },
    {
        "db_id": "department_store",
        "question": "how many order items there",
        "question_pl": "ile jest pozycji zamówienia",
        "query": "SELECT count(*) FROM order_items ",
        "query_pl": "SELECT count(*) FROM order_items "
    },
    {
        "db_id": "film_rank",
        "question": "What is the average gross amount of money made in dollars?",
        "question_pl": "Jaka jest średnia kwota brutto zarobionych pieniędzy w dolarach?",
        "query": "SELECT avg(gross_in_dollar) FROM film ",
        "query_pl": "SELECT avg(gross_in_dollar) FROM film "
    },
    {
        "db_id": "flight_1",
        "question": "Can you show me the origins, the destinations and the flight numbers?",
        "question_pl": "Czy możesz pokazać mi początki, miejsca docelowe i numery lotów?",
        "query": "SELECT origin, destination, flno FROM Flight GROUP BY destination",
        "query_pl": "SELECT origin, destination, flno FROM Flight GROUP BY destination"
    },
    {
        "db_id": "dorm_1",
        "question": "Can you provide me with the names of the dorms that have both TV Lounge and Study Room as amenities?",
        "question_pl": "Czy możesz podać mi nazwy akademików, które mają zarówno salon telewizyjny, jak i pokój do nauki jako udogodnienia?",
        "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'",
        "query_pl": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  \"Salon telewizyjny\" INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  \"Pokój do nauki\""
    },
    {
        "db_id": "hr_1",
        "question": "list all job ids ",
        "question_pl": "wypisz wszystkie identyfikatory zadań",
        "query": "select distinct job_id from employees",
        "query_pl": "select distinct job_id from employees"
    },
    {
        "db_id": "department_store",
        "question": "What are id and name of the products whose price is lower than 600?",
        "question_pl": "Jaki jest identyfikator i nazwa produktów, których cena jest niższa niż 600?",
        "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 ",
        "query_pl": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 "
    },
    {
        "db_id": "manufactory_1",
        "question": "What is the average price of all products? ",
        "question_pl": "Jaka jest średnia cena wszystkich produktów?",
        "query": "SELECT avg(price) FROM products ",
        "query_pl": "SELECT avg(price) FROM products "
    },
    {
        "db_id": "dorm_1",
        "question": "What are the First names of students living in smith hall?",
        "question_pl": "Jakie są pierwsze imiona uczniów mieszkających w Smith Hall?",
        "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'",
        "query_pl": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  \"Smith Hall\""
    },
    {
        "db_id": "movie_1",
        "question": "What is the lowest and highest rating star?",
        "question_pl": "Jaka jest najniższa i najwyższa gwiazdka oceny?",
        "query": "SELECT max(stars) ,  min(stars) FROM Rating",
        "query_pl": "SELECT max(stars) ,  min(stars) FROM Rating"
    },
    {
        "db_id": "wrestler",
        "question": "what are the elimination time of wrestlers",
        "question_pl": "Jakie są czasy eliminacji wrestlerów",
        "query": "SELECT Time FROM elimination ",
        "query_pl": "SELECT Time FROM elimination "
    },
    {
        "db_id": "soccer_2",
        "question": "List the state and enrollment of all the colleges where any students got accepted in the tryout decision.",
        "question_pl": "Wymień stan i zapisy na wszystkie uczelnie, na których studenci zostali przyjęci w ramach decyzji o wypróbowaniu.",
        "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
        "query_pl": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  \"tak\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "How many distinct characteristic names does the product \"cumin\" have?",
        "question_pl": "Ile różnych charakterystycznych nazw ma produkt \"kminek\"?",
        "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
        "query_pl": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"kminek\""
    },
    {
        "db_id": "club_1",
        "question": "what is the location of Bootup Baltimore",
        "question_pl": "Jaka jest lokalizacja Bootup Baltimore?",
        "query": "select \tClubLocation from Club where \tClubName = 'Bootup Baltimore'",
        "query_pl": "select \tClubLocation from Club where \tClubName = \"Bootup Baltimore\""
    },
    {
        "db_id": "network_2",
        "question": "How long is the longest relationship?",
        "question_pl": "Jak długi jest najdłuższy związek?",
        "query": "SELECT max(year) FROM PersonFriend ",
        "query_pl": "SELECT max(year) FROM PersonFriend "
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name",
        "question_pl": "Która nazwa głowy ma podciąg \"Ha\"? Wymień identyfikator i nazwę",
        "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "query_pl": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Hello!  Can you tell me which role code has the largest number of employees associated with it?",
        "question_pl": "Witaj!  Czy możesz mi powiedzieć, który kod roli ma największą liczbę powiązanych z nim pracowników?",
        "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "small_bank_1",
        "question": "What is the savings balance for Wang?",
        "question_pl": "Jakie jest saldo oszczędności dla Wanga?",
        "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid where T1.name = \"Wang\"",
        "query_pl": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid where T1.name = \"Wang\""
    },
    {
        "db_id": "party_host",
        "question": "Which nations have hosts older than 45?",
        "question_pl": "Które kraje mają gospodarzy w wieku powyżej 45 lat?",
        "query": "SELECT distinct Nationality FROM HOST WHERE Age  >  45 ",
        "query_pl": "SELECT distinct Nationality FROM HOST WHERE Age  >  45 "
    },
    {
        "db_id": "hr_1",
        "question": "Which departments get a commission percentage?",
        "question_pl": "Które działy otrzymują procent prowizji?",
        "query": "SELECT *  FROM employees WHERE commission_pct != \"null\"",
        "query_pl": "SELECT *  FROM employees WHERE commission_pct != \"null\""
    },
    {
        "db_id": "driving_school",
        "question": "What is the total number of staff members?",
        "question_pl": "Jaka jest całkowita liczba pracowników?",
        "query": "SELECT count(*) from staff",
        "query_pl": "SELECT count(*) from staff"
    },
    {
        "db_id": "workshop_paper",
        "question": "list the authors have submissions",
        "question_pl": "lista autorów ma zgłoszenia",
        "query": "SELECT Author FROM submission",
        "query_pl": "SELECT Author FROM submission"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "How many characteristics does the product named \"sesame\" have?",
        "question_pl": "Ile cech ma produkt o nazwie \"sezam\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "wine_1",
        "question": "Show the country of appelations Alexander Valley?",
        "question_pl": "Pokaż kraj apelacji Alexander Valley?",
        "query": "SELECT county FROM APPELLATIONS WHERE appelation = 'Alexander Valley'",
        "query_pl": "SELECT county FROM APPELLATIONS WHERE appelation = \"Alexander Valley\""
    },
    {
        "db_id": "gas_company",
        "question": "Please show me the headquarters with at least two companies in the banking industry?",
        "question_pl": "Wskaż mi proszę siedzibę przynajmniej dwóch firm z branży bankowej?",
        "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2",
        "query_pl": "SELECT headquarters FROM company WHERE main_industry  =  \"Bankowość\" GROUP BY headquarters HAVING count(*)  >=  2"
    },
    {
        "db_id": "tracking_orders",
        "question": "How many orders are there?",
        "question_pl": "Ile jest zamówień?",
        "query": "SELECT count(*) FROM orders",
        "query_pl": "SELECT count(*) FROM orders"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is the name of the customer who has made the minimum amount of payment in one claim?",
        "question_pl": "Jak nazywa się klient, który dokonał minimalnej kwoty płatności w jednym wniosku?",
        "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)",
        "query_pl": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
    },
    {
        "db_id": "cinema",
        "question": "How many cinemas are there in total?",
        "question_pl": "Ile jest w sumie kin?",
        "query": "SELECT count(*) from cinema",
        "query_pl": "SELECT count(*) from cinema"
    },
    {
        "db_id": "local_govt_mdm",
        "question": "How many master customer ID numbers are there?",
        "question_pl": "Ile jest głównych numerów identyfikacyjnych klienta?",
        "query": "SELECT count(master_customer_id) FROM Customer_Master_Index ",
        "query_pl": "SELECT count(master_customer_id) FROM Customer_Master_Index "
    },
    {
        "db_id": "store_product",
        "question": "Could you please find the products with the max page size as \"A4\"?",
        "question_pl": "Czy możesz znaleźć produkty z maksymalnym rozmiarem strony \"A4\"?",
        "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\"",
        "query_pl": "SELECT product FROM product WHERE max_page_size  =  \"A4\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "What are all of the lots?",
        "question_pl": "Jakie są wszystkie działki?",
        "query": "select * from Lots",
        "query_pl": "select * from Lots"
    },
    {
        "db_id": "election",
        "question": "Who are the delegates on the Appropriations committee?",
        "question_pl": "Kim są delegaci w komisji ds. środków finansowych?",
        "query": "select Delegate from election where Committee='Appropriations'",
        "query_pl": "select Delegate from election where Committee=\"Środki\""
    },
    {
        "db_id": "driving_school",
        "question": "Which city has most number of customers?",
        "question_pl": "Które miasto ma najwięcej klientów?",
        "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "flight_1",
        "question": "What are the names and distances of aircraft that have more than 5000 distance?",
        "question_pl": "Jakie są nazwy i odległości samolotów, które mają ponad 5000 dystansów?",
        "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 ",
        "query_pl": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 "
    },
    {
        "db_id": "soccer_2",
        "question": "Which colleges students played in the try out in striker position?",
        "question_pl": "Studenci których uczelni grali w testach na pozycji napastnika?",
        "query": "select cName from Tryout where pPos = 'striker'",
        "query_pl": "select cName from Tryout where pPos = \"napastnik\""
    },
    {
        "db_id": "phone_market",
        "question": "How many different markets are there?",
        "question_pl": "Ile jest różnych rynków?",
        "query": "select count(distinct market_id) from phone_market",
        "query_pl": "select count(distinct market_id) from phone_market"
    },
    {
        "db_id": "manufactory_1",
        "question": "How many companies are there? ",
        "question_pl": "Ile jest takich firm?",
        "query": "select count(*) from Manufacturers",
        "query_pl": "select count(*) from Manufacturers"
    },
    {
        "db_id": "school_finance",
        "question": "Hello, can you provide me with the names of the donors?",
        "question_pl": "Witaj, czy możesz podać mi nazwiska darczyńców?",
        "query": "SELECT donator_name FROM endowment ",
        "query_pl": "SELECT donator_name FROM endowment "
    },
    {
        "db_id": "city_record",
        "question": "What is the venue of the competition \"1994 FIFA World cup qualification\" hosted by \"Hangzou\"?",
        "question_pl": "Jakie jest miejsce zawodów \"Kwalifikacje do Mistrzostw Świata FIFA 1994\", których gospodarzem jest \"Hangzou\"?",
        "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Hangzhou ( Zhejiang )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
        "query_pl": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Hangzhou ( Zhejiang )\" AND T3.competition = \"kwalifikacje do Mistrzostw Świata FIFA 1994\""
    },
    {
        "db_id": "protein_institute",
        "question": "Hello!  Can you provide me with a list of all building names?",
        "question_pl": "Witaj!  Czy możesz podać mi listę wszystkich nazw budynków?",
        "query": "SELECT name FROM building",
        "query_pl": "SELECT name FROM building"
    },
    {
        "db_id": "college_1",
        "question": "Hello, what courses are currently being taught?",
        "question_pl": "Witaj, jakie kursy są obecnie prowadzone?",
        "query": "SELECT * from course",
        "query_pl": "SELECT * from course"
    },
    {
        "db_id": "department_store",
        "question": "List the name of all suppliers in alphabetical order of their addresses.",
        "question_pl": "Wymień nazwy wszystkich dostawców w kolejności alfabetycznej ich adresów.",
        "query": "SELECT T1.supplier_name FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details",
        "query_pl": "SELECT T1.supplier_name FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "can you show me a list of active from date?",
        "question_pl": "Czy możesz pokazać mi listę aktywnych od daty?",
        "query": "select active_from_date from customer_contact_channels",
        "query_pl": "select active_from_date from customer_contact_channels"
    },
    {
        "db_id": "bike_1",
        "question": "What are the dock count of San Jose Diridon Caltrain Station?",
        "question_pl": "Jaka jest liczba doków na stacji San Jose Diridon Caltrain?",
        "query": "SELECT dock_count FROM station WHERE name = \"San Jose Diridon Caltrain Station\"",
        "query_pl": "SELECT dock_count FROM station WHERE name = \"Stacja San Jose Diridon Caltrain\""
    },
    {
        "db_id": "culture_company",
        "question": "Hello!  Can you show a list of all publishers who did not publish any books in 1989?",
        "question_pl": "Witaj!  Czy możesz pokazać listę wszystkich wydawców, którzy nie wydali żadnych książek w 1989 roku?",
        "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989",
        "query_pl": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989"
    },
    {
        "db_id": "club_1",
        "question": "How many clubs do you have?",
        "question_pl": "Ile masz klubów?",
        "query": "SELECT count(*) from club",
        "query_pl": "SELECT count(*) from club"
    },
    {
        "db_id": "store_product",
        "question": "what is the dimenson of Plustek MobileOffice D28 Corporate?",
        "question_pl": "Jaki jest dimenson Plustek MobileOffice D28 Corporate?",
        "query": "SELECT dimensions FROM product WHERE product = \"Plustek MobileOffice D28 Corporate\"",
        "query_pl": "SELECT dimensions FROM product WHERE product = \"Plustek MobileOffice D28 Corporate\""
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the ids and names of the medicine that can interact with two or more enzymes? ",
        "question_pl": "Jakie są identyfikatory i nazwy leków, które mogą wchodzić w interakcje z dwoma lub więcej enzymami?",
        "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
    },
    {
        "db_id": "twitter_1",
        "question": "hi. I would like to know how many users are followed by Mary?",
        "question_pl": "Cześć. Chciałbym wiedzieć, ilu użytkowników śledzi Mary?",
        "query": "SELECT count(t2.f1) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\"",
        "query_pl": "SELECT count(t2.f1) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\""
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse who has the most appointments?",
        "question_pl": "Jak nazywa się pielęgniarka, która ma najwięcej wizyt?",
        "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "hi,List out the all color description",
        "question_pl": "Cześć, wymień wszystkie opisy kolorów",
        "query": "SELECT color_description FROM ref_colors",
        "query_pl": "SELECT color_description FROM ref_colors"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Can you list all the unique fault log entry ids?",
        "question_pl": "Czy możesz wymienić wszystkie unikalne identyfikatory wpisów dziennika błędów?",
        "query": "SELECT distinct fault_log_entry_id FROM Fault_Log",
        "query_pl": "SELECT distinct fault_log_entry_id FROM Fault_Log"
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the first names of all guest with apartment booking status \"Confirmed\" ?",
        "question_pl": "Jakie są imiona wszystkich gości ze statusem rezerwacji apartamentu \"Potwierdzona\"?",
        "query": "SELECT T2.guest_first_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"",
        "query_pl": "SELECT T2.guest_first_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Potwierdzono\""
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Can you list the customer names and ids who have credit cards?",
        "question_pl": "Czy możesz podać nazwy i identyfikatory klientów posiadających karty kredytowe?",
        "query": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_type_code  =  \"Credit\"",
        "query_pl": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_type_code  =  \"Kredyt\""
    },
    {
        "db_id": "baseball_1",
        "question": "Show the team_id with highest rank?",
        "question_pl": "Pokaż team_id z najwyższą rangą?",
        "query": "SELECT team_id FROM team ORDER BY rank ASC LIMIT 1",
        "query_pl": "SELECT team_id FROM team ORDER BY rank ASC LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question": "Tell me the Gtype of the GameID 1 ?",
        "question_pl": "Podaj mi typ G identyfikatora GameID 1?",
        "query": "SELECT gtype FROM Video_games where gameid = 1",
        "query_pl": "SELECT gtype FROM Video_games where gameid = 1"
    },
    {
        "db_id": "phone_1",
        "question": "how many screen mode there",
        "question_pl": "Ile jest trybów ekranu",
        "query": "SELECT count(*) from screen_mode",
        "query_pl": "SELECT count(*) from screen_mode"
    },
    {
        "db_id": "swimming",
        "question": "How many swimmers are there with record? ",
        "question_pl": "Ilu jest pływaków z rekordami?",
        "query": "select count(distinct Swimmer_ID) from record",
        "query_pl": "select count(distinct Swimmer_ID) from record"
    },
    {
        "db_id": "student_assessment",
        "question": "Could you please list each course's name and the number of its registered students?",
        "question_pl": "Czy możesz podać nazwę każdego kursu i liczbę zarejestrowanych studentów?",
        "query": "SELECT T3.course_name ,  count(*)  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
        "query_pl": "SELECT T3.course_name ,  count(*)  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
    },
    {
        "db_id": "ship_1",
        "question": "What are the ship id of HM Cutter Avenger?",
        "question_pl": "Jaki jest identyfikator statku HM Cutter Avenger?",
        "query": "SELECT ship_id FROM ship WHERE name = \"HM Cutter Avenger\"",
        "query_pl": "SELECT ship_id FROM ship WHERE name = \"HM Cutter Avenger\""
    },
    {
        "db_id": "election",
        "question": "How many parties in this table?",
        "question_pl": "Ile stron znajduje się w tej tabeli?",
        "query": "SELECT count(DISTINCT Party) FROM party",
        "query_pl": "SELECT count(DISTINCT Party) FROM party"
    },
    {
        "db_id": "music_1",
        "question": "What are the names of the artists from Bangladesh?",
        "question_pl": "Jak nazywają się artyści z Bangladeszu?",
        "query": "SELECT artist_name FROM artist WHERE country  =  \"Bangladesh\" ",
        "query_pl": "SELECT artist_name FROM artist WHERE country  =  \"Bangladesz\" "
    },
    {
        "db_id": "icfp_1",
        "question": "how many authorship there",
        "question_pl": "ile jest tam autorstwa",
        "query": "SELECT count(*) from authors",
        "query_pl": "SELECT count(*) from authors"
    },
    {
        "db_id": "formula_1",
        "question": "Hello, how many circuits belong to France?",
        "question_pl": "Witaj, ile obwodów należy do Francji?",
        "query": "SELECT count(*) FROM circuits WHERE country = \"France\" ",
        "query_pl": "SELECT count(*) FROM circuits WHERE country = \"Francja\" "
    },
    {
        "db_id": "station_weather",
        "question": "Hi, can you please tell me what is the ID of the station whose maximum precipitation is higher than 50?",
        "question_pl": "Cześć, czy możesz mi powiedzieć, jaki jest identyfikator stacji, której maksymalny opad jest wyższy niż 50?",
        "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50",
        "query_pl": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"
    },
    {
        "db_id": "formula_1",
        "question": "Can you provide me with a list of all of the names of the races?",
        "question_pl": "Czy możesz podać mi listę wszystkich nazw ras?",
        "query": "SELECT name FROM races ",
        "query_pl": "SELECT name FROM races "
    },
    {
        "db_id": "college_2",
        "question": "Can you list the names and ids of courses?",
        "question_pl": "Czy możesz podać nazwy i identyfikatory kursów?",
        "query": "SELECT course_id,title FROM course",
        "query_pl": "SELECT course_id,title FROM course"
    },
    {
        "db_id": "department_management",
        "question": "How many heads are temporary acting?",
        "question_pl": "Ile głów działa tymczasowo?",
        "query": "SELECT count(*) FROM management WHERE temporary_acting  =  'Yes'",
        "query_pl": "SELECT count(*) FROM management WHERE temporary_acting  =  \"Tak\""
    },
    {
        "db_id": "customers_card_transactions",
        "question": "How many customers have accounts?",
        "question_pl": "Ilu klientów ma konta?",
        "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "cinema",
        "question": "what is the capacity of county wicklow",
        "question_pl": "Jaka jest pojemność hrabstwa Wicklow",
        "query": "SELECT Capacity FROM cinema WHERE Location = \"County Wicklow\"",
        "query_pl": "SELECT Capacity FROM cinema WHERE Location = \"Hrabstwo Wicklow\""
    },
    {
        "db_id": "icfp_1",
        "question": "how many papers are presented on the table",
        "question_pl": "ile dokumentów jest prezentowanych na stole",
        "query": "SELECT count(*) FROM papers ",
        "query_pl": "SELECT count(*) FROM papers "
    },
    {
        "db_id": "soccer_2",
        "question": "can you show me a list of player position?",
        "question_pl": "Czy możesz mi pokazać listę pozycji graczy?",
        "query": "SELECT pPos FROM Tryout",
        "query_pl": "SELECT pPos FROM Tryout"
    },
    {
        "db_id": "university_basketball",
        "question": "Hello!  Can you please show me a list of all of the school names for all schools that are not of the Public affiliation?",
        "question_pl": "Witaj!  Czy możesz mi pokazać listę wszystkich nazw szkół dla wszystkich szkół, które nie są stowarzyszone z publicznymi?",
        "query": "SELECT School FROM university WHERE affiliation != 'Public'",
        "query_pl": "SELECT School FROM university WHERE affiliation != \"Publiczny\""
    },
    {
        "db_id": "election_representative",
        "question": "please show me the names of all of the representatives ",
        "question_pl": "Proszę, pokaż mi nazwiska wszystkich przedstawicieli",
        "query": "SELECT Name FROM representative ",
        "query_pl": "SELECT Name FROM representative "
    },
    {
        "db_id": "driving_school",
        "question": "How many people are in the staff?",
        "question_pl": "Ile osób liczy personel?",
        "query": "SELECT count(*) FROM Staff",
        "query_pl": "SELECT count(*) FROM Staff"
    },
    {
        "db_id": "railway",
        "question": "Hi, can you please tell me which country has a manager of age above 50?",
        "question_pl": "Cześć, czy możesz mi powiedzieć, który kraj ma menedżera w wieku powyżej 50 lat?",
        "query": "SELECT Country FROM manager WHERE Age  >  50",
        "query_pl": "SELECT Country FROM manager WHERE Age  >  50"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question": "what form of payment method did customer ID 1 Use?",
        "question_pl": "Jakiej formy płatności użył klient ID 1?",
        "query": "SELECT \tpayment_method FROM customers WHERE customer_id =1",
        "query_pl": "SELECT \tpayment_method FROM customers WHERE customer_id =1"
    },
    {
        "db_id": "college_1",
        "question": "What is the average GPA of all students?",
        "question_pl": "Jaki jest średni GPA wszystkich studentów?",
        "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code",
        "query_pl": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code"
    },
    {
        "db_id": "company_1",
        "question": "Yes. Can you tell me the number of employees?",
        "question_pl": "Tak. Czy możesz mi podać liczbę pracowników?",
        "query": "SELECT count(*) FROM employee",
        "query_pl": "SELECT count(*) FROM employee"
    },
    {
        "db_id": "csu_1",
        "question": "What campuses were opened between 1935 and 1939?",
        "question_pl": "Jakie kampusy zostały otwarte w latach 1935-1939?",
        "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
    },
    {
        "db_id": "flight_company",
        "question": "list out the airport names",
        "question_pl": "wymień nazwy lotnisk",
        "query": "SELECT name FROM airport",
        "query_pl": "SELECT name FROM airport"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "What is the highest average monthly rental of all the students?",
        "question_pl": "Jaki jest najwyższy średni miesięczny czynsz wszystkich studentów?",
        "query": "SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
        "query_pl": "SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
    },
    {
        "db_id": "browser_web",
        "question": "Which browsers are compatible with firefox?",
        "question_pl": "Które przeglądarki są kompatybilne z Firefoksem?",
        "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Firefox'",
        "query_pl": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  \"Firefox\""
    },
    {
        "db_id": "sports_competition",
        "question": "Show me the names of all clubs?",
        "question_pl": "Pokaż mi nazwy wszystkich klubów?",
        "query": "select name from club",
        "query_pl": "select name from club"
    },
    {
        "db_id": "news_report",
        "question": "What is the total number of journalists?",
        "question_pl": "Jaka jest całkowita liczba dziennikarzy?",
        "query": "SELECT COUNT(*) FROM journalist",
        "query_pl": "SELECT COUNT(*) FROM journalist"
    },
    {
        "db_id": "apartment_rentals",
        "question": "How many apartments are there?",
        "question_pl": "Ile jest apartamentów?",
        "query": "SELECT count(*) FROM Apartments",
        "query_pl": "SELECT count(*) FROM Apartments"
    },
    {
        "db_id": "device",
        "question": "how many locations have shops that opened before 2008?",
        "question_pl": "W ilu lokalizacjach znajdują się sklepy otwarte przed 2008 rokiem?",
        "query": "select count(Location) from shop where Open_Year='2008'",
        "query_pl": "select count(Location) from shop where Open_Year=\"2008\""
    },
    {
        "db_id": "sports_competition",
        "question": "WHich country had the most competitions?",
        "question_pl": "Który kraj miał najwięcej konkursów?",
        "query": "SELECT country FROM competition GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM competition GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question": "What are the enrollment dates of all the tests that have result \"Pass\"?",
        "question_pl": "Jakie są daty zapisów do wszystkich testów z wynikiem \"Pass\"?",
        "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"",
        "query_pl": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Przełęcz\""
    },
    {
        "db_id": "musical",
        "question": "Give me the list of nominees that has been nominated multiple times for musicals",
        "question_pl": "Podaj mi listę nominowanych, którzy byli wielokrotnie nominowani do musicali",
        "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "movie_1",
        "question": "Hello, how many ratings have the same reviewer and director name?",
        "question_pl": "Witaj, ile ocen ma to samo nazwisko recenzenta i reżysera?",
        "query": "SELECT count(*) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name",
        "query_pl": "SELECT count(*) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
    },
    {
        "db_id": "coffee_shop",
        "question": "what is the average level of membership?",
        "question_pl": "Jaki jest średni poziom członkostwa?",
        "query": "SELECT avg(level_of_membership) FROM member",
        "query_pl": "SELECT avg(level_of_membership) FROM member"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which part has the least faults?",
        "question_pl": "Która część ma najmniej błędów?",
        "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "flight_company",
        "question": "How many airports are there?",
        "question_pl": "Ile jest lotnisk?",
        "query": "SELECT count(*) FROM airport",
        "query_pl": "SELECT count(*) FROM airport"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "what are the actual delivery dates of orders with quantity 1?",
        "question_pl": "Jakie są rzeczywiste daty dostawy zamówień z ilością 1?",
        "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1",
        "query_pl": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "what is the teacher id of detention id 1",
        "question_pl": "Jaki jest identyfikator nauczyciela zatrzymanego o identyfikatorze 1?",
        "query": "select teacher_id from detention where detention_id = 1;",
        "query_pl": "select teacher_id from detention where detention_id = 1;"
    },
    {
        "db_id": "swimming",
        "question": "Can you list all events that happened in 2018?",
        "question_pl": "Czy możesz wymienić wszystkie wydarzenia, które miały miejsce w 2018 roku?",
        "query": "SELECT name FROM event where year = 2018",
        "query_pl": "SELECT name FROM event where year = 2018"
    },
    {
        "db_id": "formula_1",
        "question": "Hi, What are the unique names of races that are held in Spain?",
        "question_pl": "Cześć, Jakie są unikalne nazwy wyścigów rozgrywanych w Hiszpanii?",
        "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\"",
        "query_pl": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Hiszpania\""
    },
    {
        "db_id": "insurance_policies",
        "question": "Hi there! From this database, what is the most popular payment method?",
        "question_pl": "Witaj! Z tej bazy danych, jaka jest najpopularniejsza metoda płatności?",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products",
        "question_pl": "Jaka jest średnia ilość i wartość zakupów u dostawcy, który dostarcza najwięcej produktów?",
        "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "entrepreneur",
        "question": "What are the investor name of Leonardo Binchi?",
        "question_pl": "Jak nazywa się inwestor Leonardo Binchi?",
        "query": "SELECT T1.Investor FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Name= \"Leonardo Binchi\"",
        "query_pl": "SELECT T1.Investor FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Name= \"Leonardo Binchi\""
    },
    {
        "db_id": "department_store",
        "question": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000",
        "question_pl": "Znajdź identyfikatory dostawców, których średnia kwota zakupu dla każdego produktu jest wyższa niż 50000 lub niższa niż 30000.",
        "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) > 50000 OR avg(total_amount_purchased) < 30000",
        "query_pl": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased) > 50000 OR avg(total_amount_purchased) < 30000"
    },
    {
        "db_id": "city_record",
        "question": "Could you list all the cities in ascending alphabetical order?",
        "question_pl": "Czy możesz wymienić wszystkie miasta w rosnącej kolejności alfabetycznej?",
        "query": "select city from city order by city asc",
        "query_pl": "select city from city order by city asc"
    },
    {
        "db_id": "news_report",
        "question": "Could you please tell me all the names of the journalists?",
        "question_pl": "Czy mógłbyś podać mi wszystkie nazwiska dziennikarzy?",
        "query": "SELECT name from journalist",
        "query_pl": "SELECT name from journalist"
    },
    {
        "db_id": "culture_company",
        "question": "how manty editors are there?",
        "question_pl": "Ilu jest redaktorów?",
        "query": "SELECT COUNT(Author_or_Editor) from book_club",
        "query_pl": "SELECT COUNT(Author_or_Editor) from book_club"
    },
    {
        "db_id": "baseball_1",
        "question": "Which cities have 2 to 4 parks?",
        "question_pl": "Które miasta mają od 2 do 4 parków?",
        "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;",
        "query_pl": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
    },
    {
        "db_id": "college_1",
        "question": "how many employees there",
        "question_pl": "ilu jest pracowników",
        "query": "SELECT count(*) FROM employee",
        "query_pl": "SELECT count(*) FROM employee"
    },
    {
        "db_id": "college_1",
        "question": "what is the school code of emp num 114",
        "question_pl": "Jaki jest kod szkoły dla numeru emp 114",
        "query": "SELECT SCHOOL_CODE\t from DEPARTMENT where EMP_NUM=114",
        "query_pl": "SELECT SCHOOL_CODE\t from DEPARTMENT where EMP_NUM=114"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "what are the characteristic names of \"Cumin\"?",
        "question_pl": "Jakie są charakterystyczne nazwy \"kminku\"?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"cumin\"",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"kminek\""
    },
    {
        "db_id": "college_1",
        "question": "show the info of students whose GPA is below 3?",
        "question_pl": "Pokaż informacje o studentach, których GPA jest poniżej 3?",
        "query": "SELECT * FROM student WHERE stu_gpa  < 3",
        "query_pl": "SELECT * FROM student WHERE stu_gpa  < 3"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What are the result descriptions of the project whose detail is \"sint\"?",
        "question_pl": "Jakie są opisy wyników projektu, którego szczegółem jest \"sint\"?",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'",
        "query_pl": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  \"sint\""
    },
    {
        "db_id": "club_1",
        "question": "What are the average age of all the members of the tennis club",
        "question_pl": "Jaki jest średni wiek wszystkich członków klubu tenisowego?",
        "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"",
        "query_pl": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Klub tenisowy\""
    },
    {
        "db_id": "soccer_2",
        "question": "Hi there! Can you provide me with a list of all of the player names?",
        "question_pl": "Cześć! Czy możesz podać mi listę wszystkich nazwisk graczy?",
        "query": "SELECT pName  FROM player",
        "query_pl": "SELECT pName  FROM player"
    },
    {
        "db_id": "entertainment_awards",
        "question": "State the location of flower awards held?",
        "question_pl": "Podaj lokalizację rozdania nagród kwiatowych?",
        "query": "select Location from festival_detail where \tFestival_Name = 'Flower Awards'",
        "query_pl": "select Location from festival_detail where \tFestival_Name = \"Nagrody kwiatowe\""
    },
    {
        "db_id": "icfp_1",
        "question": "What are the paper id of Gibbons?",
        "question_pl": "Jakie są papierowe identyfikatory Gibbons?",
        "query": "SELECT DISTINCT \tpaperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid  WHERE t1.lname  =  \"Gibbons\"",
        "query_pl": "SELECT DISTINCT \tpaperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid  WHERE t1.lname  =  \"Gibbons\""
    },
    {
        "db_id": "hospital_1",
        "question": "What are all the names of the departments?",
        "question_pl": "Jakie są nazwy wszystkich działów?",
        "query": "select Name from Department",
        "query_pl": "select Name from Department"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "show me the customer name of the order that have the status \"cancelled\"",
        "question_pl": "pokaż mi nazwę klienta zamówienia, które ma status \"anulowane\"",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Cancelled\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Anulowane\""
    },
    {
        "db_id": "flight_4",
        "question": "What are the names of airport which is the source for the most number of flight routes?",
        "question_pl": "Jak nazywa się lotnisko, z którego odbywa się najwięcej lotów?",
        "query": "SELECT T1.name  FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name  FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "phone_1",
        "question": "Find the average ram mib size of the chip models that are never used by any phone",
        "question_pl": "Znajdź średni rozmiar ram mib modeli chipów, które nigdy nie są używane przez żaden telefon.",
        "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)",
        "query_pl": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "how many customers are presented on the table",
        "question_pl": "ilu klientów jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM Customers",
        "query_pl": "SELECT count(*) FROM Customers"
    },
    {
        "db_id": "gymnast",
        "question": "Hello there! Can you list all of the hometowns listed in this database?",
        "question_pl": "Witajcie! Czy możesz wymienić wszystkie miasta rodzinne wymienione w tej bazie danych?",
        "query": "SELECT DISTINCT Hometown FROM people",
        "query_pl": "SELECT DISTINCT Hometown FROM people"
    },
    {
        "db_id": "activity_1",
        "question": "Show me all the buildings",
        "question_pl": "Pokaż mi wszystkie budynki",
        "query": "SELECT building FROM Faculty",
        "query_pl": "SELECT building FROM Faculty"
    },
    {
        "db_id": "manufactory_1",
        "question": "Hello!  Can you please provide me with the name of the founder for Sony?",
        "question_pl": "Witaj!  Czy możesz podać mi nazwisko założyciela Sony?",
        "query": "SELECT founder FROM manufacturers WHERE name='Sony'",
        "query_pl": "SELECT founder FROM manufacturers WHERE name=\"Sony\""
    },
    {
        "db_id": "csu_1",
        "question": "Which universities are in Los Angeles county and opened after 1950?",
        "question_pl": "Które uniwersytety znajdują się w hrabstwie Los Angeles i zostały otwarte po 1950 roku?",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"
    },
    {
        "db_id": "music_4",
        "question": "Can you list the artist ids and their volume issues?",
        "question_pl": "Czy możesz wymienić identyfikatory artystów i ich numery tomów?",
        "query": "SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID",
        "query_pl": "SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID"
    },
    {
        "db_id": "journal_committee",
        "question": "Show the names of editors on the list with at least two journal committees.",
        "question_pl": "Pokaż nazwiska redaktorów na liście z co najmniej dwoma komitetami czasopism.",
        "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "What are the monthly rentals of student?",
        "question_pl": "Jakie są miesięczne opłaty za wynajem studenta?",
        "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id",
        "query_pl": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id"
    },
    {
        "db_id": "hr_1",
        "question": "Hello!  Can you provide me with a list of all employee IDs and their corresponding salaries?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich identyfikatorów pracowników i odpowiadających im wynagrodzeń?",
        "query": "SELECT employee_id ,  salary FROM employees;",
        "query_pl": "SELECT employee_id ,  salary FROM employees;"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "show the customer ids and first names without a credit card",
        "question_pl": "pokaż identyfikatory i imiona klientów bez karty kredytowej",
        "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"",
        "query_pl": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Kredyt\""
    },
    {
        "db_id": "inn_1",
        "question": "which rooms have a king bed?",
        "question_pl": "Które pokoje mają łóżko typu king-size?",
        "query": "SELECT * FROM Rooms WHERE bedtype  =  'King'",
        "query_pl": "SELECT * FROM Rooms WHERE bedtype  =  \"Król\""
    },
    {
        "db_id": "activity_1",
        "question": "how many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(*) from student",
        "query_pl": "SELECT count(*) from student"
    },
    {
        "db_id": "sakila_1",
        "question": "Hello!  Can you provide me with a list of the first names of all customers who rented films before '2005-08-23 02:06:01'?",
        "question_pl": "Witam!!!  Czy możesz dostarczyć mi listę imion wszystkich klientów, którzy wypożyczyli filmy przed '2005-08-23 02:06:01'?",
        "query": "SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01' )",
        "query_pl": "SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date  <  \"2005-08-23 02:06:01\" )"
    },
    {
        "db_id": "protein_institute",
        "question": "Can you list all the institution types with the number of institutions of each type?",
        "question_pl": "Czy możesz wymienić wszystkie typy instytucji wraz z liczbą instytucji każdego typu?",
        "query": "SELECT TYPE , count(*) FROM institution GROUP BY TYPE",
        "query_pl": "SELECT TYPE , count(*) FROM institution GROUP BY TYPE"
    },
    {
        "db_id": "flight_1",
        "question": "What is average and maximum salary of all employees.",
        "question_pl": "Jakie jest średnie i maksymalne wynagrodzenie wszystkich pracowników.",
        "query": "SELECT avg(salary) ,  max(salary) FROM Employee",
        "query_pl": "SELECT avg(salary) ,  max(salary) FROM Employee"
    },
    {
        "db_id": "music_1",
        "question": "Give me the names of the English Artist",
        "question_pl": "Podaj mi nazwiska angielskich artystów",
        "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\"",
        "query_pl": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"angielski\""
    },
    {
        "db_id": "network_2",
        "question": "Can you list the person names and their friends?",
        "question_pl": "Czy możesz wymienić imiona osób i ich przyjaciół?",
        "query": "SELECT name, friend from personFriend",
        "query_pl": "SELECT name, friend from personFriend"
    },
    {
        "db_id": "architecture",
        "question": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
        "question_pl": "Jaka jest lokalizacja mostu o nazwie \"Kolob Arch\" lub \"Rainbow Bridge\"?",
        "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'",
        "query_pl": "SELECT LOCATION FROM bridge WHERE name  =  \"Kolob Arch\" OR name  =  \"Tęczowy Most\""
    },
    {
        "db_id": "csu_1",
        "question": "Which year did any college confer the most amount of degrees?",
        "question_pl": "W którym roku któraś z uczelni przyznała najwięcej stopni naukowych?",
        "query": "SELECT T3.year FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year ORDER BY t3.degrees DESC LIMIT 1",
        "query_pl": "SELECT T3.year FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year ORDER BY t3.degrees DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question": "find the student id and personal name of the student whose course id is 2",
        "question_pl": "znajdź identyfikator studenta i imię i nazwisko studenta, którego identyfikator kursu to 2",
        "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where T1.course_id='2'",
        "query_pl": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where T1.course_id=\"2\""
    },
    {
        "db_id": "game_1",
        "question": "How many students are playing multiple sports?",
        "question_pl": "Ilu uczniów uprawia wiele dyscyplin sportowych?",
        "query": "SELECT count(*) FROM (SELECT * FROM Sportsinfo GROUP BY StuID having count(*) > 1)",
        "query_pl": "SELECT count(*) FROM (SELECT * FROM Sportsinfo GROUP BY StuID having count(*) > 1)"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the names of the tourist attractions that can be accessed by bus or walk?",
        "question_pl": "Jak nazywają się atrakcje turystyczne, do których można dojechać autobusem lub dojść pieszo?",
        "query": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"",
        "query_pl": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"autobus\" OR How_to_Get_There  =  \"spacer\""
    },
    {
        "db_id": "voter_2",
        "question": "how many Student there",
        "question_pl": "Ilu studentów tam jest",
        "query": "SELECT count(*) FROM STUDENT",
        "query_pl": "SELECT count(*) FROM STUDENT"
    },
    {
        "db_id": "activity_1",
        "question": "Hello!  Can you provide me with a list of first name, last name, and faculty ID of all faculty?",
        "question_pl": "Witaj!  Czy możesz podać mi listę imion, nazwisk i identyfikatorów wszystkich wydziałów?",
        "query": "SELECT Fname, Lname, FacID from Faculty",
        "query_pl": "SELECT Fname, Lname, FacID from Faculty"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Show the role description of the project staff involved in the most number of project outcomes?",
        "question_pl": "Pokaż opis ról personelu projektu zaangażowanego w największą liczbę rezultatów projektu?",
        "query": "SELECT T1.role_description  FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.role_description  FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "body_builder",
        "question": "Hi there!  Can you show me a list of all body builder names and their associated birth dates?",
        "question_pl": "Cześć!  Czy możesz mi pokazać listę wszystkich nazwisk kulturystów i powiązanych z nimi dat urodzenia?",
        "query": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id",
        "query_pl": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id"
    },
    {
        "db_id": "wedding",
        "question": "what is the minimum age of all people",
        "question_pl": "Jaki jest minimalny wiek wszystkich osób",
        "query": "SELECT min(age) FROM people",
        "query_pl": "SELECT min(age) FROM people"
    },
    {
        "db_id": "flight_4",
        "question": "Name the airport in Madang city?",
        "question_pl": "Podaj nazwę lotniska w mieście Madang?",
        "query": "SELECT name from airports where city = 'Madang'",
        "query_pl": "SELECT name from airports where city = \"Madang\""
    },
    {
        "db_id": "baseball_1",
        "question": "hi, can you tell me the first and last name for the player with player ID: gomezle01?",
        "question_pl": "Cześć, czy możesz mi podać imię i nazwisko gracza z ID gracza: gomezle01?",
        "query": "SELECT name_first ,  name_last FROM player where player_id = \"gomezle01\"",
        "query_pl": "SELECT name_first ,  name_last FROM player where player_id = \"gomezle01\""
    },
    {
        "db_id": "chinook_1",
        "question": "Hi, could you please let me know the genre ID for Latin and Pop?",
        "question_pl": "Cześć, czy możesz dać mi znać identyfikator gatunku dla Latin i Pop?",
        "query": "SELECT GenreId FROM Genre WHERE Name=\"Latin\" OR Name=\"Pop\"",
        "query_pl": "SELECT GenreId FROM Genre WHERE Name=\"Łacina\" OR Name=\"Pop\""
    },
    {
        "db_id": "college_2",
        "question": "What is the average salary for the physics department?",
        "question_pl": "Jakie jest średnie wynagrodzenie w dziale fizyki?",
        "query": "SELECT avg(salary) FROM instructor WHERE  dept_name  =  'Physics'",
        "query_pl": "SELECT avg(salary) FROM instructor WHERE  dept_name  =  \"Fizyka\""
    },
    {
        "db_id": "e_learning",
        "question": "How many different student logins are there?",
        "question_pl": "Ile jest różnych loginów uczniów?",
        "query": "SELECT count(distinct login_name) from students",
        "query_pl": "SELECT count(distinct login_name) from students"
    },
    {
        "db_id": "soccer_1",
        "question": "what players have a overall rating greater than 80?",
        "question_pl": "Którzy gracze mają ogólną ocenę wyższą niż 80?",
        "query": "SELECT * FROM Player_Attributes WHERE overall_rating  >  80",
        "query_pl": "SELECT * FROM Player_Attributes WHERE overall_rating  >  80"
    },
    {
        "db_id": "station_weather",
        "question": "how many origin in the train table",
        "question_pl": "Ile początków w tabeli pociągów",
        "query": "SELECT count(distinct origin) FROM train",
        "query_pl": "SELECT count(distinct origin) FROM train"
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of Physicians who are affiliate with surgery or Psychiatry department.",
        "question_pl": "Znajdź nazwiska lekarzy, którzy są powiązani z oddziałem chirurgii lub psychiatrii.",
        "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "query_pl": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  \"Chirurgia\" OR T3.name  =  \"Psychiatria\""
    },
    {
        "db_id": "flight_4",
        "question": "Which countries have the most number of airlines whose active status is Y?",
        "question_pl": "Które kraje mają najwięcej linii lotniczych o statusie aktywnym Y?",
        "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM airlines WHERE active  =  \"Y\" GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "election",
        "question": "Which delegates are from countries with population smaller than 100000?",
        "question_pl": "Którzy delegaci pochodzą z krajów o populacji mniejszej niż 100000?",
        "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000",
        "query_pl": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
    },
    {
        "db_id": "music_1",
        "question": "Can you show the artist name of f id 2?",
        "question_pl": "Czy możesz pokazać nazwę artysty f id 2?",
        "query": "SELECT \tartist_name FROM files WHERE f_id='2'",
        "query_pl": "SELECT \tartist_name FROM files WHERE f_id=\"2\""
    },
    {
        "db_id": "flight_4",
        "question": "Find the cities which have exactly two airports",
        "question_pl": "Znajdź miasta, które mają dokładnie dwa lotniska",
        "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
        "query_pl": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
    },
    {
        "db_id": "baseball_1",
        "question": "How many home games did the team  Boston Red Stockings play from 1990 to 2000 in total? ",
        "question_pl": "Ile meczów u siebie rozegrała drużyna Boston Red Stockings w latach 1990-2000?",
        "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;",
        "query_pl": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = \"Czerwone pończochy Boston\" AND T1.year BETWEEN 1990 AND 2000;"
    },
    {
        "db_id": "college_2",
        "question": "Find the year that offers the largest number of courses?",
        "question_pl": "Znajdź rok, który oferuje największą liczbę kursów?",
        "query": "SELECT YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "how many colors are in list in the description?",
        "question_pl": "Ile kolorów znajduje się na liście w opisie?",
        "query": "SELECT count(*) FROM Ref_colors",
        "query_pl": "SELECT count(*) FROM Ref_colors"
    },
    {
        "db_id": "game_1",
        "question": "can you please show me all the advisors?",
        "question_pl": "Czy możesz pokazać mi wszystkich doradców?",
        "query": "SELECT advisor FROM Student",
        "query_pl": "SELECT advisor FROM Student"
    },
    {
        "db_id": "entertainment_awards",
        "question": "Which year had the most festivals?",
        "question_pl": "W którym roku odbyło się najwięcej festiwali?",
        "query": "SELECT year FROM festival_detail group by year order by count(*) desc limit 1",
        "query_pl": "SELECT year FROM festival_detail group by year order by count(*) desc limit 1"
    },
    {
        "db_id": "network_2",
        "question": "How many friends does Zach have?",
        "question_pl": "Ilu przyjaciół ma Zach?",
        "query": "SELECT count(friend) from PersonFriend  where name='Zach'",
        "query_pl": "SELECT count(friend) from PersonFriend  where name=\"Zach\""
    },
    {
        "db_id": "soccer_2",
        "question": "What is the name of the college whos size is bigger than 10000?",
        "question_pl": "Jak nazywa się uczelnia, której liczba studentów przekracza 10000?",
        "query": "SELECT cName  FROM College WHERE enr  >  10000 ",
        "query_pl": "SELECT cName  FROM College WHERE enr  >  10000 "
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "Can you show the product name and total order quantity of each product please?",
        "question_pl": "Czy możesz podać nazwę produktu i całkowitą ilość zamówienia każdego produktu?",
        "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id",
        "query_pl": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
    },
    {
        "db_id": "tracking_orders",
        "question": "which customers placed an order",
        "question_pl": "którzy klienci złożyli zamówienie",
        "query": "SELECT * FROM customers where customer_id in (select customer_id from Orders)",
        "query_pl": "SELECT * FROM customers where customer_id in (select customer_id from Orders)"
    },
    {
        "db_id": "musical",
        "question": "What is the duration of the oldest actor?",
        "question_pl": "Jaki jest czas trwania najstarszego aktora?",
        "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "county_public_safety",
        "question": "show the names of cities",
        "question_pl": "pokaż nazwy miast",
        "query": "SELECT Name FROM city",
        "query_pl": "SELECT Name FROM city"
    },
    {
        "db_id": "debate",
        "question": "can you show me a list of people names?",
        "question_pl": "Możesz mi pokazać listę nazwisk ludzi?",
        "query": "SELECT Name FROM people",
        "query_pl": "SELECT Name FROM people"
    },
    {
        "db_id": "riding_club",
        "question": "Hello. Can you list the top three vote getters?",
        "question_pl": "Witaj. Czy możesz wymienić trzech najlepszych głosujących?",
        "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3",
        "query_pl": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3"
    },
    {
        "db_id": "formula_1",
        "question": "What are the drivers' last names who had 11 pit stops and participated in more than 5 race results?",
        "question_pl": "Jakie są nazwiska kierowców, którzy mieli 11 pit stopów i brali udział w więcej niż 5 wyścigach?",
        "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5",
        "query_pl": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "What is the address of address id 3?",
        "question_pl": "Jaki jest adres identyfikatora adresu 3?",
        "query": "SELECT * FROM Addresses where address_id = 3",
        "query_pl": "SELECT * FROM Addresses where address_id = 3"
    },
    {
        "db_id": "store_1",
        "question": "How many tracks in this table?",
        "question_pl": "Ile ścieżek znajduje się w tej tabeli?",
        "query": "SELECT count(*) from tracks",
        "query_pl": "SELECT count(*) from tracks"
    },
    {
        "db_id": "twitter_1",
        "question": "Which users had some tweets?",
        "question_pl": "Którzy użytkownicy mieli kilka tweetów?",
        "query": "SELECT name FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)",
        "query_pl": "SELECT name FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"
    },
    {
        "db_id": "flight_4",
        "question": "How many airlines are there?",
        "question_pl": "Ile jest linii lotniczych?",
        "query": "SELECT COUNT(*) FROM airlines",
        "query_pl": "SELECT COUNT(*) FROM airlines"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the name of photo ID 280",
        "question_pl": "Jak nazywa się dokument tożsamości ze zdjęciem 280",
        "query": "SELECT Name FROM PHOTOS where photo_id=280",
        "query_pl": "SELECT Name FROM PHOTOS where photo_id=280"
    },
    {
        "db_id": "browser_web",
        "question": "how many accelerators on the table",
        "question_pl": "Ile akceleratorów na stole",
        "query": "SELECT COUNT(*) FROM web_client_accelerator",
        "query_pl": "SELECT COUNT(*) FROM web_client_accelerator"
    },
    {
        "db_id": "product_catalog",
        "question": "LIST THE  NAME OF CATALOGS",
        "question_pl": "WYPISZ NAZWY KATALOGÓW",
        "query": "SELECT \tcatalog_name FROM catalogs",
        "query_pl": "SELECT \tcatalog_name FROM catalogs"
    },
    {
        "db_id": "debate",
        "question": "What are the names of the people who have been on the affirmative side of debates?",
        "question_pl": "Jakie są nazwiska osób, które były po stronie twierdzącej w debatach?",
        "query": "SELECT T2.Name  FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name",
        "query_pl": "SELECT T2.Name  FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "tell me the staff details of staff id 1 ?",
        "question_pl": "podaj mi dane personelu o identyfikatorze 1?",
        "query": "SELECT staff_details FROM  Research_Staff where staff_id=1",
        "query_pl": "SELECT staff_details FROM  Research_Staff where staff_id=1"
    },
    {
        "db_id": "flight_company",
        "question": "What are all the names of the pilots who flew a flight in the United States?",
        "question_pl": "Jakie są wszystkie nazwiska pilotów, którzy odbyli lot w Stanach Zjednoczonych?",
        "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' ",
        "query_pl": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  \"Stany Zjednoczone\" "
    },
    {
        "db_id": "candidate_poll",
        "question": "I want to know the lowest oppose rate among the candidates.",
        "question_pl": "Chcę poznać najniższy współczynnik sprzeciwu wśród kandydatów.",
        "query": "SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1",
        "query_pl": "SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question": "Hi! What is the name of the institution that \"Mathias Blume\" is associated with?",
        "question_pl": "Cześć! Jak nazywa się instytucja, z którą związany jest \"Mathias Blume\"?",
        "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"",
        "query_pl": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Show me all the claims that are documents.",
        "question_pl": "Pokaż mi wszystkie twierdzenia, które są dokumentami.",
        "query": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.document_type_code = \"Document\"",
        "query_pl": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.document_type_code = \"Dokument\""
    },
    {
        "db_id": "manufactory_1",
        "question": "What are the names of all companies whose revenue is smaller than the revenue of all companies based in Austin?",
        "question_pl": "Jakie są nazwy wszystkich firm, których przychody są mniejsze niż przychody wszystkich firm z siedzibą w Austin?",
        "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  \"Austin\")"
    },
    {
        "db_id": "musical",
        "question": "Which nominees have nominated musicals for \"Tony Award\"?",
        "question_pl": "Które musicale zostały nominowane do nagrody \"Nagroda Tony\"?",
        "query": "SELECT distinct Nominee FROM musical WHERE Award  =  \"Tony Award\"",
        "query_pl": "SELECT distinct Nominee FROM musical WHERE Award  =  \"Nagroda Tony\""
    },
    {
        "db_id": "activity_1",
        "question": "How many professors are there?",
        "question_pl": "Ilu jest profesorów?",
        "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\"",
        "query_pl": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Profesor\""
    },
    {
        "db_id": "sakila_1",
        "question": "Which film actors and actresses played a role in more than 30 films? List their first and last names.",
        "question_pl": "Którzy aktorzy i aktorki zagrali w ponad 30 filmach? Wymień ich imiona i nazwiska.",
        "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count(*) > 30",
        "query_pl": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count(*) > 30"
    },
    {
        "db_id": "ship_mission",
        "question": "Show the names  of all ships from United States?",
        "question_pl": "Pokaż nazwy wszystkich statków ze Stanów Zjednoczonych?",
        "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\"",
        "query_pl": "SELECT Name FROM ship WHERE Nationality  =  \"Stany Zjednoczone\""
    },
    {
        "db_id": "assets_maintenance",
        "question": "What is the skill code for skill id 1, 2 and 3 ?",
        "question_pl": "Jaki jest kod umiejętności dla id umiejętności 1, 2 i 3?",
        "query": "SELECT skill_id, skill_code FROM skills where skill_id  =  1 or skill_id = 2 or skill_id = 3",
        "query_pl": "SELECT skill_id, skill_code FROM skills where skill_id  =  1 or skill_id = 2 or skill_id = 3"
    },
    {
        "db_id": "epinions_1",
        "question": "What is the name of the good with the highest average rank?",
        "question_pl": "Jak nazywa się towar o najwyższej średniej randze?",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question": "Who is the instructor of the statistics department?",
        "question_pl": "Kto jest instruktorem działu statystyki?",
        "query": "SELECT name FROM instructor WHERE \tdept_name = \"Statistics\"",
        "query_pl": "SELECT name FROM instructor WHERE \tdept_name = \"Statystyki\""
    },
    {
        "db_id": "candidate_poll",
        "question": "Hello, how many candidates total are there?",
        "question_pl": "Witaj, ilu jest łącznie kandydatów?",
        "query": "SELECT count(*) FROM candidate",
        "query_pl": "SELECT count(*) FROM candidate"
    },
    {
        "db_id": "architecture",
        "question": "Can you please show me the names of all male architects by their names lexicographically?",
        "question_pl": "Czy możesz pokazać mi nazwiska wszystkich architektów płci męskiej według ich nazwisk leksykograficznie?",
        "query": "SELECT name FROM architect WHERE gender = 'male' ORDER BY name",
        "query_pl": "SELECT name FROM architect WHERE gender = \"mężczyzna\" ORDER BY name"
    },
    {
        "db_id": "hr_1",
        "question": "Display the first name of all employees. ",
        "question_pl": "Wyświetl imię i nazwisko wszystkich pracowników.",
        "query": "SELECT first_name FROM employees ",
        "query_pl": "SELECT first_name FROM employees "
    },
    {
        "db_id": "browser_web",
        "question": "what are the ids and names of the web accelerators that are compatible with two or more browsers?",
        "question_pl": "Jakie są identyfikatory i nazwy akceleratorów sieci, które są kompatybilne z dwiema lub więcej przeglądarkami?",
        "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Hi, can I see the list of customers?",
        "question_pl": "Cześć, czy mogę zobaczyć listę klientów?",
        "query": "Select * from customers",
        "query_pl": "Select * from customers"
    },
    {
        "db_id": "city_record",
        "question": "What is the largest population among the cities?",
        "question_pl": "Które miasto ma największą populację?",
        "query": "SELECT regional_population FROM city ORDER BY Regional_Population DESC LIMIT 1",
        "query_pl": "SELECT regional_population FROM city ORDER BY Regional_Population DESC LIMIT 1"
    },
    {
        "db_id": "riding_club",
        "question": "can you show me  a list of starting year?",
        "question_pl": "Czy możesz mi pokazać listę początkowych lat?",
        "query": "SELECT Starting_year FROM player_coach",
        "query_pl": "SELECT Starting_year FROM player_coach"
    },
    {
        "db_id": "department_store",
        "question": "Show me id of all departments.",
        "question_pl": "Pokaż mi identyfikatory wszystkich działów.",
        "query": "SELECT distinct department_id FROM staff_department_assignments ",
        "query_pl": "SELECT distinct department_id FROM staff_department_assignments "
    },
    {
        "db_id": "ship_1",
        "question": "Which flag is least widely used among all ships?",
        "question_pl": "Która flaga jest najrzadziej używana wśród wszystkich statków?",
        "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question": "Which staff handled payments?",
        "question_pl": "Którzy pracownicy zajmowali się płatnościami?",
        "query": "SELECT * FROM staff",
        "query_pl": "SELECT * FROM staff"
    },
    {
        "db_id": "loan_1",
        "question": "List names of customers with more than 1 loan",
        "question_pl": "Wymień nazwy klientów z więcej niż 1 pożyczką",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1",
        "query_pl": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"
    },
    {
        "db_id": "apartment_rentals",
        "question": "Show me the addresses of the buildings.",
        "question_pl": "Pokaż mi adresy budynków.",
        "query": "SELECT building_address FROM Apartment_Buildings",
        "query_pl": "SELECT building_address FROM Apartment_Buildings"
    },
    {
        "db_id": "bike_1",
        "question": "What are the names of station with lowest lattitude?",
        "question_pl": "Jakie są nazwy stacji o najniższej szerokości geograficznej?",
        "query": "SELECT name FROM station ORDER BY lat LIMIT 1",
        "query_pl": "SELECT name FROM station ORDER BY lat LIMIT 1"
    },
    {
        "db_id": "perpetrator",
        "question": "tell me the total number of injured in both china and japan",
        "question_pl": "Podaj całkowitą liczbę rannych w chinach i japonii.",
        "query": "SELECT sum(injured) FROM perpetrator WHERE country = \"China\" OR country = \"Japan\"",
        "query_pl": "SELECT sum(injured) FROM perpetrator WHERE country = \"Chiny\" OR country = \"Japonia\""
    },
    {
        "db_id": "hospital_1",
        "question": "Which department has the least number of employees?",
        "question_pl": "Który dział zatrudnia najmniej pracowników?",
        "query": "SELECT * FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1",
        "query_pl": "SELECT * FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "How many orders have more than two invoices?",
        "question_pl": "Ile zamówień ma więcej niż dwie faktury?",
        "query": "SELECT COUNT(*) FROM (SELECT * FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2)",
        "query_pl": "SELECT COUNT(*) FROM (SELECT * FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2)"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "how many participants on the table",
        "question_pl": "ilu uczestników przy stole",
        "query": "SELECT COUNT(*) FROM Participants",
        "query_pl": "SELECT COUNT(*) FROM Participants"
    },
    {
        "db_id": "dorm_1",
        "question": "Please show me how many female students have the major 600",
        "question_pl": "Proszę, pokaż mi, ile studentek ma kierunek 600",
        "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND Major=600",
        "query_pl": "SELECT count(*) FROM student WHERE sex  =  \"F\" AND Major=600"
    },
    {
        "db_id": "twitter_1",
        "question": "List the names of 5 users followed by the largest number of other users.",
        "question_pl": "Wymień nazwy 5 użytkowników, po których następuje największa liczba innych użytkowników.",
        "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
        "query_pl": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "How many claim stage ids in this table?",
        "question_pl": "Ile identyfikatorów etapów roszczenia znajduje się w tej tabeli?",
        "query": "SELECT count(Claim_Stage_ID) from Claims_Processing_Stages",
        "query_pl": "SELECT count(Claim_Stage_ID) from Claims_Processing_Stages"
    },
    {
        "db_id": "party_host",
        "question": "What are the names of the hosts that held parties with more than 20 hosts?",
        "question_pl": "Jakie są nazwy hostów, którzy zorganizowali imprezy z ponad 20 hostami?",
        "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20",
        "query_pl": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
    },
    {
        "db_id": "entrepreneur",
        "question": "Hi, could you please let me know the date of birth of the investors Simon Woodroffe and Peter Jones?",
        "question_pl": "Cześć, czy możesz podać mi datę urodzenia inwestorów Simona Woodroffe'a i Petera Jonesa?",
        "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"",
        "query_pl": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
    },
    {
        "db_id": "college_1",
        "question": "What is the first name of each student entrolled in class ACCT-211?",
        "question_pl": "Jakie jest imię każdego ucznia zapisanego na zajęcia ACCT-211?",
        "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  \"ACCT-211\""
    },
    {
        "db_id": "manufactory_1",
        "question": "Can you list all companies based in Austin and their revenues?",
        "question_pl": "Czy możesz wymienić wszystkie firmy z siedzibą w Austin i ich przychody?",
        "query": "select Name,Revenue from Manufacturers where Headquarter='Austin'",
        "query_pl": "select Name,Revenue from Manufacturers where Headquarter=\"Austin\""
    },
    {
        "db_id": "university_basketball",
        "question": "Hi, when was the University of Delaware founded?",
        "question_pl": "Cześć, kiedy został założony Uniwersytet Delaware?",
        "query": "SELECT founded FROM university WHERE school='University of Delaware'",
        "query_pl": "SELECT founded FROM university WHERE school=\"Uniwersytet Delaware\""
    },
    {
        "db_id": "match_season",
        "question": "Tell me the Draft Class for the season 1996.0 ?",
        "question_pl": "Podaj mi klasę draftu na sezon 1996.0?",
        "query": "SELECT Draft_Class from match_season WHERE season = 1996.0",
        "query_pl": "SELECT Draft_Class from match_season WHERE season = 1996.0"
    },
    {
        "db_id": "riding_club",
        "question": "What are the residences of the players?",
        "question_pl": "Jakie są miejsca zamieszkania zawodników?",
        "query": "SELECT Residence FROM player ",
        "query_pl": "SELECT Residence FROM player "
    },
    {
        "db_id": "candidate_poll",
        "question": "Can you show me the top three highest support rates for the candidates?",
        "question_pl": "Czy możesz mi pokazać trzy najwyższe wskaźniki poparcia dla kandydatów?",
        "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
        "query_pl": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
    },
    {
        "db_id": "roller_coaster",
        "question": "How many countries have roller coaster?",
        "question_pl": "Ile krajów ma kolejki górskie?",
        "query": "SELECT count(distinct T1.Name) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID",
        "query_pl": "SELECT count(distinct T1.Name) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID"
    },
    {
        "db_id": "baseball_1",
        "question": "Show me the attendance of the team_id CH1?",
        "question_pl": "Pokaż mi frekwencję team_id CH1?",
        "query": "SELECT attendance FROM home_game where team_id = 'CH1'",
        "query_pl": "SELECT attendance FROM home_game where team_id = \"CH1\""
    },
    {
        "db_id": "flight_4",
        "question": "What is the name of the airport in Mount Hagen city?",
        "question_pl": "Jak nazywa się lotnisko w mieście Mount Hagen?",
        "query": "SELECT name from airports where city ='Mount Hagen'",
        "query_pl": "SELECT name from airports where city =\"Mount Hagen\""
    },
    {
        "db_id": "dorm_1",
        "question": "Oh, sorry. I meant to ask what dorm does the student with the last name of Smith live in?",
        "question_pl": "Przepraszam. Chciałem zapytać, w którym akademiku mieszka student o nazwisku Smith?",
        "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'",
        "query_pl": "SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  \"Smith\""
    },
    {
        "db_id": "student_assessment",
        "question": "Please list all IDs of students who have registered courses",
        "question_pl": "Wymień wszystkie identyfikatory studentów, którzy zarejestrowali kursy",
        "query": "SELECT student_id FROM student_course_registrations ",
        "query_pl": "SELECT student_id FROM student_course_registrations "
    },
    {
        "db_id": "college_2",
        "question": "How many courses are offered?",
        "question_pl": "Ile kursów jest oferowanych?",
        "query": "select count(course_id) from course",
        "query_pl": "select count(course_id) from course"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "how many customers are presented on the table",
        "question_pl": "ilu klientów jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM Customers ",
        "query_pl": "SELECT count(*) FROM Customers "
    },
    {
        "db_id": "hospital_1",
        "question": "Could you please find all the procedures that cost more than 1000?",
        "question_pl": "Czy możesz znaleźć wszystkie procedury, które kosztują więcej niż 1000?",
        "query": "SELECT * FROM procedures WHERE cost  >  1000 ",
        "query_pl": "SELECT * FROM procedures WHERE cost  >  1000 "
    },
    {
        "db_id": "game_injury",
        "question": "How many stadiums are there?",
        "question_pl": "Ile jest stadionów?",
        "query": "select count(*) from stadium",
        "query_pl": "select count(*) from stadium"
    },
    {
        "db_id": "assets_maintenance",
        "question": "what is the fault status of engineer visit id 1?",
        "question_pl": "Jaki jest status błędu wizyty inżyniera o identyfikatorze 1?",
        "query": "SELECT  fault_status from Engineer_Visits where engineer_visit_id=1",
        "query_pl": "SELECT  fault_status from Engineer_Visits where engineer_visit_id=1"
    },
    {
        "db_id": "city_record",
        "question": "How many cities have a regional population over 8000000?",
        "question_pl": "Ile miast ma populację regionalną powyżej 8000000?",
        "query": "SELECT count(city) FROM city WHERE regional_population  >  8000000 ",
        "query_pl": "SELECT count(city) FROM city WHERE regional_population  >  8000000 "
    },
    {
        "db_id": "allergy_1",
        "question": "can you show me a list of allergies?",
        "question_pl": "Czy możesz mi pokazać listę alergii?",
        "query": "SELECT Allergy FROM Allergy_Type",
        "query_pl": "SELECT Allergy FROM Allergy_Type"
    },
    {
        "db_id": "voter_2",
        "question": "Find the number of students whose city code is NYC, please?",
        "question_pl": "Znajdź liczbę uczniów, których kod miasta to NYC.",
        "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" ",
        "query_pl": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" "
    },
    {
        "db_id": "club_1",
        "question": "How many students are majoring in \"600\"?",
        "question_pl": "Ilu studentów studiuje na kierunku \"600\"?",
        "query": "select count(stuid) from student where major = 600",
        "query_pl": "select count(stuid) from student where major = 600"
    },
    {
        "db_id": "apartment_rentals",
        "question": "what is the building id for the apt number suite 645",
        "question_pl": "Jaki jest identyfikator budynku dla apartamentu o numerze 645?",
        "query": "SELECT building_id FROM Apartments where apt_number = \"Suite 645\"",
        "query_pl": "SELECT building_id FROM Apartments where apt_number = \"Apartament 645\""
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names and positions of all physicians who prescribed brand X medications?",
        "question_pl": "Jakie są nazwiska i stanowiska wszystkich lekarzy, którzy przepisali leki marki X?",
        "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
    },
    {
        "db_id": "machine_repair",
        "question": "Who are the technicians?",
        "question_pl": "Kim są technicy?",
        "query": "SELECT Name FROM technician",
        "query_pl": "SELECT Name FROM technician"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Can you list the color code that has a color description of 'white'?",
        "question_pl": "Czy możesz wymienić kod koloru, który ma opis koloru \"biały\"?",
        "query": "select color_code from Ref_Colors where color_description='white'",
        "query_pl": "select color_code from Ref_Colors where color_description=\"biały\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "how many apartments have bookings with status code \"confirmed\"?",
        "question_pl": "Ile apartamentów ma rezerwacje z kodem statusu \"potwierdzone\"?",
        "query": "SELECT count(*) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"",
        "query_pl": "SELECT count(*) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Potwierdzono\""
    },
    {
        "db_id": "csu_1",
        "question": "What are the degrees conferred in \"San Francisco State University\"?",
        "question_pl": "Jakie stopnie naukowe są nadawane na \"Uniwersytet Stanowy San Francisco\"?",
        "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"San Francisco State University\"",
        "query_pl": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"Uniwersytet Stanowy San Francisco\""
    },
    {
        "db_id": "college_1",
        "question": "list all department code and department name ",
        "question_pl": "wymień wszystkie kody i nazwy działów ",
        "query": "SELECT dept_code, dept_name FROM department",
        "query_pl": "SELECT dept_code, dept_name FROM department"
    },
    {
        "db_id": "restaurant_1",
        "question": "What is the student Id of Linda Smith?",
        "question_pl": "Jaki jest identyfikator ucznia Lindy Smith?",
        "query": "SELECT stuid FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\"",
        "query_pl": "SELECT stuid FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\""
    },
    {
        "db_id": "flight_4",
        "question": "What is the name of airport in the city Goroka?",
        "question_pl": "Jak nazywa się lotnisko w mieście Goroka?",
        "query": "SELECT name FROM airports WHERE city = \"Goroka\"",
        "query_pl": "SELECT name FROM airports WHERE city = \"Goroka\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "How many employees are there?",
        "question_pl": "Ilu masz pracowników?",
        "query": "SELECT COUNT(*) FROM Employees",
        "query_pl": "SELECT COUNT(*) FROM Employees"
    },
    {
        "db_id": "workshop_paper",
        "question": "May I have a list of authors?",
        "question_pl": "Mogę prosić o listę autorów?",
        "query": "SELECT Author FROM submission ",
        "query_pl": "SELECT Author FROM submission "
    },
    {
        "db_id": "driving_school",
        "question": "What state or province has the most staff living in it?",
        "question_pl": "W którym stanie lub prowincji mieszka najwięcej pracowników?",
        "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "college_2",
        "question": "can you show me the name and salary of all instructors?",
        "question_pl": "Czy możesz podać nazwiska i pensje wszystkich instruktorów?",
        "query": "SELECT name, salary FROM instructor",
        "query_pl": "SELECT name, salary FROM instructor"
    },
    {
        "db_id": "network_2",
        "question": "which friend of zachs has the longest year relationship? ",
        "question_pl": "Który przyjaciel zachsa jest w najdłuższym związku?",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  \"Zach\" AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  \"Zach\")"
    },
    {
        "db_id": "driving_school",
        "question": "How long is the total lesson time took by customer with first name Rylan and last name Goodwin?",
        "question_pl": "Jak długi jest całkowity czas trwania lekcji klienta o imieniu Rylan i nazwisku Goodwin?",
        "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
        "query_pl": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
    },
    {
        "db_id": "apartment_rentals",
        "question": "how many different types of apartments are there?",
        "question_pl": "Ile jest różnych rodzajów apartamentów?",
        "query": "SELECT count(DISTINCT apt_type_code) FROM Apartments ",
        "query_pl": "SELECT count(DISTINCT apt_type_code) FROM Apartments "
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "how many Services there",
        "question_pl": "Ile jest usług",
        "query": "SELECT count(*) from Services",
        "query_pl": "SELECT count(*) from Services"
    },
    {
        "db_id": "soccer_2",
        "question": "Can you list all the colleges and their enrollments?",
        "question_pl": "Czy możesz wymienić wszystkie uczelnie i ich rekrutację?",
        "query": "SELECT cName, enr  FROM college ",
        "query_pl": "SELECT cName, enr  FROM college "
    },
    {
        "db_id": "store_1",
        "question": "May I know the album names and ids, and the number of tracks they have?",
        "question_pl": "Czy mogę poznać nazwy i identyfikatory albumów oraz liczbę utworów?",
        "query": "SELECT T1.title,T1.id,count(T1.id) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id ",
        "query_pl": "SELECT T1.title,T1.id,count(T1.id) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id "
    },
    {
        "db_id": "music_1",
        "question": "How many songs are there?",
        "question_pl": "Ile jest utworów?",
        "query": "SELECT count(*) FROM files ",
        "query_pl": "SELECT count(*) FROM files "
    },
    {
        "db_id": "document_management",
        "question": "Show the Document code for document type code Book?",
        "question_pl": "Pokaż kod dokumentu dla kodu typu dokumentu Książka?",
        "query": "SELECT document_code FROM documents WHERE document_type_code='Book'",
        "query_pl": "SELECT document_code FROM documents WHERE document_type_code=\"Książka\""
    },
    {
        "db_id": "shop_membership",
        "question": "Show me all branch names with the number of members in each branch registered after 2015",
        "question_pl": "Pokaż mi wszystkie nazwy oddziałów wraz z liczbą członków w każdym oddziale zarejestrowanych po 2015 r.",
        "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"
    },
    {
        "db_id": "soccer_2",
        "question": "What are the names of the states that have some college students playing in the mid position but not the goalie position?",
        "question_pl": "Jak nazywają się państwa, w których niektórzy studenci grają na pozycji środkowego, ale nie bramkarza?",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  \"środek\" EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  \"bramkarz\""
    },
    {
        "db_id": "small_bank_1",
        "question": "What is the average savings account balance?",
        "question_pl": "Jakie jest średnie saldo konta oszczędnościowego?",
        "query": "SELECT avg(balance) FROM savings",
        "query_pl": "SELECT avg(balance) FROM savings"
    },
    {
        "db_id": "store_1",
        "question": "How many countries are our customers located in?",
        "question_pl": "W ilu krajach znajdują się nasi klienci?",
        "query": "SELECT count(distinct country) FROM customers",
        "query_pl": "SELECT count(distinct country) FROM customers"
    },
    {
        "db_id": "allergy_1",
        "question": "How many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(distinct StuID) FROM Has_allergy",
        "query_pl": "SELECT count(distinct StuID) FROM Has_allergy"
    },
    {
        "db_id": "coffee_shop",
        "question": "What is the membership card of Breton,Robert?",
        "question_pl": "Jaka jest karta członkowska Breton,Robert?",
        "query": "SELECT Membership_card FROM member where Name='Breton, Robert'",
        "query_pl": "SELECT Membership_card FROM member where Name=\"Breton, Robert\""
    },
    {
        "db_id": "flight_1",
        "question": "Can you display the salary and name of the employees?",
        "question_pl": "Czy możesz wyświetlić wynagrodzenie i nazwiska pracowników?",
        "query": "SELECT salary, name from employee",
        "query_pl": "SELECT salary, name from employee"
    },
    {
        "db_id": "college_2",
        "question": "Whsts the name of the student thst took prerequisite course  title internatoinal finance?",
        "question_pl": "Jak nazywa się student, który wziął udział w kursie wstępnym o tytule finanse międzynarodowe?",
        "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')",
        "query_pl": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  \"Finanse międzynarodowe\")"
    },
    {
        "db_id": "college_2",
        "question": "Can you tell me which room number has a capacity higher than the average capacity?",
        "question_pl": "Czy możesz mi powiedzieć, który numer pokoju ma pojemność większą niż średnia pojemność?",
        "query": "SELECT room_number FROM classroom WHERE capacity > (SELECT avg(capacity) FROM classroom)",
        "query_pl": "SELECT room_number FROM classroom WHERE capacity > (SELECT avg(capacity) FROM classroom)"
    },
    {
        "db_id": "hr_1",
        "question": "How much is the salary for employee id 163?",
        "question_pl": "Ile wynosi wynagrodzenie pracownika o identyfikatorze 163?",
        "query": "SELECT salary FROM employees WHERE employee_id = 163",
        "query_pl": "SELECT salary FROM employees WHERE employee_id = 163"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the ID of the project with the least number of documents?",
        "question_pl": "Jaki jest identyfikator projektu z najmniejszą liczbą dokumentów?",
        "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "school_bus",
        "question": "What are the school names of the schools without school buses?",
        "question_pl": "Jak nazywają się szkoły bez autobusów szkolnych?",
        "query": "SELECT school FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",
        "query_pl": "SELECT school FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)"
    },
    {
        "db_id": "products_for_hire",
        "question": "What is the customer id that spends the most",
        "question_pl": "Jaki jest identyfikator klienta, który wydaje najwięcej?",
        "query": "SELECT customer_id FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",
        "query_pl": "SELECT customer_id FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question": "Hi there! Can you tell me how many school have an affiliation type that is not public?",
        "question_pl": "Cześć! Czy możesz mi powiedzieć, ile szkół ma typ przynależności, który nie jest publiczny?",
        "query": "SELECT COUNT(*) FROM university WHERE affiliation != 'Public'",
        "query_pl": "SELECT COUNT(*) FROM university WHERE affiliation != \"Publiczny\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What is the send date of document Id 2?",
        "question_pl": "Jaka jest data wysłania dokumentu Id 2?",
        "query": "SELECT sent_date FROM documents  WHERE document_id = 2",
        "query_pl": "SELECT sent_date FROM documents  WHERE document_id = 2"
    },
    {
        "db_id": "match_season",
        "question": "Hello Yes, I'm interested to know which college has two players",
        "question_pl": "WitajTak, interesuje mnie, która uczelnia ma dwóch graczy",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  =  2",
        "query_pl": "SELECT College FROM match_season GROUP BY College HAVING count(*)  =  2"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the address for FJA Filming?",
        "question_pl": "Jaki jest adres FJA Filming?",
        "query": "SELECT T1.* FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"",
        "query_pl": "SELECT T1.* FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"Filmowanie FJA\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the booking start and end dates of the apartments with more than 2 bedrooms ?",
        "question_pl": "Jakie są daty rozpoczęcia i zakończenia rezerwacji apartamentów z więcej niż 2 sypialniami?",
        "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "can you tell me all the enzymes that work in the cytosol?",
        "question_pl": "Czy możesz mi podać wszystkie enzymy, które działają w cytozolu?",
        "query": "SELECT name from enzyme where location = \"Cytosol\"",
        "query_pl": "SELECT name from enzyme where location = \"Cytosol\""
    },
    {
        "db_id": "theme_gallery",
        "question": "How many exhibitions have an attendance of more than 100?",
        "question_pl": "Na ilu wystawach frekwencja przekracza 100 osób?",
        "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 ",
        "query_pl": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 "
    },
    {
        "db_id": "cre_Theme_park",
        "question": "how many shops are there?",
        "question_pl": "Ile jest sklepów?",
        "query": "SELECT count(*) FROM SHOPS",
        "query_pl": "SELECT count(*) FROM SHOPS"
    },
    {
        "db_id": "game_1",
        "question": "What are the names of all games that were played for at least 1000 hours?",
        "question_pl": "Jak nazywają się wszystkie gry, w które grałeś przez co najmniej 1000 godzin?",
        "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum(hours_played) >= 1000",
        "query_pl": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum(hours_played) >= 1000"
    },
    {
        "db_id": "shop_membership",
        "question": "What are the names of all the branches?",
        "question_pl": "Jak nazywają się wszystkie oddziały?",
        "query": "SELECT Name FROM branch",
        "query_pl": "SELECT Name FROM branch"
    },
    {
        "db_id": "inn_1",
        "question": "Can you list the base price for all rooms?",
        "question_pl": "Czy możesz podać cenę podstawową za wszystkie pokoje?",
        "query": "SELECT basePrice FROM Rooms",
        "query_pl": "SELECT basePrice FROM Rooms"
    },
    {
        "db_id": "school_bus",
        "question": "Can you list the driver ids and whether they drive full time or not? ",
        "question_pl": "Czy możesz wymienić identyfikatory kierowców i określić, czy jeżdżą na pełny etat, czy nie?",
        "query": "SELECT Driver_ID, If_full_time FROM school_bus",
        "query_pl": "SELECT Driver_ID, If_full_time FROM school_bus"
    },
    {
        "db_id": "climbing",
        "question": "What are the names of mountains in the area?",
        "question_pl": "Jak nazywają się góry w okolicy?",
        "query": "SELECT Name FROM mountain",
        "query_pl": "SELECT Name FROM mountain"
    },
    {
        "db_id": "climbing",
        "question": "list the countries with mountains with height less than 5200",
        "question_pl": "Wymień kraje z górami o wysokości poniżej 5200 m n.p.m.",
        "query": "SELECT Country FROM mountain WHERE Height  <  5200",
        "query_pl": "SELECT Country FROM mountain WHERE Height  <  5200"
    },
    {
        "db_id": "network_2",
        "question": "What are the names of all the persons who are friends with Alice?",
        "question_pl": "Jak nazywają się wszystkie osoby, które przyjaźnią się z Alicją?",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice'",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  \"Alice\""
    },
    {
        "db_id": "student_1",
        "question": "Hello! Can you please list all of the first and last names for all of the students in the database?",
        "question_pl": "Witaj! Czy możesz wymienić wszystkie imiona i nazwiska wszystkich uczniów w bazie danych?",
        "query": "SELECT LastName\t,FirstName from list",
        "query_pl": "SELECT LastName\t,FirstName from list"
    },
    {
        "db_id": "driving_school",
        "question": "how many customers are presented on the table",
        "question_pl": "ilu klientów jest prezentowanych w tabeli",
        "query": "SELECT COUNT(customer_id) FROM Customers  ",
        "query_pl": "SELECT COUNT(customer_id) FROM Customers  "
    },
    {
        "db_id": "company_office",
        "question": "How many companies have an industry of banking?",
        "question_pl": "Ile firm ma branżę bankową?",
        "query": "SELECT count(*) FROM Companies WHERE Industry = \"Banking\"",
        "query_pl": "SELECT count(*) FROM Companies WHERE Industry = \"Bankowość\""
    },
    {
        "db_id": "dorm_1",
        "question": "what's Smith Hall student capacity?",
        "question_pl": "Jaka jest liczba studentów w Smith Hall?",
        "query": "SELECT DISTINCT(T1.student_capacity) FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name = \"Smith Hall\"",
        "query_pl": "SELECT DISTINCT(T1.student_capacity) FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name = \"Smith Hall\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Can you please show me name of the products?",
        "question_pl": "Czy możesz podać mi nazwy produktów?",
        "query": "SELECT distinct product_name from Products",
        "query_pl": "SELECT distinct product_name from Products"
    },
    {
        "db_id": "decoration_competition",
        "question": "Where is the most common country across members?",
        "question_pl": "Gdzie znajduje się najpopularniejszy kraj wśród członków?",
        "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question": "Find the name of instructors who are advisors of students from the Math department, and sort the results by students' total credit.",
        "question_pl": "Znajdź nazwiska instruktorów, którzy są doradcami studentów z wydziału matematyki i posortuj wyniki według łącznej liczby punktów uzyskanych przez studentów.",
        "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred",
        "query_pl": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = \"Matematyka\" ORDER BY T3.tot_cred"
    },
    {
        "db_id": "music_1",
        "question": "What are the names of the top 3 artists with the largest number of songs?",
        "question_pl": "Jakie są nazwiska 3 najlepszych artystów z największą liczbą utworów?",
        "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name  GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name  GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "department_store",
        "question": "What are the staff names with job title code Sales Person?",
        "question_pl": "Jakie są nazwy pracowników z kodem stanowiska Sales Person?",
        "query": "SELECT T1.staff_name  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" ",
        "query_pl": "SELECT T1.staff_name  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sprzedawca\" "
    },
    {
        "db_id": "department_store",
        "question": "Hello there!  Can you provide me with a list of all customer names and addresses?",
        "question_pl": "Witajcie!  Czy możesz dostarczyć mi listę nazwisk i adresów wszystkich klientów?",
        "query": "select customer_name,customer_address from Customers;",
        "query_pl": "select customer_name,customer_address from Customers;"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What're the names of the enzymes in the medicine \"Amisulpride\"?",
        "question_pl": "Jak nazywają się enzymy w leku \"Amisulpryd\"?",
        "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride'",
        "query_pl": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  \"Amisulpryd\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What is the organisation ID of the organisation with grant amount of 4094.542??",
        "question_pl": "Jaki jest identyfikator organizacji, która otrzymała dotację w wysokości 4094,542?",
        "query": "SELECT organisation_id from grants where grant_amount = 4094.542",
        "query_pl": "SELECT organisation_id from grants where grant_amount = 4094.542"
    },
    {
        "db_id": "twitter_1",
        "question": "Can you list the uids and names of all users?",
        "question_pl": "Czy możesz wymienić identyfikatory i nazwy wszystkich użytkowników?",
        "query": "SELECT uid, name FROM user_profiles",
        "query_pl": "SELECT uid, name FROM user_profiles"
    },
    {
        "db_id": "wrestler",
        "question": "hi. can you tell me how many wrestlers were eliminated?",
        "question_pl": "Cześć, możesz mi powiedzieć ilu wrestlerów zostało wyeliminowanych?",
        "query": "SELECT COUNT(*) FROM Elimination",
        "query_pl": "SELECT COUNT(*) FROM Elimination"
    },
    {
        "db_id": "student_assessment",
        "question": "What is the Course Id for English",
        "question_pl": "Jaki jest identyfikator kursu dla języka angielskiego?",
        "query": "SELECT course_id FROM courses WHERE course_name = \"English\"",
        "query_pl": "SELECT course_id FROM courses WHERE course_name = \"Angielski\""
    },
    {
        "db_id": "college_3",
        "question": "which dno has no stuid associated with it?",
        "question_pl": "Z którym dno nie jest powiązany żaden stuid?",
        "query": "SELECT DNO from Department where DNO not in (select DNO from Minor_in)",
        "query_pl": "SELECT DNO from Department where DNO not in (select DNO from Minor_in)"
    },
    {
        "db_id": "movie_1",
        "question": "list the names of all movies",
        "question_pl": "wypisz nazwy wszystkich filmów",
        "query": "SELECT title FROM Movie ",
        "query_pl": "SELECT title FROM Movie "
    },
    {
        "db_id": "document_management",
        "question": "Hello! How many documents are there total?",
        "question_pl": "Witaj! Ile jest łącznie dokumentów?",
        "query": "SELECT count(document_name) FROM documents",
        "query_pl": "SELECT count(document_name) FROM documents"
    },
    {
        "db_id": "manufacturer",
        "question": "What is the market share of Chabudai?",
        "question_pl": "Jaki jest udział w rynku Chabudai?",
        "query": "SELECT Market_Rate  FROM furniture WHERE name = \"Chabudai\"",
        "query_pl": "SELECT Market_Rate  FROM furniture WHERE name = \"Chabudai\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Which grants are described as 'regular'?",
        "question_pl": "Które dotacje są określane jako \"regularne\"?",
        "query": "SELECT T1.* FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' ",
        "query_pl": "SELECT T1.* FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  \"Regularny\" "
    },
    {
        "db_id": "department_management",
        "question": "Hello!  How are you?  Can you please provide me with a list of all department IDs, department names, and their respective years of creation?",
        "question_pl": "Witaj! Jak się masz?  Czy możesz podać mi listę wszystkich identyfikatorów działów, nazw działów i lat ich utworzenia?",
        "query": "SELECT department_id, name, creation FROM department ",
        "query_pl": "SELECT department_id, name, creation FROM department "
    },
    {
        "db_id": "cinema",
        "question": "what is the highest price?",
        "question_pl": "Jaka jest najwyższa cena?",
        "query": "SELECT MAX(Price) FROM schedule",
        "query_pl": "SELECT MAX(Price) FROM schedule"
    },
    {
        "db_id": "network_2",
        "question": "how many person there",
        "question_pl": "ile osób tam jest",
        "query": "SELECT count(*) FROM Person",
        "query_pl": "SELECT count(*) FROM Person"
    },
    {
        "db_id": "theme_gallery",
        "question": "what country is Vijay Singh from?",
        "question_pl": "Z jakiego kraju pochodzi Vijay Singh?",
        "query": "SELECT Country FROM artist where Name = 'Vijay Singh'",
        "query_pl": "SELECT Country FROM artist where Name = \"Vijay Singh\""
    },
    {
        "db_id": "student_assessment",
        "question": "how many courses did the student with id 121 register for?",
        "question_pl": "Na ile kursów zapisał się student o identyfikatorze 121?",
        "query": "SELECT count(course_id) FROM Student_Course_Registrations WHERE student_id = 121",
        "query_pl": "SELECT count(course_id) FROM Student_Course_Registrations WHERE student_id = 121"
    },
    {
        "db_id": "wine_1",
        "question": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.",
        "question_pl": "Znajdź odrębne nazwy wszystkich win, których ceny są wyższe niż niektórych win z winiarni John Anthony.",
        "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
    },
    {
        "db_id": "flight_1",
        "question": "show names of all aircrafts? ",
        "question_pl": "Pokaż nazwy wszystkich samolotów?",
        "query": "select name from aircraft",
        "query_pl": "select name from aircraft"
    },
    {
        "db_id": "ship_1",
        "question": "what are the names and classes of the ships that do not have any captain yet?",
        "question_pl": "Jakie są nazwy i klasy statków, które nie mają jeszcze kapitana?",
        "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
        "query_pl": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
    },
    {
        "db_id": "railway",
        "question": "Show the countries that have managers of age above 50 or below 46?",
        "question_pl": "Wskaż kraje, które mają menedżerów w wieku powyżej 50 lub poniżej 46 lat?",
        "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
        "query_pl": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46"
    },
    {
        "db_id": "protein_institute",
        "question": "what are the names of the institution and building here",
        "question_pl": "Jak nazywają się tutejsze instytucje i budynki?",
        "query": "SELECT T1.name , T2.institution FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id",
        "query_pl": "SELECT T1.name , T2.institution FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Can you list all document descriptions that contain the word \"Initial\"?",
        "question_pl": "Czy możesz wymienić wszystkie opisy dokumentów, które zawierają słowo \"Początkowy\"?",
        "query": "SELECT document_description FROM Document_Types WHERE document_description LIKE 'Początkowy%'",
        "query_pl": "SELECT document_description FROM Document_Types WHERE document_description LIKE 'Początkowy%'"
    },
    {
        "db_id": "decoration_competition",
        "question": "show the total distinct leader names of the college associated with the members of all country",
        "question_pl": "pokaż całkowitą liczbę odrębnych nazwisk liderów kolegium powiązanych z członkami wszystkich krajów",
        "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID",
        "query_pl": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID"
    },
    {
        "db_id": "solvency_ii",
        "question": "Hello!  Can you show me a list of the various product type codes?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę różnych kodów typów produktów?",
        "query": "SELECT Product_Type_Code FROM Products",
        "query_pl": "SELECT Product_Type_Code FROM Products"
    },
    {
        "db_id": "station_weather",
        "question": "how many trains have express in their names? ",
        "question_pl": "Ile pociągów ma w nazwie ekspres?",
        "query": "SELECT count(*) FROM train WHERE name LIKE \"%ekspres%\"",
        "query_pl": "SELECT count(*) FROM train WHERE name LIKE \"%ekspres%\""
    },
    {
        "db_id": "music_4",
        "question": "What are the issue date of 34th England Academy Prize?",
        "question_pl": "Jaka jest data wydania 34. edycji England Academy Prize?",
        "query": "SELECT T2.Issue_Date FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Music_Festival = \"34th England Academy Prize\"",
        "query_pl": "SELECT T2.Issue_Date FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Music_Festival = \"34 Nagroda Akademii Angielskiej\""
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "Hello!  Can you please list the different interaction types for me?",
        "question_pl": "Witaj!  Czy możesz wymienić dla mnie różne typy interakcji?",
        "query": "SELECT DISTINCT interaction_type from medicine_enzyme_interaction",
        "query_pl": "SELECT DISTINCT interaction_type from medicine_enzyme_interaction"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "what are the names of the products with category \"Herbs\"",
        "question_pl": "Jakie są nazwy produktów z kategorii \"Zioła\"?",
        "query": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "how many claim headers on the table",
        "question_pl": "Ile nagłówków roszczeń w tabeli",
        "query": "SELECT count(*) from claim_headers",
        "query_pl": "SELECT count(*) from claim_headers"
    },
    {
        "db_id": "culture_company",
        "question": "Could you please show me the publishers with a book published in 1989?",
        "question_pl": "Czy mógłbyś wskazać mi wydawców książki wydanej w 1989 roku?",
        "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989",
        "query_pl": "SELECT publisher FROM book_club WHERE YEAR  =  1989"
    },
    {
        "db_id": "dorm_1",
        "question": "How many students are living in the dorms?",
        "question_pl": "Ilu studentów mieszka w akademikach?",
        "query": "SELECT count(*) FROM Student",
        "query_pl": "SELECT count(*) FROM Student"
    },
    {
        "db_id": "ship_mission",
        "question": "List the name of ships that are not involved in any mission",
        "question_pl": "Wymień nazwy statków, które nie biorą udziału w żadnej misji.",
        "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)",
        "query_pl": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
        "question_pl": "W ilu różnych lokalizacjach znajdowały się rzeczy ze szczegółem usługi \"Niezadowolony\"?",
        "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'",
        "query_pl": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  \"Niezadowolony\""
    },
    {
        "db_id": "coffee_shop",
        "question": "whats he average number of staffs in charge",
        "question_pl": "Jaka jest średnia liczba odpowiedzialnych pracowników?",
        "query": "select avg(Num_of_shaff_in_charge) from happy_hour",
        "query_pl": "select avg(Num_of_shaff_in_charge) from happy_hour"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "How many tourists were there total?",
        "question_pl": "Ilu było w sumie turystów?",
        "query": "SELECT count(*) FROM Visitors",
        "query_pl": "SELECT count(*) FROM Visitors"
    },
    {
        "db_id": "bike_1",
        "question": "how many stations are presented on the table",
        "question_pl": "ile stacji jest wyświetlanych w tabeli",
        "query": "SELECT DISTINCT count(*) FROM station",
        "query_pl": "SELECT DISTINCT count(*) FROM station"
    },
    {
        "db_id": "college_1",
        "question": "how many students enrolled for the accounting department  ",
        "question_pl": "ilu studentów zapisało się do działu księgowości",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  \"Księgowość\""
    },
    {
        "db_id": "tracking_orders",
        "question": "Can I have the dates for all the shipments?",
        "question_pl": "Czy mogę otrzymać daty wszystkich wysyłek?",
        "query": "SELECT shipment_date FROM shipments",
        "query_pl": "SELECT shipment_date FROM shipments"
    },
    {
        "db_id": "gymnast",
        "question": "Hello!  Can you show me a list of all of the hometowns?",
        "question_pl": "Witaj!  Czy możesz mi pokazać listę wszystkich rodzinnych miast?",
        "query": "SELECT Hometown FROM people ",
        "query_pl": "SELECT Hometown FROM people "
    },
    {
        "db_id": "hr_1",
        "question": "Can you show me the first and last names of all employees who work in any department located in London please?",
        "question_pl": "Czy możesz mi podać imiona i nazwiska wszystkich pracowników, którzy pracują w jakimkolwiek dziale w Londynie?",
        "query": "SELECT first_name ,  last_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'",
        "query_pl": "SELECT first_name ,  last_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  \"Londyn\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the project detail for the project with document \"King Book\"?",
        "question_pl": "Jakie są szczegóły projektu z dokumentem \"King Book\"?",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""
    },
    {
        "db_id": "bike_1",
        "question": "how many trip are presented on the table",
        "question_pl": "ile podróży jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM trip ",
        "query_pl": "SELECT count(*) FROM trip "
    },
    {
        "db_id": "store_1",
        "question": "What is title of album which track Balls to the Wall belong to?",
        "question_pl": "Jaki tytuł nosi album, do którego należy utwór Balls to the Wall?",
        "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";",
        "query_pl": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"
    },
    {
        "db_id": "product_catalog",
        "question": "What are the names of catalog with number 8",
        "question_pl": "Jakie są nazwy katalogu z numerem 8",
        "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\"",
        "query_pl": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\""
    },
    {
        "db_id": "college_1",
        "question": "How many departments do you have?",
        "question_pl": "Ile masz działów?",
        "query": "SELECT count(*) from department",
        "query_pl": "SELECT count(*) from department"
    },
    {
        "db_id": "theme_gallery",
        "question": "Can you please tell me the names of the artists who don't have any exhibitions?",
        "question_pl": "Czy możesz mi podać nazwiska artystów, którzy nie mają żadnych wystaw?",
        "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)",
        "query_pl": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "when did the transactions that were less that 3000 occur?",
        "question_pl": "Kiedy miały miejsce transakcje, które wyniosły mniej niż 3000?",
        "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000",
        "query_pl": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000"
    },
    {
        "db_id": "college_3",
        "question": "How many faculty members are in building Barton?",
        "question_pl": "Ilu wykładowców pracuje w budynku Barton?",
        "query": "SELECT count(*) FROM FACULTY WHERE Building  =  \"Barton\" ",
        "query_pl": "SELECT count(*) FROM FACULTY WHERE Building  =  \"Barton\" "
    },
    {
        "db_id": "game_1",
        "question": "Can you show me the student names with ids?",
        "question_pl": "Czy możesz pokazać mi nazwiska uczniów z identyfikatorami?",
        "query": "SELECT StuID, LName, Fname FROM Student",
        "query_pl": "SELECT StuID, LName, Fname FROM Student"
    },
    {
        "db_id": "tracking_orders",
        "question": "How many customers have two orders or less",
        "question_pl": "Ilu klientów ma dwa zamówienia lub mniej",
        "query": "SELECT COUNT(*) FROM (SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2)",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2)"
    },
    {
        "db_id": "hr_1",
        "question": "What is the department id for the Finance department?",
        "question_pl": "Jaki jest identyfikator działu finansowego?",
        "query": "SELECT DEPARTMENT_ID FROM  departments where department_name  =  'Finance'",
        "query_pl": "SELECT DEPARTMENT_ID FROM  departments where department_name  =  \"Finanse\""
    },
    {
        "db_id": "insurance_policies",
        "question": "What date was the claim made?",
        "question_pl": "Kiedy zgłoszono roszczenie?",
        "query": "SELECT Date_Claim_Made FROM Claims ",
        "query_pl": "SELECT Date_Claim_Made FROM Claims "
    },
    {
        "db_id": "hospital_1",
        "question": "What is is the number of patients who are not using Procrastin-X?",
        "question_pl": "Jaka jest liczba pacjentów, którzy nie stosują Procrastin-X?",
        "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "query_pl": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  \"Procrastin-X\" )"
    },
    {
        "db_id": "game_1",
        "question": "How many hours of role-playing games were played?",
        "question_pl": "Ile godzin gier fabularnych rozegrano?",
        "query": "SELECT sum(hours_played) FROM Plays_games AS T1 JOIN Video_games where GType = \"Role-playing game\"",
        "query_pl": "SELECT sum(hours_played) FROM Plays_games AS T1 JOIN Video_games where GType = \"Gra fabularna\""
    },
    {
        "db_id": "loan_1",
        "question": "Hello!  Can you provide me with a list of all of the customers with a credit score below 100?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich klientów z oceną kredytową poniżej 100?",
        "query": "select * from customer where credit_score < 100",
        "query_pl": "select * from customer where credit_score < 100"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "What is the customer name of customer id 9?",
        "question_pl": "Jaka jest nazwa klienta o identyfikatorze klienta 9?",
        "query": "SELECT customer_name FROM Customers WHERE customer_id = 9",
        "query_pl": "SELECT customer_name FROM Customers WHERE customer_id = 9"
    },
    {
        "db_id": "twitter_1",
        "question": "how many  tweets there",
        "question_pl": "ile jest tweetów",
        "query": "SELECT count(*) FROM tweets",
        "query_pl": "SELECT count(*) FROM tweets"
    },
    {
        "db_id": "soccer_2",
        "question": "What are the top 3 enrollment numbers among the schools?",
        "question_pl": "Jakie są 3 największe liczby zapisów do szkół?",
        "query": "SELECT enr FROM college ORDER BY enr DESC LIMIT 3",
        "query_pl": "SELECT enr FROM college ORDER BY enr DESC LIMIT 3"
    },
    {
        "db_id": "station_weather",
        "question": "I need to know which train route passes through the most stations, please.",
        "question_pl": "Muszę wiedzieć, która trasa kolejowa przebiega przez najwięcej stacji.",
        "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "station_weather",
        "question": "Give me the times of all trains that go to Chennai",
        "question_pl": "Podaj mi godziny wszystkich pociągów jadących do Chennai",
        "query": "SELECT TIME  FROM train WHERE destination  =  'Chennai'",
        "query_pl": "SELECT TIME  FROM train WHERE destination  =  \"Chennai\""
    },
    {
        "db_id": "railway",
        "question": "how many railway there",
        "question_pl": "ile jest tam linii kolejowych",
        "query": "SELECT count(*) from railway",
        "query_pl": "SELECT count(*) from railway"
    },
    {
        "db_id": "swimming",
        "question": "Can you list the names of all the swimmers who have won more than once?",
        "question_pl": "Czy możesz wymienić nazwiska wszystkich pływaków, którzy wygrali więcej niż raz?",
        "query": "SELECT t1.name  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1",
        "query_pl": "SELECT t1.name  FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  \"Wygraj\" GROUP BY t2.swimmer_id HAVING count(*)  >  1"
    },
    {
        "db_id": "company_employee",
        "question": "Names of headquarters that have at least two companies?",
        "question_pl": "Nazwy siedzib, które mają co najmniej dwie firmy?",
        "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "apartment_rentals",
        "question": "What is the booking status of the apartment with number \"Suite 634\"?",
        "question_pl": "Jaki jest status rezerwacji apartamentu o numerze \"Apartament 634\"?",
        "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"",
        "query_pl": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Apartament 634\""
    },
    {
        "db_id": "candidate_poll",
        "question": "How many poll sources are there?",
        "question_pl": "Ile jest źródeł ankiet?",
        "query": "SELECT count(Poll_Source) from candidate",
        "query_pl": "SELECT count(Poll_Source) from candidate"
    },
    {
        "db_id": "candidate_poll",
        "question": "Find the average height and weight for all males (sex is M).",
        "question_pl": "Znajdź średni wzrost i wagę dla wszystkich mężczyzn (płeć to M).",
        "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
        "query_pl": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  \"M\""
    },
    {
        "db_id": "customers_and_invoices",
        "question": "How many products are there?",
        "question_pl": "Ile jest produktów?",
        "query": "SELECT count(*) FROM products",
        "query_pl": "SELECT count(*) FROM products"
    },
    {
        "db_id": "driving_school",
        "question": "What is the status code of the customer with the last name Kohler or first name Marina?",
        "question_pl": "Jaki jest kod statusu klienta o nazwisku Kohler lub imieniu Marina?",
        "query": "SELECT customer_status_code  FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
        "query_pl": "SELECT customer_status_code  FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
    },
    {
        "db_id": "customer_complaints",
        "question": "Which state has the most customers?",
        "question_pl": "Który stan ma najwięcej klientów?",
        "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "protein_institute",
        "question": "show the maximum number of floors for all buildings?",
        "question_pl": "Pokaż maksymalną liczbę pięter dla wszystkich budynków?",
        "query": "SELECT  max(floors)FROM building",
        "query_pl": "SELECT  max(floors)FROM building"
    },
    {
        "db_id": "body_builder",
        "question": "What is the most common birth place of people?",
        "question_pl": "Jakie jest najczęstsze miejsce urodzenia ludzi?",
        "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_mission",
        "question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
        "question_pl": "Pokaż typy statków, które mają zarówno statki o tonażu większym niż 6000, jak i statki o tonażu mniejszym niż 4000.",
        "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
        "query_pl": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000"
    },
    {
        "db_id": "roller_coaster",
        "question": "how many  country there",
        "question_pl": "ile jest krajów",
        "query": "SELECT count(*) from country",
        "query_pl": "SELECT count(*) from country"
    },
    {
        "db_id": "shop_membership",
        "question": "What is the name of the branch with the greatest amount of memberships that were registered in the year 2016?",
        "question_pl": "Jak nazywa się oddział z największą liczbą członków zarejestrowanych w 2016 roku?",
        "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cinema",
        "question": "How many film titles are there?",
        "question_pl": "Ile jest tytułów filmów?",
        "query": "SELECT count(distinct title) from film",
        "query_pl": "SELECT count(distinct title) from film"
    },
    {
        "db_id": "inn_1",
        "question": "Could you please tell me which room has the cheapest base price?",
        "question_pl": "Czy możesz mi powiedzieć, który pokój ma najtańszą cenę podstawową?",
        "query": "SELECT * FROM Rooms ORDER BY basePrice ASC LIMIT 1;",
        "query_pl": "SELECT * FROM Rooms ORDER BY basePrice ASC LIMIT 1;"
    },
    {
        "db_id": "music_4",
        "question": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.",
        "question_pl": "Pokaż wyniki festiwali muzycznych i liczbę festiwali muzycznych, które miały miejsce, uporządkowane według tej liczby.",
        "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "allergy_1",
        "question": "Can you list the student ids and their allergies?",
        "question_pl": "Czy możesz wymienić identyfikatory uczniów i ich alergie?",
        "query": "SELECT stuid, allergy from has_allergy",
        "query_pl": "SELECT stuid, allergy from has_allergy"
    },
    {
        "db_id": "party_people",
        "question": "What member is in charge of the most events?",
        "question_pl": "Który członek jest odpowiedzialny za najwięcej wydarzeń?",
        "query": "select Member_in_charge_ID, count(*) from party_events group by Member_in_charge_ID order by count(*) desc limit 1",
        "query_pl": "select Member_in_charge_ID, count(*) from party_events group by Member_in_charge_ID order by count(*) desc limit 1"
    },
    {
        "db_id": "film_rank",
        "question": "Find the number of cities in USA country?",
        "question_pl": "Znajdź liczbę miast w kraju USA?",
        "query": "SELECT Number_cities FROM market where country = \"USA\"",
        "query_pl": "SELECT Number_cities FROM market where country = \"USA\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "how many products are there",
        "question_pl": "ile jest produktów",
        "query": "select count(*) from Products;",
        "query_pl": "select count(*) from Products;"
    },
    {
        "db_id": "insurance_fnol",
        "question": "How many policies does America Jaskolski have listed?",
        "question_pl": "Ile polis ma na liście America Jaskolski?",
        "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id where \tCustomer_name=\"America Jaskolski\"",
        "query_pl": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id where \tCustomer_name=\"America Jaskolski\""
    },
    {
        "db_id": "club_1",
        "question": "Hi. How many different clubs are there in total?",
        "question_pl": "Cześć, ile jest w sumie różnych klubów?",
        "query": "select count(*) from club",
        "query_pl": "select count(*) from club"
    },
    {
        "db_id": "election_representative",
        "question": "what is the average lifespan of the representatives",
        "question_pl": "Jaka jest średnia długość życia przedstawicieli",
        "query": "SELECT avg(lifespan) FROM representative",
        "query_pl": "SELECT avg(lifespan) FROM representative"
    },
    {
        "db_id": "station_weather",
        "question": "What are the times of trains that go to chennai?",
        "question_pl": "Jakie są godziny kursowania pociągów do Chennai?",
        "query": "SELECT TIME  FROM train WHERE destination  =  'Chennai' ",
        "query_pl": "SELECT TIME  FROM train WHERE destination  =  \"Chennai\" "
    },
    {
        "db_id": "game_1",
        "question": "What are the number of games played for students under the age of 20?",
        "question_pl": "Jaka jest liczba gier rozegranych przez uczniów w wieku poniżej 20 lat?",
        "query": "SELECT sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20",
        "query_pl": "SELECT sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
    },
    {
        "db_id": "wine_1",
        "question": "Hi, could you please show me the list of all appellations those produce wine after 2008?",
        "question_pl": "Cześć, czy mógłbyś mi pokazać listę wszystkich apelacji, które produkują wino po 2008 roku?",
        "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008",
        "query_pl": "SELECT Appelation FROM WINE WHERE YEAR  >  2008"
    },
    {
        "db_id": "college_3",
        "question": "What is the highest grade point?",
        "question_pl": "Jaka jest najwyższa ocena?",
        "query": "SELECT max(gradepoint)  FROM GRADECONVERSION",
        "query_pl": "SELECT max(gradepoint)  FROM GRADECONVERSION"
    },
    {
        "db_id": "election_representative",
        "question": "list the life spans of all representatives",
        "question_pl": "Wymień długość życia wszystkich przedstawicieli",
        "query": "SELECT Lifespan FROM representative ",
        "query_pl": "SELECT Lifespan FROM representative "
    },
    {
        "db_id": "film_rank",
        "question": "How many films are there in total?",
        "question_pl": "Ile jest w sumie filmów?",
        "query": "SELECT COUNT(DISTINCT Title) FROM film",
        "query_pl": "SELECT COUNT(DISTINCT Title) FROM film"
    },
    {
        "db_id": "apartment_rentals",
        "question": "What is the number of the apartment with the greatest number of bedrooms?",
        "question_pl": "Jaki jest numer mieszkania z największą liczbą sypialni?",
        "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
        "query_pl": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
    },
    {
        "db_id": "hr_1",
        "question": "List all employees?",
        "question_pl": "Wymień wszystkich pracowników?",
        "query": "SELECT First_name, last_name FROM employees ",
        "query_pl": "SELECT First_name, last_name FROM employees "
    },
    {
        "db_id": "scientist_1",
        "question": "Find the number of scientists involved for the projects that require more than 300 hours",
        "question_pl": "Znajdź liczbę naukowców zaangażowanych w projekty wymagające więcej niż 300 godzin.",
        "query": "SELECT count(distinct Scientist) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300",
        "query_pl": "SELECT count(distinct Scientist) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300"
    },
    {
        "db_id": "shop_membership",
        "question": "How many names in this table?",
        "question_pl": "Ile nazwisk znajduje się w tej tabeli?",
        "query": "SELECT count(Name)  FROM branch ",
        "query_pl": "SELECT count(Name)  FROM branch "
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "what is the color code of basil?",
        "question_pl": "Jaki jest kod koloru bazylii?",
        "query": "SELECT color_code from products where product_name='basil'",
        "query_pl": "SELECT color_code from products where product_name=\"bazylia\""
    },
    {
        "db_id": "baseball_1",
        "question": "Which player has the highest salary on the list?",
        "question_pl": "Który zawodnik ma najwyższą pensję na liście?",
        "query": "select player_id from salary order by salary desc limit 1",
        "query_pl": "select player_id from salary order by salary desc limit 1"
    },
    {
        "db_id": "network_2",
        "question": "what is the name of all males? ",
        "question_pl": "Jak nazywają się wszyscy mężczyźni?",
        "query": "SELECT name FROM Person WHERE gender  =  'male'",
        "query_pl": "SELECT name FROM Person WHERE gender  =  \"mężczyzna\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "How many different apartment building are there?",
        "question_pl": "Ile jest różnych budynków mieszkalnych?",
        "query": "SELECT count(DISTINCT building_id) FROM apartment_buildings",
        "query_pl": "SELECT count(DISTINCT building_id) FROM apartment_buildings"
    },
    {
        "db_id": "voter_2",
        "question": "What is the first and last name of all students 18 years old who have vice president votes?",
        "question_pl": "Jakie jest imię i nazwisko wszystkich uczniów w wieku 18 lat, którzy mają głosy wiceprezydenta?",
        "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18",
        "query_pl": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
    },
    {
        "db_id": "department_store",
        "question": "What is the average price of all products?",
        "question_pl": "Jaka jest średnia cena wszystkich produktów?",
        "query": "SELECT avg(product_price) FROM products",
        "query_pl": "SELECT avg(product_price) FROM products"
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the name for the artist with the most number of exhibitions?",
        "question_pl": "Jak nazywa się artysta z największą liczbą wystaw?",
        "query": "SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "soccer_1",
        "question": "Hello!  Can you please provide me with a list of the player IDs and player names?",
        "question_pl": "Witaj!  Czy możesz podać mi listę identyfikatorów i nazw graczy?",
        "query": "SELECT player_api_id, player_name FROM Player",
        "query_pl": "SELECT player_api_id, player_name FROM Player"
    },
    {
        "db_id": "phone_1",
        "question": "Can you list the maximum number of used kb in screen mode?",
        "question_pl": "Czy możesz wymienić maksymalną liczbę używanych kb w trybie ekranu?",
        "query": "SELECT max(used_kb) FROM screen_mode;",
        "query_pl": "SELECT max(used_kb) FROM screen_mode;"
    },
    {
        "db_id": "chinook_1",
        "question": "State the email id of custormer id 1?",
        "question_pl": "Podaj identyfikator e-mail klienta o identyfikatorze 1?",
        "query": "select email from customer where customerid='1'",
        "query_pl": "select email from customer where customerid=\"1\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Could you please show me the average share count of transactions of each investor?",
        "question_pl": "Czy możesz mi pokazać średnią liczbę akcji w transakcjach każdego inwestora?",
        "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id",
        "query_pl": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Hi, can you tell me the name of an HR employee?",
        "question_pl": "Cześć, czy możesz mi podać nazwisko pracownika działu HR?",
        "query": "SELECT employee_name FROM Employees  where Role_code = \"HR\"",
        "query_pl": "SELECT employee_name FROM Employees  where Role_code = \"HR\""
    },
    {
        "db_id": "music_1",
        "question": "What is the name of the newest song?",
        "question_pl": "Jak nazywa się najnowsza piosenka?",
        "query": "SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1",
        "query_pl": "SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1"
    },
    {
        "db_id": "hr_1",
        "question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.",
        "question_pl": "Znajdź imię i nazwisko oraz identyfikator działu dla tych pracowników, którzy zarabiają taką kwotę wynagrodzenia, która jest najmniejszą pensją spośród wszystkich działów.",
        "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
        "query_pl": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
    },
    {
        "db_id": "college_1",
        "question": "what is the first and last name of the profesor in biology department?",
        "question_pl": "Jakie jest imię i nazwisko profesora na wydziale biologii?",
        "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"",
        "query_pl": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biologia\""
    },
    {
        "db_id": "customers_and_addresses",
        "question": "List the names of all the customers that use email as a contact channel. ",
        "question_pl": "Wymień nazwy wszystkich klientów, którzy używają poczty e-mail jako kanału kontaktu.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  \"Email\""
    },
    {
        "db_id": "customers_and_addresses",
        "question": "what is the country of zip postcode 416?",
        "question_pl": "Jaki jest kraj kodu pocztowego 416?",
        "query": "SELECT \tcountry from Addresses where zip_postcode=416 ",
        "query_pl": "SELECT \tcountry from Addresses where zip_postcode=416 "
    },
    {
        "db_id": "store_1",
        "question": "What is the title, phone and hire date of Nancy Edwards?",
        "question_pl": "Jaki jest tytuł, telefon i data zatrudnienia Nancy Edwards?",
        "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
        "query_pl": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
    },
    {
        "db_id": "flight_company",
        "question": "What is the most common type?",
        "question_pl": "Jaki jest najczęstszy typ?",
        "query": "SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question": "Show all locations and the number of gas stations in each location ordered by the count, please?",
        "question_pl": "Pokaż wszystkie lokalizacje i liczbę stacji benzynowych w każdej lokalizacji uporządkowaną według liczby, proszę?",
        "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",
        "query_pl": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
    },
    {
        "db_id": "swimming",
        "question": "Hello, are there any countries that have two or more stadiums?",
        "question_pl": "Witajcie, czy są jakieś kraje, które mają dwa lub więcej stadionów?",
        "query": "SELECT country FROM stadium group by country having count(*) >= 2",
        "query_pl": "SELECT country FROM stadium group by country having count(*) >= 2"
    },
    {
        "db_id": "school_bus",
        "question": "Can you show me the number of drivers who are from Hartford City?",
        "question_pl": "Czy możesz podać liczbę kierowców z Hartford City?",
        "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' ",
        "query_pl": "SELECT count(*) FROM driver WHERE home_city  =  \"Hartford\" "
    },
    {
        "db_id": "shop_membership",
        "question": "show the minimum amount of memberships for all branches opened in 2011 or located at city location",
        "question_pl": "pokaż minimalną liczbę członków dla wszystkich oddziałów otwartych w 2011 roku lub zlokalizowanych w mieście",
        "query": "SELECT min(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'",
        "query_pl": "SELECT min(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  \"Londyn\""
    },
    {
        "db_id": "hr_1",
        "question": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50. ",
        "question_pl": "Wyświetl e-maile pracowników, którzy nie mają procentowej prowizji i wynagrodzenia w przedziale od 7000 do 12000 i pracują w tym dziale, którego liczba wynosi 50.",
        "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
        "query_pl": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
    },
    {
        "db_id": "wedding",
        "question": "which females had a wedding in 2016?",
        "question_pl": "Które kobiety miały ślub w 2016 roku?",
        "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F'",
        "query_pl": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  \"F\""
    },
    {
        "db_id": "storm_record",
        "question": "What are the names of storms which don't have affected region in record?",
        "question_pl": "Jak nazywają się burze, które nie dotknęły żadnego regionu w historii?",
        "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
        "query_pl": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
    },
    {
        "db_id": "network_2",
        "question": "How many persons are on the list?",
        "question_pl": "Ile osób znajduje się na liście?",
        "query": "SELECT count(*) FROM Person ",
        "query_pl": "SELECT count(*) FROM Person "
    },
    {
        "db_id": "farm",
        "question": "What is the population of city Id 2?",
        "question_pl": "Jaka jest populacja miasta Id 2?",
        "query": "SELECT population FROM city WHERE City_ID = 2",
        "query_pl": "SELECT population FROM city WHERE City_ID = 2"
    },
    {
        "db_id": "insurance_fnol",
        "question": "What are all the policy types of the customer that has the most policies listed?",
        "question_pl": "Jakie są wszystkie typy polis klienta, który ma najwięcej polis na liście?",
        "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which gender makes up the majority of the staff?",
        "question_pl": "Która płeć stanowi większość pracowników?",
        "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "scientist_1",
        "question": "Fine the name of the project for which a scientist whose name contains \"Smith\" is assigned to.",
        "question_pl": "Określ nazwę projektu, do którego przypisany jest naukowiec, którego nazwisko zawiera \"Smith\".",
        "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'",
        "query_pl": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"
    },
    {
        "db_id": "document_management",
        "question": "can you please list the document types with the count of document structure code?",
        "question_pl": "Czy możesz wymienić typy dokumentów z liczbą kodów struktury dokumentu?",
        "query": "SELECT count(document_structure_code), document_type_code FROM documents GROUP BY document_type_code",
        "query_pl": "SELECT count(document_structure_code), document_type_code FROM documents GROUP BY document_type_code"
    },
    {
        "db_id": "shop_membership",
        "question": "Could you please show the membership level with the greatest number of members?",
        "question_pl": "Czy możesz wskazać poziom członkostwa z największą liczbą członków?",
        "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Could you please show me the ids of the projects with at least 2 documents?",
        "question_pl": "Czy możesz pokazać mi identyfikatory projektów z co najmniej 2 dokumentami?",
        "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "department_store",
        "question": "what is the date assigned to of the department managers?",
        "question_pl": "Jaka jest data przypisana do kierowników działów?",
        "query": "select \tdate_assigned_to from  Staff_Department_Assignments where job_title_code = 'Department Manager'",
        "query_pl": "select \tdate_assigned_to from  Staff_Department_Assignments where job_title_code = \"Kierownik działu\""
    },
    {
        "db_id": "tracking_orders",
        "question": "Can you show me the invoice numbers which are created before 1989-09-03?",
        "question_pl": "Czy możesz pokazać mi numery faktur, które zostały utworzone przed 1989-09-03?",
        "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" ",
        "query_pl": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" "
    },
    {
        "db_id": "flight_1",
        "question": "Show names for all employees with a salary greater than average",
        "question_pl": "Pokaż nazwiska wszystkich pracowników z wynagrodzeniem wyższym niż średnie.",
        "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)",
        "query_pl": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
    },
    {
        "db_id": "phone_market",
        "question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.",
        "question_pl": "Pokaż nazwy telefonów i dzielnice rynków, na których się znajdują, w kolejności rosnącej według rankingu rynku.",
        "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking",
        "query_pl": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"
    },
    {
        "db_id": "university_basketball",
        "question": "I want to know the number of public universities",
        "question_pl": "Chcę znać liczbę publicznych uniwersytetów",
        "query": "SELECT count(*) FROM university WHERE affiliation = 'Public'",
        "query_pl": "SELECT count(*) FROM university WHERE affiliation = \"Publiczny\""
    },
    {
        "db_id": "scientist_1",
        "question": "How many number if scientist belong to project AeH1",
        "question_pl": "Ilu naukowców należy do projektu AeH1?",
        "query": "SELECT count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project where T1.Code=\"AeH1\"",
        "query_pl": "SELECT count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project where T1.Code=\"AeH1\""
    },
    {
        "db_id": "news_report",
        "question": "What is the average attendance of all events?",
        "question_pl": "Jaka jest średnia frekwencja na wszystkich wydarzeniach?",
        "query": "SELECT avg(Event_Attendance) FROM event",
        "query_pl": "SELECT avg(Event_Attendance) FROM event"
    },
    {
        "db_id": "machine_repair",
        "question": "show names of technicians by order of quality rank of machine they are assigned from worst to best",
        "question_pl": "Wyświetlaj nazwiska techników w kolejności od najgorszego do najlepszego pod względem jakości przypisanego im urządzenia.",
        "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank",
        "query_pl": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
    },
    {
        "db_id": "ship_1",
        "question": "How many ships in this table?",
        "question_pl": "Ile statków znajduje się w tej tabeli?",
        "query": "select count(*) from ship",
        "query_pl": "select count(*) from ship"
    },
    {
        "db_id": "tracking_orders",
        "question": "How many total orders do we have?",
        "question_pl": "Ile mamy wszystkich zamówień?",
        "query": "SELECT count(*) FROM orders",
        "query_pl": "SELECT count(*) FROM orders"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "how many customers cards there",
        "question_pl": "Ile jest kart klientów",
        "query": "SELECT count(*) from Customers_Cards",
        "query_pl": "SELECT count(*) from Customers_Cards"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "How many products have the characteristic named \"hot\"",
        "question_pl": "Ile produktów ma cechę \"gorący\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"gorący\""
    },
    {
        "db_id": "behavior_monitoring",
        "question": "Show the detention type code for the detention with id 1?",
        "question_pl": "Pokaż kod typu zatrzymania dla zatrzymania o identyfikatorze 1?",
        "query": "SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code where detention_id=1",
        "query_pl": "SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code where detention_id=1"
    },
    {
        "db_id": "perpetrator",
        "question": "How many perpetrators are there?",
        "question_pl": "Ilu jest sprawców?",
        "query": "SELECT count(*) FROM perpetrator ",
        "query_pl": "SELECT count(*) FROM perpetrator "
    },
    {
        "db_id": "station_weather",
        "question": "hi, what is the maximum low temperature at Amersham station?",
        "question_pl": "Cześć, jaka jest maksymalna niska temperatura na stacji Amersham?",
        "query": "SELECT max(t1.low_temperature) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\"",
        "query_pl": "SELECT max(t1.low_temperature) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\""
    },
    {
        "db_id": "driving_school",
        "question": "can you show me a list of lesson date?",
        "question_pl": "Czy możesz mi pokazać listę dat lekcji?",
        "query": "SELECT lesson_date FROM Lessons",
        "query_pl": "SELECT lesson_date FROM Lessons"
    },
    {
        "db_id": "bike_1",
        "question": "what is the total duration of trips with bike id 636?",
        "question_pl": "Jaki jest całkowity czas trwania podróży z identyfikatorem roweru 636?",
        "query": "SELECT sum(duration) FROM trip WHERE bike_id  =  636",
        "query_pl": "SELECT sum(duration) FROM trip WHERE bike_id  =  636"
    },
    {
        "db_id": "twitter_1",
        "question": "How many tweets in this table?",
        "question_pl": "Ile tweetów znajduje się w tej tabeli?",
        "query": "select count(*) from tweets",
        "query_pl": "select count(*) from tweets"
    },
    {
        "db_id": "document_management",
        "question": "What documents types have more than 2 corresponding documents? ",
        "question_pl": "Jakie typy dokumentów mają więcej niż 2 odpowiadające im dokumenty?",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
    },
    {
        "db_id": "machine_repair",
        "question": "Hello!  How many technicians are there in total?",
        "question_pl": "Witaj! Ilu jest w sumie techników?",
        "query": "SELECT count(*) from technician",
        "query_pl": "SELECT count(*) from technician"
    },
    {
        "db_id": "epinions_1",
        "question": "Can you please tell me the names of the items that did not receive any reviews?",
        "question_pl": "Czy możesz podać mi nazwy przedmiotów, które nie otrzymały żadnych recenzji?",
        "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
        "query_pl": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
    },
    {
        "db_id": "products_for_hire",
        "question": "How many customers are there",
        "question_pl": "Ilu jest klientów",
        "query": "SELECT count(*) FROM customers",
        "query_pl": "SELECT count(*) FROM customers"
    },
    {
        "db_id": "aircraft",
        "question": "In which country  Swan River ' Perth located ?",
        "question_pl": "W jakim kraju znajduje się Swan River ' Perth?",
        "query": "SELECT country FROM MATCH where Location = 'Swan River , Perth'",
        "query_pl": "SELECT country FROM MATCH where Location = \"Swan River , Perth\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Hello, how many total documents are there?",
        "question_pl": "Witaj, ile jest wszystkich dokumentów?",
        "query": "select count(*) from documents",
        "query_pl": "select count(*) from documents"
    },
    {
        "db_id": "program_share",
        "question": "which program owners have programs in the morning and the night",
        "question_pl": "którzy właściciele programów mają programy rano i wieczorem",
        "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\"",
        "query_pl": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Poranek\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Noc\""
    },
    {
        "db_id": "store_1",
        "question": "How many employees have the job title Manager?",
        "question_pl": "Ilu pracowników ma stanowisko kierownika?",
        "query": "SELECT count(*) from employees where title like \"%kierownik%\"",
        "query_pl": "SELECT count(*) from employees where title like \"%kierownik%\""
    },
    {
        "db_id": "insurance_policies",
        "question": "what's the policy id for claim id 143?",
        "question_pl": "Jaki jest identyfikator polisy dla identyfikatora roszczenia 143?",
        "query": "SELECT Policy_ID FROM Claims where Claim_ID\t = \"143\"",
        "query_pl": "SELECT Policy_ID FROM Claims where Claim_ID\t = \"143\""
    },
    {
        "db_id": "sports_competition",
        "question": "Can you show me the club names and ids?",
        "question_pl": "Czy możesz pokazać mi nazwy klubów i identyfikatory?",
        "query": "SELECT name, club_id FROM CLub ",
        "query_pl": "SELECT name, club_id FROM CLub "
    },
    {
        "db_id": "city_record",
        "question": "Tell me Regional Population and GDP for City ID 2 ?",
        "question_pl": "Powiedz mi Regionalna populacja i PKB dla City ID 2 ?",
        "query": "SELECT regional_population, GDP FROM city WHERE city_id = 2",
        "query_pl": "SELECT regional_population, GDP FROM city WHERE city_id = 2"
    },
    {
        "db_id": "city_record",
        "question": "Hi there! Can you tell me which three cities have the highest regional populations, and list the population totals too?",
        "question_pl": "Cześć! Czy możesz mi powiedzieć, które trzy miasta mają największą populację w regionie, a także podać łączną liczbę ludności?",
        "query": "SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3",
        "query_pl": "SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What is the average amount of transaction? ",
        "question_pl": "Jaka jest średnia kwota transakcji?",
        "query": "SELECT avg(transaction_amount) FROM Financial_transactions",
        "query_pl": "SELECT avg(transaction_amount) FROM Financial_transactions"
    },
    {
        "db_id": "wine_1",
        "question": "Can you show me the most expensive wine made in the year 2006?",
        "question_pl": "Czy możesz mi wskazać najdroższe wino wyprodukowane w 2006 roku?",
        "query": "SELECT * FROM WINE WHERE year = 2006 order by price desc limit 1",
        "query_pl": "SELECT * FROM WINE WHERE year = 2006 order by price desc limit 1"
    },
    {
        "db_id": "chinook_1",
        "question": "In the rock genre, how many tracks are there?",
        "question_pl": "Ile jest utworów w gatunku rock?",
        "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"",
        "query_pl": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Skała\""
    },
    {
        "db_id": "music_1",
        "question": "Find the distinct names of all songs that have a higher resolution than some songs in English.",
        "question_pl": "Znajdź różne nazwy wszystkich utworów, które mają wyższą rozdzielczość niż niektóre utwory w języku angielskim.",
        "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
        "query_pl": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"angielski\")"
    },
    {
        "db_id": "game_1",
        "question": "list all the game type",
        "question_pl": "wymień wszystkie typy gier",
        "query": "SELECT gtype FROM Video_games",
        "query_pl": "SELECT gtype FROM Video_games"
    },
    {
        "db_id": "storm_record",
        "question": "Can you please show me the average damage for all storms?",
        "question_pl": "Czy możesz mi pokazać średnie uszkodzenia dla wszystkich burz?",
        "query": "SELECT avg(damage_millions_USD) FROM storm",
        "query_pl": "SELECT avg(damage_millions_USD) FROM storm"
    },
    {
        "db_id": "storm_record",
        "question": "how many region are presented on the table",
        "question_pl": "ile regionów jest prezentowanych w tabeli",
        "query": "select count(*) from region",
        "query_pl": "select count(*) from region"
    },
    {
        "db_id": "document_management",
        "question": "hi, can you list me the user name and the password of the most popular role user?",
        "question_pl": "Cześć, czy możesz podać mi nazwę użytkownika i hasło najpopularniejszego użytkownika roli?",
        "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "inn_1",
        "question": "Can you find the first and last names of all people who paid more than the rooms' base prices?",
        "question_pl": "Czy możesz znaleźć imiona i nazwiska wszystkich osób, które zapłaciły więcej niż ceny bazowe pokoi?",
        "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
        "query_pl": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
    },
    {
        "db_id": "hr_1",
        "question": "create a table with a column for department id and a column for department name",
        "question_pl": "utwórz tabelę z kolumną identyfikatora działu i kolumną nazwy działu",
        "query": "select DEPARTMENT_ID,DEPARTMENT_NAME from  departments",
        "query_pl": "select DEPARTMENT_ID,DEPARTMENT_NAME from  departments"
    },
    {
        "db_id": "department_store",
        "question": "Hi there!  Can you show me a list of all of the customer IDs and the corresponding customer names?",
        "question_pl": "Cześć!  Czy możesz pokazać mi listę wszystkich identyfikatorów klientów i odpowiadających im nazw klientów?",
        "query": "SELECT customer_name ,  customer_id FROM customers",
        "query_pl": "SELECT customer_name ,  customer_id FROM customers"
    },
    {
        "db_id": "sakila_1",
        "question": "How many films are there?",
        "question_pl": "Ile jest filmów?",
        "query": "SELECT count(*) from film ",
        "query_pl": "SELECT count(*) from film "
    },
    {
        "db_id": "decoration_competition",
        "question": "how many members are from united states or canada",
        "question_pl": "Ilu członków pochodzi ze stanów zjednoczonych lub kanady?",
        "query": "SELECT count(Name) FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"",
        "query_pl": "SELECT count(Name) FROM member WHERE Country  =  \"Stany Zjednoczone\" OR Country  =  \"Kanada\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "how many rooms are available in the apartment with short name columbus square",
        "question_pl": "ile pokoi jest dostępnych w apartamencie o skróconej nazwie columbus square",
        "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"",
        "query_pl": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""
    },
    {
        "db_id": "college_3",
        "question": "What are the first names of the students that minor in the department with DNO 140?",
        "question_pl": "Jakie są imiona i nazwiska studentów, którzy są nieletnimi w dziale z DNO 140?",
        "query": "SELECT T2.Fname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140",
        "query_pl": "SELECT T2.Fname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
    },
    {
        "db_id": "college_1",
        "question": "Can you Please list all departments?",
        "question_pl": "Czy możesz wymienić wszystkie działy?",
        "query": "SELECT DEPT_NAME FROM DEPARTMENT",
        "query_pl": "SELECT DEPT_NAME FROM DEPARTMENT"
    },
    {
        "db_id": "baseball_1",
        "question": "Which team had the most players in the all star games?",
        "question_pl": "Która drużyna miała najwięcej graczy w meczach All Star?",
        "query": "SELECT * FROM all_star GROUP BY team_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT * FROM all_star GROUP BY team_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "dorm_1",
        "question": "How many amenities are offered in all dorms?",
        "question_pl": "Ile udogodnień jest oferowanych we wszystkich akademikach?",
        "query": "select count(*) from Dorm_amenity",
        "query_pl": "select count(*) from Dorm_amenity"
    },
    {
        "db_id": "flight_1",
        "question": "can you show me average of the distances?",
        "question_pl": "Możesz mi pokazać średnią odległość?",
        "query": "SELECT avg(distance) FROM Flight ",
        "query_pl": "SELECT avg(distance) FROM Flight "
    },
    {
        "db_id": "chinook_1",
        "question": "What is the title of AC/DC's albums?",
        "question_pl": "Jakie są tytuły albumów AC/DC?",
        "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
        "query_pl": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
    },
    {
        "db_id": "csu_1",
        "question": "How many degrees did \"San Jose State University\" confer in 2000?",
        "question_pl": "Ile tytułów naukowych nadał \"San Jose State University\" w 2000 roku?",
        "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000",
        "query_pl": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"Uniwersytet Stanowy San Jose\" AND t2.year  =  2000"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Show the first name and last name for the customer with account name 900.",
        "question_pl": "Pokaż imię i nazwisko klienta z nazwą konta 900.",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
    },
    {
        "db_id": "college_2",
        "question": "Who are the students that have more than one advisor?",
        "question_pl": "Kim są studenci, którzy mają więcej niż jednego doradcę?",
        "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
    },
    {
        "db_id": "entertainment_awards",
        "question": "show the different type of artworks?",
        "question_pl": "pokazać różne rodzaje dzieł sztuki?",
        "query": "SELECT distinct TYPE FROM artwork ",
        "query_pl": "SELECT distinct TYPE FROM artwork "
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "how many distinct names of the products have characteristc name warm?",
        "question_pl": "Ile odrębnych nazw produktów ma charakterystyczną ciepłą nazwę?",
        "query": "SELECT count(DISTINCT t1.product_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"",
        "query_pl": "SELECT count(DISTINCT t1.product_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"ciepły\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Can you show the dates of transactions with at least 100 share count?",
        "question_pl": "Czy możesz podać daty transakcji z liczbą akcji wynoszącą co najmniej 100?",
        "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100",
        "query_pl": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "how many documents are there?",
        "question_pl": "Ile jest dokumentów?",
        "query": "SELECT count(*) FROM Draft_Copies ",
        "query_pl": "SELECT count(*) FROM Draft_Copies "
    },
    {
        "db_id": "driving_school",
        "question": "how many address are presented on the table",
        "question_pl": "ile adresów jest prezentowanych w tabeli",
        "query": "SELECT count(*) from addresses",
        "query_pl": "SELECT count(*) from addresses"
    },
    {
        "db_id": "debate",
        "question": "Can you show me the names of the people who were on the affirmative side of debates with an audience bigger than 200?",
        "question_pl": "Czy możesz mi pokazać nazwiska osób, które były po stronie twierdzącej w debatach z publicznością większą niż 200?",
        "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200",
        "query_pl": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"
    },
    {
        "db_id": "department_store",
        "question": "Find the id of customers whose address contains WY state and do not use credit card for payment.",
        "question_pl": "Znajdź identyfikatory klientów, których adres zawiera stan WY i którzy nie używają karty kredytowej do płatności.",
        "query": "SELECT customer_id FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
        "query_pl": "SELECT customer_id FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Karta kredytowa\""
    },
    {
        "db_id": "theme_gallery",
        "question": "Show the theme for exhibitions with records of an attendance below 100",
        "question_pl": "Pokaż temat dla wystaw z frekwencją poniżej 100 osób.",
        "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 ",
        "query_pl": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 "
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the building short name of building id 133?",
        "question_pl": "Jaka jest krótka nazwa budynku o identyfikatorze 133?",
        "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_id = 133",
        "query_pl": "SELECT building_short_name FROM Apartment_Buildings WHERE building_id = 133"
    },
    {
        "db_id": "riding_club",
        "question": "What is the most common occupation of players?",
        "question_pl": "Czym najczęściej zajmują się gracze?",
        "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Can you show me the policy ids, customer ids and policy type codes of all policies?",
        "question_pl": "Czy możesz pokazać mi identyfikatory polis, identyfikatory klientów i kody typów polis wszystkich polis?",
        "query": "SELECT Policy_ID,Customer_ID,Policy_Type_Code FROM policies ",
        "query_pl": "SELECT Policy_ID,Customer_ID,Policy_Type_Code FROM policies "
    },
    {
        "db_id": "tracking_software_problems",
        "question": "What are the number of products that had problems?",
        "question_pl": "Jaka jest liczba produktów, z którymi wystąpiły problemy?",
        "query": "SELECT count(*) FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id",
        "query_pl": "SELECT count(*) FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id"
    },
    {
        "db_id": "wrestler",
        "question": "list the location that was share by more than two wrestler",
        "question_pl": "Wymień lokalizację, którą dzieliło więcej niż dwóch zapaśników.",
        "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
        "query_pl": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the name of the document on project \"Graph Database project\"?",
        "question_pl": "Jak nazywa się dokument dotyczący projektu \"Projekt graficznej bazy danych\"?",
        "query": "SELECT document_name  FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
        "query_pl": "SELECT document_name  FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  \"Projekt graficznej bazy danych\""
    },
    {
        "db_id": "bike_1",
        "question": "Good morning, could you please let me know the IDs of the stations those are located in San Francisco?",
        "question_pl": "Dzień dobry, czy mógłbyś podać mi identyfikatory stacji, które znajdują się w San Francisco?",
        "query": "SELECT id FROM station WHERE city = \"San Francisco\" ",
        "query_pl": "SELECT id FROM station WHERE city = \"San Francisco\" "
    },
    {
        "db_id": "game_1",
        "question": "show student ids who are female and play football",
        "question_pl": "pokaż identyfikatory studentów, którzy są kobietami i grają w piłkę nożną",
        "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"",
        "query_pl": "SELECT StuID FROM Student WHERE sex  =  \"F\" INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Piłka nożna\""
    },
    {
        "db_id": "dorm_1",
        "question": "Can you show me the dorms with female only students?",
        "question_pl": "Możesz mi pokazać akademiki, w których mieszkają tylko kobiety?",
        "query": "SELECT * FROM dorm where gender = \"F\"",
        "query_pl": "SELECT * FROM dorm where gender = \"F\""
    },
    {
        "db_id": "customers_and_invoices",
        "question": "how many Invoices there",
        "question_pl": "ile jest faktur",
        "query": "SELECT count(*) from invoices",
        "query_pl": "SELECT count(*) from invoices"
    },
    {
        "db_id": "flight_4",
        "question": "Find the destination of the airport least number of routes in china?",
        "question_pl": "Znajdź lotnisko docelowe z najmniejszą liczbą tras w Chinach?",
        "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  \"Chiny\" GROUP BY T1.name ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cinema",
        "question": "Show all the locations where some cinemas were opened in year 2010",
        "question_pl": "Pokaż wszystkie lokalizacje, w których niektóre kina zostały otwarte w 2010 roku.",
        "query": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010",
        "query_pl": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010"
    },
    {
        "db_id": "race_track",
        "question": "Which was the most recently opened track?",
        "question_pl": "Który tor został ostatnio otwarty?",
        "query": "SELECT name FROM track ORDER BY year_opened DESC LIMIT 1",
        "query_pl": "SELECT name FROM track ORDER BY year_opened DESC LIMIT 1"
    },
    {
        "db_id": "browser_web",
        "question": "how many accelerators are there?",
        "question_pl": "Ile jest akceleratorów?",
        "query": "SELECT count(*) FROM web_client_accelerator",
        "query_pl": "SELECT count(*) FROM web_client_accelerator"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "How many products have a price higher than the average?",
        "question_pl": "Ile produktów ma cenę wyższą niż średnia?",
        "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "document_management",
        "question": "Can you show me how many documents there are in total?",
        "question_pl": "Czy możesz mi pokazać, ile jest w sumie dokumentów?",
        "query": "SELECT count(*) FROM documents",
        "query_pl": "SELECT count(*) FROM documents"
    },
    {
        "db_id": "flight_1",
        "question": "How many flights have an origin of Los Angeles?",
        "question_pl": "Ile lotów ma swój początek w Los Angeles?",
        "query": "SELECT count(*) FROM Flight WHERE origin  =  \"Los Angeles\"",
        "query_pl": "SELECT count(*) FROM Flight WHERE origin  =  \"Los Angeles\""
    },
    {
        "db_id": "department_management",
        "question": "tell me the name of head id  1",
        "question_pl": "Podaj mi nazwę identyfikatora głowy 1",
        "query": "SELECT name FROM head WHERE head_ID = 1",
        "query_pl": "SELECT name FROM head WHERE head_ID = 1"
    },
    {
        "db_id": "film_rank",
        "question": "Which studio has the highest gross?",
        "question_pl": "Które studio osiągnęło najwyższy wynik brutto?",
        "query": "SELECT Studio FROM film order by \tGross_in_dollar DESC limit 1",
        "query_pl": "SELECT Studio FROM film order by \tGross_in_dollar DESC limit 1"
    },
    {
        "db_id": "climbing",
        "question": "How many mountains in this table?",
        "question_pl": "Ile gór znajduje się w tej tabeli?",
        "query": "select count(*) from mountain",
        "query_pl": "select count(*) from mountain"
    },
    {
        "db_id": "store_product",
        "question": "What are the names of each district?",
        "question_pl": "Jak nazywają się poszczególne dzielnice?",
        "query": "select district_name from district",
        "query_pl": "select district_name from district"
    },
    {
        "db_id": "school_bus",
        "question": "How many drivers are there?",
        "question_pl": "Ilu jest kierowców?",
        "query": "SELECT count(*) FROM driver ",
        "query_pl": "SELECT count(*) FROM driver "
    },
    {
        "db_id": "e_learning",
        "question": "What is the latest test completion date?",
        "question_pl": "Jaka jest ostateczna data zakończenia testu?",
        "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id order by T1.date_of_completion desc limit 1",
        "query_pl": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id order by T1.date_of_completion desc limit 1"
    },
    {
        "db_id": "products_for_hire",
        "question": "can you show me a list of product description?",
        "question_pl": "Czy możesz pokazać mi listę opisów produktów?",
        "query": "SELECT product_description FROM Products_for_Hire",
        "query_pl": "SELECT product_description FROM Products_for_Hire"
    },
    {
        "db_id": "baseball_1",
        "question": "What is the full name and id of the college with the largest number of baseball players?",
        "question_pl": "Jaka jest pełna nazwa i identyfikator uczelni z największą liczbą graczy w baseball?",
        "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Show all product names and the number of customers having an order on each product.",
        "question_pl": "Pokaż wszystkie nazwy produktów i liczbę klientów, którzy złożyli zamówienie na każdy produkt.",
        "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",
        "query_pl": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
    },
    {
        "db_id": "college_2",
        "question": "how many courses have prerequisite?",
        "question_pl": "Ile kursów ma wymagania wstępne?",
        "query": "SELECT count(*) FROM course WHERE course_id IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT count(*) FROM course WHERE course_id IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "flight_company",
        "question": "How many airports has pilot Thompson driven an aircraft?",
        "question_pl": "Na ilu lotniskach pilot Thompson prowadził samolot?",
        "query": "SELECT count(*) FROM airport WHERE id IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
        "query_pl": "SELECT count(*) FROM airport WHERE id IN ( SELECT airport_id FROM flight WHERE pilot  =  \"Thompson\" );"
    },
    {
        "db_id": "solvency_ii",
        "question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.",
        "question_pl": "Pokaż nazwy produktów, które biorą udział w co najmniej dwóch wydarzeniach, w porządku alfabetycznym rosnąco według nazwy produktu.",
        "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name",
        "query_pl": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name"
    },
    {
        "db_id": "sports_competition",
        "question": "What are the names of players who get more than the average points?",
        "question_pl": "Jakie są nazwiska graczy, którzy zdobywają więcej niż średnia punktów?",
        "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
        "query_pl": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
    },
    {
        "db_id": "college_2",
        "question": "How many instructors are there?",
        "question_pl": "Ilu jest instruktorów?",
        "query": "SELECT count(*) FROM instructor ",
        "query_pl": "SELECT count(*) FROM instructor "
    },
    {
        "db_id": "tracking_software_problems",
        "question": "What is the staff id of Bosco?",
        "question_pl": "Jaki jest identyfikator personelu Bosco?",
        "query": "SELECT staff_id FROM staff where staff_last_name = \"Bosco\"",
        "query_pl": "SELECT staff_id FROM staff where staff_last_name = \"Bosco\""
    },
    {
        "db_id": "allergy_1",
        "question": "What is the most common major?",
        "question_pl": "Jaki jest najczęstszy kierunek studiów?",
        "query": "SELECT Major FROM Student group by Major  order by count(*) desc limit 1",
        "query_pl": "SELECT Major FROM Student group by Major  order by count(*) desc limit 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is the customer ID who is associated with the latest policy?",
        "question_pl": "Jaki jest identyfikator klienta powiązanego z najnowszą polisą?",
        "query": "SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)",
        "query_pl": "SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
    },
    {
        "db_id": "program_share",
        "question": "What are names of all programs? ",
        "question_pl": "Jakie są nazwy wszystkich programów?",
        "query": "SELECT name FROM program",
        "query_pl": "SELECT name FROM program"
    },
    {
        "db_id": "chinook_1",
        "question": "What is the average unit price of Rock tracks?",
        "question_pl": "Jaka jest średnia cena jednostkowa utworów Rock?",
        "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"",
        "query_pl": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Skała\""
    },
    {
        "db_id": "wine_1",
        "question": "Which is the most expensive wine?",
        "question_pl": "Które wino jest najdroższe?",
        "query": "SELECT * FROM WINE order by price desc limit 1",
        "query_pl": "SELECT * FROM WINE order by price desc limit 1"
    },
    {
        "db_id": "store_1",
        "question": "Show the billing address with the highest amount of invoice?",
        "question_pl": "Pokaż adres rozliczeniowy z najwyższą kwotą faktury?",
        "query": "SELECT billing_address FROM invoices ORDER BY total DESC LIMIT 1",
        "query_pl": "SELECT billing_address FROM invoices ORDER BY total DESC LIMIT 1"
    },
    {
        "db_id": "climbing",
        "question": "Please list the names of all the climbers.",
        "question_pl": "Wymień nazwiska wszystkich wspinaczy.",
        "query": "SELECT Name FROM climber ",
        "query_pl": "SELECT Name FROM climber "
    },
    {
        "db_id": "college_1",
        "question": "How many professors in this table?",
        "question_pl": "Ilu profesorów znajduje się w tej tabeli?",
        "query": "SELECT count(*) FROM professor",
        "query_pl": "SELECT count(*) FROM professor"
    },
    {
        "db_id": "college_1",
        "question": "Can you tell me the amount and code of the job with the most employees?",
        "question_pl": "Czy możesz mi podać kwotę i kod zadania z największą liczbą pracowników?",
        "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "culture_company",
        "question": "What is the publisher with most number of books?",
        "question_pl": "Jaki jest wydawca z największą liczbą książek?",
        "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_4",
        "question": "what is average of volume?",
        "question_pl": "Jaka jest średnia objętość?",
        "query": "SELECT avg(volume) FROM music_festival",
        "query_pl": "SELECT avg(volume) FROM music_festival"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "How many documents do not have expense reports?",
        "question_pl": "Ile dokumentów nie posiada raportów wydatków?",
        "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
        "query_pl": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
    },
    {
        "db_id": "race_track",
        "question": "give me the race class with the most number of races ",
        "question_pl": "Podaj klasę wyścigów z największą liczbą wyścigów.",
        "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "musical",
        "question": "What 1986 movie was nominated for a Tony Award for Best Book of a Musical?",
        "question_pl": "Który film z 1986 roku był nominowany do nagrody Tony za najlepszą książkę do musicalu?",
        "query": "select name from musical where year = 1986 and category = 'Best Book of a Musical' and Result = 'Nominated'",
        "query_pl": "select name from musical where year = 1986 and category = \"Najlepsza książka do musicalu\" and Result = \"Nominowany\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "What is the maximum share count of all of the different transaction type codes?",
        "question_pl": "Jaka jest maksymalna liczba udziałów we wszystkich kodach różnych typów transakcji?",
        "query": "SELECT transaction_type_code ,  max(share_count)  FROM TRANSACTIONS GROUP BY transaction_type_code",
        "query_pl": "SELECT transaction_type_code ,  max(share_count)  FROM TRANSACTIONS GROUP BY transaction_type_code"
    },
    {
        "db_id": "entertainment_awards",
        "question": "Can you tell me which year had more than one festival please?",
        "question_pl": "Czy możesz mi powiedzieć, który rok miał więcej niż jeden festiwal?",
        "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1",
        "query_pl": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "how many  Customers are there",
        "question_pl": "Ilu jest klientów",
        "query": "SELECT count(*) from Customers",
        "query_pl": "SELECT count(*) from Customers"
    },
    {
        "db_id": "formula_1",
        "question": "Find the id, forename and number of races of all drivers who have at least participated in two races?",
        "question_pl": "Znajdź identyfikator, imię i liczbę wyścigów wszystkich kierowców, którzy wzięli udział w co najmniej dwóch wyścigach?",
        "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
    },
    {
        "db_id": "college_1",
        "question": "Hello!  How many students are enrolled in the class with the course code of ACCT-211?",
        "question_pl": "Witaj! Ilu studentów jest zapisanych na zajęcia z kodem przedmiotu ACCT-211?",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  \"ACCT-211\""
    },
    {
        "db_id": "customers_and_addresses",
        "question": "What is the total number of products?",
        "question_pl": "Jaka jest całkowita liczba produktów?",
        "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id ",
        "query_pl": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id "
    },
    {
        "db_id": "cinema",
        "question": "How many different cinemas are on the list?",
        "question_pl": "Ile różnych kin znajduje się na liście?",
        "query": "SELECT count(distinct cinema_id) from cinema",
        "query_pl": "SELECT count(distinct cinema_id) from cinema"
    },
    {
        "db_id": "product_catalog",
        "question": "Can you tell me highest value of the entry name?",
        "question_pl": "Czy możesz mi podać najwyższą wartość nazwy wpisu?",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
    },
    {
        "db_id": "store_1",
        "question": "what is the billing address of germany",
        "question_pl": "Jaki jest adres rozliczeniowy w Niemczech?",
        "query": "select billing_address from invoices where billing_country = \"Germany\"",
        "query_pl": "select billing_address from invoices where billing_country = \"Niemcy\""
    },
    {
        "db_id": "decoration_competition",
        "question": "list the name of the members in the order of their rank in rounds",
        "question_pl": "wymień imiona i nazwiska członków w kolejności ich rangi w rundach",
        "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC",
        "query_pl": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
    },
    {
        "db_id": "products_for_hire",
        "question": "what is the daily hire cost of the product id 1",
        "question_pl": "Jaki jest dzienny koszt wynajmu produktu o identyfikatorze 1?",
        "query": "SELECT daily_hire_cost\t FROM Products_for_Hire where product_id=1",
        "query_pl": "SELECT daily_hire_cost\t FROM Products_for_Hire where product_id=1"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "what are the location of the enzymes?",
        "question_pl": "Jaka jest lokalizacja enzymów?",
        "query": "SELECT distinct Location from enzyme",
        "query_pl": "SELECT distinct Location from enzyme"
    },
    {
        "db_id": "music_1",
        "question": "Can you show the artist name of song Tumi robe nirobe?",
        "question_pl": "Możesz podać nazwę wykonawcy piosenki Tumi robe nirobe?",
        "query": "SELECT \tartist_name FROM song  WHERE  song_name = \"Tumi robe nirobe\" ",
        "query_pl": "SELECT \tartist_name FROM song  WHERE  song_name = \"Szlafrok Tumi nirobe\" "
    },
    {
        "db_id": "tracking_orders",
        "question": "what is the customer name of customer id 1",
        "question_pl": "Jaka jest nazwa klienta o identyfikatorze klienta 1",
        "query": "SELECT customer_name FROM Customers WHERE customer_id=1",
        "query_pl": "SELECT customer_name FROM Customers WHERE customer_id=1"
    },
    {
        "db_id": "college_2",
        "question": "What are the names of all students who took any course in the fall semester of the year 2003?",
        "question_pl": "Jakie są nazwiska wszystkich studentów, którzy uczestniczyli w jakimkolwiek kursie w semestrze jesiennym 2003 roku?",
        "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
        "query_pl": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  \"Upadek\" AND YEAR  =  2003)"
    },
    {
        "db_id": "match_season",
        "question": "how many different languages do countries speak?",
        "question_pl": "iloma językami posługują się poszczególne kraje?",
        "query": "SELECT count(distinct Official_native_language) FROM country ",
        "query_pl": "SELECT count(distinct Official_native_language) FROM country "
    },
    {
        "db_id": "csu_1",
        "question": "how many campuses are presented on the table",
        "question_pl": "ile kampusów jest przedstawionych w tabeli",
        "query": "SELECT count(*) FROM campuses",
        "query_pl": "SELECT count(*) FROM campuses"
    },
    {
        "db_id": "entrepreneur",
        "question": "How many weight of Francesco Postiglione?",
        "question_pl": "Ile waży Francesco Postiglione?",
        "query": "SELECT weight FROM people where name = \"Francesco Postiglione\"",
        "query_pl": "SELECT weight FROM people where name = \"Francesco Postiglione\""
    },
    {
        "db_id": "insurance_fnol",
        "question": "How many service names in this table?",
        "question_pl": "Ile nazw usług znajduje się w tej tabeli?",
        "query": "select count(Service_name) from Services",
        "query_pl": "select count(Service_name) from Services"
    },
    {
        "db_id": "gas_company",
        "question": "what is the average of market value?",
        "question_pl": "Jaka jest średnia wartość rynkowa?",
        "query": "SELECT avg(Market_Value) FROM company",
        "query_pl": "SELECT avg(Market_Value) FROM company"
    },
    {
        "db_id": "musical",
        "question": "Can you list the awards of the musical nominee \"Bob Fosse\"?",
        "question_pl": "Czy możesz wymienić nagrody nominowanego do musicalu \"Bob Fosse\"?",
        "query": "SELECT DISTINCT Award FROM musical WHERE Nominee = \"Bob Fosse\"",
        "query_pl": "SELECT DISTINCT Award FROM musical WHERE Nominee = \"Bob Fosse\""
    },
    {
        "db_id": "shop_membership",
        "question": "What are the register year of Jeremy Jarmon?",
        "question_pl": "Jaki jest rok rejestracji Jeremy'ego Jarmona?",
        "query": "SELECT T1.register_year FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.name=\"Jeremy Jarmon\"",
        "query_pl": "SELECT T1.register_year FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.name=\"Jeremy Jarmon\""
    },
    {
        "db_id": "school_player",
        "question": "Show the School name with School_ID 1?",
        "question_pl": "Pokaż nazwę szkoły z identyfikatorem School_ID 1?",
        "query": "SELECT School FROM school WHERE School_ID='1'",
        "query_pl": "SELECT School FROM school WHERE School_ID=\"1\""
    },
    {
        "db_id": "student_1",
        "question": "What are the names of all of the students?",
        "question_pl": "Jak nazywają się wszyscy uczniowie?",
        "query": "select lastname,firstname from list",
        "query_pl": "select lastname,firstname from list"
    },
    {
        "db_id": "journal_committee",
        "question": "Show the names of editors of age either 24 or 25.",
        "question_pl": "Pokaż nazwiska redaktorów w wieku 24 lub 25 lat.",
        "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25",
        "query_pl": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Can you list the asset ids, the fault log entry ids and the fault descriptions? ",
        "question_pl": "Czy możesz wymienić identyfikatory zasobów, identyfikatory wpisów dziennika błędów i opisy błędów?",
        "query": "SELECT asset_id, fault_log_entry_id, fault_description from Fault_Log",
        "query_pl": "SELECT asset_id, fault_log_entry_id, fault_description from Fault_Log"
    },
    {
        "db_id": "driving_school",
        "question": "What are the lessons thought by jenessa",
        "question_pl": "Jakie lekcje wymyśliła jenessa?",
        "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" ",
        "query_pl": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" "
    },
    {
        "db_id": "flight_1",
        "question": "list the salaries in ascending order",
        "question_pl": "wypisz pensje w porządku rosnącym",
        "query": "SELECT \tsalary FROM Employee ORDER BY salary ASC",
        "query_pl": "SELECT \tsalary FROM Employee ORDER BY salary ASC"
    },
    {
        "db_id": "climbing",
        "question": "what is height of Kibo (Uhuru Pk)\t",
        "question_pl": "Jaka jest wysokość Kibo (Uhuru Pk)?",
        "query": "SELECT height FROM mountain where name='Kibo (Uhuru Pk)'",
        "query_pl": "SELECT height FROM mountain where name=\"Kibo (Uhuru Pk)\""
    },
    {
        "db_id": "department_management",
        "question": "how many departments are there?",
        "question_pl": "Ile jest działów?",
        "query": "SELECT count(*) FROM department",
        "query_pl": "SELECT count(*) FROM department"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Would you please show me the ids of all employees who don't destroy any documents?",
        "question_pl": "Czy mógłbyś pokazać mi identyfikatory wszystkich pracowników, którzy nie zniszczyli żadnych dokumentów?",
        "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_pl": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
    },
    {
        "db_id": "county_public_safety",
        "question": "Hi there!  Can you show me a list of all of the cities including city IDs and city names?",
        "question_pl": "Cześć!  Czy możesz pokazać mi listę wszystkich miast wraz z ich identyfikatorami i nazwami?",
        "query": "SELECT City_ID,Name FROM city ",
        "query_pl": "SELECT City_ID,Name FROM city "
    },
    {
        "db_id": "insurance_policies",
        "question": "Hello, I was wondering how many claims are made?",
        "question_pl": "Witaj, zastanawiałem się, ile roszczeń jest składanych?",
        "query": "SELECT count(*) FROM Claims",
        "query_pl": "SELECT count(*) FROM Claims"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT count(*) FROM customers",
        "query_pl": "SELECT count(*) FROM customers"
    },
    {
        "db_id": "twitter_1",
        "question": "How many users are followed by Mary?",
        "question_pl": "Ilu użytkowników śledzi Mary?",
        "query": "SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\"",
        "query_pl": "SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\""
    },
    {
        "db_id": "riding_club",
        "question": "what are the names of the players?",
        "question_pl": "Jakie są imiona zawodników?",
        "query": "SELECT Player_name FROM Player",
        "query_pl": "SELECT Player_name FROM Player"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Hello! How many transactions are there total?",
        "question_pl": "Witaj, ile jest w sumie transakcji?",
        "query": "SELECT count(*) FROM Financial_transactions ",
        "query_pl": "SELECT count(*) FROM Financial_transactions "
    },
    {
        "db_id": "station_weather",
        "question": "Hello!  Can you provide me with a list of all train names for trains that are associated with the local authority of Chiltern?",
        "question_pl": "Witajcie!  Czy możesz dostarczyć mi listę wszystkich nazw pociągów, które są powiązane z lokalnymi władzami Chiltern?",
        "query": "SELECT distinct t3.name  FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"",
        "query_pl": "SELECT distinct t3.name  FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\""
    },
    {
        "db_id": "insurance_policies",
        "question": "hi I was wondering how many policies Ellsworth Paucek has?",
        "question_pl": "Cześć, zastanawiałem się, ile polis ma Ellsworth Paucek?",
        "query": "SELECT count(*) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id WHERE T1.customer_details = \"Ellsworth Paucek\"",
        "query_pl": "SELECT count(*) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id WHERE T1.customer_details = \"Ellsworth Paucek\""
    },
    {
        "db_id": "flight_1",
        "question": "LIST THE NAME OF THE AIRCRAFTS",
        "question_pl": "WYMIEŃ NAZWY SAMOLOTÓW",
        "query": "SELECT name from aircraft ",
        "query_pl": "SELECT name from aircraft "
    },
    {
        "db_id": "scientist_1",
        "question": "how many projects are presented on the table",
        "question_pl": "Ile projektów jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM projects",
        "query_pl": "SELECT count(*) FROM projects"
    },
    {
        "db_id": "flight_4",
        "question": "how many airports are presented on the table",
        "question_pl": "ile lotnisk jest wyświetlanych w tabeli",
        "query": "select count(*) from airports",
        "query_pl": "select count(*) from airports"
    },
    {
        "db_id": "driving_school",
        "question": "how many Lessons there",
        "question_pl": "Ile jest lekcji",
        "query": "SELECT count(*) FROM Lessons ",
        "query_pl": "SELECT count(*) FROM Lessons "
    },
    {
        "db_id": "university_basketball",
        "question": "What is the Primary conference of Lebanon Valley College?",
        "question_pl": "Jaka jest główna konferencja Lebanon Valley College?",
        "query": "SELECT Primary_conference FROM university WHERE School = \"Lebanon Valley College\"",
        "query_pl": "SELECT Primary_conference FROM university WHERE School = \"Lebanon Valley College\""
    },
    {
        "db_id": "school_bus",
        "question": "how many driver are presented on the table",
        "question_pl": "ilu kierowców jest prezentowanych w tabeli",
        "query": "select count(*) from driver",
        "query_pl": "select count(*) from driver"
    },
    {
        "db_id": "perpetrator",
        "question": "what is the name of people that are not perpetrators ",
        "question_pl": "Jak nazywają się ludzie, którzy nie są sprawcami?",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)",
        "query_pl": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)"
    },
    {
        "db_id": "college_3",
        "question": "what is the last names of faculties who are members of computer science department?  ",
        "question_pl": "Jakie są nazwiska wykładowców, którzy są członkami wydziału informatyki?  ",
        "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"",
        "query_pl": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Informatyka\""
    },
    {
        "db_id": "hr_1",
        "question": "How many employees first names contain the letter M?",
        "question_pl": "Ile imion pracowników zawiera literę M?",
        "query": "SELECT count(*) FROM employees WHERE first_name LIKE '%M%'",
        "query_pl": "SELECT count(*) FROM employees WHERE first_name LIKE '%M%'"
    },
    {
        "db_id": "roller_coaster",
        "question": "What is the  height of the highest roller coaster?",
        "question_pl": "Jaka jest wysokość najwyższej kolejki górskiej?",
        "query": "SELECT max(height) FROM roller_coaster",
        "query_pl": "SELECT max(height) FROM roller_coaster"
    },
    {
        "db_id": "student_assessment",
        "question": "whats the course id of statistics ",
        "question_pl": "jaki jest identyfikator kursu statystyki",
        "query": "SELECT course_id FROM Courses WHERE course_name = \"statistics\"",
        "query_pl": "SELECT course_id FROM Courses WHERE course_name = \"statystyki\""
    },
    {
        "db_id": "movie_1",
        "question": "what is the highest rating star?",
        "question_pl": "Jaka jest najwyższa gwiazdka oceny?",
        "query": "SELECT max(stars) FROM Rating",
        "query_pl": "SELECT max(stars) FROM Rating"
    },
    {
        "db_id": "riding_club",
        "question": "What is the name of the player with the largest number of votes?",
        "question_pl": "Jak nazywa się gracz z największą liczbą głosów?",
        "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
        "query_pl": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1"
    },
    {
        "db_id": "small_bank_1",
        "question": "Hi, could you please let me know what is the average savings balance of all customers?",
        "question_pl": "Cześć, czy możesz mi powiedzieć, jakie jest średnie saldo oszczędności wszystkich klientów?",
        "query": "SELECT avg(balance) from savings",
        "query_pl": "SELECT avg(balance) from savings"
    },
    {
        "db_id": "college_2",
        "question": "How many instructors are in the statistics department?",
        "question_pl": "Ilu instruktorów pracuje w dziale statystyki?",
        "query": "SELECT count(*) FROM instructor WHERE dept_name  =  'Statistics'",
        "query_pl": "SELECT count(*) FROM instructor WHERE dept_name  =  \"Statystyki\""
    },
    {
        "db_id": "department_store",
        "question": "Hello!  Can you provide me with a list of all the different product types?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich typów produktów?",
        "query": "SELECT distinct product_type_code  FROM products GROUP BY product_type_code",
        "query_pl": "SELECT distinct product_type_code  FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "product_catalog",
        "question": "what are the names of all catalogs  ",
        "question_pl": "jakie są nazwy wszystkich katalogów",
        "query": "SELECT catalog_name FROM catalogs",
        "query_pl": "SELECT catalog_name FROM catalogs"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Could you please tell me the total amount paid in claim headers?",
        "question_pl": "Czy możesz podać mi całkowitą kwotę wypłaconą w nagłówkach roszczeń?",
        "query": "SELECT sum(amount_piad) FROM claim_headers",
        "query_pl": "SELECT sum(amount_piad) FROM claim_headers"
    },
    {
        "db_id": "baseball_1",
        "question": "Show me the salary of team id ATL?",
        "question_pl": "Pokaż mi wynagrodzenie drużyny id ATL?",
        "query": "SELECT salary FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T1.team_id = \"ATL\"",
        "query_pl": "SELECT salary FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T1.team_id = \"ATL\""
    },
    {
        "db_id": "company_office",
        "question": "What is the name of the building with the largest height?",
        "question_pl": "Jak nazywa się budynek o największej wysokości?",
        "query": "SELECT name FROM buildings ORDER BY Height DESC LIMIT 1",
        "query_pl": "SELECT name FROM buildings ORDER BY Height DESC LIMIT 1"
    },
    {
        "db_id": "network_2",
        "question": "Hello, could you find how many friends Alice has?",
        "question_pl": "Witaj, możesz sprawdzić ilu przyjaciół ma Alice?",
        "query": "SELECT count(*) FROM PersonFriend where name = 'Alice' ",
        "query_pl": "SELECT count(*) FROM PersonFriend where name = \"Alice\" "
    },
    {
        "db_id": "railway",
        "question": "Can you tell me the name of the oldest manager please?",
        "question_pl": "Czy możesz mi podać nazwisko najstarszego menedżera?",
        "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question": "How many schools are there?",
        "question_pl": "Ile jest szkół?",
        "query": "SELECT count(DISTINCT SCHOOL_CODE) FROM DEPARTMENT",
        "query_pl": "SELECT count(DISTINCT SCHOOL_CODE) FROM DEPARTMENT"
    },
    {
        "db_id": "soccer_2",
        "question": "Hello!  Can you provide me with a list of all of the colleges located in the state of LA?",
        "question_pl": "Witaj!  Czy możesz podać mi listę wszystkich uczelni znajdujących się w stanie Los Angeles?",
        "query": "SELECT cName FROM College WHERE state = \"LA\"",
        "query_pl": "SELECT cName FROM College WHERE state = \"LA\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "list all city towns",
        "question_pl": "wymień wszystkie miasta",
        "query": "SELECT City_Town FROM Addresses ",
        "query_pl": "SELECT City_Town FROM Addresses "
    },
    {
        "db_id": "movie_1",
        "question": "how many movies are there in total?",
        "question_pl": "Ile jest w sumie filmów?",
        "query": "SELECT count(*) FROM Movie ",
        "query_pl": "SELECT count(*) FROM Movie "
    },
    {
        "db_id": "party_people",
        "question": "How many ministers were there?",
        "question_pl": "Ilu było ministrów?",
        "query": "SELECT count(minister) FROM party",
        "query_pl": "SELECT count(minister) FROM party"
    },
    {
        "db_id": "college_1",
        "question": "How many professors have either a Ph.D. or a MA degree?",
        "question_pl": "Ilu profesorów ma tytuł doktora lub magistra?",
        "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'",
        "query_pl": "SELECT count(*) FROM professor WHERE prof_high_degree  =  \"Ph.D.\" OR prof_high_degree  =  \"MA\""
    },
    {
        "db_id": "flight_1",
        "question": "What is the salary and name of the employee who has the least number of certificates on aircrafts with distance more than 5000?",
        "question_pl": "Jaka jest pensja i nazwisko pracownika, który ma najmniejszą liczbę certyfikatów na samolotach o zasięgu powyżej 5000?",
        "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "game_injury",
        "question": "what is the average attendance of Cowboys Stadium?",
        "question_pl": "Jaka jest średnia frekwencja na stadionie Cowboys?",
        "query": "SELECT Average_Attendance FROM stadium where name = \"Cowboys Stadium\"",
        "query_pl": "SELECT Average_Attendance FROM stadium where name = \"Stadion Cowboys\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Show details of all investors that made transactions with sgare greater than 100?",
        "question_pl": "Pokaż szczegóły wszystkich inwestorów, którzy dokonali transakcji z sgare większym niż 100?",
        "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100",
        "query_pl": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
    },
    {
        "db_id": "performance_attendance",
        "question": "can you show me a list of locations?",
        "question_pl": "Czy możesz pokazać mi listę lokalizacji?",
        "query": "SELECT Location FROM performance ",
        "query_pl": "SELECT Location FROM performance "
    },
    {
        "db_id": "chinook_1",
        "question": "I want to know the invoice dates corresponding to customers",
        "question_pl": "Chcę znać daty faktur odpowiadające klientom",
        "query": "SELECT T1.FirstName, T1.lastname, T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId ",
        "query_pl": "SELECT T1.FirstName, T1.lastname, T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId "
    },
    {
        "db_id": "behavior_monitoring",
        "question": "WHAT IS THE EMAIL ADDRESS OF LYLA WILSON MEDHURST ?",
        "question_pl": "JAKI JEST ADRES E-MAIL LYLA WILSON MEDHURST?",
        "query": "SELECT email_address FROM Teachers WHERE first_name = 'Lyla' and middle_name = 'Wilson' and last_name = 'Medhurst'",
        "query_pl": "SELECT email_address FROM Teachers WHERE first_name = \"Lyla\" and middle_name = \"Wilson\" and last_name = \"Medhurst\""
    },
    {
        "db_id": "csu_1",
        "question": "can you show me campuses years?",
        "question_pl": "Możesz mi pokazać lata kampusowe?",
        "query": "SELECT Year FROM Campuses",
        "query_pl": "SELECT Year FROM Campuses"
    },
    {
        "db_id": "debate",
        "question": "can you list the names of all people? ",
        "question_pl": "Czy możesz wymienić nazwiska wszystkich osób?",
        "query": "SELECT Name FROM people",
        "query_pl": "SELECT Name FROM people"
    },
    {
        "db_id": "pilot_record",
        "question": "What are the names of the pilots with IDs 1 and 2?",
        "question_pl": "Jak nazywają się piloci o identyfikatorach 1 i 2?",
        "query": "select pilot_name from pilot where pilot_ID = 1 or pilot_ID = 2",
        "query_pl": "select pilot_name from pilot where pilot_ID = 1 or pilot_ID = 2"
    },
    {
        "db_id": "document_management",
        "question": "Find the total access count of all documents in the most popular document type.",
        "question_pl": "Znajdź całkowitą liczbę dostępów do wszystkich dokumentów w najpopularniejszym typie dokumentu.",
        "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many fault logs are there in total?",
        "question_pl": "Ile jest w sumie dzienników błędów?",
        "query": "SELECT count(fault_log_entry_id) FROM Fault_Log ",
        "query_pl": "SELECT count(fault_log_entry_id) FROM Fault_Log "
    },
    {
        "db_id": "loan_1",
        "question": "How many customers have loans that total more than 5000?",
        "question_pl": "Ilu klientów ma pożyczki o łącznej wartości przekraczającej 5000?",
        "query": "select count(*) from (SELECT * FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000)",
        "query_pl": "select count(*) from (SELECT * FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000)"
    },
    {
        "db_id": "e_learning",
        "question": "can you show me a list of login name?",
        "question_pl": "Czy możesz pokazać mi listę loginów?",
        "query": "SELECT login_name FROM students",
        "query_pl": "SELECT login_name FROM students"
    },
    {
        "db_id": "manufactory_1",
        "question": "what are the average revenues of all compaies?",
        "question_pl": "Jakie są średnie przychody wszystkich firm?",
        "query": "SELECT avg(revenue) FROM manufacturers",
        "query_pl": "SELECT avg(revenue) FROM manufacturers"
    },
    {
        "db_id": "hr_1",
        "question": "Which department IDs have manager ids that are from 0-100?",
        "question_pl": "Które identyfikatory działów mają identyfikatory menedżerów z zakresu 0-100?",
        "query": "SELECT department_id FROM departments where manager_id >= 0 and manager_id <= 100",
        "query_pl": "SELECT department_id FROM departments where manager_id >= 0 and manager_id <= 100"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Hello there!  Which roll code on this list is the most common?",
        "question_pl": "Witaj!  Który kod rolki z tej listy jest najbardziej popularny?",
        "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "company_1",
        "question": "Show me all the departments",
        "question_pl": "Pokaż mi wszystkie działy",
        "query": "SELECT * FROM department",
        "query_pl": "SELECT * FROM department"
    },
    {
        "db_id": "activity_1",
        "question": "how many student of there",
        "question_pl": "ilu jest tam studentów",
        "query": "SELECT count(*) from student",
        "query_pl": "SELECT count(*) from student"
    },
    {
        "db_id": "college_1",
        "question": "What is the name of the department that has the largest number of students enrolled?",
        "question_pl": "Jak nazywa się wydział z największą liczbą zapisanych studentów?",
        "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "news_report",
        "question": "how many journalist there",
        "question_pl": "ilu jest tam dziennikarzy",
        "query": "SELECT count(*) FROM journalist",
        "query_pl": "SELECT count(*) FROM journalist"
    },
    {
        "db_id": "tracking_orders",
        "question": "Hello!  How many customers have an order status of \"On Road\"?",
        "question_pl": "Witaj! Ilu klientów ma status zamówienia \"W drodze\"?",
        "query": "SELECT count(*) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
        "query_pl": "SELECT count(*) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Na drodze\""
    },
    {
        "db_id": "activity_1",
        "question": "Find the ids of the students who participate in Canoeing and Kayaking.",
        "question_pl": "Znajdź identyfikatory uczniów, którzy uczestniczą w spływach kajakowych.",
        "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'",
        "query_pl": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"Kajakarstwo\" INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"Kajakarstwo\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "what are the characteristics of the product name 'sesame'?",
        "question_pl": "Jakie są cechy charakterystyczne nazwy produktu \"sezam\"?",
        "query": "SELECT t2.characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT t2.characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "twitter_1",
        "question": "What are the total number of followers for all users?",
        "question_pl": "Jaka jest łączna liczba obserwujących wszystkich użytkowników?",
        "query": "SELECT sum(followers) FROM user_profiles ",
        "query_pl": "SELECT sum(followers) FROM user_profiles "
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What were the dates that APP sent their grants?",
        "question_pl": "Jakie były daty wysłania dotacji przez APP?",
        "query": "SELECT sent_date FROM Documents where document_type_code=\"APP\"",
        "query_pl": "SELECT sent_date FROM Documents where document_type_code=\"APP\""
    },
    {
        "db_id": "college_1",
        "question": "What are the first names of all students who are taking classes from the accounting department?",
        "question_pl": "Jakie są imiona wszystkich studentów, którzy uczęszczają na zajęcia z działu księgowości?",
        "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting'",
        "query_pl": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  \"Księgowość\""
    },
    {
        "db_id": "college_1",
        "question": "Could you please find all the names of the students who took some course and got an A?",
        "question_pl": "Czy mógłbyś znaleźć nazwiska wszystkich studentów, którzy wzięli udział w jakimś kursie i otrzymali piątkę?",
        "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A'",
        "query_pl": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  \"A\""
    },
    {
        "db_id": "sports_competition",
        "question": "What year did the IFG Club form?",
        "question_pl": "W którym roku powstał klub IFG?",
        "query": "SELECT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"IFG\"",
        "query_pl": "SELECT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"IFG\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What type of organizations are there? ",
        "question_pl": "Jakie są rodzaje organizacji?",
        "query": "SELECT organisation_type FROM organisation_Types ",
        "query_pl": "SELECT organisation_type FROM organisation_Types "
    },
    {
        "db_id": "game_1",
        "question": "Show the game name that has most number of hours played.",
        "question_pl": "Pokaż nazwę gry z największą liczbą rozegranych godzin.",
        "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1",
        "query_pl": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"
    },
    {
        "db_id": "school_finance",
        "question": "List the name of the school with the highest enrollment?",
        "question_pl": "Wymień nazwę szkoły z największą liczbą uczniów?",
        "query": "SELECT school_name FROM school ORDER BY enrollment desc limit 1",
        "query_pl": "SELECT school_name FROM school ORDER BY enrollment desc limit 1"
    },
    {
        "db_id": "swimming",
        "question": "List the countries more than two swimmer?",
        "question_pl": "Wymień kraje, w których jest więcej niż dwóch pływaków?",
        "query": "SELECT nationality  FROM swimmer GROUP BY nationality HAVING count(*)  >  2",
        "query_pl": "SELECT nationality  FROM swimmer GROUP BY nationality HAVING count(*)  >  2"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "What are the dates of assessment notes for students with first name 'Fanny'?",
        "question_pl": "Jakie są daty wystawienia ocen dla uczniów o imieniu \"Fanny\"?",
        "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"",
        "query_pl": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""
    },
    {
        "db_id": "e_learning",
        "question": "How many courses are taught?",
        "question_pl": "Ile kursów jest prowadzonych?",
        "query": "SELECT COUNT(*) FROM Courses",
        "query_pl": "SELECT COUNT(*) FROM Courses"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "How many documents are named \"Robin CV\"?",
        "question_pl": "Ile dokumentów nosi nazwę \"Robin CV\"?",
        "query": "SELECT count(*) from all_documents where document_name  =  \"Robin CV\"",
        "query_pl": "SELECT count(*) from all_documents where document_name  =  \"Robin CV\""
    },
    {
        "db_id": "solvency_ii",
        "question": "Can you list all the product type codes that have two or more products?",
        "question_pl": "Czy możesz wymienić wszystkie kody typów produktów, które mają dwa lub więcej produktów?",
        "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*) >= 2",
        "query_pl": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "How many transactions share a count smaller than 50?",
        "question_pl": "Ile transakcji ma liczbę mniejszą niż 50?",
        "query": "SELECT count(*) FROM Transactions Where share_count  <  50",
        "query_pl": "SELECT count(*) FROM Transactions Where share_count  <  50"
    },
    {
        "db_id": "local_govt_mdm",
        "question": "Can you list all the cmi cross reference id on here",
        "question_pl": "Czy możesz wymienić tutaj wszystkie identyfikatory cmi?",
        "query": "SELECT cmi_cross_ref_id FROM CMI_Cross_References",
        "query_pl": "SELECT cmi_cross_ref_id FROM CMI_Cross_References"
    },
    {
        "db_id": "student_1",
        "question": "can you show me a list of grades?",
        "question_pl": "Możesz mi pokazać listę ocen?",
        "query": "SELECT Grade FROM list",
        "query_pl": "SELECT Grade FROM list"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question": "Can you please provide me with a list of all customer names and phone numbers?",
        "question_pl": "Czy możesz dostarczyć mi listę nazwisk i numerów telefonów wszystkich klientów?",
        "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "club_1",
        "question": "Tell me the club description for club id 1 ?",
        "question_pl": "Podaj mi opis klubu dla identyfikatora klubu 1?",
        "query": "SELECT ClubDesc FROM club where ClubID=1",
        "query_pl": "SELECT ClubDesc FROM club where ClubID=1"
    },
    {
        "db_id": "tracking_orders",
        "question": "Find the customer id of Savannah? ",
        "question_pl": "Znaleźć identyfikator klienta Savannah?",
        "query": "SELECT customer_id FROM customers where customer_name = \"Savannah\"",
        "query_pl": "SELECT customer_id FROM customers where customer_name = \"Savannah\""
    },
    {
        "db_id": "college_3",
        "question": "How many students are there? ",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(*) FROM STUDENT",
        "query_pl": "SELECT count(*) FROM STUDENT"
    },
    {
        "db_id": "movie_1",
        "question": "How many movies altogether do you have?",
        "question_pl": "Ile w sumie masz filmów?",
        "query": "SELECT COUNT(DISTINCT mID) FROM Rating",
        "query_pl": "SELECT COUNT(DISTINCT mID) FROM Rating"
    },
    {
        "db_id": "school_finance",
        "question": "How many schools are in Walkerton?",
        "question_pl": "Ile szkół znajduje się w mieście Walkerton?",
        "query": "select count(*) from school where location = \"Walkerton\"",
        "query_pl": "select count(*) from school where location = \"Walkerton\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "How many transactions have the type code PUR?",
        "question_pl": "Ile transakcji ma kod typu PUR?",
        "query": "SELECT count(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\"",
        "query_pl": "SELECT count(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\""
    },
    {
        "db_id": "election_representative",
        "question": "How many representatives are republicans?",
        "question_pl": "Ilu reprezentantów to republikanie?",
        "query": "SELECT count(*) from representative where party = \"Republican\"",
        "query_pl": "SELECT count(*) from representative where party = \"Republikanin\""
    },
    {
        "db_id": "restaurant_1",
        "question": "Which major has between 2 and 30 number of students? List major and the number of students.",
        "question_pl": "Który kierunek ma od 2 do 30 studentów? Wymień kierunek i liczbę studentów.",
        "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",
        "query_pl": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
    },
    {
        "db_id": "music_1",
        "question": "How many songs have a resolution below 800?",
        "question_pl": "Ile utworów ma rozdzielczość poniżej 800?",
        "query": "SELECT count(T2.song_name) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800",
        "query_pl": "SELECT count(T2.song_name) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
    },
    {
        "db_id": "store_product",
        "question": "Hello there!  Can you tell me what is the sum total of the populations of the three districts with the largest area?",
        "question_pl": "Witajcie!  Czy możesz mi powiedzieć, jaka jest suma populacji trzech dzielnic o największej powierzchni?",
        "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3",
        "query_pl": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
    },
    {
        "db_id": "college_1",
        "question": "Hello  Can you provide me with a list of all of the different department names?",
        "question_pl": "Witam, czy możesz podać mi listę wszystkich nazw działów?",
        "query": "SELECT dept_name from department",
        "query_pl": "SELECT dept_name from department"
    },
    {
        "db_id": "baseball_1",
        "question": "List the 3 highest salaries of the players in 2001?",
        "question_pl": "Wymień 3 najwyższe pensje zawodników w 2001 roku?",
        "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;",
        "query_pl": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
    },
    {
        "db_id": "e_learning",
        "question": "What is the highest number of enrollments any student has?",
        "question_pl": "Jaka jest najwyższa liczba zapisów na studia?",
        "query": "SELECT count(*) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id order by count(*) desc limit 1",
        "query_pl": "SELECT count(*) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id order by count(*) desc limit 1"
    },
    {
        "db_id": "chinook_1",
        "question": "Find the titles of all the albums of the artist AC/DC?",
        "question_pl": "Znajdź tytuły wszystkich albumów artysty AC/DC?",
        "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
        "query_pl": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
    },
    {
        "db_id": "chinook_1",
        "question": "Show me the title of album id 1?",
        "question_pl": "Pokaż mi tytuł albumu id 1?",
        "query": "SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID where T1.AlbumId = 1",
        "query_pl": "SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID where T1.AlbumId = 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is Dayana Robel policy id?",
        "question_pl": "Jaki jest identyfikator polityki Dayana Robel?",
        "query": "SELECT Policy_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"",
        "query_pl": "SELECT Policy_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\""
    },
    {
        "db_id": "e_government",
        "question": "What booking made date of service id 1?",
        "question_pl": "Jakiej rezerwacji dokonano z datą usługi id 1?",
        "query": "SELECT booking_made_date FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id where t1.service_id  = \"1\"",
        "query_pl": "SELECT booking_made_date FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id where t1.service_id  = \"1\""
    },
    {
        "db_id": "tracking_orders",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT count(*) from customers",
        "query_pl": "SELECT count(*) from customers"
    },
    {
        "db_id": "movie_1",
        "question": "what are the name of the reviewers?",
        "question_pl": "Jak nazywają się recenzenci?",
        "query": "SELECT name FROM Reviewer",
        "query_pl": "SELECT name FROM Reviewer"
    },
    {
        "db_id": "school_finance",
        "question": "Which donators have a donation amount above 8.5?",
        "question_pl": "Którzy darczyńcy mają kwotę darowizny powyżej 8,5?",
        "query": "Select donator_name from endowment where amount > 8.5",
        "query_pl": "Select donator_name from endowment where amount > 8.5"
    },
    {
        "db_id": "products_for_hire",
        "question": "what is the highest booked amount",
        "question_pl": "Jaka jest najwyższa zaksięgowana kwota",
        "query": "SELECT max(booked_amount) FROM products_booked",
        "query_pl": "SELECT max(booked_amount) FROM products_booked"
    },
    {
        "db_id": "gymnast",
        "question": "Who is the tallest gymnast?",
        "question_pl": "Kto jest najwyższym gimnastykiem?",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height desc limit 1",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height desc limit 1"
    },
    {
        "db_id": "student_1",
        "question": "Which classroom has the most students?",
        "question_pl": "Która klasa ma najwięcej uczniów?",
        "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question": " What is the customer ID of America Jaskolski",
        "question_pl": " Jaki jest identyfikator klienta America Jaskolski?",
        "query": "SELECT Customer_ID FROM customers where Customer_name ='America Jaskolski'",
        "query_pl": "SELECT Customer_ID FROM customers where Customer_name =\"America Jaskolski\""
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Can you list the names of all the tourist attractions?",
        "question_pl": "Czy możesz wymienić nazwy wszystkich atrakcji turystycznych?",
        "query": "SELECT name from tourist_attractions",
        "query_pl": "SELECT name from tourist_attractions"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "How many projects are there?",
        "question_pl": "Ile jest projektów?",
        "query": "SELECT count(*) FROM Projects ",
        "query_pl": "SELECT count(*) FROM Projects "
    },
    {
        "db_id": "twitter_1",
        "question": "Hi, I was wondering how many users do not have tweets?",
        "question_pl": "Cześć, zastanawiałem się, ilu użytkowników nie ma tweetów?",
        "query": "SELECT count(*) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)",
        "query_pl": "SELECT count(*) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)"
    },
    {
        "db_id": "small_bank_1",
        "question": "Whose savings balance is lower than their checking balance?",
        "question_pl": "Czyje saldo oszczędności jest niższe niż saldo czekowe?",
        "query": "SELECT T1.name  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",
        "query_pl": "SELECT T1.name  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"
    },
    {
        "db_id": "scientist_1",
        "question": "What are all of the scientists' names please?",
        "question_pl": "Jak nazywają się wszyscy naukowcy?",
        "query": "SELECT Name FROM Scientists",
        "query_pl": "SELECT Name FROM Scientists"
    },
    {
        "db_id": "hr_1",
        "question": "Which employee is the highest paid?",
        "question_pl": "Który pracownik otrzymuje najwyższe wynagrodzenie?",
        "query": "SELECT * FROM employees order by salary desc limit 1",
        "query_pl": "SELECT * FROM employees order by salary desc limit 1"
    },
    {
        "db_id": "music_4",
        "question": "The song The way was issued on what date?",
        "question_pl": "Piosenka The way została wydana w jakim dniu?",
        "query": "SELECT Issue_Date FROM volume WHERE Song LIKE \"%The Way%\"",
        "query_pl": "SELECT Issue_Date FROM volume WHERE Song LIKE \"%The Way%\""
    },
    {
        "db_id": "music_1",
        "question": "hi. how many countries of origin are represented by the artists?",
        "question_pl": "Cześć. Ile krajów pochodzenia reprezentują artyści?",
        "query": "SELECT count(country) from artist",
        "query_pl": "SELECT count(country) from artist"
    },
    {
        "db_id": "browser_web",
        "question": "WHAT ARE THE BROWSERS LISTED IN THE TABLE",
        "question_pl": "JAKIE PRZEGLĄDARKI SĄ WYMIENIONE W TABELI?",
        "query": "select name from browser",
        "query_pl": "select name from browser"
    },
    {
        "db_id": "csu_1",
        "question": "Which California State University is located in Kern County?",
        "question_pl": "Który Kalifornijski Uniwersytet Stanowy znajduje się w hrabstwie Kern?",
        "query": "SELECT campus from campuses where campus like \"%Kalifornijski uniwersytet stanowy%\" and county = \"Kern\"",
        "query_pl": "SELECT campus from campuses where campus like \"%Kalifornijski uniwersytet stanowy%\" and county = \"Kern\""
    },
    {
        "db_id": "formula_1",
        "question": "What is the id and last name of the driver who participated in the most races after 2010?",
        "question_pl": "Jaki jest identyfikator i nazwisko kierowcy, który wziął udział w największej liczbie wyścigów po 2010 roku?",
        "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wedding",
        "question": "Which weddings took place after 2014?",
        "question_pl": "Które śluby odbyły się po 2014 roku?",
        "query": "select * from wedding where year > 2014",
        "query_pl": "select * from wedding where year > 2014"
    },
    {
        "db_id": "book_2",
        "question": "Show publishers that have less than one publication?",
        "question_pl": "Pokaż wydawców, którzy mają mniej niż jedną publikację?",
        "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "entrepreneur",
        "question": "Show me the company details",
        "question_pl": "Pokaż mi szczegóły firmy",
        "query": "SELECT Company FROM entrepreneur",
        "query_pl": "SELECT Company FROM entrepreneur"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "How many participants are there?",
        "question_pl": "Ilu jest uczestników?",
        "query": "SELECT count(*) FROM participants",
        "query_pl": "SELECT count(*) FROM participants"
    },
    {
        "db_id": "train_station",
        "question": "Show the train name and station name for each train",
        "question_pl": "Pokaż nazwę pociągu i nazwę stacji dla każdego pociągu.",
        "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",
        "query_pl": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"
    },
    {
        "db_id": "game_1",
        "question": "Please show me the ids of the students who play video games and play sports?",
        "question_pl": "Proszę, pokaż mi identyfikatory uczniów, którzy grają w gry wideo i uprawiają sport?",
        "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
        "query_pl": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"
    },
    {
        "db_id": "music_1",
        "question": "Hello there!  How are you doing tonight!?  Can you provide me with a list of all of the artist names in this database?",
        "question_pl": "Witajcie!  Jak się dzisiaj macie!?  Czy możesz podać mi listę wszystkich nazwisk artystów w tej bazie danych?",
        "query": "SELECT artist_name FROM artist ",
        "query_pl": "SELECT artist_name FROM artist "
    },
    {
        "db_id": "bike_1",
        "question": "Hi, can you tell me how many trips there have been, starting from August?",
        "question_pl": "Cześć, czy możesz mi powiedzieć, ile było podróży, począwszy od sierpnia?",
        "query": "SELECT count(*) FROM trip WHERE start_date LIKE \"8/%\"",
        "query_pl": "SELECT count(*) FROM trip WHERE start_date LIKE \"8/%\""
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "Please list all unique Product Names",
        "question_pl": "Wymień wszystkie unikalne nazwy produktów",
        "query": "SELECT DISTINCT product_name FROM Products",
        "query_pl": "SELECT DISTINCT product_name FROM Products"
    },
    {
        "db_id": "driving_school",
        "question": "Which state have more than 2 staff members living there?",
        "question_pl": "W którym stanie mieszka więcej niż 2 pracowników?",
        "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) > 2",
        "query_pl": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) > 2"
    },
    {
        "db_id": "flight_4",
        "question": "Hello!  Can you first give me a list of all of the countries?",
        "question_pl": "Witaj!  Czy możesz najpierw podać mi listę wszystkich krajów?",
        "query": "SELECT country FROM airlines",
        "query_pl": "SELECT country FROM airlines"
    },
    {
        "db_id": "store_1",
        "question": "What tracks belong to genre Rock?",
        "question_pl": "Jakie utwory należą do gatunku Rock?",
        "query": "SELECT T2.* FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";",
        "query_pl": "SELECT T2.* FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Skała\";"
    },
    {
        "db_id": "driving_school",
        "question": "Tell me the vehicle id and staff id for all lesson id's...",
        "question_pl": "Podaj mi identyfikator pojazdu i identyfikator personelu dla wszystkich identyfikatorów lekcji...",
        "query": "SELECT T1.vehicle_id ,  T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id ",
        "query_pl": "SELECT T1.vehicle_id ,  T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id "
    },
    {
        "db_id": "icfp_1",
        "question": "What institution does \"Katsuhiro Ueno\" belong to?",
        "question_pl": "Do jakiej instytucji należy \"Katsuhiro Ueno\"?",
        "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = \"Katsuhiro\" AND t1.lname = \"Ueno\"",
        "query_pl": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = \"Katsuhiro\" AND t1.lname = \"Ueno\""
    },
    {
        "db_id": "college_1",
        "question": "Could you find the names of all the departments, please?",
        "question_pl": "Czy możesz znaleźć nazwy wszystkich działów?",
        "query": "SELECT dept_name FROM  department ",
        "query_pl": "SELECT dept_name FROM  department "
    },
    {
        "db_id": "bike_1",
        "question": "What is the latitude of each station, please?",
        "question_pl": "Jaka jest szerokość geograficzna każdej stacji?",
        "query": "select name,lat from station",
        "query_pl": "select name,lat from station"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "Which services type had successful event details?",
        "question_pl": "Który typ usług miał udane szczegóły wydarzenia?",
        "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success'",
        "query_pl": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = \"Sukces\""
    },
    {
        "db_id": "assets_maintenance",
        "question": "Show ID and first and last name of Engineer who has visited the most times.",
        "question_pl": "Pokaż identyfikator oraz imię i nazwisko inżyniera, który odwiedził konto najwięcej razy.",
        "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "twitter_1",
        "question": "what is the users' name?",
        "question_pl": "Jaka jest nazwa użytkownika?",
        "query": "SELECT name FROM user_profiles",
        "query_pl": "SELECT name FROM user_profiles"
    },
    {
        "db_id": "chinook_1",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT COUNT(*) FROM CUSTOMER",
        "query_pl": "SELECT COUNT(*) FROM CUSTOMER"
    },
    {
        "db_id": "gymnast",
        "question": "Hello!  Can you please list all of the gymnast IDs and their associated hometowns?",
        "question_pl": "Witaj!  Czy możesz wymienić wszystkie identyfikatory gimnastyczek i powiązane z nimi miasta rodzinne?",
        "query": "SELECT T1.Gymnast_ID, T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT T1.Gymnast_ID, T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "soccer_2",
        "question": "Which position is the most popular among players in the tryout?",
        "question_pl": "Która pozycja jest najbardziej popularna wśród graczy biorących udział w tryoutach?",
        "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question": "What is the name of the organization that has published the largest number of papers?",
        "question_pl": "Jak nazywa się organizacja, która opublikowała największą liczbę artykułów?",
        "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question": "What is the name of the airport with the lowest altitude? ",
        "question_pl": "Jak nazywa się lotnisko o najniższej wysokości?",
        "query": "SELECT name  FROM airports ORDER BY elevation LIMIT 1",
        "query_pl": "SELECT name  FROM airports ORDER BY elevation LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question": "what are the hometowns of gymnasts ",
        "question_pl": "Jakie są miasta rodzinne gimnastyczek?",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown",
        "query_pl": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
    },
    {
        "db_id": "hr_1",
        "question": "Could you please display the first and last names of all employees whose first names end in the letter \"m\"?",
        "question_pl": "Czy możesz wyświetlić imiona i nazwiska wszystkich pracowników, których imiona kończą się na literę \"m\"?",
        "query": "SELECT first_name ,  last_name FROM employees WHERE first_name LIKE '%m'",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE first_name LIKE '%m'"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "How many students are in the class",
        "question_pl": "Ilu uczniów jest w klasie",
        "query": "SELECT count(*) FROM STUDENTS",
        "query_pl": "SELECT count(*) FROM STUDENTS"
    },
    {
        "db_id": "movie_1",
        "question": "what is the name of the movie without any ratings? ",
        "question_pl": "Jak nazywa się film bez ocen?",
        "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
        "query_pl": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
    },
    {
        "db_id": "college_1",
        "question": "How many students in this table?",
        "question_pl": "Ilu uczniów znajduje się w tej tabeli?",
        "query": "SELECT count(*) FROM STUDENT",
        "query_pl": "SELECT count(*) FROM STUDENT"
    },
    {
        "db_id": "driving_school",
        "question": "Which city has the most number of customers?",
        "question_pl": "Które miasto ma największą liczbę klientów?",
        "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "movie_1",
        "question": "What are the names of the movies that was reviewed by brittany harris?",
        "question_pl": "Jak nazywają się filmy zrecenzowane przez Brittany Harris?",
        "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' ",
        "query_pl": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  \"Brittany Harris\" "
    },
    {
        "db_id": "soccer_2",
        "question": "What is the player id for Charles?",
        "question_pl": "Jaki jest identyfikator gracza Charles?",
        "query": "SELECT pID FROM Player WHERE pName=\"Charles\"",
        "query_pl": "SELECT pID FROM Player WHERE pName=\"Charles\""
    },
    {
        "db_id": "journal_committee",
        "question": "What is the journal id of Anna Powierza?",
        "question_pl": "Jaki jest identyfikator dziennika Anny Powierzy?",
        "query": "SELECT T3.Journal_ID FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T2.Name = \"Anna Powierza\"",
        "query_pl": "SELECT T3.Journal_ID FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T2.Name = \"Anna Powierza\""
    },
    {
        "db_id": "icfp_1",
        "question": "what is the name of the papers publishes by Indiana University ",
        "question_pl": "Jak nazywają się gazety publikowane przez Indiana University?",
        "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
        "query_pl": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Indiana\""
    },
    {
        "db_id": "match_season",
        "question": "WHAT IS THE Indonesia CAPITAL",
        "question_pl": "KAPITAŁ Indonezji",
        "query": "SELECT capital from country where country_name = \"Indonesia\"",
        "query_pl": "SELECT capital from country where country_name = \"Indonezja\""
    },
    {
        "db_id": "ship_1",
        "question": "What are the names of all ships?",
        "question_pl": "Jak nazywają się wszystkie statki?",
        "query": "SELECT name FROM ship",
        "query_pl": "SELECT name FROM ship"
    },
    {
        "db_id": "movie_1",
        "question": "Hello!  Can you show me a list of all director names who have directed more than one movie?",
        "question_pl": "Witajcie!  Czy możesz mi pokazać listę wszystkich nazwisk reżyserów, którzy wyreżyserowali więcej niż jeden film?",
        "query": "SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title",
        "query_pl": "SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
    },
    {
        "db_id": "game_1",
        "question": "How many students are on scholarship?",
        "question_pl": "Ilu studentów otrzymuje stypendium?",
        "query": "SELECT count(*) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'",
        "query_pl": "SELECT count(*) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  \"Y\""
    },
    {
        "db_id": "wedding",
        "question": "What years did two or more churches open in?",
        "question_pl": "W których latach otwarto dwa lub więcej kościołów?",
        "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2",
        "query_pl": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Can you tell me the number of research staff in each organisation?",
        "question_pl": "Czy możesz podać liczbę pracowników naukowych w każdej organizacji?",
        "query": "SELECT employer_organisation_id , count(*) from Research_Staff group by employer_organisation_id \t",
        "query_pl": "SELECT employer_organisation_id , count(*) from Research_Staff group by employer_organisation_id \t"
    },
    {
        "db_id": "college_3",
        "question": "Can you show me all the course ids and enrollments?",
        "question_pl": "Czy możesz pokazać mi wszystkie identyfikatory kursów i zapisy?",
        "query": "SELECT T1.cID, COUNT(*) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID ",
        "query_pl": "SELECT T1.cID, COUNT(*) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID "
    },
    {
        "db_id": "baseball_1",
        "question": "Hello!  Can you provide me with a list of all of the player IDs in the database?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich identyfikatorów graczy w bazie danych?",
        "query": "SELECT  player_id\t FROM hall_of_fame",
        "query_pl": "SELECT  player_id\t FROM hall_of_fame"
    },
    {
        "db_id": "network_2",
        "question": "can you please tell me if Alice is friends with Bob?",
        "question_pl": "Czy możesz mi powiedzieć, czy Alice jest przyjaciółką Boba?",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  \"Bob\""
    },
    {
        "db_id": "soccer_2",
        "question": "What is the max training hours of all players, please?",
        "question_pl": "Jaki jest maksymalny czas treningu wszystkich graczy?",
        "query": "SELECT max(HS) FROM Player",
        "query_pl": "SELECT max(HS) FROM Player"
    },
    {
        "db_id": "icfp_1",
        "question": "What is the name of the organization that published the greatest number of papers?",
        "question_pl": "Jak nazywa się organizacja, która opublikowała największą liczbę artykułów?",
        "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question": "find the names of all patients who have an undergoing treatment and are staying in room 111",
        "question_pl": "Znajdź nazwiska wszystkich pacjentów, którzy są w trakcie leczenia i przebywają w pokoju 111.",
        "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "query_pl": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
    },
    {
        "db_id": "driving_school",
        "question": "Can you display the address id associated with the city of Damianfort?",
        "question_pl": "Czy możesz wyświetlić identyfikator adresu powiązany z miastem Damianfort?",
        "query": "SELECT address_id FROM Addresses WHERE city  = \"Damianfort\"",
        "query_pl": "SELECT address_id FROM Addresses WHERE city  = \"Damianfort\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Could you show me the IDs for all documents with budget types described as 'Government'?",
        "question_pl": "Czy możesz pokazać mi identyfikatory wszystkich dokumentów z typami budżetu opisanymi jako \"rządowe\"?",
        "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
        "query_pl": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Rząd\""
    },
    {
        "db_id": "election",
        "question": "How many parties are there?",
        "question_pl": "Ile jest partii?",
        "query": "SELECT count(*) FROM party",
        "query_pl": "SELECT count(*) FROM party"
    },
    {
        "db_id": "pilot_record",
        "question": "Hello, how many different nationalities of pilots are there?",
        "question_pl": "Witaj, ile jest różnych narodowości pilotów?",
        "query": "SELECT count(distinct Nationality) FROM pilot ",
        "query_pl": "SELECT count(distinct Nationality) FROM pilot "
    },
    {
        "db_id": "wrestler",
        "question": "How many wrestlers are there?",
        "question_pl": "Ilu jest zapaśników?",
        "query": "SELECT count(*) FROM wrestler ",
        "query_pl": "SELECT count(*) FROM wrestler "
    },
    {
        "db_id": "network_2",
        "question": "Hi can you tell me in witch city does Alice live?",
        "question_pl": "Cześć, możesz mi powiedzieć, w którym mieście mieszka Alice?",
        "query": "select city from person where name = \"Alice\"",
        "query_pl": "select city from person where name = \"Alice\""
    },
    {
        "db_id": "college_1",
        "question": "Hello. How many classes are there? ",
        "question_pl": "Witaj. Ile jest klas?",
        "query": "SELECT count(*) FROM  CLASS ",
        "query_pl": "SELECT count(*) FROM  CLASS "
    },
    {
        "db_id": "wine_1",
        "question": "Which appelation produces the most expensive wine?",
        "question_pl": "Która apelacja produkuje najdroższe wino?",
        "query": "SELECT T1.appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.price = (select max(price) from wine)",
        "query_pl": "SELECT T1.appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.price = (select max(price) from wine)"
    },
    {
        "db_id": "race_track",
        "question": "which track has the highest number of race?",
        "question_pl": "Który tor ma największą liczbę wyścigów?",
        "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "baseball_1",
        "question": "What were all the salary values of players in 2010 and 2001?",
        "question_pl": "Jakie były wartości wynagrodzeń zawodników w 2010 i 2001 roku?",
        "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001",
        "query_pl": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
    },
    {
        "db_id": "news_report",
        "question": "Show me the names of journalists",
        "question_pl": "Pokaż mi nazwiska dziennikarzy",
        "query": "SELECT Name from journalist",
        "query_pl": "SELECT Name from journalist"
    },
    {
        "db_id": "dorm_1",
        "question": "How many students live in each dorm?",
        "question_pl": "Ilu studentów mieszka w każdym akademiku?",
        "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name",
        "query_pl": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
    },
    {
        "db_id": "swimming",
        "question": "What are the names of stadiums that some Australian swimmers have been to?",
        "question_pl": "Jak nazywają się stadiony, na których byli niektórzy australijscy pływacy?",
        "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'",
        "query_pl": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  \"Australia\""
    },
    {
        "db_id": "party_people",
        "question": "What are the names of parties with 2 events",
        "question_pl": "Jak nazywają się imprezy z 2 wydarzeniami?",
        "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*) =  2",
        "query_pl": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*) =  2"
    },
    {
        "db_id": "manufactory_1",
        "question": "List names of each manufacturer?",
        "question_pl": "Wymień nazwy każdego producenta?",
        "query": "select name from manufacturers",
        "query_pl": "select name from manufacturers"
    },
    {
        "db_id": "soccer_2",
        "question": "what is average of training hours?",
        "question_pl": "Jaka jest średnia liczba godzin treningowych?",
        "query": "SELECT avg(HS) FROM player",
        "query_pl": "SELECT avg(HS) FROM player"
    },
    {
        "db_id": "small_bank_1",
        "question": "Find the saving balance of the account with the highest checking balance.",
        "question_pl": "Znajdź saldo oszczędności na koncie z najwyższym saldem rozliczeniowym.",
        "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1",
        "query_pl": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1"
    },
    {
        "db_id": "products_for_hire",
        "question": "How many 'Cutlery' type products are there?",
        "question_pl": "Ile jest produktów typu \"sztućce\"?",
        "query": "SELECT COUNT(product_id) FROM products_for_hire WHERE product_type_code  =  'Cutlery'",
        "query_pl": "SELECT COUNT(product_id) FROM products_for_hire WHERE product_type_code  =  \"Sztućce\""
    },
    {
        "db_id": "debate",
        "question": "Could you please tell me the names of the people that have not been on the affirmative side of all debates?",
        "question_pl": "Czy możesz mi podać nazwiska osób, które nie były po stronie twierdzącej we wszystkich debatach?",
        "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)",
        "query_pl": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
    },
    {
        "db_id": "flight_4",
        "question": "What cities have more than 3 airports in the United States?",
        "question_pl": "Jakie miasta w Stanach Zjednoczonych mają więcej niż 3 lotniska?",
        "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
        "query_pl": "SELECT city FROM airports WHERE country  =  \"Stany Zjednoczone\" GROUP BY city HAVING count(*)  >  3"
    },
    {
        "db_id": "roller_coaster",
        "question": "Which roller coasters are longer than 3300?",
        "question_pl": "Które kolejki górskie są dłuższe niż 3300?",
        "query": "SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH  >  3300",
        "query_pl": "SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH  >  3300"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Show me a list of all shipping agent codes",
        "question_pl": "Pokaż mi listę wszystkich kodów agentów wysyłkowych",
        "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents",
        "query_pl": "SELECT shipping_agent_code FROM Ref_Shipping_Agents"
    },
    {
        "db_id": "game_1",
        "question": "list number of games played by students ",
        "question_pl": "Wymień liczbę gier rozegranych przez uczniów",
        "query": "select sum(GamesPlayed) from sportsinfo",
        "query_pl": "select sum(GamesPlayed) from sportsinfo"
    },
    {
        "db_id": "aircraft",
        "question": "What are the names of the aircraft?",
        "question_pl": "Jakie są nazwy samolotów?",
        "query": "SELECT Aircraft FROM aircraft",
        "query_pl": "SELECT Aircraft FROM aircraft"
    },
    {
        "db_id": "entertainment_awards",
        "question": "Hello! Can you tell me how many total nominees there are?",
        "question_pl": "Witaj! Czy możesz mi powiedzieć, ilu jest wszystkich nominowanych?",
        "query": "SELECT COUNT(artwork_id) FROM nomination",
        "query_pl": "SELECT COUNT(artwork_id) FROM nomination"
    },
    {
        "db_id": "icfp_1",
        "question": "Which papers were published in an institution in the \"USA\" please?",
        "question_pl": "Które artykuły zostały opublikowane w instytucji w \"USA\"?",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\""
    },
    {
        "db_id": "college_3",
        "question": "Can you please tell me the full names of all faculty who are members of department number 520?",
        "question_pl": "Czy możesz podać mi pełne nazwiska wszystkich wykładowców, którzy są członkami wydziału numer 520?",
        "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520",
        "query_pl": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
    },
    {
        "db_id": "store_product",
        "question": "What is the district name for district id 15?",
        "question_pl": "Jaka jest nazwa okręgu o identyfikatorze 15?",
        "query": "SELECT district_name from district where district_id = 15",
        "query_pl": "SELECT district_name from district where district_id = 15"
    },
    {
        "db_id": "apartment_rentals",
        "question": "Hello!  How many different Apartment Type Codes are there?",
        "question_pl": "Witaj! Ile jest różnych kodów typów apartamentów?",
        "query": "SELECT count(apt_type_code) FROM Apartments ",
        "query_pl": "SELECT count(apt_type_code) FROM Apartments "
    },
    {
        "db_id": "flight_1",
        "question": "What are the departure dates for all flights from Los Angeles to Honolulu?",
        "question_pl": "Jakie są daty odlotów dla wszystkich lotów z Los Angeles do Honolulu?",
        "query": "SELECT departure_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
        "query_pl": "SELECT departure_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
    },
    {
        "db_id": "book_2",
        "question": "I need a list of the titles of books.",
        "question_pl": "Potrzebuję listę tytułów książek.",
        "query": "SELECT Title FROM book",
        "query_pl": "SELECT Title FROM book"
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients in this table?",
        "question_pl": "Ilu pacjentów znajduje się w tej tabeli?",
        "query": "SELECT count(patient) FROM Stay",
        "query_pl": "SELECT count(patient) FROM Stay"
    },
    {
        "db_id": "department_store",
        "question": "how many products on the table",
        "question_pl": "ile produktów na stole",
        "query": "SELECT count(*) FROM products ",
        "query_pl": "SELECT count(*) FROM products "
    },
    {
        "db_id": "icfp_1",
        "question": "Hello!  Can you provide me with a list of all paper IDs and paper titles that correspond to \"Indiana University\"?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich identyfikatorów i tytułów artykułów, które odpowiadają \"Indiana University\"?",
        "query": "SELECT distinct t1.title,t1.paperID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
        "query_pl": "SELECT distinct t1.title,t1.paperID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Indiana\""
    },
    {
        "db_id": "college_2",
        "question": "How many courses do not have a prerequisite?",
        "question_pl": "Ile kursów nie ma wymagań wstępnych?",
        "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "Which event id does not have any participant with the detail Kneyatta Kuhn?",
        "question_pl": "Który identyfikator wydarzenia nie ma żadnego uczestnika z danymi Kneyatta Kuhn?",
        "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn'",
        "query_pl": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = \"Kenyatta Kuhn\""
    },
    {
        "db_id": "college_2",
        "question": "What is the course id for the International Finance course?",
        "question_pl": "Jaki jest identyfikator kursu Finanse Międzynarodowe?",
        "query": "SELECT course_id FROM course WHERE title  =  'International Finance'",
        "query_pl": "SELECT course_id FROM course WHERE title  =  \"Finanse międzynarodowe\""
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question": "Can you tell me the highest number of mailshots for the customers?",
        "question_pl": "Czy możesz mi podać największą liczbę wiadomości e-mail dla klientów?",
        "query": "SELECT count(*) FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Tell me the chargeable amount for part id 1 ?",
        "question_pl": "Powiedz mi, ile wynosi opłata za część id 1?",
        "query": "SELECT chargeable_amount FROM Parts WHERE part_id = \"1\"",
        "query_pl": "SELECT chargeable_amount FROM Parts WHERE part_id = \"1\""
    },
    {
        "db_id": "small_bank_1",
        "question": "what is the highest saving balance?",
        "question_pl": "Jakie jest najwyższe saldo oszczędności?",
        "query": "select max(balance) from savings",
        "query_pl": "select max(balance) from savings"
    },
    {
        "db_id": "sakila_1",
        "question": "what is the city id   of alberta district?",
        "question_pl": "Jaki jest identyfikator miasta w dzielnicy alberta?",
        "query": "SELECT \tdistinct city_id  from address where district=\"Alberta\";",
        "query_pl": "SELECT \tdistinct city_id  from address where district=\"Alberta\";"
    },
    {
        "db_id": "chinook_1",
        "question": "Hello there!  Can you tell me, which media type is the least common associated with all tracks?",
        "question_pl": "Witajcie!  Czy możesz mi powiedzieć, który typ mediów jest najrzadziej powiązany ze wszystkimi ścieżkami?",
        "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "wedding",
        "question": "What are the names and opening years of the three churches that opened most recently?",
        "question_pl": "Jakie są nazwy i lata otwarcia trzech ostatnio otwartych kościołów?",
        "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3",
        "query_pl": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3"
    },
    {
        "db_id": "program_share",
        "question": "Hello! Could you provide me with a list of all of the channel IDs for which the \"time of day\" is morning?",
        "question_pl": "Witaj! Czy możesz dostarczyć mi listę wszystkich identyfikatorów kanałów, dla których \"pora dnia\" jest poranna?",
        "query": "SELECT Channel_ID from  broadcast WHERE Time_of_day  =  'Morning'",
        "query_pl": "SELECT Channel_ID from  broadcast WHERE Time_of_day  =  \"Poranek\""
    },
    {
        "db_id": "hr_1",
        "question": "display the department id and the total salary for those departments which contains at least two employees.",
        "question_pl": "wyświetl identyfikator działu i łączne wynagrodzenie dla tych działów, które zawierają co najmniej dwóch pracowników.",
        "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2",
        "query_pl": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "ship_1",
        "question": "what is the average number of captains per ship?",
        "question_pl": "Jaka jest średnia liczba kapitanów na statek?",
        "query": "select avg(ct) from (SELECT t2.ship_id, count(*) as ct FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id)",
        "query_pl": "select avg(ct) from (SELECT t2.ship_id, count(*) as ct FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id)"
    },
    {
        "db_id": "soccer_2",
        "question": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.",
        "question_pl": "Znajdź nazwy uczelni w LA z liczbą studentów większą niż 15000 lub w stanie AZ z liczbą studentów mniejszą niż 13000.",
        "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"",
        "query_pl": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
    },
    {
        "db_id": "store_1",
        "question": "what is the name of the employee that supported the most number of customers? ",
        "question_pl": "Jak nazywa się pracownik, który obsłużył największą liczbę klientów?",
        "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question": "How many buildings are in the list?",
        "question_pl": "Ile budynków znajduje się na liście?",
        "query": "SELECT count(DISTINCT building) FROM classroom",
        "query_pl": "SELECT count(DISTINCT building) FROM classroom"
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are there?",
        "question_pl": "Ilu jest pacjentów?",
        "query": "SELECT count(*)  from  Patient",
        "query_pl": "SELECT count(*)  from  Patient"
    },
    {
        "db_id": "student_assessment",
        "question": "How many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(DISTINCT student_id) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id",
        "query_pl": "SELECT count(DISTINCT student_id) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id"
    },
    {
        "db_id": "gas_company",
        "question": "What is the average market value",
        "question_pl": "Jaka jest średnia wartość rynkowa",
        "query": "select avg(market_value) from company",
        "query_pl": "select avg(market_value) from company"
    },
    {
        "db_id": "voter_2",
        "question": "What is the average age of all students.",
        "question_pl": "Jaki jest średni wiek wszystkich uczniów.",
        "query": "SELECT avg(age) FROM STUDENT",
        "query_pl": "SELECT avg(age) FROM STUDENT"
    },
    {
        "db_id": "wine_1",
        "question": "Which wine has the highest price? ",
        "question_pl": "Które wino ma najwyższą cenę?",
        "query": "SELECT * FROM WINE ORDER BY price desc limit 1",
        "query_pl": "SELECT * FROM WINE ORDER BY price desc limit 1"
    },
    {
        "db_id": "sakila_1",
        "question": "Hi there!  Whew!  That was a long wait to join the chat!  Can you please show me what the largest single payment amount is?",
        "question_pl": "Witajcie!  Whew!  Długo czekałeś na dołączenie do czatu!  Czy możesz mi pokazać, jaka jest największa pojedyncza kwota płatności?",
        "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
        "query_pl": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question": "Hi can you tell me what is the average salary?",
        "question_pl": "Cześć, czy możesz mi powiedzieć, jaka jest średnia pensja?",
        "query": "SELECT avg(salary) FROM Employee ",
        "query_pl": "SELECT avg(salary) FROM Employee "
    },
    {
        "db_id": "journal_committee",
        "question": "Show average sales of the journals that have an editor whose work type is photo",
        "question_pl": "Pokaż średnią sprzedaż czasopism, które mają redaktora zajmującego się fotografią.",
        "query": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'",
        "query_pl": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  \"Zdjęcie\""
    },
    {
        "db_id": "local_govt_mdm",
        "question": "Show me the list of cmi cross reference ids please!",
        "question_pl": "Pokaż mi proszę listę kodów referencyjnych cmi!",
        "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references",
        "query_pl": "SELECT cmi_cross_ref_id FROM cmi_cross_references"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "I was wondering what the maximum number of circulation history documents is for a single employee?",
        "question_pl": "Zastanawiam się, jaka jest maksymalna liczba dokumentów historii obiegu dla jednego pracownika?",
        "query": "SELECT count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY employees.employee_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY employees.employee_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "election",
        "question": "How many parties have at least two records?",
        "question_pl": "Ile partii ma co najmniej dwa rekordy?",
        "query": "SELECT COUNT(*) FROM (SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2)",
        "query_pl": "SELECT COUNT(*) FROM (SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2)"
    },
    {
        "db_id": "icfp_1",
        "question": "What is the title of the paper that has the largest number of authors?",
        "question_pl": "Jaki jest tytuł artykułu, który ma największą liczbę autorów?",
        "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)",
        "query_pl": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
    },
    {
        "db_id": "wedding",
        "question": "How many churches are there?",
        "question_pl": "Ile jest kościołów?",
        "query": "SELECT count(*) from church",
        "query_pl": "SELECT count(*) from church"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "How many services has each resident requested",
        "question_pl": "Ile usług zażądał każdy mieszkaniec",
        "query": "SELECT T1.resident_id ,count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id",
        "query_pl": "SELECT T1.resident_id ,count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id"
    },
    {
        "db_id": "entertainment_awards",
        "question": "Show the number of audience in year 2008 or 2010.",
        "question_pl": "Pokaż liczbę widzów w roku 2008 lub 2010.",
        "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
        "query_pl": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
    },
    {
        "db_id": "bike_1",
        "question": "Show me the start station id for all trips.",
        "question_pl": "Pokaż mi identyfikator stacji początkowej dla wszystkich podróży.",
        "query": "SELECT start_station_id  FROM trip ",
        "query_pl": "SELECT start_station_id  FROM trip "
    },
    {
        "db_id": "behavior_monitoring",
        "question": "How Many Students have Behavior Incident reports with recommendations?",
        "question_pl": "Ilu uczniów ma raporty z incydentów behawioralnych z zaleceniami?",
        "query": "SELECT count (*) from (SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id)",
        "query_pl": "SELECT count (*) from (SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id)"
    },
    {
        "db_id": "swimming",
        "question": "Find the names of stadiums that the least swimmers have been to?",
        "question_pl": "Znajdź nazwy stadionów, na których pływało najmniej zawodników?",
        "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "machine_repair",
        "question": "What are the names of technicians from \"CLE\"?",
        "question_pl": "Jak nazywają się technicy z \"CLE\"?",
        "query": "SELECT name from technician where team = \"CLE\"",
        "query_pl": "SELECT name from technician where team = \"CLE\""
    },
    {
        "db_id": "bike_1",
        "question": "What is the average latitude of stations located in San Jose city?",
        "question_pl": "Jaka jest średnia szerokość geograficzna stacji zlokalizowanych w mieście San Jose?",
        "query": "SELECT avg(lat)  FROM station WHERE city = \"San Jose\"",
        "query_pl": "SELECT avg(lat)  FROM station WHERE city = \"San Jose\""
    },
    {
        "db_id": "student_assessment",
        "question": "Hello, how are you!  Can you provide me with a list of all of the email addresses in this database?",
        "question_pl": "Witaj, jak się masz!  Czy możesz dostarczyć mi listę wszystkich adresów e-mail w tej bazie danych?",
        "query": "select email_address from people",
        "query_pl": "select email_address from people"
    },
    {
        "db_id": "store_product",
        "question": "what are the districts that have city mall.",
        "question_pl": "w jakich dzielnicach znajduje się centrum handlowe.",
        "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" ",
        "query_pl": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" "
    },
    {
        "db_id": "wine_1",
        "question": "Which kinds of grapes are white?",
        "question_pl": "Które rodzaje winogron są białe?",
        "query": "SELECT Grape FROM GRAPES WHERE Color  =  \"White\"",
        "query_pl": "SELECT Grape FROM GRAPES WHERE Color  =  \"Biały\""
    },
    {
        "db_id": "phone_market",
        "question": "State the phone name which has the least price on the list?",
        "question_pl": "Podaj nazwę telefonu, który ma najniższą cenę na liście?",
        "query": "SELECT Name FROM phone AS T2 ORDER BY price ASC LIMIT 1",
        "query_pl": "SELECT Name FROM phone AS T2 ORDER BY price ASC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question": "how many customers are presented on the table",
        "question_pl": "ilu klientów jest prezentowanych w tabeli",
        "query": "SELECT COUNT(*) FROM Customers",
        "query_pl": "SELECT COUNT(*) FROM Customers"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Can you tell me the location code with the most documents?",
        "question_pl": "Czy możesz mi podać kod lokalizacji z największą liczbą dokumentów?",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question": "tell me course name for course id 301 and 302?",
        "question_pl": "powiedz mi nazwę kursu o identyfikatorze 301 i 302?",
        "query": "SELECT course_name FROM courses WHERE course_id = 301 or course_id = 302",
        "query_pl": "SELECT course_name FROM courses WHERE course_id = 301 or course_id = 302"
    },
    {
        "db_id": "product_catalog",
        "question": "Could you please tell me all the catalog publishers whose name contains \"Murray\"?",
        "question_pl": "Czy mógłbyś podać mi wszystkich wydawców katalogów, których nazwa zawiera \"Murray\"?",
        "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
        "query_pl": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
    },
    {
        "db_id": "music_1",
        "question": "What are the names of all the songs that have a lower rating than some song of the blues genre?",
        "question_pl": "Jak nazywają się wszystkie utwory, które mają niższą ocenę niż jakiś utwór z gatunku blues?",
        "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
        "query_pl": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
    },
    {
        "db_id": "store_1",
        "question": "Show the albums of Billy Cobham.",
        "question_pl": "Pokaż albumy Billy'ego Cobhama.",
        "query": "SELECT T1.* FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";",
        "query_pl": "SELECT T1.* FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "How many different product categories are there?",
        "question_pl": "Ile jest różnych kategorii produktów?",
        "query": "select distinct product_category_code from Products",
        "query_pl": "select distinct product_category_code from Products"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "How many products do you have?",
        "question_pl": "Ile masz produktów?",
        "query": "select count(*) from Products",
        "query_pl": "select count(*) from Products"
    },
    {
        "db_id": "party_people",
        "question": "Hello, can you please provide me with a list of all Event IDs and Event names?",
        "question_pl": "Witaj, czy możesz dostarczyć mi listę wszystkich identyfikatorów i nazw wydarzeń?",
        "query": "SELECT event_id, event_name from party_events",
        "query_pl": "SELECT event_id, event_name from party_events"
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
        "question_pl": "Ile wizyt inżyniera jest wymaganych dla pojedynczego dziennika usterek? Wymień liczbę i identyfikator wpisu w dzienniku.",
        "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question": "how many Document Sections on the table? ",
        "question_pl": "Ile sekcji dokumentów znajduje się na stole? ",
        "query": "SELECT count(*) FROM Document_Sections",
        "query_pl": "SELECT count(*) FROM Document_Sections"
    },
    {
        "db_id": "local_govt_mdm",
        "question": "What is the tax source system code for benefits and overpayments?",
        "question_pl": "Jaki jest kod systemu źródła podatku dla świadczeń i nadpłat?",
        "query": "SELECT T1.source_system_code  FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id",
        "query_pl": "SELECT T1.source_system_code  FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id"
    },
    {
        "db_id": "wine_1",
        "question": "What grapes have a score higher than 93?",
        "question_pl": "Jakie winogrona mają wynik wyższy niż 93?",
        "query": "SELECT  distinct  Grape  FROM WINE WHERE Score  >  93 ",
        "query_pl": "SELECT  distinct  Grape  FROM WINE WHERE Score  >  93 "
    },
    {
        "db_id": "store_product",
        "question": "what is the average of city populations?",
        "question_pl": "Jaka jest średnia populacja miasta?",
        "query": "SELECT avg(City_Population) FROM district ",
        "query_pl": "SELECT avg(City_Population) FROM district "
    },
    {
        "db_id": "shop_membership",
        "question": "What is the total number of purchases for members with level 6?",
        "question_pl": "Jaka jest łączna liczba zakupów dokonanych przez członków z poziomem 6?",
        "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6",
        "query_pl": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
    },
    {
        "db_id": "roller_coaster",
        "question": "HOW MANY COUNTRIES DO NOT HAVE AN ROLLER COASTER LONGER THAN 3000?",
        "question_pl": "ILE KRAJÓW NIE MA KOLEJKI GÓRSKIEJ DŁUŻSZEJ NIŻ 3000?",
        "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )",
        "query_pl": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )"
    },
    {
        "db_id": "tracking_orders",
        "question": "What is the product ID for food?",
        "question_pl": "Jaki jest identyfikator produktu dla żywności?",
        "query": "select product_id from Products where product_name = 'food';",
        "query_pl": "select product_id from Products where product_name = \"jedzenie\";"
    },
    {
        "db_id": "protein_institute",
        "question": "Show institution names along with the number of proteins for each institution",
        "question_pl": "Pokaż nazwy instytucji wraz z liczbą białek dla każdej instytucji.",
        "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id",
        "query_pl": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"
    },
    {
        "db_id": "bike_1",
        "question": "What is the station name for the id's 1 and  2 ?",
        "question_pl": "Jaka jest nazwa stacji dla identyfikatorów 1 i 2?",
        "query": "SELECT name, id FROM station where id = 1 or id = 2",
        "query_pl": "SELECT name, id FROM station where id = 1 or id = 2"
    },
    {
        "db_id": "wedding",
        "question": "How many women are there?",
        "question_pl": "Ile jest kobiet?",
        "query": "SELECT count(*) FROM people WHERE is_male  =  'F' ",
        "query_pl": "SELECT count(*) FROM people WHERE is_male  =  \"F\" "
    },
    {
        "db_id": "customer_deliveries",
        "question": "Find the name of route that has the lowest number of deliveries?",
        "question_pl": "Znajdź nazwę trasy, która ma najmniejszą liczbę dostaw?",
        "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "store_1",
        "question": "What are all the tracks?",
        "question_pl": "Jakie są wszystkie utwory?",
        "query": "SELECT * FROM tracks ",
        "query_pl": "SELECT * FROM tracks "
    },
    {
        "db_id": "school_bus",
        "question": "what are the names of all drivers? ",
        "question_pl": "Jak nazywają się wszyscy kierowcy?",
        "query": "SELECT name FROM driver ",
        "query_pl": "SELECT name FROM driver "
    },
    {
        "db_id": "soccer_2",
        "question": "How many different positions are there?",
        "question_pl": "Ile jest różnych stanowisk?",
        "query": "SELECT count(distinct pPos) from tryout",
        "query_pl": "SELECT count(distinct pPos) from tryout"
    },
    {
        "db_id": "store_1",
        "question": "what is the id of balls to the walls",
        "question_pl": "Jaki jest id gry balls to the walls?",
        "query": "SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";",
        "query_pl": "SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"
    },
    {
        "db_id": "match_season",
        "question": "Show the players and years played for players from team \"Columbus Crew\".",
        "question_pl": "Pokaż zawodników i lata gry zawodników z drużyny \"Columbus Crew\".",
        "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
        "query_pl": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
    },
    {
        "db_id": "program_share",
        "question": "how many broadcast are presented on the table",
        "question_pl": "ile transmisji jest prezentowanych w tabeli",
        "query": "SELECT count(*) from broadcast",
        "query_pl": "SELECT count(*) from broadcast"
    },
    {
        "db_id": "bike_1",
        "question": "how many statuses are there",
        "question_pl": "Ile jest dostępnych statusów?",
        "query": "SELECT count(*) from status",
        "query_pl": "SELECT count(*) from status"
    },
    {
        "db_id": "storm_record",
        "question": "What is the region id for region name Denmark?",
        "question_pl": "Jaki jest identyfikator regionu dla nazwy regionu Dania?",
        "query": "SELECT region_id FROM region  WHERE region_name  =  'Denmark'",
        "query_pl": "SELECT region_id FROM region  WHERE region_name  =  \"Dania\""
    },
    {
        "db_id": "hr_1",
        "question": "HoW MANY employees have the letter z in their first name?",
        "question_pl": "ILE pracowników ma literę z w swoim imieniu?",
        "query": "select count(*) from employees where first_name LIKE '%z%'",
        "query_pl": "select count(*) from employees where first_name LIKE '%z%'"
    },
    {
        "db_id": "farm",
        "question": "Out of all the farms, what are the maximum and minimum numbers of cows?",
        "question_pl": "Jaka jest maksymalna i minimalna liczba krów we wszystkich gospodarstwach?",
        "query": "SELECT max(Cows) ,  min(Cows) FROM farm",
        "query_pl": "SELECT max(Cows) ,  min(Cows) FROM farm"
    },
    {
        "db_id": "sports_competition",
        "question": "Find the countries that have never participated in any competition with Friendly type",
        "question_pl": "Znajdź kraje, które nigdy nie brały udziału w zawodach typu Friendly.",
        "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
        "query_pl": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  \"Przyjazny\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "How many employees have the role name Editor?",
        "question_pl": "Ilu pracowników pełni rolę redaktora?",
        "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"",
        "query_pl": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Edytor\""
    },
    {
        "db_id": "loan_1",
        "question": "hello. Can you tell me the number of states in which there are customers?",
        "question_pl": "Witaj. Czy możesz mi podać liczbę stanów, w których są klienci?",
        "query": "SELECT count(state) FROM bank where no_of_customers>0",
        "query_pl": "SELECT count(state) FROM bank where no_of_customers>0"
    },
    {
        "db_id": "swimming",
        "question": "Can you list the swimmer names and their times?",
        "question_pl": "Czy możesz wymienić nazwiska pływaków i ich czasy?",
        "query": "SELECT name, time FROM swimmer",
        "query_pl": "SELECT name, time FROM swimmer"
    },
    {
        "db_id": "movie_1",
        "question": "How many movies are in the list?",
        "question_pl": "Ile filmów znajduje się na liście?",
        "query": "SELECT count(*) FROM Movie ",
        "query_pl": "SELECT count(*) FROM Movie "
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Would you show the transaction type descriptions if the share count is smaller than 10?",
        "question_pl": "Czy pokażesz opisy typów transakcji, jeśli liczba akcji jest mniejsza niż 10?",
        "query": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10",
        "query_pl": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
    },
    {
        "db_id": "small_bank_1",
        "question": "Can you tell me the average checking balance of all checking accounts?",
        "question_pl": "Czy możesz mi podać średnie saldo wszystkich kont czekowych?",
        "query": "SELECT avg(balance) FROM checking",
        "query_pl": "SELECT avg(balance) FROM checking"
    },
    {
        "db_id": "aircraft",
        "question": "Tell me the Location and Country of the Round 1 ?",
        "question_pl": "Podaj mi lokalizację i kraj rundy 1?",
        "query": "SELECT location ,  country FROM match WHERE round = \"1.0\"",
        "query_pl": "SELECT location ,  country FROM match WHERE round = \"1.0\""
    },
    {
        "db_id": "storm_record",
        "question": "What is the storm name of the storm that affected the greatest number of regions?",
        "question_pl": "Jak nazywa się burza, która dotknęła największą liczbę regionów?",
        "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "Hello. What is the name of the employee that has showed up the most in circulation history documents?",
        "question_pl": "Witaj. Jak nazywa się pracownik, który najczęściej pojawiał się w dokumentach historii obiegu?",
        "query": "SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id group by t1.employee_name order by count(*) desc limit 1",
        "query_pl": "SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id group by t1.employee_name order by count(*) desc limit 1"
    },
    {
        "db_id": "apartment_rentals",
        "question": "Can you list the apartment type code for each entry?",
        "question_pl": "Czy możesz podać kod typu mieszkania dla każdego wpisu?",
        "query": "SELECT apt_type_code FROM Apartments",
        "query_pl": "SELECT apt_type_code FROM Apartments"
    },
    {
        "db_id": "customer_complaints",
        "question": "Who has filed the least amounts of complaints?",
        "question_pl": "Kto złożył najmniej skarg?",
        "query": "SELECT DISTINCT t3.customer_id FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT DISTINCT t3.customer_id FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "list the name of the claim processing stage that most of the claims are on",
        "question_pl": "Wymień nazwę etapu rozpatrywania wniosku, na którym znajduje się większość wniosków.",
        "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_orders",
        "question": "show a list of the invoice numbers",
        "question_pl": "pokaż listę numerów faktur",
        "query": "SELECT invoice_number  from Shipments",
        "query_pl": "SELECT invoice_number  from Shipments"
    },
    {
        "db_id": "phone_1",
        "question": "List the name of the company that produces more than one phone model.",
        "question_pl": "Wymień nazwę firmy, która produkuje więcej niż jeden model telefonu.",
        "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;",
        "query_pl": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"
    },
    {
        "db_id": "loan_1",
        "question": "What are the names of the bank branches?",
        "question_pl": "Jakie są nazwy oddziałów banku?",
        "query": "select bname from bank ",
        "query_pl": "select bname from bank "
    },
    {
        "db_id": "party_host",
        "question": "Show me a list of party themes",
        "question_pl": "Pokaż mi listę motywów imprezowych",
        "query": "SELECT party_theme from party",
        "query_pl": "SELECT party_theme from party"
    },
    {
        "db_id": "icfp_1",
        "question": "Which country published the least papers?",
        "question_pl": "Który kraj opublikował najmniej artykułów?",
        "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*)  LIMIT 1",
        "query_pl": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*)  LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question": "Hi there!  Can you show me a list of all store IDs along with the associated store names?",
        "question_pl": "Cześć!  Czy możesz pokazać mi listę wszystkich identyfikatorów sklepów wraz z powiązanymi nazwami sklepów?",
        "query": "SELECT store_id, store_name FROM store",
        "query_pl": "SELECT store_id, store_name FROM store"
    },
    {
        "db_id": "voter_2",
        "question": "Find the distinct last names of all the students who have president votes and whose advisor is 8741",
        "question_pl": "Znajdź różne nazwiska wszystkich studentów, którzy mają głosy prezydenta i których doradcą jest 8741",
        "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"",
        "query_pl": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
    },
    {
        "db_id": "local_govt_mdm",
        "question": "How are you!  Can you provide me with a list of all of the master customer ids and corresponding cmi details?",
        "question_pl": "Jak się masz!  Czy możesz dostarczyć mi listę wszystkichgłównych identyfikatorów klientów i odpowiadających im szczegółów cmi?",
        "query": "SELECT master_customer_id, cmi_details from Customer_Master_Index",
        "query_pl": "SELECT master_customer_id, cmi_details from Customer_Master_Index"
    },
    {
        "db_id": "browser_web",
        "question": "What is the maximum market share of the browsers?",
        "question_pl": "Jaki jest maksymalny udział przeglądarek w rynku?",
        "query": "SELECT max(market_share) FROM browser",
        "query_pl": "SELECT max(market_share) FROM browser"
    },
    {
        "db_id": "gas_company",
        "question": "What is the profits billion of Company ExonMobil?",
        "question_pl": "Jakie są miliardowe zyski firmy ExonMobil?",
        "query": "SELECT Profits_billion FROM company where company = \"ExxonMobil\"",
        "query_pl": "SELECT Profits_billion FROM company where company = \"ExxonMobil\""
    },
    {
        "db_id": "college_2",
        "question": "Which department has the highest amount of students?",
        "question_pl": "Który wydział ma największą liczbę studentów?",
        "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "store_1",
        "question": "How many albums are there",
        "question_pl": "Ile jest tych albumów?",
        "query": "SELECT count(*) from albums",
        "query_pl": "SELECT count(*) from albums"
    },
    {
        "db_id": "phone_1",
        "question": "How many phones are on the list?",
        "question_pl": "Ile telefonów znajduje się na liście?",
        "query": "SELECT count(*) FROM phone",
        "query_pl": "SELECT count(*) FROM phone"
    },
    {
        "db_id": "department_store",
        "question": "Can you find the name of the most expensive hardware product please?",
        "question_pl": "Czy możesz podać nazwę najdroższego produktu sprzętowego?",
        "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name FROM products WHERE product_type_code  =  \"Sprzęt\" ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "shop_membership",
        "question": "Show member names with a registered branch?",
        "question_pl": "Pokaż nazwy członków z zarejestrowanym oddziałem?",
        "query": "SELECT name FROM member WHERE member_id IN (SELECT member_id FROM membership_register_branch)",
        "query_pl": "SELECT name FROM member WHERE member_id IN (SELECT member_id FROM membership_register_branch)"
    },
    {
        "db_id": "riding_club",
        "question": "What are the names of all players?",
        "question_pl": "Jak nazywają się wszyscy gracze?",
        "query": "select Player_name from player",
        "query_pl": "select Player_name from player"
    },
    {
        "db_id": "allergy_1",
        "question": "Most number of students affected by which allergy?",
        "question_pl": "Na którą alergię cierpi największa liczba uczniów?",
        "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "what are the sale?",
        "question_pl": "Na czym polega sprzedaż?",
        "query": "SELECT * FROM TRANSACTIONS",
        "query_pl": "SELECT * FROM TRANSACTIONS"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "how many employees there",
        "question_pl": "ilu jest pracowników",
        "query": "SELECT count(*) from Employees",
        "query_pl": "SELECT count(*) from Employees"
    },
    {
        "db_id": "network_2",
        "question": "Who is the person that has no friend?",
        "question_pl": "Kim jest osoba, która nie ma przyjaciela?",
        "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
        "query_pl": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
    },
    {
        "db_id": "university_basketball",
        "question": "what location are the clemson teams?",
        "question_pl": "W jakiej lokalizacji znajdują się drużyny Clemson?",
        "query": "SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'",
        "query_pl": "SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  \"Clemson\""
    },
    {
        "db_id": "election",
        "question": "Which committees have delegates from the democratic party?",
        "question_pl": "Które komitety mają delegatów z partii demokratycznej?",
        "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"",
        "query_pl": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Demokratyczny\""
    },
    {
        "db_id": "loan_1",
        "question": "How many customers in this table?",
        "question_pl": "Ilu klientów znajduje się w tej tabeli?",
        "query": "SELECT count(cust_name) FROM customer",
        "query_pl": "SELECT count(cust_name) FROM customer"
    },
    {
        "db_id": "train_station",
        "question": "what is the highest annual interchanges\t?",
        "question_pl": "Jaka jest najwyższa roczna liczba przesiadek?",
        "query": "SELECT Annual_interchanges FROM station ORDER BY Annual_interchanges DESC LIMIT 1",
        "query_pl": "SELECT Annual_interchanges FROM station ORDER BY Annual_interchanges DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question": "Hello, what are the names of the faculty members who don't participate in any activity?",
        "question_pl": "Witaj, jakie są nazwiska członków wydziału, którzy nie uczestniczą w żadnych zajęciach?",
        "query": "SELECT Lname, Fname FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
        "query_pl": "SELECT Lname, Fname FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
    },
    {
        "db_id": "college_3",
        "question": "Hi, can you tell me how many instructors there are?",
        "question_pl": "Cześć, możesz mi powiedzieć, ilu jest instruktorów?",
        "query": "SELECT count(distinct instructor) from Course",
        "query_pl": "SELECT count(distinct instructor) from Course"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Which organization hired the most research staff?",
        "question_pl": "Która organizacja zatrudniła najwięcej pracowników naukowych?",
        "query": "SELECT T1.* FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.* FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "match_season",
        "question": "how many countries are participated?",
        "question_pl": "Ile krajów bierze udział?",
        "query": "SELECT count(distinct country) from match_season",
        "query_pl": "SELECT count(distinct country) from match_season"
    },
    {
        "db_id": "insurance_policies",
        "question": "Which kind of policy type was chosen by the most customers?",
        "question_pl": "Który rodzaj polisy został wybrany przez największą liczbę klientów?",
        "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_2",
        "question": "Which major has the most students?",
        "question_pl": "Który kierunek ma najwięcej studentów?",
        "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "How many documents are there?",
        "question_pl": "Ile jest dokumentów?",
        "query": "SELECT count(*) FROM Documents",
        "query_pl": "SELECT count(*) FROM Documents"
    },
    {
        "db_id": "company_employee",
        "question": "Hello!  Can you show me a list of all company IDs, with their names and headquarters locations?",
        "question_pl": "Witaj!  Czy możesz mi pokazać listę wszystkich identyfikatorów firm wraz z ich nazwami i lokalizacjami siedzib?",
        "query": "SELECT Company_ID,Name,Headquarters FROM company",
        "query_pl": "SELECT Company_ID,Name,Headquarters FROM company"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Project details of project ID 1?",
        "question_pl": "Szczegóły projektu ID projektu 1?",
        "query": "SELECT project_details FROM Projects where project_id=1",
        "query_pl": "SELECT project_details FROM Projects where project_id=1"
    },
    {
        "db_id": "company_employee",
        "question": "What are some companies with more than 200 sales?",
        "question_pl": "Jakie są firmy z ponad 200 sprzedażami?",
        "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200",
        "query_pl": "SELECT name FROM company WHERE Sales_in_Billion  >  200"
    },
    {
        "db_id": "music_1",
        "question": "What are the resolutions of all songs with a rating lower than 8?",
        "question_pl": "Jakie są rozdzielczości wszystkich utworów z oceną niższą niż 8?",
        "query": "SELECT resolution FROM song WHERE rating  <  8",
        "query_pl": "SELECT resolution FROM song WHERE rating  <  8"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the account details with the largest value?",
        "question_pl": "Jakie są dane konta o największej wartości?",
        "query": "SELECT Account_details FROM Accounts order by Account_details desc limit 1",
        "query_pl": "SELECT Account_details FROM Accounts order by Account_details desc limit 1"
    },
    {
        "db_id": "scientist_1",
        "question": "What is the name of the project with the highest hours?",
        "question_pl": "Jak nazywa się projekt z największą liczbą godzin?",
        "query": "SELECT name FROM Projects order by hours desc limit 1",
        "query_pl": "SELECT name FROM Projects order by hours desc limit 1"
    },
    {
        "db_id": "farm",
        "question": "Show me the official names of the cities that have hosted more than one competition?",
        "question_pl": "Pokaż mi oficjalne nazwy miast, które gościły więcej niż jedne zawody?",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "phone_1",
        "question": "what are all the pixels are presented on the table",
        "question_pl": "Jakie piksele są wyświetlane w tabeli?",
        "query": "SELECT pixels FROM screen_mode",
        "query_pl": "SELECT pixels FROM screen_mode"
    },
    {
        "db_id": "flight_4",
        "question": "Show me the destination details of John F Kennedy International Airport",
        "question_pl": "Pokaż mi szczegóły miejsca docelowego Międzynarodowe lotnisko im. Johna F. Kennedy'ego",
        "query": "SELECT dst_apid,dst_ap FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
        "query_pl": "SELECT dst_apid,dst_ap FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  \"Międzynarodowy port lotniczy im. Johna F. Kennedy'ego\""
    },
    {
        "db_id": "sakila_1",
        "question": "what is the name of the actor that starred in most films? ",
        "question_pl": "Jak nazywa się aktor, który zagrał w większości filmów?",
        "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "performance_attendance",
        "question": "Hello, how many members are there?",
        "question_pl": "Witaj, ilu masz członków?",
        "query": "SELECT count(*) FROM member",
        "query_pl": "SELECT count(*) FROM member"
    },
    {
        "db_id": "e_learning",
        "question": "How many courses are there in Computer Science?",
        "question_pl": "Ile jest kierunków studiów na kierunku informatyka?",
        "query": "SELECT COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name = \"Computer Science\"",
        "query_pl": "SELECT COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name = \"Informatyka\""
    },
    {
        "db_id": "store_product",
        "question": "Which district has the largest population?",
        "question_pl": "Która dzielnica ma największą populację?",
        "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
        "query_pl": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question": "what are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?",
        "question_pl": "Jaki jest najkrótszy czas trwania i najniższa ocena utworów pogrupowanych według gatunku i uporządkowanych według gatunku?",
        "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
        "query_pl": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
    },
    {
        "db_id": "architecture",
        "question": "What is the most common mill type?",
        "question_pl": "Jaki jest najpopularniejszy typ młynka?",
        "query": "SELECT TYPE  FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE  FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "theme_gallery",
        "question": "how many exhibition are presented on the table",
        "question_pl": "ile wystaw jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM exhibition ",
        "query_pl": "SELECT count(*) FROM exhibition "
    },
    {
        "db_id": "baseball_1",
        "question": "what is the average salary for all teams?",
        "question_pl": "Jaka jest średnia pensja dla wszystkich drużyn?",
        "query": "SELECT avg(salary) FROM salary ;",
        "query_pl": "SELECT avg(salary) FROM salary ;"
    },
    {
        "db_id": "game_1",
        "question": "Show all student IDs with more than a total of 10 hours per week on all sports played please.",
        "question_pl": "Pokaż wszystkie legitymacje studenckie, na których jest łącznie więcej niż 10 godzin tygodniowo we wszystkich uprawianych sportach.",
        "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek) > 10",
        "query_pl": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek) > 10"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Can you show me all the tourist attractions' names?",
        "question_pl": "Czy możesz pokazać mi nazwy wszystkich atrakcji turystycznych?",
        "query": "SELECT DISTINCT Name FROM Tourist_attractions",
        "query_pl": "SELECT DISTINCT Name FROM Tourist_attractions"
    },
    {
        "db_id": "restaurant_1",
        "question": "show me the name of the restaurant with  ResID 1?",
        "question_pl": "Pokaż mi nazwę restauracji z ResID 1?",
        "query": "select \tResName from  Restaurant where ResID = 1",
        "query_pl": "select \tResName from  Restaurant where ResID = 1"
    },
    {
        "db_id": "baseball_1",
        "question": "hey, which 3 players won the most player awards? list their full name and id",
        "question_pl": "hej, którzy 3 gracze zdobyli najwięcej nagród dla graczy? wymień ich imiona i nazwiska oraz id",
        "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
        "query_pl": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
    },
    {
        "db_id": "book_2",
        "question": "what's the highest price of book published on this list?",
        "question_pl": "Jaka jest najwyższa cena książki opublikowanej na tej liście?",
        "query": "SELECT max(T2.price) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID",
        "query_pl": "SELECT max(T2.price) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID"
    },
    {
        "db_id": "college_1",
        "question": "Tell me class code for class room BUS311 ?",
        "question_pl": "Podaj mi kod klasy dla sali lekcyjnej BUS311?",
        "query": "SELECT class_code  FROM CLASS where \tCLASS_ROOM = 'BUS311'",
        "query_pl": "SELECT class_code  FROM CLASS where \tCLASS_ROOM = \"BUS311\""
    },
    {
        "db_id": "college_2",
        "question": "What are the names of the different departments?",
        "question_pl": "Jak nazywają się poszczególne działy?",
        "query": "SELECT DISTINCT dept_name FROM course",
        "query_pl": "SELECT DISTINCT dept_name FROM course"
    },
    {
        "db_id": "film_rank",
        "question": "please list the years of film market estimations in descending order.",
        "question_pl": "Wymień lata szacunków rynku filmowego w kolejności malejącej.",
        "query": "SELECT Year FROM film_market_estimation  ORDER BY Year DESC",
        "query_pl": "SELECT Year FROM film_market_estimation  ORDER BY Year DESC"
    },
    {
        "db_id": "wrestler",
        "question": "Show the teams that have wrestlers eliminated by \"Orton\".",
        "question_pl": "Pokaż drużyny, których wrestlerzy zostali wyeliminowani przez \"Ortona\".",
        "query": "SELECT Team FROM Elimination WHERE Eliminated_By = \"Orton\"",
        "query_pl": "SELECT Team FROM Elimination WHERE Eliminated_By = \"Orton\""
    },
    {
        "db_id": "e_learning",
        "question": "How many students have the family name \"Zieme\"?",
        "question_pl": "Ilu uczniów nosi nazwisko rodowe \"Zieme\"?",
        "query": "select count(student_id) from Students where family_name = \"Zieme\"",
        "query_pl": "select count(student_id) from Students where family_name = \"Zieme\""
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "What is the name of the shipping agent that shipped the largest number of documents?",
        "question_pl": "Jak nazywa się przewoźnik, który wysłał największą liczbę dokumentów?",
        "query": "SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count(T2.document_id) DESC LIMIT 1;",
        "query_pl": "SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count(T2.document_id) DESC LIMIT 1;"
    },
    {
        "db_id": "loan_1",
        "question": "Hi there!  How are you?  Can you show a list of all customer IDs for customers who have loans in the amount of 5000 or more?",
        "question_pl": "Cześć!  Jak się masz?  Czy możesz pokazać listę wszystkich identyfikatorów klientów, którzy mają pożyczki w wysokości 5000 lub więcej?",
        "query": "SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >=  5000",
        "query_pl": "SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >=  5000"
    },
    {
        "db_id": "sakila_1",
        "question": "What movies contain the words \"deleted scenes\" in the column Special Features?",
        "question_pl": "Jakie filmy zawierają słowa \"usunięte sceny\" w kolumnie Funkcje specjalne?",
        "query": "SELECT * FROM film WHERE special_features LIKE '%usunięte sceny%'",
        "query_pl": "SELECT * FROM film WHERE special_features LIKE '%usunięte sceny%'"
    },
    {
        "db_id": "game_1",
        "question": "Which students play video games?",
        "question_pl": "Którzy uczniowie grają w gry wideo?",
        "query": "SELECT distinct StuID FROM Plays_games",
        "query_pl": "SELECT distinct StuID FROM Plays_games"
    },
    {
        "db_id": "roller_coaster",
        "question": "Hi I was wondering if you could tell me what the fastest roller coaster is?",
        "question_pl": "Cześć, zastanawiałem się, czy możesz mi powiedzieć, jaka jest najszybsza kolejka górska?",
        "query": "SELECT name FROM roller_coaster order BY speed desc limit 1",
        "query_pl": "SELECT name FROM roller_coaster order BY speed desc limit 1"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "What organization id Denesik and Sons Party?",
        "question_pl": "Jaką organizacją jest Denesik and Sons Party?",
        "query": "SELECT organization_id FROM Organizations where organization_details  =  'Denesik and Sons Party'",
        "query_pl": "SELECT organization_id FROM Organizations where organization_details  =  \"Impreza Denesik i Synowie\""
    },
    {
        "db_id": "small_bank_1",
        "question": "Hello!  Can you display a list of all of the Savings Account customer IDs and the associated balances?",
        "question_pl": "Witaj!  Czy możesz wyświetlić listę wszystkich identyfikatorów klientów konta oszczędnościowego i powiązanych sald?",
        "query": "select  custid,balance from savings",
        "query_pl": "select  custid,balance from savings"
    },
    {
        "db_id": "election",
        "question": "What is the average population across the counties?",
        "question_pl": "Jaka jest średnia populacja w hrabstwach?",
        "query": "SELECT avg(Population) FROM county",
        "query_pl": "SELECT avg(Population) FROM county"
    },
    {
        "db_id": "manufactory_1",
        "question": "What is the name of the manufacturer that has the highest revenue?",
        "question_pl": "Jak nazywa się producent, który ma największe przychody?",
        "query": "SELECT name  FROM manufacturers ORDER BY revenue DESC LIMIT 1",
        "query_pl": "SELECT name  FROM manufacturers ORDER BY revenue DESC LIMIT 1"
    },
    {
        "db_id": "solvency_ii",
        "question": "What is the most common type code of all the products?",
        "question_pl": "Jaki jest najczęstszy kod typu wszystkich produktów?",
        "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_3",
        "question": "What is the maximum grade point of all students who live in NYC?",
        "question_pl": "Jaki jest maksymalny wynik wszystkich uczniów mieszkających w Nowym Jorku?",
        "query": "SELECT max(T2.gradepoint)  FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"",
        "query_pl": "SELECT max(T2.gradepoint)  FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "how many Invoices there",
        "question_pl": "ile jest faktur",
        "query": "SELECT count(*) FROM INVOICES ",
        "query_pl": "SELECT count(*) FROM INVOICES "
    },
    {
        "db_id": "restaurant_1",
        "question": "Hello, how many students are over 18?",
        "question_pl": "Witaj, ilu uczniów ma więcej niż 18 lat?",
        "query": "SELECT count(*) from student where age > 18",
        "query_pl": "SELECT count(*) from student where age > 18"
    },
    {
        "db_id": "loan_1",
        "question": "can you show me average of credit scores?",
        "question_pl": "Czy możesz mi pokazać średnią ocen kredytowych?",
        "query": "SELECT AVG(credit_score) FROM customer",
        "query_pl": "SELECT AVG(credit_score) FROM customer"
    },
    {
        "db_id": "store_product",
        "question": "how many store are presented on the table",
        "question_pl": "ile sklepów jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM store",
        "query_pl": "SELECT count(*) FROM store"
    },
    {
        "db_id": "wine_1",
        "question": "Please show me the names of wines by Brander winery. ",
        "question_pl": "Podaj mi nazwy win z winiarni Brander.",
        "query": "SELECT Name FROM WINE WHERE Winery = \"Brander\"",
        "query_pl": "SELECT Name FROM WINE WHERE Winery = \"Brander\""
    },
    {
        "db_id": "university_basketball",
        "question": "what is the acc percent of each team?",
        "question_pl": "Jaki jest procentowy udział każdej z drużyn?",
        "query": "SELECT team_id, acc_percent FROM basketball_match",
        "query_pl": "SELECT team_id, acc_percent FROM basketball_match"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "can you show me the document date?",
        "question_pl": "Czy możesz pokazać mi datę dokumentu?",
        "query": "select document_date from documents",
        "query_pl": "select document_date from documents"
    },
    {
        "db_id": "machine_repair",
        "question": "List out the all technician name",
        "question_pl": "Wymień nazwiska wszystkich techników",
        "query": "SELECT Name FROM technician",
        "query_pl": "SELECT Name FROM technician"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Tell me the document date of the project id 30?",
        "question_pl": "Podaj mi datę dokumentu o identyfikatorze projektu 30?",
        "query": "SELECT document_type_code from documents where project_id = 30",
        "query_pl": "SELECT document_type_code from documents where project_id = 30"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "Find the start and end  dates of behavior incidents of students with last name \"Rohan\"?",
        "question_pl": "Znajdź daty rozpoczęcia i zakończenia incydentów związanych z zachowaniem uczniów o nazwisku \"Rohan\"?",
        "query": "SELECT T1.date_incident_start ,  T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Rohan\"",
        "query_pl": "SELECT T1.date_incident_start ,  T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Rohan\""
    },
    {
        "db_id": "sakila_1",
        "question": "Hello!  Can you list the film ID of the film with the most copies in the inventory?",
        "question_pl": "Witaj!  Czy możesz podać ID filmu z największą liczbą kopii w spisie?",
        "query": "SELECT  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question": "How many professors in the school?",
        "question_pl": "Ilu masz profesorów w szkole?",
        "query": "SELECT count(*) FROM professor ",
        "query_pl": "SELECT count(*) FROM professor "
    },
    {
        "db_id": "college_2",
        "question": "I'd like to know about the prerequisites for courses",
        "question_pl": "Chciałbym dowiedzieć się o wymaganiach wstępnych dla kursów",
        "query": "select course_id, prereq_id from prereq",
        "query_pl": "select course_id, prereq_id from prereq"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What are the first and last names of all customers who don't have an account?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich klientów, którzy nie mają konta?",
        "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "department_store",
        "question": "What is the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff?",
        "question_pl": "Jak nazywa się i jakiej jest płci pracownik, któremu przydzielono stanowisko sprzedawcy, ale nigdy pracownika biurowego?",
        "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
        "query_pl": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sprzedawca\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Personel biurowy\""
    },
    {
        "db_id": "sakila_1",
        "question": "What are the districts of the addresses?",
        "question_pl": "Jakie są dzielnice adresów?",
        "query": "SELECT district FROM address",
        "query_pl": "SELECT district FROM address"
    },
    {
        "db_id": "station_weather",
        "question": "How many trains are there per station?",
        "question_pl": "Ile pociągów przypada na jedną stację?",
        "query": "SELECT t2.station_id, count(*) FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id",
        "query_pl": "SELECT t2.station_id, count(*) FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id"
    },
    {
        "db_id": "department_store",
        "question": "List all staff names with their gender...",
        "question_pl": "Wymień nazwiska wszystkich pracowników wraz z ich płcią...",
        "query": "SELECT staff_name, staff_gender FROM Staff",
        "query_pl": "SELECT staff_name, staff_gender FROM Staff"
    },
    {
        "db_id": "formula_1",
        "question": "Hello!  Can you give me a list of all of the forenames and surnames of the various drivers?",
        "question_pl": "Witaj!  Czy możesz podać mi listę wszystkich imion i nazwisk różnych kierowców?",
        "query": "SELECT forename ,  surname FROM drivers",
        "query_pl": "SELECT forename ,  surname FROM drivers"
    },
    {
        "db_id": "network_2",
        "question": "What is the average age of all males?",
        "question_pl": "Jaki jest średni wiek wszystkich mężczyzn?",
        "query": "SELECT avg(age) FROM Person WHERE gender  =  'male'",
        "query_pl": "SELECT avg(age) FROM Person WHERE gender  =  \"mężczyzna\""
    },
    {
        "db_id": "hr_1",
        "question": "Could you please display the first name and last name of each employee?",
        "question_pl": "Czy możesz wyświetlić imię i nazwisko każdego pracownika?",
        "query": "SELECT first_name ,  last_name FROM employees ",
        "query_pl": "SELECT first_name ,  last_name FROM employees "
    },
    {
        "db_id": "flight_4",
        "question": "WHAT IS THE AIRPORT NAME OF GORKA CITY IN AIRPORT TABLE?",
        "question_pl": "JAKA JEST NAZWA LOTNISKA W MIEŚCIE GORKA W TABELI LOTNISK?",
        "query": "select name from airports where city='Goroka'",
        "query_pl": "select name from airports where city=\"Goroka\""
    },
    {
        "db_id": "voter_2",
        "question": "How many students are voting in the spring election cycle?",
        "question_pl": "Ilu studentów głosuje w wiosennym cyklu wyborczym?",
        "query": "SELECT COUNT(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T2.Election_Cycle = \"Spring\"",
        "query_pl": "SELECT COUNT(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T2.Election_Cycle = \"Wiosna\""
    },
    {
        "db_id": "sakila_1",
        "question": "Can you show me the first names of customers who have a rental date on or before 2005-08-23?",
        "question_pl": "Czy możesz pokazać mi imiona klientów, którzy mają datę wypożyczenia w dniu 2005-08-23 lub wcześniej?",
        "query": "SELECT first_name FROM customer WHERE customer_id IN( SELECT customer_id FROM rental WHERE rental_date  <=  '2005-08-23 00:00:00' )",
        "query_pl": "SELECT first_name FROM customer WHERE customer_id IN( SELECT customer_id FROM rental WHERE rental_date  <=  \"2005-08-23 00:00:00\" )"
    },
    {
        "db_id": "college_2",
        "question": "How many courses are there?",
        "question_pl": "Ile jest kursów?",
        "query": "SELECT count(*) FROM course",
        "query_pl": "SELECT count(*) FROM course"
    },
    {
        "db_id": "sakila_1",
        "question": "How many stores are there?",
        "question_pl": "Ile jest sklepów?",
        "query": "SELECT count(distinct store_id) FROM inventory ",
        "query_pl": "SELECT count(distinct store_id) FROM inventory "
    },
    {
        "db_id": "body_builder",
        "question": "What are the birth places that are shared by at least two people?",
        "question_pl": "Które miejsca urodzenia są wspólne dla co najmniej dwóch osób?",
        "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "wine_1",
        "question": "Hi, could you find the appellations that produce wines after the year of 2008 but not in Central Coast area.",
        "question_pl": "Cześć, czy możesz znaleźć apelacje, które produkują wina po roku 2008, ale nie w regionie Central Coast.",
        "query": "SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = \"Central Coast\"",
        "query_pl": "SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = \"Wybrzeże Środkowe\""
    },
    {
        "db_id": "train_station",
        "question": "Hello there!  Can you show me a list of all of the train station names?",
        "question_pl": "Witajcie!  Czy możesz mi pokazać listę wszystkich nazw stacji kolejowych?",
        "query": "SELECT name FROM station",
        "query_pl": "SELECT name FROM station"
    },
    {
        "db_id": "college_3",
        "question": "Can you please list the full names of all male faculty members and the buildings they live in?",
        "question_pl": "Czy możesz podać pełne imiona i nazwiska wszystkich członków wydziału płci męskiej oraz budynki, w których mieszkają?",
        "query": "SELECT Fname ,  Lname, building FROM FACULTY WHERE sex  =  \"M\"",
        "query_pl": "SELECT Fname ,  Lname, building FROM FACULTY WHERE sex  =  \"M\""
    },
    {
        "db_id": "soccer_2",
        "question": "How many colleges have enrollment greater than 18000?",
        "question_pl": "Do ilu uczelni zapisuje się więcej niż 18000 osób?",
        "query": "SELECT count(*) FROM College WHERE enr  >  18000",
        "query_pl": "SELECT count(*) FROM College WHERE enr  >  18000"
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the ID, Name  and the number of heads.",
        "question_pl": "Który dział ma więcej niż 1 kierownika jednocześnie? Wymień identyfikator, nazwę i liczbę kierowników.",
        "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"
    },
    {
        "db_id": "e_learning",
        "question": "Can you list the IDs and middle names of all students who have no more than 2 enrollments?",
        "question_pl": "Czy możesz wymienić identyfikatory i drugie imiona wszystkich uczniów, którzy mają nie więcej niż 2 zapisy?",
        "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2",
        "query_pl": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
    },
    {
        "db_id": "department_store",
        "question": "What are the names of all the products supplied by supplier id 3, please?",
        "question_pl": "Jak nazywają się wszystkie produkty dostarczane przez dostawcę o identyfikatorze 3?",
        "query": "SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3",
        "query_pl": "SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
    },
    {
        "db_id": "storm_record",
        "question": "Hi can you tell me the name of the regions not affected by storms?",
        "question_pl": "Cześć, czy możesz mi podać nazwy regionów, w których nie występują burze?",
        "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
        "query_pl": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
    },
    {
        "db_id": "apartment_rentals",
        "question": "How many apartments in this table?",
        "question_pl": "Ile mieszkań znajduje się w tej tabeli?",
        "query": "SELECT count(*) from apartments",
        "query_pl": "SELECT count(*) from apartments"
    },
    {
        "db_id": "customer_complaints",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT COUNT(*) FROM Customers",
        "query_pl": "SELECT COUNT(*) FROM Customers"
    },
    {
        "db_id": "voter_2",
        "question": "how many females have president votes?",
        "question_pl": "Ile kobiet ma głosy prezydenckie?",
        "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"",
        "query_pl": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "question_pl": "W którym roku utworzono większość działów?",
        "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sports_competition",
        "question": "Show me all the types of competitions?",
        "question_pl": "Pokaż mi wszystkie rodzaje zawodów?",
        "query": "SELECT DISTINCT(competition_type) FROM competition",
        "query_pl": "SELECT DISTINCT(competition_type) FROM competition"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "List the order cancelled customer id from the table?",
        "question_pl": "Wymień identyfikator anulowanego klienta z tabeli?",
        "query": "select order_id ,customer_id from Customer_Orders where order_status = 'Cancelled'",
        "query_pl": "select order_id ,customer_id from Customer_Orders where order_status = \"Anulowane\""
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the visit date of the visitor whose detail is \"Vincent\"?",
        "question_pl": "Jaka jest data wizyty odwiedzającego, którego dane to \"Vincent\"?",
        "query": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
        "query_pl": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
    },
    {
        "db_id": "department_store",
        "question": "What product id was ordered most often?",
        "question_pl": "Jaki produkt był zamawiany najczęściej?",
        "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Hello There! Can you provide me with a list of all customer names?",
        "question_pl": "Witajcie! Czy możesz podać mi listę wszystkich nazwisk klientów?",
        "query": "SELECT customer_name FROM customers ",
        "query_pl": "SELECT customer_name FROM customers "
    },
    {
        "db_id": "pilot_record",
        "question": "Can you please show the names of all pilots and fleet series of the aircrafts they have flown in ascending order of the rank of the pilot?",
        "question_pl": "Czy możesz podać nazwiska wszystkich pilotów i serie samolotów, którymi latali, w porządku rosnącym według stopnia pilota?",
        "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank",
        "query_pl": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
    },
    {
        "db_id": "aircraft",
        "question": "What are the total number of domestic passengers of airports that contain the word \"London\"?",
        "question_pl": "Jaka jest łączna liczba pasażerów krajowych na lotniskach zawierających słowo \"Londyn\"?",
        "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%Londyn%\"",
        "query_pl": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%Londyn%\""
    },
    {
        "db_id": "news_report",
        "question": "Can you please list the names of the journalists in a table with the number of events they each reported?",
        "question_pl": "Czy możesz wymienić nazwiska dziennikarzy w tabeli z liczbą wydarzeń, które każdy z nich zgłosił?",
        "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name",
        "query_pl": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
    },
    {
        "db_id": "network_2",
        "question": "Hi, how many people have friends with ages above 40?",
        "question_pl": "Cześć, ile osób ma znajomych w wieku powyżej 40 lat?",
        "query": "SELECT COUNT(*) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) ",
        "query_pl": "SELECT COUNT(*) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) "
    },
    {
        "db_id": "music_1",
        "question": "How many artists have recorded at least one song in English?",
        "question_pl": "Ilu artystów nagrało przynajmniej jedną piosenkę w języku angielskim?",
        "query": "select count(*) from (SELECT * FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1)",
        "query_pl": "select count(*) from (SELECT * FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"angielski\" GROUP BY T2.artist_name HAVING count(*)  >=  1)"
    },
    {
        "db_id": "department_store",
        "question": "Who placed order after having order cancelled?",
        "question_pl": "Kto złożył zamówienie po jego anulowaniu?",
        "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
        "query_pl": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Anulowane\")"
    },
    {
        "db_id": "election_representative",
        "question": "Which states have two or more representatives?",
        "question_pl": "Które stany mają dwóch lub więcej przedstawicieli?",
        "query": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "icfp_1",
        "question": "What are the titles of the papers?",
        "question_pl": "Jakie są tytuły artykułów?",
        "query": "SELECT title FROM papers",
        "query_pl": "SELECT title FROM papers"
    },
    {
        "db_id": "department_store",
        "question": "Can you please list the product which has the lowest value for product price?",
        "question_pl": "Czy możesz wymienić produkt, który ma najniższą wartość ceny produktu?",
        "query": "SELECT * FROM products ORDER BY product_price LIMIT 1",
        "query_pl": "SELECT * FROM products ORDER BY product_price LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question": "Please find the names of the dorms that do not have any amenities?",
        "question_pl": "Podaj nazwy akademików, które nie mają żadnych udogodnień?",
        "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
        "query_pl": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
    },
    {
        "db_id": "e_learning",
        "question": "What is the name of the course that has the most student enrollment?",
        "question_pl": "Jak nazywa się kurs, na który zapisało się najwięcej studentów?",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "soccer_1",
        "question": "Hello!  Can you tell me how many left footed players there are?",
        "question_pl": "Witaj!  Czy możesz mi powiedzieć, ilu jest lewonożnych graczy?",
        "query": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot  =  \"left\"",
        "query_pl": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot  =  \"lewy\""
    },
    {
        "db_id": "county_public_safety",
        "question": "Show the name of cities in the county that has the largest number of police officers.",
        "question_pl": "Wskaż nazwy miast w hrabstwie, które mają największą liczbę funkcjonariuszy policji.",
        "query": "SELECT name FROM city WHERE county_ID = (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
        "query_pl": "SELECT name FROM city WHERE county_ID = (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"
    },
    {
        "db_id": "flight_4",
        "question": "What are all the source airports?",
        "question_pl": "Jakie są wszystkie lotniska źródłowe?",
        "query": "SELECT T2.src_apid,T2.src_ap,T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",
        "query_pl": "SELECT T2.src_apid,T2.src_ap,T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Hello there!  Can you provide me with a list of all of the customer names and their corresponding payment methods?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich nazw klientów i odpowiadających im metod płatności?",
        "query": "SELECT customer_name, payment_method FROM Customers",
        "query_pl": "SELECT customer_name, payment_method FROM Customers"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is the name of the customer who was involved in the most policies, please?",
        "question_pl": "Jak nazywa się klient, którego dotyczyło najwięcej polis?",
        "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "shop_membership",
        "question": "How many cities have a branch with 100 membership?",
        "question_pl": "Ile miast ma oddział ze 100 członkami?",
        "query": "SELECT count(distinct city) frOM branch WHERE  membership_amount  >  100",
        "query_pl": "SELECT count(distinct city) frOM branch WHERE  membership_amount  >  100"
    },
    {
        "db_id": "customer_complaints",
        "question": "What date was the most recent complaint raised?",
        "question_pl": "Kiedy została złożona ostatnia skarga?",
        "query": "SELECT date_complaint_raised from complaints order by date_complaint_raised desc limit 1",
        "query_pl": "SELECT date_complaint_raised from complaints order by date_complaint_raised desc limit 1"
    },
    {
        "db_id": "restaurant_1",
        "question": "How many Restaurants are there?",
        "question_pl": "Ile jest restauracji?",
        "query": "SELECT count(*) FROM Restaurant",
        "query_pl": "SELECT count(*) FROM Restaurant"
    },
    {
        "db_id": "e_learning",
        "question": "What are the names of the courses",
        "question_pl": "Jakie są nazwy kursów?",
        "query": "SELECT course_name FROM Courses",
        "query_pl": "SELECT course_name FROM Courses"
    },
    {
        "db_id": "company_employee",
        "question": "Show the name of the company with company_id 1.0?",
        "question_pl": "Pokaż nazwę firmy z identyfikatorem company_id 1.0?",
        "query": "SELECT Name  from company  where Company_ID=1.0",
        "query_pl": "SELECT Name  from company  where Company_ID=1.0"
    },
    {
        "db_id": "inn_1",
        "question": "what is the average of rates?",
        "question_pl": "Jaka jest średnia stawek?",
        "query": "SELECT avg(Rate) FROM Reservations",
        "query_pl": "SELECT avg(Rate) FROM Reservations"
    },
    {
        "db_id": "game_injury",
        "question": "how many stadium are presented on the table",
        "question_pl": "ile stadionów jest prezentowanych w tabeli",
        "query": "SELECT COUNT(*) FROM stadium",
        "query_pl": "SELECT COUNT(*) FROM stadium"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "FIND THE CUSTOMER NAME AND DATE OF THE ORDERS THAT HAVE THE STATUS \"DELIVERED\"",
        "question_pl": "ZNAJDŹ NAZWĘ KLIENTA I DATĘ ZAMÓWIEŃ, KTÓRE MAJĄ STATUS \"DOSTARCZONE\".",
        "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"",
        "query_pl": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Dostarczone\""
    },
    {
        "db_id": "body_builder",
        "question": "how many body builder id are there",
        "question_pl": "ilu jest kulturystów",
        "query": "select count(*) from body_builder;",
        "query_pl": "select count(*) from body_builder;"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Can you show me the first names of customers and the number of  accounts they have? ",
        "question_pl": "Czy możesz pokazać mi imiona klientów i liczbę posiadanych przez nich kont?",
        "query": "SELECT T2.customer_first_name, count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ",
        "query_pl": "SELECT T2.customer_first_name, count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id "
    },
    {
        "db_id": "music_1",
        "question": "how many artist are there in total?",
        "question_pl": "Ilu jest w sumie artystów?",
        "query": "SELECT count(*) from artist",
        "query_pl": "SELECT count(*) from artist"
    },
    {
        "db_id": "railway",
        "question": "Hi, Can you tell me the most common builder of railways?",
        "question_pl": "Cześć, Czy możesz mi powiedzieć, jaki jest najpopularniejszy budowniczy kolei?",
        "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "manufactory_1",
        "question": "What manufacturer has the highest revenue?",
        "question_pl": "Który producent ma największe przychody?",
        "query": "SELECT Name FROM manufacturers order by revenue desc limit 1",
        "query_pl": "SELECT Name FROM manufacturers order by revenue desc limit 1"
    },
    {
        "db_id": "csu_1",
        "question": "hi I was wondering how many counties you have information for?",
        "question_pl": "Cześć, zastanawiałem się, dla ilu hrabstw masz informacje?",
        "query": "SELECT count(DISTINCT T1.county) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus",
        "query_pl": "SELECT count(DISTINCT T1.county) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "show the outcome code in the Table Name: Project Outcomes",
        "question_pl": "pokaż kod wyniku w nazwie tabeli: Wyniki projektu",
        "query": "SELECT DISTINCT outcome_code FROM  Project_Outcomes",
        "query_pl": "SELECT DISTINCT outcome_code FROM  Project_Outcomes"
    },
    {
        "db_id": "college_1",
        "question": "How many courses does the Computer Info. Systems department offer?",
        "question_pl": "Ile kursów oferuje wydział Computer Info. Systems?",
        "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"",
        "query_pl": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Komputerowe systemy informacyjne\""
    },
    {
        "db_id": "swimming",
        "question": "how many names in the event table",
        "question_pl": "ile nazw w tabeli zdarzeń",
        "query": "SELECT count(Name) from event",
        "query_pl": "SELECT count(Name) from event"
    },
    {
        "db_id": "flight_4",
        "question": "Can you please tell me the number of routes with the destination airport Italy?",
        "question_pl": "Czy możesz podać liczbę tras z lotniskiem docelowym we Włoszech?",
        "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
        "query_pl": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  \"Włochy\""
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the patients who had more than one appointment?",
        "question_pl": "Jakie są nazwiska pacjentów, którzy odbyli więcej niż jedną wizytę?",
        "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "query_pl": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
    },
    {
        "db_id": "department_store",
        "question": "What is the id of the department store that has both marketing and managing department?",
        "question_pl": "Jaki jest identyfikator domu towarowego, który ma zarówno dział marketingu, jak i dział zarządzania?",
        "query": "SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"",
        "query_pl": "SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"zarządzający\""
    },
    {
        "db_id": "movie_1",
        "question": "How many reviewers are there?",
        "question_pl": "Ilu jest recenzentów?",
        "query": "SELECT count(DISTINCT RID) FROM Rating",
        "query_pl": "SELECT count(DISTINCT RID) FROM Rating"
    },
    {
        "db_id": "department_store",
        "question": "what is the name of the most expensive hardware product? ",
        "question_pl": "Jak nazywa się najdroższy produkt sprzętowy?",
        "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name FROM products WHERE product_type_code  =  \"Sprzęt\" ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "election_representative",
        "question": "what is the minimum vote percent of elections?",
        "question_pl": "Jaki jest minimalny procent głosów w wyborach?",
        "query": "SELECT min(Vote_Percent)  FROM election",
        "query_pl": "SELECT min(Vote_Percent)  FROM election"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Hello!  Can you provide me with the first and last name of the customer who has account name 900?",
        "question_pl": "Witaj!  Czy możesz podać mi imię i nazwisko klienta, który ma konto o nazwie 900?",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
    },
    {
        "db_id": "customers_and_invoices",
        "question": "Hello, I was wondering how many accounts are listed under the first name of John?",
        "question_pl": "Witaj, zastanawiałem się, ile kont jest wymienionych pod imieniem John?",
        "query": "select count(distinct account_id) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id WHERE customer_first_name='John'",
        "query_pl": "select count(distinct account_id) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id=T1.customer_id WHERE customer_first_name=\"John\""
    },
    {
        "db_id": "solvency_ii",
        "question": "Show me the prices of the products named \"Dining\"",
        "question_pl": "Pokaż mi ceny produktów o nazwie \"Wyżywienie\"",
        "query": "SELECT Product_Price FROM Products WHERE Product_Name = 'Dinning'",
        "query_pl": "SELECT Product_Price FROM Products WHERE Product_Name = \"Kolacja\""
    },
    {
        "db_id": "baseball_1",
        "question": "What are the names of some public parks in the United States?",
        "question_pl": "Jak nazywają się niektóre parki publiczne w Stanach Zjednoczonych?",
        "query": "SELECT park_name FROM park where country='US'",
        "query_pl": "SELECT park_name FROM park where country=\"USA\""
    },
    {
        "db_id": "ship_mission",
        "question": "Hello!  How are you!  Can you tell me how many missions there are in total?",
        "question_pl": "Witaj, jak się masz!  Czy możesz mi powiedzieć, ile jest w sumie misji?",
        "query": "SELECT count(*) FROM mission ",
        "query_pl": "SELECT count(*) FROM mission "
    },
    {
        "db_id": "soccer_2",
        "question": "how many hours does each player get to be active for?",
        "question_pl": "Przez ile godzin każdy gracz może być aktywny?",
        "query": "SELECT pID\t,HS FROM Player",
        "query_pl": "SELECT pID\t,HS FROM Player"
    },
    {
        "db_id": "protein_institute",
        "question": "show the institute type with lowest number of institutions",
        "question_pl": "pokaż typ instytutu z najmniejszą liczbą instytucji",
        "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "formula_1",
        "question": "How many drivers are there, total?",
        "question_pl": "Ilu jest w sumie kierowców?",
        "query": "SELECT count(*) FROM drivers ",
        "query_pl": "SELECT count(*) FROM drivers "
    },
    {
        "db_id": "aircraft",
        "question": "Which Airport has the largest number of international passengers? ",
        "question_pl": "Które lotnisko obsługuje największą liczbę pasażerów międzynarodowych?",
        "query": "SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1",
        "query_pl": "SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question": "Show the name of the company with company id 1?",
        "question_pl": "Pokaż nazwę firmy z identyfikatorem firmy 1?",
        "query": "SELECT company  FROM company WHERE company_id='1'",
        "query_pl": "SELECT company  FROM company WHERE company_id=\"1\""
    },
    {
        "db_id": "soccer_2",
        "question": "How many players are there?",
        "question_pl": "Ilu jest graczy?",
        "query": "SELECT count(*)FROM Player",
        "query_pl": "SELECT count(*)FROM Player"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "show the number of all customers without an account",
        "question_pl": "pokaż liczbę wszystkich klientów bez konta",
        "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
        "query_pl": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
    },
    {
        "db_id": "music_1",
        "question": "Which are the male artists?",
        "question_pl": "Którzy artyści są mężczyznami?",
        "query": "SELECT * FROM artist WHERE gender  =  \"Male\"",
        "query_pl": "SELECT * FROM artist WHERE gender  =  \"Mężczyzna\""
    },
    {
        "db_id": "icfp_1",
        "question": "can you give me the last names of the authors?",
        "question_pl": "Możesz mi podać nazwiska autorów?",
        "query": "SELECT lname FROM authors ",
        "query_pl": "SELECT lname FROM authors "
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "what is the transaction type code for the investor with id 18",
        "question_pl": "Jaki jest kod typu transakcji dla inwestora o identyfikatorze 18?",
        "query": "SELECT transaction_type_code from transactions where investor_id = 18",
        "query_pl": "SELECT transaction_type_code from transactions where investor_id = 18"
    },
    {
        "db_id": "network_2",
        "question": "Who is the youngest male?",
        "question_pl": "Kto jest najmłodszym mężczyzną?",
        "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )",
        "query_pl": "SELECT name FROM Person WHERE gender  =  \"mężczyzna\" AND age  =  (SELECT min(age) FROM person WHERE gender  =  \"mężczyzna\" )"
    },
    {
        "db_id": "train_station",
        "question": "what is the \tNumber_of_Platforms does Main_Services South Western Main Line West of England Main Line have?",
        "question_pl": "Jaka jest Number_of_Platforms, którą posiada Main_Services South Western Main Line West of England Main Line?",
        "query": "SELECT number_of_platforms FROM station where Main_services = \"South Western Main Line West of England Main Line\"",
        "query_pl": "SELECT number_of_platforms FROM station where Main_services = \"Główna linia południowo-zachodnia Główna linia zachodniej Anglii\""
    },
    {
        "db_id": "hr_1",
        "question": "hi! how many employees are there that get a commission percentage?",
        "question_pl": "Cześć! Ilu jest pracowników, którzy otrzymują prowizję procentową?",
        "query": "SELECT COUNT(DISTINCT EMPLOYEE_ID) FROM employees WHERE COMMISSION_PCT > 0",
        "query_pl": "SELECT COUNT(DISTINCT EMPLOYEE_ID) FROM employees WHERE COMMISSION_PCT > 0"
    },
    {
        "db_id": "epinions_1",
        "question": "What is item number 4?",
        "question_pl": "Czym jest pozycja numer 4?",
        "query": "SELECT * FROM item WHERE i_id = 4",
        "query_pl": "SELECT * FROM item WHERE i_id = 4"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Which places did Alison visit",
        "question_pl": "Które miejsca odwiedziła Alison?",
        "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\"",
        "query_pl": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\""
    },
    {
        "db_id": "soccer_2",
        "question": "How many student in total participate in the tryout?",
        "question_pl": "Ilu uczniów bierze udział w testach?",
        "query": "SELECT count(*)  FROM tryout",
        "query_pl": "SELECT count(*)  FROM tryout"
    },
    {
        "db_id": "chinook_1",
        "question": "find the name of the Track 2?",
        "question_pl": "Znajdź nazwę ścieżki 2?",
        "query": "SELECT Name from  Track where TrackId='2'",
        "query_pl": "SELECT Name from  Track where TrackId=\"2\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "For the documents with the description \"Regular\", what are all of their response received dates?",
        "question_pl": "W przypadku dokumentów z opisem \"Regularne\", jakie są wszystkie daty otrzymania odpowiedzi?",
        "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular'",
        "query_pl": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  \"Regularny\""
    },
    {
        "db_id": "student_assessment",
        "question": "Can you tell me the id of the students who registered for course 301?",
        "question_pl": "Czy możesz mi podać identyfikatory studentów, którzy zarejestrowali się na kurs 301?",
        "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ",
        "query_pl": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 "
    },
    {
        "db_id": "hr_1",
        "question": "Could you tell me how many employees have the job title PU_MAN?",
        "question_pl": "Czy możesz mi powiedzieć, ilu pracowników ma stanowisko PU_MAN?",
        "query": " SELECT count(*) FROM employees WHERE job_id  =  'PU_MAN' ",
        "query_pl": " SELECT count(*) FROM employees WHERE job_id  =  \"PU_MAN\" "
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "How many employees are there?",
        "question_pl": "Ilu masz pracowników?",
        "query": "SELECT COUNT(*) FROM Employees",
        "query_pl": "SELECT COUNT(*) FROM Employees"
    },
    {
        "db_id": "news_report",
        "question": "Hi, what journalist had worked the most amount of years?",
        "question_pl": "Cześć, który dziennikarz przepracował najwięcej lat?",
        "query": "SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1",
        "query_pl": "SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question": "Which employees don't have certificates?",
        "question_pl": "Którzy pracownicy nie mają certyfikatów?",
        "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
        "query_pl": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
    },
    {
        "db_id": "college_2",
        "question": "Hello!  Can you provide me with a list of Instructor IDs for those who did not teach any courses?",
        "question_pl": "Witaj!  Czy możesz podać mi listę identyfikatorów instruktorów, którzy nie prowadzili żadnych kursów?",
        "query": "SELECT ID FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
        "query_pl": "SELECT ID FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
    },
    {
        "db_id": "protein_institute",
        "question": "which team performed in Ave Maria university ?",
        "question_pl": "Który zespół wystąpił na uniwersytecie Ave Maria?",
        "query": "SELECT Team FROM institution WHERE Institution  =  'Ave Maria University'",
        "query_pl": "SELECT Team FROM institution WHERE Institution  =  \"Uniwersytet Ave Maria\""
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Find the state and country of all cities with post code starting with 4.",
        "question_pl": "Znajdź stan i kraj wszystkich miast z kodem pocztowym zaczynającym się od 4.",
        "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
        "query_pl": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
    },
    {
        "db_id": "college_1",
        "question": "Hi - Can you tell me which department has the most students?",
        "question_pl": "Cześć - Czy możesz mi powiedzieć, który wydział ma najwięcej studentów?",
        "query": "SELECT T2.dept_name  FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.dept_name  FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "browser_web",
        "question": "What is the market share of Internet explorer",
        "question_pl": "Jaki jest udział w rynku przeglądarki Internet Explorer?",
        "query": "SELECT market_share FROM browser where name = \"Internet Explorer\"",
        "query_pl": "SELECT market_share FROM browser where name = \"Internet Explorer\""
    },
    {
        "db_id": "architecture",
        "question": "What is the nationality of Zaha Hadid?",
        "question_pl": "Jakiej narodowości jest Zaha Hadid?",
        "query": "SELECT nationality FROM architect WHERE name = 'Zaha Hadid'",
        "query_pl": "SELECT nationality FROM architect WHERE name = \"Zaha Hadid\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Give me the details of the organizations described as \"Sponsor\" in alphabetical order",
        "question_pl": "Podaj mi szczegóły organizacji opisanych jako \"Sponsor\" w kolejności alfabetycznej",
        "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details",
        "query_pl": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  \"Sponsor\" ORDER BY organisation_details"
    },
    {
        "db_id": "university_basketball",
        "question": "Show me the location details",
        "question_pl": "Pokaż mi szczegóły lokalizacji",
        "query": "SELECT Location FROM University",
        "query_pl": "SELECT Location FROM University"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What are first and last names of all customers?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich klientów?",
        "query": "SELECT customer_first_name ,  customer_last_name FROM Customers",
        "query_pl": "SELECT customer_first_name ,  customer_last_name FROM Customers"
    },
    {
        "db_id": "architecture",
        "question": "CAN YOU GIVE ME THE LIST OF architect NAME",
        "question_pl": "czy możesz podać mi listę nazwisk architektów?",
        "query": "SELECT name FROM architect",
        "query_pl": "SELECT name FROM architect"
    },
    {
        "db_id": "network_2",
        "question": "What is the name that only has one friend pairing?",
        "question_pl": "Jaka jest nazwa, która ma tylko jedną parę znajomych?",
        "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1",
        "query_pl": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
    },
    {
        "db_id": "department_store",
        "question": "How many department stores does the store chain South have?",
        "question_pl": "Ile domów towarowych posiada sieć sklepów South?",
        "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"",
        "query_pl": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"Południe\""
    },
    {
        "db_id": "sports_competition",
        "question": "What is the name of the country that participated in the greatest number of tournaments?",
        "question_pl": "Jak nazywa się kraj, który brał udział w największej liczbie turniejów?",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  \"Turniej\" GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question": "Please show me all the information about each apartment",
        "question_pl": "Pokaż mi wszystkie informacje o każdym apartamencie",
        "query": "select * from apartments",
        "query_pl": "select * from apartments"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
        "question_pl": "Znajdź imię i nazwisko pracownika, który zgłosił problemy z produktem \"rem\", ale nie \"aut\"?",
        "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
        "query_pl": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
    },
    {
        "db_id": "school_finance",
        "question": "What location of school name Bremen?",
        "question_pl": "Jaka jest lokalizacja szkoły o nazwie Bremen?",
        "query": "SELECT location FROM school where School_name = \"Bremen\"",
        "query_pl": "SELECT location FROM school where School_name = \"Brema\""
    },
    {
        "db_id": "network_2",
        "question": "find the average age",
        "question_pl": "znajdź średni wiek",
        "query": "select avg(age) from person",
        "query_pl": "select avg(age) from person"
    },
    {
        "db_id": "network_2",
        "question": "who are Dan's friends?",
        "question_pl": "Kim są przyjaciele Dana?",
        "query": "SELECT DISTINCT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan'",
        "query_pl": "SELECT DISTINCT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  \"Dan\""
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets have fault logs?",
        "question_pl": "Ile zasobów ma dzienniki błędów?",
        "query": "select count(*) from (SELECT * FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  >=1)",
        "query_pl": "select count(*) from (SELECT * FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  >=1)"
    },
    {
        "db_id": "local_govt_mdm",
        "question": "What source system code includes the sub string 'en'?",
        "question_pl": "Jaki kod systemu źródłowego zawiera podłańcuch \"en\"?",
        "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
        "query_pl": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'"
    },
    {
        "db_id": "ship_1",
        "question": "List name of ships?",
        "question_pl": "Wymień nazwy statków?",
        "query": "SELECT name FROM ship",
        "query_pl": "SELECT name FROM ship"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "how many account name in the accounts table",
        "question_pl": "ile nazw kont znajduje się w tabeli kont",
        "query": "select count(*) as number from Accounts",
        "query_pl": "select count(*) as number from Accounts"
    },
    {
        "db_id": "ship_mission",
        "question": "How many ships does United Kingdom have?",
        "question_pl": "Ile statków ma Wielka Brytania?",
        "query": "SELECT Nationality,count(*) FROM ship  WHERE Nationality='United Kingdom' GROUP BY Nationality",
        "query_pl": "SELECT Nationality,count(*) FROM ship  WHERE Nationality=\"Wielka Brytania\" GROUP BY Nationality"
    },
    {
        "db_id": "wine_1",
        "question": "What is the average price of all wine products?",
        "question_pl": "Jaka jest średnia cena wszystkich produktów winiarskich?",
        "query": "SELECT  avg(Price) from wine",
        "query_pl": "SELECT  avg(Price) from wine"
    },
    {
        "db_id": "store_1",
        "question": "What is employee named Nancy Andrews phone number?",
        "question_pl": "Jaki jest numer telefonu pracownika o imieniu Nancy Andrews?",
        "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Andrews\";",
        "query_pl": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Andrews\";"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Hello!  Can you provide me with a list of all the names and ids for all tourist attractions?",
        "question_pl": "Witajcie!  Czy możesz podać mi listę wszystkich nazw i identyfikatorów wszystkich atrakcji turystycznych?",
        "query": "SELECT Name ,  Tourist_Attraction_ID FROM Tourist_Attractions ",
        "query_pl": "SELECT Name ,  Tourist_Attraction_ID FROM Tourist_Attractions "
    },
    {
        "db_id": "manufacturer",
        "question": "Return the name and ID of the furniture with the highest market rate",
        "question_pl": "Zwróć nazwę i identyfikator mebla z najwyższą stawką rynkową.",
        "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
        "query_pl": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1"
    },
    {
        "db_id": "small_bank_1",
        "question": "FIND THE all CHECKING BALANCE OF ALL ACCOUNTS",
        "question_pl": "Sprawdź wszystkie salda kontrolne wszystkich rachunków",
        "query": "SELECT balance FROM checking",
        "query_pl": "SELECT balance FROM checking"
    },
    {
        "db_id": "hospital_1",
        "question": "What are the number of rooms for block code 1?",
        "question_pl": "Jaka jest liczba pokoi w bloku o kodzie 1?",
        "query": "SELECT count(*) FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode where T1.blockcode = 1",
        "query_pl": "SELECT count(*) FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode where T1.blockcode = 1"
    },
    {
        "db_id": "school_finance",
        "question": "Show the names of schools",
        "question_pl": "Pokaż nazwy szkół",
        "query": "select School_name from School",
        "query_pl": "select School_name from School"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "How many organizations are there?",
        "question_pl": "Ile jest takich organizacji?",
        "query": "select count(organization_id) from Organizations",
        "query_pl": "select count(organization_id) from Organizations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What is the location code that has the largest number of documents?",
        "question_pl": "Jaki jest kod lokalizacji z największą liczbą dokumentów?",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question": "hello,what are the maximum price and score of wines in each year?",
        "question_pl": "witaj,jaka jest maksymalna cena i ocena win w poszczególnych latach?",
        "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
        "query_pl": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
    },
    {
        "db_id": "flight_4",
        "question": "Which cities have more than one airport?",
        "question_pl": "Które miasta mają więcej niż jedno lotnisko?",
        "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  1",
        "query_pl": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  1"
    },
    {
        "db_id": "restaurant_1",
        "question": "List major and number of students for majors with 2 to 30 number of students",
        "question_pl": "Wymień kierunek i liczbę studentów dla kierunków z liczbą studentów od 2 do 30",
        "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",
        "query_pl": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "how many staffs are on the table",
        "question_pl": "Ilu pracowników jest na stole",
        "query": "select count(staff_id) from staff ",
        "query_pl": "select count(staff_id) from staff "
    },
    {
        "db_id": "baseball_1",
        "question": "WHICH COUNTRIES HAS THE ORIGINS OF THE LEAST PLAYERS",
        "question_pl": "Z KTÓRYCH KRAJÓW POCHODZI NAJMNIEJ GRACZY?",
        "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 1;",
        "query_pl": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "inn_1",
        "question": "how many times does ROY SWEAZY has reserved a room",
        "question_pl": "Ile razy ROY SWEAZY zarezerwował pokój?",
        "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
        "query_pl": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
    },
    {
        "db_id": "flight_4",
        "question": "How many routes have a destination airport in Canada, please?",
        "question_pl": "Ile tras ma lotnisko docelowe w Kanadzie?",
        "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
        "query_pl": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  \"Kanada\""
    },
    {
        "db_id": "csu_1",
        "question": "How many campuses opened between 1935 and 1939?",
        "question_pl": "Ile kampusów otwarto w latach 1935-1939?",
        "query": "SELECT count(campus) FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
        "query_pl": "SELECT count(campus) FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
    },
    {
        "db_id": "train_station",
        "question": "Show the station name with the greatest number of trains, please.",
        "question_pl": "Wskaż nazwę stacji z największą liczbą pociągów.",
        "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "machine_repair",
        "question": "Show the names of all technicians.",
        "question_pl": "Pokaż nazwiska wszystkich techników.",
        "query": "select name from technician",
        "query_pl": "select name from technician"
    },
    {
        "db_id": "soccer_1",
        "question": "List all player names who have an overall rating higher than the average.",
        "question_pl": "Wymień wszystkich graczy, których ogólna ocena jest wyższa niż średnia.",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "Show the names of employees with role name Editor.",
        "question_pl": "Pokaż nazwiska pracowników z nazwą roli Edytor.",
        "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"",
        "query_pl": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Edytor\""
    },
    {
        "db_id": "activity_1",
        "question": "Find the first names of the faculty members who participate in Caonoeing and Kayaking.",
        "question_pl": "Znajdź imiona członków wydziału, którzy uczestniczą w kajakarstwie i kajakarstwie.",
        "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'",
        "query_pl": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"Kajakarstwo\" INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"Kajakarstwo\""
    },
    {
        "db_id": "entertainment_awards",
        "question": "Can you list the names of the festivals that had two or more nominations for artwork?",
        "question_pl": "Czy możesz wymienić nazwy festiwali, które otrzymały dwie lub więcej nominacji za dzieła sztuki?",
        "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "candidate_poll",
        "question": "How many females are there?",
        "question_pl": "Ile jest kobiet?",
        "query": "SELECT count(*) from people where sex = \"F\"",
        "query_pl": "SELECT count(*) from people where sex = \"F\""
    },
    {
        "db_id": "customers_card_transactions",
        "question": "what is the name of customer id 1?",
        "question_pl": "Jak nazywa się identyfikator klienta 1?",
        "query": "SELECT customer_first_name, customer_last_name from customers where customer_id = 1",
        "query_pl": "SELECT customer_first_name, customer_last_name from customers where customer_id = 1"
    },
    {
        "db_id": "chinook_1",
        "question": "How many employees serve at least 10 customers?",
        "question_pl": "Ilu pracowników obsługuje co najmniej 10 klientów?",
        "query": "SELECT count(*) FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",
        "query_pl": "SELECT count(*) FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"
    },
    {
        "db_id": "film_rank",
        "question": "Hello, which films where made in 1995?",
        "question_pl": "Witaj, które filmy zostały nakręcone w 1995 roku?",
        "query": "SELECT T1.* FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995",
        "query_pl": "SELECT T1.* FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "how many orders did the person with the most orders have?",
        "question_pl": "Ile zamówień miała osoba z największą liczbą zamówień?",
        "query": "select count(*) from orders group by customer_id order by count(*) desc  limit 1",
        "query_pl": "select count(*) from orders group by customer_id order by count(*) desc  limit 1"
    },
    {
        "db_id": "baseball_1",
        "question": "what is the total home game attandance in 1871?",
        "question_pl": "Jaka jest łączna frekwencja na meczach u siebie w 1871 roku?",
        "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE  T1.year  = 1871",
        "query_pl": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE  T1.year  = 1871"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Show the name of the product with product id 1?",
        "question_pl": "Pokaż nazwę produktu z identyfikatorem produktu 1?",
        "query": "SELECT product_name\t FROM products WHERE product_id='1'",
        "query_pl": "SELECT product_name\t FROM products WHERE product_id=\"1\""
    },
    {
        "db_id": "twitter_1",
        "question": "What are the names of all the individuals in the table?",
        "question_pl": "Jak nazywają się wszystkie osoby w tabeli?",
        "query": "SELECT name FROM user_profiles",
        "query_pl": "SELECT name FROM user_profiles"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Show the date of transaction where share count is larger than 100",
        "question_pl": "Pokaż datę transakcji, w której liczba akcji jest większa niż 100.",
        "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100",
        "query_pl": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100"
    },
    {
        "db_id": "epinions_1",
        "question": "How many users did not leave a review?",
        "question_pl": "Ilu użytkowników nie zostawiło recenzji?",
        "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)",
        "query_pl": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
    },
    {
        "db_id": "body_builder",
        "question": "Show me the names of all body builders",
        "question_pl": "Pokaż mi nazwiska wszystkich kulturystów",
        "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_pl": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "db_id": "music_1",
        "question": "What language is used most often in songs?",
        "question_pl": "Jaki język jest najczęściej używany w piosenkach?",
        "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customer_deliveries",
        "question": "What is the most frequently used payment method?",
        "question_pl": "Jaka jest najczęściej używana metoda płatności?",
        "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "What are the location codes of all the documents?",
        "question_pl": "Jakie są kody lokalizacji wszystkich dokumentów?",
        "query": "SELECT distinct location_code FROM Document_locations",
        "query_pl": "SELECT distinct location_code FROM Document_locations"
    },
    {
        "db_id": "sakila_1",
        "question": "Can i have the list of the names of film that was rented",
        "question_pl": "Czy mogę otrzymać listę nazw filmów, które zostały wypożyczone?",
        "query": "SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id",
        "query_pl": "SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id"
    },
    {
        "db_id": "company_office",
        "question": "Show the names of the buildings that have more than one company offices.",
        "question_pl": "Pokaż nazwy budynków, w których znajduje się więcej niż jedno biuro firmy.",
        "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "Hello! Can you please provide me with a list of all of customer IDs in the Customer Address History table?",
        "question_pl": "Witaj! Czy możesz podać mi listę wszystkich identyfikatorów klientów w tabeli Historia adresów klientów?",
        "query": "SELECT customer_id FROM Customer_Address_History",
        "query_pl": "SELECT customer_id FROM Customer_Address_History"
    },
    {
        "db_id": "wine_1",
        "question": "Which wines were produced before 2000?",
        "question_pl": "Które wina zostały wyprodukowane przed 2000 rokiem?",
        "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 ",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 "
    },
    {
        "db_id": "student_1",
        "question": "how many classrooms are available?",
        "question_pl": "Ile sal lekcyjnych jest dostępnych?",
        "query": "SELECT count(distinct classroom) FROM list ",
        "query_pl": "SELECT count(distinct classroom) FROM list "
    },
    {
        "db_id": "game_1",
        "question": "Which game names were played by Linda Smith?",
        "question_pl": "Które nazwy gier były grane przez Lindę Smith?",
        "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"",
        "query_pl": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Hello, can you tell me the tourist attraction id for the photo name \"game1\"?",
        "question_pl": "Witam, czy możesz mi podać identyfikator atrakcji turystycznej dla zdjęcia o nazwie \"game1\"?",
        "query": "SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\"",
        "query_pl": "SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\""
    },
    {
        "db_id": "behavior_monitoring",
        "question": "How many detentions are there?",
        "question_pl": "Ile jest zatrzymań?",
        "query": "SELECT distinct count(*) from detention",
        "query_pl": "SELECT distinct count(*) from detention"
    },
    {
        "db_id": "soccer_2",
        "question": "I want to know the states and the college names which have some college students in tryout.",
        "question_pl": "Chcę znać stany i nazwy uczelni, w których niektórzy studenci biorą udział w tryoutach.",
        "query": "SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName ",
        "query_pl": "SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName "
    },
    {
        "db_id": "flight_company",
        "question": "What are pilots names? ",
        "question_pl": "Jak nazywają się piloci?",
        "query": "SELECT distinct pilot FROM flight",
        "query_pl": "SELECT distinct pilot FROM flight"
    },
    {
        "db_id": "match_season",
        "question": "What are the different colleges this season?",
        "question_pl": "Jakie są różne uczelnie w tym sezonie?",
        "query": "SELECT DISTINCT college FROM match_season ",
        "query_pl": "SELECT DISTINCT college FROM match_season "
    },
    {
        "db_id": "product_catalog",
        "question": "What are the average and minimum prices (in Euros) of all products?",
        "question_pl": "Jakie są średnie i minimalne ceny (w euro) wszystkich produktów?",
        "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents",
        "query_pl": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
    },
    {
        "db_id": "county_public_safety",
        "question": "How many counties are there?",
        "question_pl": "Ile jest okręgów?",
        "query": "SELECT count(*) FROM county_public_safety",
        "query_pl": "SELECT count(*) FROM county_public_safety"
    },
    {
        "db_id": "sakila_1",
        "question": "What is the name of the city with the most addresses?",
        "question_pl": "Jak nazywa się miasto z największą liczbą adresów?",
        "query": "SELECT T2.city FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.city FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question": "how many cities were affected?",
        "question_pl": "Ile miast zostało dotkniętych?",
        "query": "SELECT sum(Number_city_affected) from affected_region",
        "query_pl": "SELECT sum(Number_city_affected) from affected_region"
    },
    {
        "db_id": "wedding",
        "question": "Show me the country with people younger than 30,",
        "question_pl": "Pokaż mi kraj z ludźmi poniżej 30 roku życia,",
        "query": "SELECT distinct country FROM people WHERE age<30",
        "query_pl": "SELECT distinct country FROM people WHERE age<30"
    },
    {
        "db_id": "baseball_1",
        "question": "what is the average salary of Boston Red Stockings?",
        "question_pl": "Jakie jest średnie wynagrodzenie Boston Red Stockings?",
        "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'",
        "query_pl": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = \"Czerwone pończochy Boston\""
    },
    {
        "db_id": "department_store",
        "question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?",
        "question_pl": "Jakie są najwyższe i najniższe ceny produktów, pogrupowane i uporządkowane alfabetycznie według typu produktu?",
        "query": "SELECT max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code",
        "query_pl": "SELECT max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code ORDER BY product_type_code"
    },
    {
        "db_id": "twitter_1",
        "question": "show me the name of the users.",
        "question_pl": "pokaż mi nazwy użytkowników.",
        "query": "SELECT name FROM user_profiles",
        "query_pl": "SELECT name FROM user_profiles"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "list the canceled product customer id?",
        "question_pl": "Wymień identyfikator klienta anulowanego produktu?",
        "query": "SELECT product_id FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE order_status='Cancelled'",
        "query_pl": "SELECT product_id FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE order_status=\"Anulowane\""
    },
    {
        "db_id": "hr_1",
        "question": "show me the first and last names of employees whose first name does not contain letter M",
        "question_pl": "Pokaż mi imiona i nazwiska pracowników, których imiona nie zawierają litery M.",
        "query": "SELECT first_name ,  last_name FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE first_name NOT LIKE \"%M%\""
    },
    {
        "db_id": "department_store",
        "question": "Can you show me the phone numbers of all customers?",
        "question_pl": "Czy możesz pokazać mi numery telefonów wszystkich klientów?",
        "query": "SELECT customer_phone FROM customers ",
        "query_pl": "SELECT customer_phone FROM customers "
    },
    {
        "db_id": "ship_mission",
        "question": "How many ships are there?",
        "question_pl": "Ile jest statków?",
        "query": "SELECT count(*) FROM ship ",
        "query_pl": "SELECT count(*) FROM ship "
    },
    {
        "db_id": "school_player",
        "question": "What schools were founded before 1890?",
        "question_pl": "Jakie szkoły zostały założone przed 1890 rokiem?",
        "query": "SELECT School FROM school WHERE Founded  <  1890 ",
        "query_pl": "SELECT School FROM school WHERE Founded  <  1890 "
    },
    {
        "db_id": "soccer_2",
        "question": "find the state of the college which player Charles is attending",
        "question_pl": "znajdź stan uczelni, do której uczęszcza gracz Charles.",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  \"Charles\""
    },
    {
        "db_id": "college_1",
        "question": "Can you list all schools with less than 5 different departments?",
        "question_pl": "Czy możesz wymienić wszystkie szkoły z mniej niż 5 różnymi wydziałami?",
        "query": "SELECT school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5",
        "query_pl": "SELECT school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"
    },
    {
        "db_id": "student_assessment",
        "question": "Hello! How many students are there in total?",
        "question_pl": "Witaj! Ilu jest w sumie uczniów?",
        "query": "SELECT count(*) from students",
        "query_pl": "SELECT count(*) from students"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "What is the name of the customer who has been involved in most policies?",
        "question_pl": "Jak nazywa się klient, który był zaangażowany w większość polis?",
        "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "device",
        "question": "List the software platform shared by the greatest number of devices.",
        "question_pl": "Wymień platformę oprogramowania współdzieloną przez największą liczbę urządzeń.",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question": "what is the average price of wine not produced in Sanoma county ",
        "question_pl": "Jaka jest średnia cena wina nieprodukowanego w hrabstwie Sanoma?",
        "query": "SELECT avg(t2.price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County !=  'Sonoma'",
        "query_pl": "SELECT avg(t2.price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County !=  \"Sonoma\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Could you list the project details of the projects launched by the most popular organization?",
        "question_pl": "Czy możesz wymienić szczegóły projektów uruchomionych przez najpopularniejszą organizację?",
        "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
        "query_pl": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
    },
    {
        "db_id": "music_1",
        "question": "Which songs are in mp3 format? ",
        "question_pl": "Które utwory są w formacie mp3?",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\"",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\""
    },
    {
        "db_id": "activity_1",
        "question": "Show the names of all the activities Mark Giuliano participates in.",
        "question_pl": "Pokaż nazwy wszystkich aktywności, w których uczestniczy Mark Giuliano.",
        "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
        "query_pl": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""
    },
    {
        "db_id": "debate",
        "question": "What are all the names of the people?",
        "question_pl": "Jakie są imiona wszystkich ludzi?",
        "query": "SELECT name  from  people",
        "query_pl": "SELECT name  from  people"
    },
    {
        "db_id": "city_record",
        "question": "How many regional population of match id 1?",
        "question_pl": "Ile regionalnej populacji ma identyfikator meczu 1?",
        "query": "SELECT T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T2.match_id = 1",
        "query_pl": "SELECT T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T2.match_id = 1"
    },
    {
        "db_id": "browser_web",
        "question": "Names of browsers that are compartable with cachebox?",
        "question_pl": "Nazwy przeglądarek, które są kompatybilne z cachebox?",
        "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' ",
        "query_pl": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  \"CACHEbox\" "
    },
    {
        "db_id": "swimming",
        "question": "What is the name of the swimmer who has the greatest number of records?",
        "question_pl": "Jak nazywa się pływak, który ma największą liczbę rekordów?",
        "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question": "Can you list all student IDs that have any kind of allergy?",
        "question_pl": "Czy możesz wymienić wszystkie legitymacje studenckie, które mają jakiekolwiek alergie?",
        "query": "SELECT StuID FROM Has_allergy ",
        "query_pl": "SELECT StuID FROM Has_allergy "
    },
    {
        "db_id": "baseball_1",
        "question": "what is the salary of 1985?",
        "question_pl": "Jaka jest pensja w 1985 roku?",
        "query": "SELECT salary FROM salary WHERE YEAR  =  1985",
        "query_pl": "SELECT salary FROM salary WHERE YEAR  =  1985"
    },
    {
        "db_id": "manufacturer",
        "question": "Hello, can you find me the names of the furniture with less then 6 components?",
        "question_pl": "Witam, czy możesz mi znaleźć nazwy mebli składających się z mniej niż 6 elementów?",
        "query": "SELECT name FROM furniture where Num_of_Component < 6",
        "query_pl": "SELECT name FROM furniture where Num_of_Component < 6"
    },
    {
        "db_id": "hospital_1",
        "question": "how many physicians are presented on the table",
        "question_pl": "ilu lekarzy jest wyświetlanych w tabeli",
        "query": "SELECT COUNT(*) FROM Physician",
        "query_pl": "SELECT COUNT(*) FROM Physician"
    },
    {
        "db_id": "music_1",
        "question": "How many file formats are supported?",
        "question_pl": "Ile formatów plików jest obsługiwanych?",
        "query": "SELECT count (distinct formats) FROM files ",
        "query_pl": "SELECT count (distinct formats) FROM files "
    },
    {
        "db_id": "customers_and_addresses",
        "question": "List the countries having more than 4 addresses listed.",
        "question_pl": "Wymień kraje posiadające więcej niż 4 adresy na liście.",
        "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id) > 4",
        "query_pl": "SELECT country FROM addresses GROUP BY country HAVING count(address_id) > 4"
    },
    {
        "db_id": "soccer_2",
        "question": "list the name of college in az?",
        "question_pl": "Wymień nazwę uczelni w az?",
        "query": "SELECT cName FROM College WHERE state = 'AZ'",
        "query_pl": "SELECT cName FROM College WHERE state = \"AZ\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Could you show me the IDs for the investors who have the top 3 number of transactions?",
        "question_pl": "Czy możesz pokazać mi identyfikatory inwestorów, którzy mają 3 największe liczby transakcji?",
        "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
    },
    {
        "db_id": "ship_1",
        "question": "Who is the oldest captain? ",
        "question_pl": "Kto jest najstarszym kapitanem?",
        "query": "SELECT name FROM captain order by age desc limit 1",
        "query_pl": "SELECT name FROM captain order by age desc limit 1"
    },
    {
        "db_id": "bike_1",
        "question": "how many trips started from howard and ended at san fransisco",
        "question_pl": "Ile podróży rozpoczęło się z Howard i zakończyło w San Francisco?",
        "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Howard\" AND T3.city  =  \"San Fransisco\"",
        "query_pl": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Howard\" AND T3.city  =  \"San Francisco\""
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the interaction types between enzymes and medicine?",
        "question_pl": "Jakie są rodzaje interakcji między enzymami a lekami?",
        "query": "SELECT distinct interaction_type FROM medicine_enzyme_interaction ",
        "query_pl": "SELECT distinct interaction_type FROM medicine_enzyme_interaction "
    },
    {
        "db_id": "storm_record",
        "question": "What are the names of all the storms that affected at least two regions?",
        "question_pl": "Jak nazywają się wszystkie burze, które dotknęły co najmniej dwa regiony?",
        "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 ",
        "query_pl": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 "
    },
    {
        "db_id": "flight_4",
        "question": "Can you list the number of airports whose names contain the word \"International\"?",
        "question_pl": "Czy potrafisz wymienić liczbę lotnisk, których nazwy zawierają słowo \"Międzynarodowy\"?",
        "query": "SELECT count(*) FROM airports WHERE name LIKE '%Międzynarodowy%'",
        "query_pl": "SELECT count(*) FROM airports WHERE name LIKE '%Międzynarodowy%'"
    },
    {
        "db_id": "flight_4",
        "question": "Show the route id of the destination airport id 2990?",
        "question_pl": "Pokaż identyfikator trasy lotniska docelowego o identyfikatorze 2990?",
        "query": "select rid from routes where dst_apid = '2990'",
        "query_pl": "select rid from routes where dst_apid = \"2990\""
    },
    {
        "db_id": "music_1",
        "question": "what is the artist name of india",
        "question_pl": "Jak nazywa się artysta z indii?",
        "query": "SELECT artist_name from song where country = 'India'",
        "query_pl": "SELECT artist_name from song where country = \"Indie\""
    },
    {
        "db_id": "hr_1",
        "question": "hi,what is the president min salary?",
        "question_pl": "Cześć, jaka jest minimalna pensja prezesa?",
        "query": "select min_salary from jobs where \tJOB_TITLE ='president'",
        "query_pl": "select min_salary from jobs where \tJOB_TITLE =\"prezes\""
    },
    {
        "db_id": "pilot_record",
        "question": "show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.",
        "question_pl": "pokaż stanowiska pilotów, do których dołączyli zarówno piloci po roku 2005, jak i piloci, którzy dołączyli przed rokiem 2000.",
        "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005",
        "query_pl": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005"
    },
    {
        "db_id": "mountain_photos",
        "question": "How many distinct kinds of camera lenses are used to take photos of mountain ranges in the country \"Ethiopia\"?",
        "question_pl": "Ile różnych rodzajów obiektywów jest używanych do robienia zdjęć pasm górskich w kraju \"Etiopia\"?",
        "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'",
        "query_pl": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  \"Etiopia\""
    },
    {
        "db_id": "company_employee",
        "question": "hi, can you show me headquarters that have companies in the banking industry?",
        "question_pl": "Cześć, czy możesz pokazać mi siedzibę, w której znajdują się firmy z branży bankowej?",
        "query": "SELECT distinct  Headquarters FROM company WHERE Industry  =  \"Banking\" ",
        "query_pl": "SELECT distinct  Headquarters FROM company WHERE Industry  =  \"Bankowość\" "
    },
    {
        "db_id": "college_1",
        "question": "how many instructors have taught ACCT-211?",
        "question_pl": "Ilu instruktorów prowadziło zajęcia z ACCT-211?",
        "query": "SELECT count(distinct PROF_NUM) FROM CLASS WHERE CRS_CODE = \"ACCT-211\"",
        "query_pl": "SELECT count(distinct PROF_NUM) FROM CLASS WHERE CRS_CODE = \"ACCT-211\""
    },
    {
        "db_id": "college_2",
        "question": "Hi, could you please let me know the name of instructors in Comp. Sci. department whose salary is higher than 80000?",
        "question_pl": "Cześć, czy mógłbyś podać mi nazwiska instruktorów na wydziale Comp. Sci. dział, którego pensja jest wyższa niż 80000?",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  \"Comp. Sci.\"  AND salary  >  80000"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Hi who made the latest order?",
        "question_pl": "Cześć, kto złożył ostatnie zamówienie?",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question": "What is the name of the school that participated in the basketball match?",
        "question_pl": "Jak nazywa się szkoła, która wzięła udział w meczu koszykówki?",
        "query": "SELECT school FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
        "query_pl": "SELECT school FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
    },
    {
        "db_id": "architecture",
        "question": "How long is the Fairy Bridge?",
        "question_pl": "Jak długi jest Most Wróżek?",
        "query": "SELECT length_meters from bridge where name = \"Fairy Bridge\"",
        "query_pl": "SELECT length_meters from bridge where name = \"Fairy Bridge\""
    },
    {
        "db_id": "debate",
        "question": "what is the name of people aged either 35 or 36",
        "question_pl": "Jak nazywają się osoby w wieku 35 lub 36 lat?",
        "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36",
        "query_pl": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36"
    },
    {
        "db_id": "election",
        "question": "Could you list the names of all counties in ascending alphabetical order?",
        "question_pl": "Czy możesz wymienić nazwy wszystkich hrabstw w rosnącej kolejności alfabetycznej?",
        "query": "SELECT County_name FROM county order by County_name",
        "query_pl": "SELECT County_name FROM county order by County_name"
    },
    {
        "db_id": "protein_institute",
        "question": "Show the names of all the buildings. ",
        "question_pl": "Pokaż nazwy wszystkich budynków.",
        "query": "SELECT name FROM building ",
        "query_pl": "SELECT name FROM building "
    },
    {
        "db_id": "driving_school",
        "question": "Can you list all of the staff first names please?",
        "question_pl": "Czy możesz wymienić imiona wszystkich pracowników?",
        "query": "SELECT first_name FROM Staff",
        "query_pl": "SELECT first_name FROM Staff"
    },
    {
        "db_id": "college_2",
        "question": "Hi, show me the instructors",
        "question_pl": "Cześć, pokaż mi instruktorów",
        "query": "SELECT name FROM instructor",
        "query_pl": "SELECT name FROM instructor"
    },
    {
        "db_id": "inn_1",
        "question": "What is the first name of Reservations Code 10105?",
        "question_pl": "Jaka jest pierwsza nazwa kodu rezerwacji 10105?",
        "query": "SELECT FirstName from Reservations where Code=10105",
        "query_pl": "SELECT FirstName from Reservations where Code=10105"
    },
    {
        "db_id": "journal_committee",
        "question": "Show the names of editors of age 24. ",
        "question_pl": "Pokaż nazwiska redaktorów w wieku 24 lat. ",
        "query": "SELECT Name FROM editor WHERE Age  =  24 ",
        "query_pl": "SELECT Name FROM editor WHERE Age  =  24 "
    },
    {
        "db_id": "decoration_competition",
        "question": "What is the most common college id?",
        "question_pl": "Jaki jest najpopularniejszy identyfikator na studiach?",
        "query": "SELECT college_id FROM member GROUP BY college_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT college_id FROM member GROUP BY college_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "loan_1",
        "question": "Who are the customers?",
        "question_pl": "Kim są klienci?",
        "query": "SELECT cust_name FROM customer",
        "query_pl": "SELECT cust_name FROM customer"
    },
    {
        "db_id": "hr_1",
        "question": "Hi what are the first and last name for those employees who works either in department 70 or 90?",
        "question_pl": "Cześć, jakie są imiona i nazwiska pracowników, którzy pracują w dziale 70 lub 90?",
        "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
    },
    {
        "db_id": "baseball_1",
        "question": "What is the total home game attendance of all teams from 2000 to 2010?",
        "question_pl": "Jaka jest łączna frekwencja na meczach u siebie wszystkich drużyn w latach 2000-2010?",
        "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010;",
        "query_pl": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010;"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Hello there!  Can you please provide me with a list of all of the different payment method code types?",
        "question_pl": "Witajcie!  Czy możesz podać mi listę wszystkich różnych typów kodów metod płatności?",
        "query": "SELECT distinct payment_method_code FROM INVOICES",
        "query_pl": "SELECT distinct payment_method_code FROM INVOICES"
    },
    {
        "db_id": "game_1",
        "question": "How many students play football?",
        "question_pl": "Ilu studentów gra w piłkę nożną?",
        "query": "SELECT count(*) FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\"",
        "query_pl": "SELECT count(*) FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Piłka nożna\""
    },
    {
        "db_id": "soccer_2",
        "question": "Can you list all the names of the students who have the position of striker?",
        "question_pl": "Czy możesz wymienić wszystkie nazwiska uczniów, którzy mają pozycję napastnika?",
        "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  'striker'",
        "query_pl": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  \"napastnik\""
    },
    {
        "db_id": "flight_4",
        "question": "how many on the airport table",
        "question_pl": "Ile na stole na lotnisku",
        "query": "SELECT count(*) FROM airports",
        "query_pl": "SELECT count(*) FROM airports"
    },
    {
        "db_id": "e_learning",
        "question": "LIST THE DATES OF ENROLLMENT AND COMPLETION OF THE STUDENT WITH PERSONAL NAME \"KARSON\"?",
        "question_pl": "WYMIEŃ DATY ZAPISANIA I UKOŃCZENIA STUDIÓW PRZEZ UCZNIA O IMIENIU I NAZWISKU \"KARSON\"?",
        "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"",
        "query_pl": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""
    },
    {
        "db_id": "company_employee",
        "question": "How many different countries serve as headquarters?",
        "question_pl": "Ile różnych krajów pełni rolę siedziby głównej?",
        "query": "SELECT count(distinct Headquarters) FROM company",
        "query_pl": "SELECT count(distinct Headquarters) FROM company"
    },
    {
        "db_id": "browser_web",
        "question": "which operating system has a connection of Broadband, Satellite, Wireless, Fiber, DSL?",
        "question_pl": "Który system operacyjny ma połączenie szerokopasmowe, satelitarne, bezprzewodowe, światłowodowe, DSL?",
        "query": "SELECT Operating_system FROM Web_client_accelerator WHERE Connection = \"Broadband, Satellite, Wireless, Fiber, DSL\"",
        "query_pl": "SELECT Operating_system FROM Web_client_accelerator WHERE Connection = \"Szerokopasmowy, satelitarny, bezprzewodowy, światłowodowy, DSL\""
    },
    {
        "db_id": "wine_1",
        "question": "Show me all the wine names made in the year 2006.",
        "question_pl": "Pokaż mi wszystkie nazwy win wyprodukowanych w 2006 roku.",
        "query": "SELECT Name FROM WINE WHERE YEAR  =  2006",
        "query_pl": "SELECT Name FROM WINE WHERE YEAR  =  2006"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What are the names of the tourist attractions that have only been visited once?",
        "question_pl": "Jak nazywają się atrakcje turystyczne, które zostały odwiedzone tylko raz?",
        "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  =  1",
        "query_pl": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  =  1"
    },
    {
        "db_id": "small_bank_1",
        "question": "Find the name of account that has the lowest total checking and saving balance.",
        "question_pl": "Znajdź nazwę konta, którego łączne saldo na rachunkach bieżących i oszczędnościowych jest najniższe.",
        "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1",
        "query_pl": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Can you please list all the characteristics of the product named sesame?",
        "question_pl": "Czy możesz wymienić wszystkie cechy produktu o nazwie sezam?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" ",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\" "
    },
    {
        "db_id": "soccer_1",
        "question": "Who are the top 3 players in terms of overall rating?",
        "question_pl": "Kim są trzej najlepsi gracze pod względem ogólnej oceny?",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3"
    },
    {
        "db_id": "cre_Theme_park",
        "question": "What is the number of tourists who didn't make any visit?",
        "question_pl": "Jaka jest liczba turystów, którzy nie złożyli żadnej wizyty?",
        "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
        "query_pl": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Which product descriptions contain the letter t?",
        "question_pl": "Które opisy produktów zawierają literę t?",
        "query": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'",
        "query_pl": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
    },
    {
        "db_id": "store_1",
        "question": "Can you tell me how many different purchases Lucas Mancini has made?",
        "question_pl": "Czy możesz mi powiedzieć, ile różnych zakupów dokonał Lucas Mancini?",
        "query": "SELECT count(*) FROM invoices AS T2 JOIN customers AS T1 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";",
        "query_pl": "SELECT count(*) FROM invoices AS T2 JOIN customers AS T1 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
    },
    {
        "db_id": "store_1",
        "question": "How many invoices are from the US?",
        "question_pl": "Ile faktur pochodzi z USA?",
        "query": "SELECT  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" ",
        "query_pl": "SELECT  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" "
    },
    {
        "db_id": "school_bus",
        "question": "Hello!  Can you show me all school names and bus driver names for each of the school buses in this database?",
        "question_pl": "Witaj!  Czy możesz pokazać mi wszystkie nazwy szkół i nazwiska kierowców autobusów dla każdego autobusu szkolnego w tej bazie danych?",
        "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id",
        "query_pl": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"
    },
    {
        "db_id": "movie_1",
        "question": "How many total movie ratings are there?",
        "question_pl": "Ile jest wszystkich ocen filmów?",
        "query": "SELECT count(*) FROM rating",
        "query_pl": "SELECT count(*) FROM rating"
    },
    {
        "db_id": "school_finance",
        "question": "List each donator name and the amount of endowment in descending order of the amount of endorsement.",
        "question_pl": "Wymień imię i nazwisko każdego darczyńcy oraz kwotę darowizny w kolejności malejącej od kwoty wsparcia.",
        "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",
        "query_pl": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
    },
    {
        "db_id": "flight_1",
        "question": "What are the IDs of the aircrafts with name Airbus A340-300?",
        "question_pl": "Jakie są identyfikatory samolotów o nazwie Airbus A340-300?",
        "query": "SELECT distinct aid FROM Aircraft WHERE name  =  \"Airbus A340-300\"",
        "query_pl": "SELECT distinct aid FROM Aircraft WHERE name  =  \"Airbus A340-300\""
    },
    {
        "db_id": "network_2",
        "question": "What is Zach age?",
        "question_pl": "W jakim wieku jest Zach?",
        "query": "SELECT age from person where name = \"Zach\"",
        "query_pl": "SELECT age from person where name = \"Zach\""
    },
    {
        "db_id": "driving_school",
        "question": "Hello, how many customers are there?",
        "question_pl": "Witaj, ilu masz klientów?",
        "query": "SELECT count(*) FROM Customers",
        "query_pl": "SELECT count(*) FROM Customers"
    },
    {
        "db_id": "manufactory_1",
        "question": "What is the number of projects that Sony doesn't manufacture?",
        "question_pl": "Jaka jest liczba projektów, których Sony nie produkuje?",
        "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
        "query_pl": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  \"Sony\")"
    },
    {
        "db_id": "department_store",
        "question": "What is the Job title code of department id 4?",
        "question_pl": "Jaki jest kod nazwy stanowiska w dziale o identyfikatorze 4?",
        "query": "SELECT \tjob_title_code FROM Staff_Department_Assignments WHERE department_id=4",
        "query_pl": "SELECT \tjob_title_code FROM Staff_Department_Assignments WHERE department_id=4"
    },
    {
        "db_id": "theme_gallery",
        "question": "Hello! Can you provide me with a list of all of the artist names?",
        "question_pl": "Witaj! Czy możesz podać mi listę wszystkich nazwisk artystów?",
        "query": "SELECT Name FROM artist",
        "query_pl": "SELECT Name FROM artist"
    },
    {
        "db_id": "bike_1",
        "question": "show me the names and ids of all stations",
        "question_pl": "pokaż mi nazwy i identyfikatory wszystkich stacji",
        "query": "SELECT name , id FROM station",
        "query_pl": "SELECT name , id FROM station"
    },
    {
        "db_id": "driving_school",
        "question": "can you show me a list of nicknames?",
        "question_pl": "Możesz mi pokazać listę pseudonimów?",
        "query": "SELECT nickname FROM Staff",
        "query_pl": "SELECT nickname FROM Staff"
    },
    {
        "db_id": "inn_1",
        "question": "Find the names of all modern rooms with a base price below $160 and two beds.",
        "question_pl": "Znajdź nazwy wszystkich nowoczesnych pokoi z ceną podstawową poniżej 160 USD i dwoma łóżkami.",
        "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';",
        "query_pl": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  \"nowoczesny\";"
    },
    {
        "db_id": "manufactory_1",
        "question": "hi. How many products are there?",
        "question_pl": "Cześć. Ile masz produktów?",
        "query": "SELECT count(*) FROM Products ",
        "query_pl": "SELECT count(*) FROM Products "
    },
    {
        "db_id": "apartment_rentals",
        "question": "Which buildings are in a studio?",
        "question_pl": "Które budynki znajdują się w studio?",
        "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_description = 'Studio'",
        "query_pl": "SELECT building_full_name FROM Apartment_Buildings WHERE building_description = \"Studio\""
    },
    {
        "db_id": "phone_market",
        "question": "Can you list all market ids and the names of the districts associated with them?",
        "question_pl": "Czy możesz wymienić wszystkie identyfikatory rynków i nazwy powiązanych z nimi okręgów?",
        "query": "SELECT market_id, district from market",
        "query_pl": "SELECT market_id, district from market"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "How many enzymes are there?",
        "question_pl": "Ile jest enzymów?",
        "query": "SELECT count(*) FROM enzyme ;",
        "query_pl": "SELECT count(*) FROM enzyme ;"
    },
    {
        "db_id": "riding_club",
        "question": "How many residences are there?",
        "question_pl": "Ile jest rezydencji?",
        "query": "SELECT count(distinct Residence) FROM player ",
        "query_pl": "SELECT count(distinct Residence) FROM player "
    },
    {
        "db_id": "products_for_hire",
        "question": "Can you list the product ids and the booked amounts?",
        "question_pl": "Czy możesz podać identyfikatory produktów i zaksięgowane kwoty?",
        "query": "SELECT T1.product_id, T2.booked_amount from Products_for_Hire as T1 join Products_Booked as T2 on T1.product_id = T2.product_id ",
        "query_pl": "SELECT T1.product_id, T2.booked_amount from Products_for_Hire as T1 join Products_Booked as T2 on T1.product_id = T2.product_id "
    },
    {
        "db_id": "game_1",
        "question": "How many game types do you have?",
        "question_pl": "Ile masz rodzajów gier?",
        "query": "SELECT count(distinct gtype) FROM Video_games",
        "query_pl": "SELECT count(distinct gtype) FROM Video_games"
    },
    {
        "db_id": "product_catalog",
        "question": "Tell the capacity, length, height and width for the catalog entry name cola ?",
        "question_pl": "Podaj pojemność, długość, wysokość i szerokość dla wpisu katalogowego o nazwie cola?",
        "query": "SELECT capacity, length, height, width FROM catalog_contents WHERE catalog_entry_name = \"Cola\"",
        "query_pl": "SELECT capacity, length, height, width FROM catalog_contents WHERE catalog_entry_name = \"Cola\""
    },
    {
        "db_id": "college_1",
        "question": "Yes, hi, I'd like to know how many professors are in the history department?",
        "question_pl": "Tak, cześć, chciałbym wiedzieć ilu profesorów jest na wydziale historii?",
        "query": "SELECT count(*) FROM professor WHERE dept_code = \"HIST\" ",
        "query_pl": "SELECT count(*) FROM professor WHERE dept_code = \"HIST\" "
    },
    {
        "db_id": "ship_1",
        "question": "let me know the name of the youngest captain",
        "question_pl": "podaj mi imię najmłodszego kapitana",
        "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
        "query_pl": "SELECT name FROM captain ORDER BY age LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question": "How many female students (sex is F) live in BAL",
        "question_pl": "Ile studentek (płeć to F) mieszka w BAL?",
        "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND city_code  =  'BAL' ",
        "query_pl": "SELECT count(*) FROM student WHERE sex  =  \"F\" AND city_code  =  \"BAL\" "
    },
    {
        "db_id": "workshop_paper",
        "question": "how many acceptance are presented on the table",
        "question_pl": "ile akceptacji jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM Acceptance",
        "query_pl": "SELECT count(*) FROM Acceptance"
    },
    {
        "db_id": "theme_gallery",
        "question": "What is the highest age of the the Artists from the United States?",
        "question_pl": "Jaki jest najwyższy wiek artystów ze Stanów Zjednoczonych?",
        "query": "SELECT  max(age) FROM artist WHERE country  =  'United States'",
        "query_pl": "SELECT  max(age) FROM artist WHERE country  =  \"Stany Zjednoczone\""
    },
    {
        "db_id": "student_1",
        "question": "what is the average of grades?",
        "question_pl": "Jaka jest średnia ocen?",
        "query": "SELECT avg(Grade) FROM list",
        "query_pl": "SELECT avg(Grade) FROM list"
    },
    {
        "db_id": "theme_gallery",
        "question": "Show the average ticket prices for exhibitions for all years before 2009?",
        "question_pl": "Pokaż średnie ceny biletów na wystawy we wszystkich latach przed 2009 rokiem?",
        "query": "SELECT avg(ticket_price)  FROM exhibition WHERE YEAR  <  2009",
        "query_pl": "SELECT avg(ticket_price)  FROM exhibition WHERE YEAR  <  2009"
    },
    {
        "db_id": "mountain_photos",
        "question": "How many photos use Olympus camera lenses?",
        "question_pl": "Na ilu zdjęciach używasz obiektywów do aparatów Olympus?",
        "query": "SELECT count(*) FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id WHERE T2.brand  =  'Olympus'",
        "query_pl": "SELECT count(*) FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id WHERE T2.brand  =  \"Olympus\""
    },
    {
        "db_id": "e_government",
        "question": "how many parties are on the table?",
        "question_pl": "Ile partii jest na stole?",
        "query": "SELECT count(*) FROM parties ",
        "query_pl": "SELECT count(*) FROM parties "
    },
    {
        "db_id": "department_store",
        "question": "how many departments are there",
        "question_pl": "Ile jest działów",
        "query": "SELECT count(distinct department_id) from Staff_Department_Assignments",
        "query_pl": "SELECT count(distinct department_id) from Staff_Department_Assignments"
    },
    {
        "db_id": "formula_1",
        "question": "How many races has there been?",
        "question_pl": "Ile było wyścigów?",
        "query": "SELECT count(*) FROM races ",
        "query_pl": "SELECT count(*) FROM races "
    },
    {
        "db_id": "student_assessment",
        "question": "What is the name of candidate id 111?",
        "question_pl": "Jak nazywa się identyfikator kandydata 111?",
        "query": "SELECT T3.first_name,T3.middle_name,T3.last_name FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T1.candidate_id = 111",
        "query_pl": "SELECT T3.first_name,T3.middle_name,T3.last_name FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T1.candidate_id = 111"
    },
    {
        "db_id": "perpetrator",
        "question": "Hi - can you please list the names of perpetrators in all countries except for China?",
        "question_pl": "Cześć - czy możesz wymienić nazwiska sprawców we wszystkich krajach z wyjątkiem Chin?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\"",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"Chiny\""
    },
    {
        "db_id": "gas_company",
        "question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.",
        "question_pl": "Znajdź rangę, nazwy firm, wartości rynkowe firm z branży bankowej uporządkowane według ich sprzedaży i zysków w miliardach.",
        "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion",
        "query_pl": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  \"Bankowość\" ORDER BY sales_billion ,  profits_billion"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "Can you show me the total number of problem logs?",
        "question_pl": "Czy możesz mi pokazać całkowitą liczbę dzienników problemów?",
        "query": "SELECT COUNT(*) FROM problem_log ",
        "query_pl": "SELECT COUNT(*) FROM problem_log "
    },
    {
        "db_id": "college_2",
        "question": "Find the title of course that is provided by Statistics but not Psychology departments.",
        "question_pl": "Znajdź tytuł kursu prowadzonego przez wydziały statystyki, ale nie psychologii.",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  \"Statystyki\" EXCEPT SELECT title FROM course WHERE dept_name  =  \"Psychologia\""
    },
    {
        "db_id": "riding_club",
        "question": "What are all the residences?",
        "question_pl": "Jakie są wszystkie rezydencje?",
        "query": "SELECT DISTINCT Residence FROM player",
        "query_pl": "SELECT DISTINCT Residence FROM player"
    },
    {
        "db_id": "device",
        "question": "How many devices are in stock at \tDinas Device?",
        "question_pl": "Ile urządzeń znajduje się w magazynie Dinas Device?",
        "query": "SELECT count(Device_ID) FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID where Shop_Name='Dinas Device'",
        "query_pl": "SELECT count(Device_ID) FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID where Shop_Name=\"Urządzenie Dinas\""
    },
    {
        "db_id": "network_2",
        "question": "Can you please tell me who the friends of Alice's friends are?",
        "question_pl": "Czy możesz mi powiedzieć, kim są przyjaciele przyjaciół Alice?",
        "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'",
        "query_pl": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  \"Alice\" AND T4.name != \"Alice\""
    },
    {
        "db_id": "baseball_1",
        "question": "Show me the name of players?",
        "question_pl": "Pokaż mi nazwiska graczy?",
        "query": "SELECT name_first, name_last, name_given FROM player",
        "query_pl": "SELECT name_first, name_last, name_given FROM player"
    },
    {
        "db_id": "network_2",
        "question": "How many people are from Austin ?",
        "question_pl": "Ile osób pochodzi z Austin?",
        "query": "SELECT count(*) FROM Person WHERE city = \"austin\"",
        "query_pl": "SELECT count(*) FROM Person WHERE city = \"austin\""
    },
    {
        "db_id": "election",
        "question": "What is the zip code of county id of 2",
        "question_pl": "Jaki jest kod pocztowy hrabstwa o identyfikatorze 2?",
        "query": "SELECT zip_code from county where county_id = 2",
        "query_pl": "SELECT zip_code from county where county_id = 2"
    },
    {
        "db_id": "university_basketball",
        "question": "Hello!  Can you show me the top 3 school with the largest enrollment?",
        "question_pl": "Witaj!  Czy możesz pokazać mi 3 najlepsze szkoły z największą liczbą zapisów?",
        "query": "SELECT * FROM university ORDER BY enrollment DESC LIMIT 3",
        "query_pl": "SELECT * FROM university ORDER BY enrollment DESC LIMIT 3"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Hi! Can you show me a list of all of the product part names?",
        "question_pl": "Cześć! Czy możesz pokazać mi listę wszystkich nazw części produktu?",
        "query": "SELECT part_name from parts",
        "query_pl": "SELECT part_name from parts"
    },
    {
        "db_id": "network_2",
        "question": "How many people are in New York City?",
        "question_pl": "Ile osób mieszka w Nowym Jorku?",
        "query": "SELECT count(*) from person where city = \"new york city\"",
        "query_pl": "SELECT count(*) from person where city = \"nowy jork\""
    },
    {
        "db_id": "aircraft",
        "question": "How many total domestic passengers were there?",
        "question_pl": "Ilu było wszystkich pasażerów krajowych?",
        "query": "SELECT sum(Domestic_Passengers) FROM airport",
        "query_pl": "SELECT sum(Domestic_Passengers) FROM airport"
    },
    {
        "db_id": "loan_1",
        "question": "Find the name of customers who do not have a saving account.",
        "question_pl": "Znajdź nazwiska klientów, którzy nie mają konta oszczędnościowego.",
        "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'",
        "query_pl": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  \"oszczędność\""
    },
    {
        "db_id": "product_catalog",
        "question": "What were the dates of the latest revisions?",
        "question_pl": "Jakie były daty ostatnich zmian?",
        "query": "SELECT date_of_latest_revision FROM Catalogs",
        "query_pl": "SELECT date_of_latest_revision FROM Catalogs"
    },
    {
        "db_id": "theme_gallery",
        "question": "what is the average of artist ages?",
        "question_pl": "Jaka jest średnia wieku artystów?",
        "query": "SELECT avg(age) FROM artist",
        "query_pl": "SELECT avg(age) FROM artist"
    },
    {
        "db_id": "wine_1",
        "question": "Show the color of Barbera Grape?",
        "question_pl": "Pokaż kolor winogron Barbera?",
        "query": "SELECT color FROM grapes WHERE Grape = \"Barbera\"",
        "query_pl": "SELECT color FROM grapes WHERE Grape = \"Barbera\""
    },
    {
        "db_id": "flight_company",
        "question": "how many flights have pilot Thompson flown?",
        "question_pl": "Ile lotów odbył pilot Thompson?",
        "query": "SELECT count(*) FROM flight WHERE pilot  =  'Thompson'",
        "query_pl": "SELECT count(*) FROM flight WHERE pilot  =  \"Thompson\""
    },
    {
        "db_id": "music_1",
        "question": "Find the distinct names of all the songs that have a higher resolution than some songs in English, please?",
        "question_pl": "Znajdź nazwy wszystkich piosenek, które mają wyższą rozdzielczość niż niektóre piosenki w języku angielskim, proszę?",
        "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
        "query_pl": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"angielski\")"
    },
    {
        "db_id": "small_bank_1",
        "question": "I need to know the number of checking accounts for each account name.",
        "question_pl": "Muszę znać liczbę kont czekowych dla każdej nazwy konta.",
        "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",
        "query_pl": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
    },
    {
        "db_id": "small_bank_1",
        "question": "can you show me a list of checking balance?",
        "question_pl": "Czy możesz mi pokazać listę salda czekowego?",
        "query": "SELECT * FROM CHECKING",
        "query_pl": "SELECT * FROM CHECKING"
    },
    {
        "db_id": "loan_1",
        "question": "what is the total balance of customers whose credit score is above 100 ",
        "question_pl": "Jakie jest całkowite saldo klientów, których ocena kredytowa przekracza 100?",
        "query": "SELECT sum(acc_bal) FROM customer WHERE credit_score  >  100 GROUP BY state",
        "query_pl": "SELECT sum(acc_bal) FROM customer WHERE credit_score  >  100 GROUP BY state"
    },
    {
        "db_id": "music_4",
        "question": "Hi.Can you show the categories of the music festivals?",
        "question_pl": "Cześć, czy możesz pokazać kategorie festiwali muzycznych?",
        "query": "SELECT Category FROM music_festival",
        "query_pl": "SELECT Category FROM music_festival"
    },
    {
        "db_id": "gymnast",
        "question": "Show the ages of gymnasts in descending order of total points.",
        "question_pl": "Pokaż wiek gimnastyczek w porządku malejącym według łącznej liczby punktów.",
        "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC",
        "query_pl": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
    },
    {
        "db_id": "tracking_orders",
        "question": "how many customers are presented on the table",
        "question_pl": "ilu klientów jest prezentowanych w tabeli",
        "query": "select count(*) from customers",
        "query_pl": "select count(*) from customers"
    },
    {
        "db_id": "baseball_1",
        "question": "what team pays the lowest average salary?",
        "question_pl": "Która drużyna płaci najniższą średnią pensję?",
        "query": "SELECT T1.* FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
        "query_pl": "SELECT T1.* FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
    },
    {
        "db_id": "customer_deliveries",
        "question": "What is the name of the products?",
        "question_pl": "Jak nazywają się te produkty?",
        "query": "select \tproduct_name from products",
        "query_pl": "select \tproduct_name from products"
    },
    {
        "db_id": "college_2",
        "question": "Find the department name of the instructor whose name contains 'Soisalon'",
        "question_pl": "Znajdź nazwę działu instruktora, którego nazwa zawiera \"Soisalon\".",
        "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
        "query_pl": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
    },
    {
        "db_id": "customer_deliveries",
        "question": "Which state has the most employees?",
        "question_pl": "Który stan ma najwięcej pracowników?",
        "query": "select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id = T2.employee_address_id group by T1.state_province_county order by count(*) desc limit 1",
        "query_pl": "select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id = T2.employee_address_id group by T1.state_province_county order by count(*) desc limit 1"
    },
    {
        "db_id": "ship_1",
        "question": "How many ships are there?",
        "question_pl": "Ile jest statków?",
        "query": "SELECT count(*) FROM ship",
        "query_pl": "SELECT count(*) FROM ship"
    },
    {
        "db_id": "college_1",
        "question": "How many different courses are there?",
        "question_pl": "Ile jest różnych kursów?",
        "query": "SELECT count(distinct CRS_CODE) from course",
        "query_pl": "SELECT count(distinct CRS_CODE) from course"
    },
    {
        "db_id": "college_2",
        "question": "What are the total number of students in each department?",
        "question_pl": "Jaka jest łączna liczba studentów na każdym wydziale?",
        "query": "SELECT count(DISTINCT T2.id),  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name",
        "query_pl": "SELECT count(DISTINCT T2.id),  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
    },
    {
        "db_id": "cinema",
        "question": "can you show me a list of cinema names?",
        "question_pl": "Możesz mi pokazać listę nazw kin?",
        "query": "SELECT Name FROM cinema",
        "query_pl": "SELECT Name FROM cinema"
    },
    {
        "db_id": "shop_membership",
        "question": "Name the branch with least membership amount.?",
        "question_pl": "Wymień oddział z najmniejszą liczbą członków?",
        "query": "SELECT Name FROM branch ORDER BY membership_amount ASC LIMIT 1",
        "query_pl": "SELECT Name FROM branch ORDER BY membership_amount ASC LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question": "Find the number of complaints with Product Failure type for each complaint status?",
        "question_pl": "Znajdź liczbę reklamacji z typem usterki produktu dla każdego statusu reklamacji?",
        "query": "SELECT complaint_status_code , count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code",
        "query_pl": "SELECT complaint_status_code , count(*) FROM complaints WHERE complaint_type_code  =  \"Awaria produktu\" GROUP BY complaint_status_code"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "How many investors are there?",
        "question_pl": "Ilu jest inwestorów?",
        "query": "select count(*) from investors",
        "query_pl": "select count(*) from investors"
    },
    {
        "db_id": "journal_committee",
        "question": "show the names of editors that are on at least two journal committees?",
        "question_pl": "Pokaż nazwiska redaktorów, którzy zasiadają w co najmniej dwóch komitetach czasopisma?",
        "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "dorm_1",
        "question": "The most common amenity in all dorms is what?",
        "question_pl": "Jakie jest najczęstsze udogodnienie we wszystkich akademikach?",
        "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question": "What is the first name of faculty partcipating in most activities?",
        "question_pl": "Jakie jest imię i nazwisko wykładowcy uczestniczącego w większości zajęć?",
        "query": "SELECT  T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question": "what is the enroll grade of 324257",
        "question_pl": "Jaki jest stopień rejestracji 324257?",
        "query": "SELECT ENROLL_GRADE from ENROLL where STU_NUM=324257",
        "query_pl": "SELECT ENROLL_GRADE from ENROLL where STU_NUM=324257"
    },
    {
        "db_id": "club_1",
        "question": "How many students are members of the club \"Bootup Baltimore\"?",
        "question_pl": "Ilu studentów należy do klubu \"Bootup Baltimore\"?",
        "query": "SELECT count(*) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid where T1.clubname = \"Bootup Baltimore\"",
        "query_pl": "SELECT count(*) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid where T1.clubname = \"Bootup Baltimore\""
    },
    {
        "db_id": "hr_1",
        "question": "how many employees there",
        "question_pl": "ilu jest pracowników",
        "query": "select count(*) from employees;",
        "query_pl": "select count(*) from employees;"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "Show the names of customers who use Credit Card payment method",
        "question_pl": "Pokaż nazwy klientów korzystających z metody płatności kartą kredytową.",
        "query": "SELECT customer_name from customers where payment_method_code = 'Credit Card'",
        "query_pl": "SELECT customer_name from customers where payment_method_code = \"Karta kredytowa\""
    },
    {
        "db_id": "hospital_1",
        "question": "what departments are some physicians primarily affiliated with? ",
        "question_pl": "Z jakimi działami związani są niektórzy lekarze?",
        "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1",
        "query_pl": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
    },
    {
        "db_id": "election_representative",
        "question": "What are the names of representatives in descending order of votes please?",
        "question_pl": "Jakie są nazwiska przedstawicieli w kolejności malejących głosów?",
        "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC",
        "query_pl": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question": "what role does Koby play? ",
        "question_pl": "Jaką rolę odgrywa Koby?",
        "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";",
        "query_pl": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";"
    },
    {
        "db_id": "soccer_2",
        "question": "hi. can you tell me how many players are from OU College?",
        "question_pl": "Cześć. możesz mi powiedzieć ilu zawodników jest z OU College?",
        "query": "SELECT count(*) FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  = \"OU\"",
        "query_pl": "SELECT count(*) FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  = \"OU\""
    },
    {
        "db_id": "college_3",
        "question": "Tell me the last name, age and first name for the student id 1003 and 1004...",
        "question_pl": "Podaj mi nazwisko, wiek i imię uczniów o identyfikatorach 1003 i 1004...",
        "query": "SELECT LName, age, FName FROM STUDENT WHERE stuid = 1003 or stuid = 1004",
        "query_pl": "SELECT LName, age, FName FROM STUDENT WHERE stuid = 1003 or stuid = 1004"
    },
    {
        "db_id": "allergy_1",
        "question": "Which major has the highest number of students?",
        "question_pl": "Który kierunek ma największą liczbę studentów?",
        "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "architecture",
        "question": "How many bridges was built by Frank Lloyd Wright?",
        "question_pl": "Ile mostów zbudował Frank Lloyd Wright?",
        "query": "SELECT count(*) from architect as T1 join bridge as T2 on T1.id = T2.architect_id  where T1.name = \"Frank Lloyd Wright\"",
        "query_pl": "SELECT count(*) from architect as T1 join bridge as T2 on T1.id = T2.architect_id  where T1.name = \"Frank Lloyd Wright\""
    },
    {
        "db_id": "flight_company",
        "question": "what is the date of first flight?",
        "question_pl": "Jaka jest data pierwszego lotu?",
        "query": "SELECT Date FROM flight ORDER BY Date LIMIT 1",
        "query_pl": "SELECT Date FROM flight ORDER BY Date LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question": "can you show me companies name?",
        "question_pl": "Czy możesz pokazać mi nazwę firmy?",
        "query": "SELECT company_name from Third_Party_Companies",
        "query_pl": "SELECT company_name from Third_Party_Companies"
    },
    {
        "db_id": "game_injury",
        "question": "Hi! May i ask how many total games were played?",
        "question_pl": "Cześć! Czy mogę zapytać, ile łącznie rozegrano meczów?",
        "query": "SELECT count(*) FROM game ",
        "query_pl": "SELECT count(*) FROM game "
    },
    {
        "db_id": "store_product",
        "question": "Please list the headquarters of the store that is called Blackville?",
        "question_pl": "Podaj siedzibę sklepu, który nazywa się Blackville?",
        "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"",
        "query_pl": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""
    },
    {
        "db_id": "voter_2",
        "question": "Show the name of students",
        "question_pl": "Pokaż imię i nazwisko uczniów",
        "query": "SELECT lname, fname FROM STUDENT",
        "query_pl": "SELECT lname, fname FROM STUDENT"
    },
    {
        "db_id": "activity_1",
        "question": "what is the name of faceid 1082",
        "question_pl": "Jak nazywa się faceid 1082?",
        "query": "SELECT FNAME, LNAME FROM Faculty WHERE FacID = 1082",
        "query_pl": "SELECT FNAME, LNAME FROM Faculty WHERE FacID = 1082"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "list out the problem logs",
        "question_pl": "wypisz dzienniki problemów",
        "query": "SELECT * FROM problem_log",
        "query_pl": "SELECT * FROM problem_log"
    },
    {
        "db_id": "flight_4",
        "question": "How many airlines do you have?",
        "question_pl": "Ile masz linii lotniczych?",
        "query": "SELECT count(*) FROM airlines",
        "query_pl": "SELECT count(*) FROM airlines"
    },
    {
        "db_id": "school_player",
        "question": "Which schools have more than 1 player?",
        "question_pl": "Które szkoły mają więcej niż 1 zawodnika?",
        "query": "SELECT T2.School FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.School FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "sports_competition",
        "question": "Who scored more than 20 points?",
        "question_pl": "Kto zdobył więcej niż 20 punktów?",
        "query": "SELECT * FROM player WHERE Points > 20",
        "query_pl": "SELECT * FROM player WHERE Points > 20"
    },
    {
        "db_id": "allergy_1",
        "question": "Could you please find the number of male (sex is 'M') students who have some type of food allergy?",
        "question_pl": "Czy możesz podać liczbę uczniów płci męskiej (płeć to \"M\"), którzy mają jakiś rodzaj alergii pokarmowej?",
        "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
        "query_pl": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"jedzenie\")"
    },
    {
        "db_id": "party_people",
        "question": "show the party names and the number of events for party id 2",
        "question_pl": "pokaż nazwy imprez i liczbę zdarzeń dla identyfikatora imprezy 2",
        "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id where T1.party_id = 2 GROUP BY T1.party_id ",
        "query_pl": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id where T1.party_id = 2 GROUP BY T1.party_id "
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "Which events only have 1 note?",
        "question_pl": "Które wydarzenia mają tylko 1 notatkę?",
        "query": "SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*)=1",
        "query_pl": "SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*)=1"
    },
    {
        "db_id": "small_bank_1",
        "question": "how many accounts have a savings balance above the average savings balance?",
        "question_pl": "Ile kont ma saldo oszczędności powyżej średniego salda oszczędności?",
        "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)",
        "query_pl": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "hi! How many transactions have greater than 10 share count?",
        "question_pl": "Cześć! Ile transakcji ma liczbę akcji większą niż 10?",
        "query": "SELECT count(*) from transactions WHERE share_count  >  10",
        "query_pl": "SELECT count(*) from transactions WHERE share_count  >  10"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "how many orders does the customer with the most orders have?",
        "question_pl": "Ile zamówień ma klient z największą liczbą zamówień?",
        "query": "SELECT count(*) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question": "What are the maximum duration and resolution of songs grouped and ordered by languages?",
        "question_pl": "Jaki jest maksymalny czas trwania i rozdzielczość utworów pogrupowanych i uporządkowanych według języków?",
        "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
        "query_pl": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
    },
    {
        "db_id": "entrepreneur",
        "question": "What is the largest weight that appears in the people table?",
        "question_pl": "Jaka jest największa waga, która pojawia się w tabeli osób?",
        "query": "SELECT weight from people order by weight desc limit 1",
        "query_pl": "SELECT weight from people order by weight desc limit 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "How many customer ids are on the list?",
        "question_pl": "Ile identyfikatorów klientów znajduje się na liście?",
        "query": "SELECT count(distinct customer_id) from  customers ",
        "query_pl": "SELECT count(distinct customer_id) from  customers "
    },
    {
        "db_id": "college_1",
        "question": "How many professors are there?",
        "question_pl": "Ilu jest profesorów?",
        "query": "SELECT count(*) from professor",
        "query_pl": "SELECT count(*) from professor"
    },
    {
        "db_id": "coffee_shop",
        "question": "Find the ids and names of members who are under age 30",
        "question_pl": "Znajdź identyfikatory i nazwy członków w wieku poniżej 30 lat.",
        "query": "SELECT name ,  member_id FROM member WHERE age  <  30",
        "query_pl": "SELECT name ,  member_id FROM member WHERE age  <  30"
    },
    {
        "db_id": "store_product",
        "question": "how many district there",
        "question_pl": "ile jest okręgów",
        "query": "SELECT count(*) FROM district ",
        "query_pl": "SELECT count(*) FROM district "
    },
    {
        "db_id": "products_for_hire",
        "question": "Hello!  Can you show me a list of all of the coupon IDs and coupon amounts?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę wszystkich identyfikatorów kuponów i kwot kuponów?",
        "query": "SELECT coupon_id, coupon_amount FROM Discount_Coupons ",
        "query_pl": "SELECT coupon_id, coupon_amount FROM Discount_Coupons "
    },
    {
        "db_id": "small_bank_1",
        "question": "What is the highest balance?",
        "question_pl": "Jakie jest najwyższe saldo?",
        "query": "select max(balance) from savings ",
        "query_pl": "select max(balance) from savings "
    },
    {
        "db_id": "activity_1",
        "question": "Show all faculty ids",
        "question_pl": "Pokaż wszystkie identyfikatory wydziałów",
        "query": "SELECT FacID FROM Faculty ",
        "query_pl": "SELECT FacID FROM Faculty "
    },
    {
        "db_id": "customers_and_addresses",
        "question": "In which city are the most customers living in? ",
        "question_pl": "W którym mieście mieszka najwięcej klientów?",
        "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question": "What are the names of all of the instructors who are advisors?",
        "question_pl": "Jak nazywają się wszyscy instruktorzy, którzy są doradcami?",
        "query": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id ",
        "query_pl": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id "
    },
    {
        "db_id": "department_store",
        "question": "can you show a list of customer address?",
        "question_pl": "Czy możesz pokazać listę adresów klientów?",
        "query": "SELECT customer_address FROM customers",
        "query_pl": "SELECT customer_address FROM customers"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Could you tell me the name of the customer that made the order that had the largest quantity of items in it?",
        "question_pl": "Czy możesz mi podać nazwę klienta, który złożył zamówienie obejmujące największą liczbę produktów?",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
    },
    {
        "db_id": "club_1",
        "question": "where is the location of club \"Hopkins Student Enterprises\"?",
        "question_pl": "Gdzie znajduje się klub \"Hopkins Student Enterprises\"?",
        "query": "SELECT ClubLocation FROM Club WHERE ClubName= \"Hopkins Student Enterprises\"",
        "query_pl": "SELECT ClubLocation FROM Club WHERE ClubName= \"Hopkins Student Enterprises\""
    },
    {
        "db_id": "twitter_1",
        "question": "How many tweets are on the topic intern",
        "question_pl": "Ile tweetów dotyczy tematu stażysta?",
        "query": "SELECT count(*) FROM tweets WHERE text LIKE '%stażysta%'",
        "query_pl": "SELECT count(*) FROM tweets WHERE text LIKE '%stażysta%'"
    },
    {
        "db_id": "hospital_1",
        "question": "Can you show me how many rooms are there in total?",
        "question_pl": "Czy możesz mi pokazać, ile jest w sumie pokoi?",
        "query": "select count(*) from room",
        "query_pl": "select count(*) from room"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question": "How many events are there? ",
        "question_pl": "Ile jest wydarzeń?",
        "query": "SELECT count(distinct Event_ID) FROM Participants_in_Events ",
        "query_pl": "SELECT count(distinct Event_ID) FROM Participants_in_Events "
    },
    {
        "db_id": "dorm_1",
        "question": "Hello!  Can you list the dorm names of the various different dorms?",
        "question_pl": "Witaj!  Czy możesz wymienić nazwy różnych akademików?",
        "query": "SELECT dorm_name FROM dorm ",
        "query_pl": "SELECT dorm_name FROM dorm "
    },
    {
        "db_id": "document_management",
        "question": "Hi there!  Can you show me a list of all of the different document names and the associated access count for each of them?",
        "question_pl": "Cześć!  Czy możesz pokazać mi listę wszystkich różnych nazw dokumentów i powiązaną liczbę dostępów dla każdego z nich?",
        "query": "SELECT document_name, access_count FROM documents ",
        "query_pl": "SELECT document_name, access_count FROM documents "
    },
    {
        "db_id": "movie_1",
        "question": "Find the movie id of Gone with the Wind?",
        "question_pl": "Znajdź id filmu Przeminęło z wiatrem?",
        "query": "SELECT mid FROM Movie WHERE title = 'Gone with the Wind'",
        "query_pl": "SELECT mid FROM Movie WHERE title = \"Przeminęło z wiatrem\""
    },
    {
        "db_id": "entrepreneur",
        "question": "Hello! Can you show me a list of all investor names?",
        "question_pl": "Witaj! Czy możesz mi pokazać listę wszystkich nazwisk inwestorów?",
        "query": "SELECT distinct Investor FROM entrepreneur ",
        "query_pl": "SELECT distinct Investor FROM entrepreneur "
    },
    {
        "db_id": "music_1",
        "question": "how many artist_name in the song table",
        "question_pl": "ile nazw artystów w tabeli utworów",
        "query": "SELECT count(*) FROM song",
        "query_pl": "SELECT count(*) FROM song"
    },
    {
        "db_id": "news_report",
        "question": "Show the journalists with more than 10 years of working. ",
        "question_pl": "Pokaż dziennikarzy z ponad 10-letnim stażem pracy.",
        "query": "SELECT * FROM journalist WHERE Years_working  >  10",
        "query_pl": "SELECT * FROM journalist WHERE Years_working  >  10"
    },
    {
        "db_id": "product_catalog",
        "question": "What are the attribute data types that possessed more than 3 attribute definitions?",
        "question_pl": "Jakie są typy danych atrybutów, które posiadają więcej niż 3 definicje atrybutów?",
        "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
        "query_pl": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
    },
    {
        "db_id": "movie_1",
        "question": "Find the names of all directors whose movies are rated by Sarah Martinez",
        "question_pl": "Znajdź nazwiska wszystkich reżyserów, których filmy zostały ocenione przez Sarah Martinez",
        "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'",
        "query_pl": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  \"Sarah Martinez\""
    },
    {
        "db_id": "small_bank_1",
        "question": "Can you show me the names and total checking and savings account balances?",
        "question_pl": "Czy możesz pokazać mi nazwy i łączne salda kont czekowych i oszczędnościowych?",
        "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid",
        "query_pl": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"
    },
    {
        "db_id": "browser_web",
        "question": "what is the Id of the browser that is compatible with most web accelerators?",
        "question_pl": "Jaki Id przeglądarki jest kompatybilny z większością akceleratorów internetowych?",
        "query": "SELECT T1.id  FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.id  FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "hr_1",
        "question": "What are the first and last name for those employees who works either in department  70 or 90?",
        "question_pl": "Jakie są imiona i nazwiska pracowników, którzy pracują w dziale 70 lub 90?",
        "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
    },
    {
        "db_id": "city_record",
        "question": "Find the cities which were once a host city after 2009?",
        "question_pl": "Znajdź miasta, które były gospodarzami po 2009 roku?",
        "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  > 2009",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  > 2009"
    },
    {
        "db_id": "solvency_ii",
        "question": "How many products in this table?",
        "question_pl": "Ile produktów znajduje się w tej tabeli?",
        "query": "SELECT count(*) FROM Products",
        "query_pl": "SELECT count(*) FROM Products"
    },
    {
        "db_id": "dorm_1",
        "question": "Please show me the information of all students who are under 25 years old",
        "question_pl": "Pokaż mi informacje o wszystkich uczniach, którzy mają mniej niż 25 lat.",
        "query": "SELECT * FROM student WHERE  age  <  25",
        "query_pl": "SELECT * FROM student WHERE  age  <  25"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What is the card type with the most number of cards?",
        "question_pl": "Jaki jest typ karty z największą liczbą kart?",
        "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "What is the staff ID of the staff with the first name Christop?",
        "question_pl": "Jaki jest identyfikator pracownika o imieniu Christop?",
        "query": "SELECT staff_id from staff where staff_first_name = \"Christop\"",
        "query_pl": "SELECT staff_id from staff where staff_first_name = \"Christop\""
    },
    {
        "db_id": "train_station",
        "question": "Find the total passengers of London Waterloo?",
        "question_pl": "Znajdź całkowitą liczbę pasażerów w London Waterloo?",
        "query": "select total_passengers from station where name = \"London Waterloo\"",
        "query_pl": "select total_passengers from station where name = \"Londyn Waterloo\""
    },
    {
        "db_id": "dorm_1",
        "question": "Can you list the number of amenity ids associated with each distinct dorm id and display both of those results (dorm id and number of amenity ids)?",
        "question_pl": "Czy możesz wyświetlić liczbę identyfikatorów udogodnień powiązanych z każdym odrębnym identyfikatorem akademika i wyświetlić oba te wyniki (identyfikator akademika i liczbę identyfikatorów udogodnień)?",
        "query": "SELECT T3.dormid, count(T4.amenid) FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid",
        "query_pl": "SELECT T3.dormid, count(T4.amenid) FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid"
    },
    {
        "db_id": "hr_1",
        "question": "What are the employees whose first name does not containing the letter M?",
        "question_pl": "Jacy są pracownicy, których imię nie zawiera litery M?",
        "query": "SELECT first_name FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT first_name FROM employees WHERE first_name NOT LIKE \"%M%\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
        "question_pl": "Jakie są szczegóły lotów powiązanych z transakcjami, których liczba akcji jest większa niż 100 i których kod typu to \"PUR\"?",
        "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\"",
        "query_pl": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "List out projects which did not hire staff for researcher role ?",
        "question_pl": "Wymień projekty, w których nie zatrudniono pracowników w roli badaczy?",
        "query": "SELECT project_id FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
        "query_pl": "SELECT project_id FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  \"badacz\" )"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "How many services has each resident requested?",
        "question_pl": "Ile usług zażądał każdy mieszkaniec?",
        "query": "SELECT T1.resident_id,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC",
        "query_pl": "SELECT T1.resident_id,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
    },
    {
        "db_id": "student_1",
        "question": "How many teachers in this table?",
        "question_pl": "Ilu nauczycieli znajduje się w tej tabeli?",
        "query": "SELECT count(*) from teachers",
        "query_pl": "SELECT count(*) from teachers"
    },
    {
        "db_id": "election",
        "question": "how many zip codes in the county table",
        "question_pl": "ile kodów pocztowych w tabeli hrabstwa",
        "query": "SELECT count(Zip_code) FROM county",
        "query_pl": "SELECT count(Zip_code) FROM county"
    },
    {
        "db_id": "network_2",
        "question": "How many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(*) from Person where job = \"student\"",
        "query_pl": "SELECT count(*) from Person where job = \"uczeń\""
    },
    {
        "db_id": "music_1",
        "question": "What is the longest duration?",
        "question_pl": "Jaki jest najdłuższy czas trwania?",
        "query": "SELECT duration from files order by duration desc limit 1",
        "query_pl": "SELECT duration from files order by duration desc limit 1"
    },
    {
        "db_id": "college_2",
        "question": "Hello!  Can you show me a list of all course IDs?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę wszystkich identyfikatorów kursów?",
        "query": "SELECT course_id FROM takes ",
        "query_pl": "SELECT course_id FROM takes "
    },
    {
        "db_id": "wine_1",
        "question": "Which wine uses Cabernet Franc grapes",
        "question_pl": "Które wino wykorzystuje winogrona Cabernet Franc?",
        "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Grape  =  \"Cabernet Franc\"",
        "query_pl": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Grape  =  \"Cabernet Franc\""
    },
    {
        "db_id": "behavior_monitoring",
        "question": "Can you provide a count of assessment notes by teacher id?",
        "question_pl": "Czy możesz podać liczbę ocen według identyfikatora nauczyciela?",
        "query": "SELECT T1.teacher_id ,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ",
        "query_pl": "SELECT T1.teacher_id ,  count(*) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id "
    },
    {
        "db_id": "perpetrator",
        "question": "How many countries are there on the list?",
        "question_pl": "Ile krajów znajduje się na liście?",
        "query": "select count(Country) from perpetrator",
        "query_pl": "select count(Country) from perpetrator"
    },
    {
        "db_id": "perpetrator",
        "question": "What are the names of the perpetrators in the country China?",
        "question_pl": "Jak nazywają się sprawcy w kraju Chiny?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\"",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"Chiny\""
    },
    {
        "db_id": "wrestler",
        "question": "What are names of all the wrestlers?",
        "question_pl": "Jakie są imiona wszystkich zapaśników?",
        "query": "SELECT Name  FROM wrestler",
        "query_pl": "SELECT Name  FROM wrestler"
    },
    {
        "db_id": "browser_web",
        "question": "Can you tell me the names of all compatible browsers and accelerators?",
        "question_pl": "Czy możesz mi podać nazwy wszystkich kompatybilnych przeglądarek i akceleratorów?",
        "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id",
        "query_pl": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id"
    },
    {
        "db_id": "department_store",
        "question": "Hello!  Can you provide me with a list of all Job Title Codes present on this list?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich kodów stanowisk znajdujących się na tej liście?",
        "query": "SELECT job_title_code from staff_department_assignments",
        "query_pl": "SELECT job_title_code from staff_department_assignments"
    },
    {
        "db_id": "shop_membership",
        "question": "What are the names for the top three membership branches",
        "question_pl": "Jak nazywają się trzy główne oddziały członkowskie?",
        "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
        "query_pl": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
    },
    {
        "db_id": "architecture",
        "question": "Hi there!  Can you show me the name of the architect who built the most mills?",
        "question_pl": "Cześć!  Czy możesz mi podać nazwisko architekta, który zbudował najwięcej młynów?",
        "query": "SELECT T1.name  FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name  FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "club_1",
        "question": "What is the average age of students?",
        "question_pl": "Jaki jest średni wiek uczniów?",
        "query": "SELECT avg(Age) from Student",
        "query_pl": "SELECT avg(Age) from Student"
    },
    {
        "db_id": "ship_1",
        "question": "What are the ships that are steered by a captain with Midshipman rank?",
        "question_pl": "Jakimi statkami steruje kapitan ze stopniem midszypmana?",
        "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman'",
        "query_pl": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  \"Midshipman\""
    },
    {
        "db_id": "gas_company",
        "question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
        "question_pl": "znajdź lokalizację i reprezentatywną nazwę stacji benzynowych należących do firm z 3 najwyższymi kwotami aktywów.",
        "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
        "query_pl": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
    },
    {
        "db_id": "assets_maintenance",
        "question": "What are all the contract ids",
        "question_pl": "Jakie są wszystkie identyfikatory kontraktów?",
        "query": "SELECT maintenance_contract_id FROM Maintenance_Contracts",
        "query_pl": "SELECT maintenance_contract_id FROM Maintenance_Contracts"
    },
    {
        "db_id": "railway",
        "question": "Can you find the name and age of the oldest manager?",
        "question_pl": "Czy możesz znaleźć nazwisko i wiek najstarszego menedżera?",
        "query": "SELECT Name,age FROM manager ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Name,age FROM manager ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "book_2",
        "question": "What are the prices of the 3 lowest publications?",
        "question_pl": "Jakie są ceny 3 najniższych publikacji?",
        "query": "SELECT Price FROM publication ORDER BY Price ASC LIMIT 3",
        "query_pl": "SELECT Price FROM publication ORDER BY Price ASC LIMIT 3"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "which order has high quantity",
        "question_pl": "które zamówienie ma dużą ilość",
        "query": "SELECT order_id,  from Order_Items group by order_id order by sum(order_quantity) desc limit 1",
        "query_pl": "SELECT order_id,  from Order_Items group by order_id order by sum(order_quantity) desc limit 1"
    },
    {
        "db_id": "college_2",
        "question": "what is the budget for chandler?",
        "question_pl": "Jaki jest budżet dla Chandlera?",
        "query": "SELECT budget from department where building = \"Chandler\"",
        "query_pl": "SELECT budget from department where building = \"Chandler\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Can you show me a list of all of the lots that belong to category 'i' within the 'lot details' column?",
        "question_pl": "Czy możesz pokazać mi listę wszystkich partii, które należą do kategorii \"i\" w kolumnie \"szczegóły partii\"?",
        "query": "SELECT * FROM LOTS WHERE lot_details  =  \"i\"",
        "query_pl": "SELECT * FROM LOTS WHERE lot_details  =  \"i\""
    },
    {
        "db_id": "college_2",
        "question": "Tell me title name for all course ids....",
        "question_pl": "Podaj mi nazwę tytułu dla wszystkich identyfikatorów kursów....",
        "query": "SELECT course_id, title FROM course",
        "query_pl": "SELECT course_id, title FROM course"
    },
    {
        "db_id": "party_host",
        "question": "whats the average age of the hosts?",
        "question_pl": "Jaki jest średni wiek gospodarzy?",
        "query": "SELECT avg(age) FROM HOST ",
        "query_pl": "SELECT avg(age) FROM HOST "
    },
    {
        "db_id": "roller_coaster",
        "question": "Hi! How are you?  Can you show me a list of all of the country names?",
        "question_pl": "Cześć! Jak się masz?  Czy możesz pokazać mi listę wszystkich nazw krajów?",
        "query": "SELECT Name from  country",
        "query_pl": "SELECT Name from  country"
    },
    {
        "db_id": "inn_1",
        "question": "What are the names of the top 3 expensive rooms?",
        "question_pl": "Jak nazywają się 3 najdroższe pokoje?",
        "query": "SELECT roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;",
        "query_pl": "SELECT roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Okay.  Sorry about that.  Can you please list all of the customer IDs for which the customer has more than one card?",
        "question_pl": "Ok. Przepraszam za to.  Czy możesz wymienić wszystkie identyfikatory klientów, dla których klient ma więcej niż jedną kartę?",
        "query": "SELECT customer_id FROM Customers_cards GROUP BY customer_id having count(*)>1",
        "query_pl": "SELECT customer_id FROM Customers_cards GROUP BY customer_id having count(*)>1"
    },
    {
        "db_id": "swimming",
        "question": "What countries own stadiums?",
        "question_pl": "Jakie kraje posiadają stadiony?",
        "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  >= 1",
        "query_pl": "SELECT country FROM stadium GROUP BY country HAVING count(*)  >= 1"
    },
    {
        "db_id": "station_weather",
        "question": "Show all the low temperatures. ",
        "question_pl": "Pokaż wszystkie niskie temperatury.",
        "query": "select low_temperature from weekly_weather",
        "query_pl": "select low_temperature from weekly_weather"
    },
    {
        "db_id": "chinook_1",
        "question": "how many customers live in germany and have invoice",
        "question_pl": "Ilu klientów mieszka w Niemczech i posiada fakturę?",
        "query": "SELECT count(*) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"",
        "query_pl": "SELECT count(*) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Niemcy\""
    },
    {
        "db_id": "allergy_1",
        "question": "How many different types of allergies are there?",
        "question_pl": "Ile jest różnych rodzajów alergii?",
        "query": "SELECT count(distinct allergy) FROM Has_allergy ",
        "query_pl": "SELECT count(distinct allergy) FROM Has_allergy "
    },
    {
        "db_id": "entrepreneur",
        "question": "Hi!  Can you show me a list of all people and their people IDs?",
        "question_pl": "Cześć! Czy możesz pokazać mi listę wszystkich osób i ich identyfikatorów?",
        "query": "SELECT Name, people_id FROM people",
        "query_pl": "SELECT Name, people_id FROM people"
    },
    {
        "db_id": "game_1",
        "question": "Could you please show me all the student IDs with the number of sports?",
        "question_pl": "Czy możesz pokazać mi wszystkie legitymacje studenckie z liczbą dyscyplin sportowych?",
        "query": "SELECT StuID ,  count(*) FROM Sportsinfo GROUP BY StuID",
        "query_pl": "SELECT StuID ,  count(*) FROM Sportsinfo GROUP BY StuID"
    },
    {
        "db_id": "school_bus",
        "question": "How many of the drivers are over 40?",
        "question_pl": "Ilu kierowców ma ponad 40 lat?",
        "query": "SELECT count(*) FROM driver WHERE age  >  40",
        "query_pl": "SELECT count(*) FROM driver WHERE age  >  40"
    },
    {
        "db_id": "climbing",
        "question": "What are the names of the mountains with height more than 5000?",
        "question_pl": "Jak nazywają się góry o wysokości ponad 5000 metrów?",
        "query": "SELECT Name FROM mountain WHERE Height  >  5000 ",
        "query_pl": "SELECT Name FROM mountain WHERE Height  >  5000 "
    },
    {
        "db_id": "csu_1",
        "question": "Hello!  Can you show me a list of all of the years for which there is data?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę wszystkich lat, dla których istnieją dane?",
        "query": "SELECT DISTINCT YEAR FROM degrees",
        "query_pl": "SELECT DISTINCT YEAR FROM degrees"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "how many project staff there",
        "question_pl": "ilu jest pracowników projektu",
        "query": "SELECT count(*) FROM Project_Staff",
        "query_pl": "SELECT count(*) FROM Project_Staff"
    },
    {
        "db_id": "soccer_2",
        "question": "find the name and college of students whose player position are goalie in the tryout",
        "question_pl": "znajdź imię i nazwisko oraz uczelnię studentów, których pozycją zawodnika jest bramkarz w próbie",
        "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  'goalie'",
        "query_pl": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.pPos  =  \"bramkarz\""
    },
    {
        "db_id": "mountain_photos",
        "question": "Can you list the name of each camera lens and the number of photos taken by it?",
        "question_pl": "Czy możesz wymienić nazwę każdego obiektywu aparatu i liczbę wykonanych nim zdjęć?",
        "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ",
        "query_pl": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id "
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Hello!  Can you please list all of the product names that have the color description of \"white\"?",
        "question_pl": "Witaj!  Czy możesz wymienić wszystkie nazwy produktów, które mają opis koloru \"biały\"?",
        "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"",
        "query_pl": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"biały\""
    },
    {
        "db_id": "driving_school",
        "question": "Which last names are both used by customers and staff?",
        "question_pl": "Które nazwiska są używane zarówno przez klientów, jak i pracowników?",
        "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
        "query_pl": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
    },
    {
        "db_id": "formula_1",
        "question": "list the forename of all races",
        "question_pl": "wymień imiona wszystkich ras",
        "query": "SELECT name  FROM races ",
        "query_pl": "SELECT name  FROM races "
    },
    {
        "db_id": "music_1",
        "question": "how artist are from India ",
        "question_pl": "jak artysta pochodzi z Indii",
        "query": "SELECT count(*) from artist where country = \"India\"",
        "query_pl": "SELECT count(*) from artist where country = \"Indie\""
    },
    {
        "db_id": "music_1",
        "question": "I need to know the names of artists with at least one English Song",
        "question_pl": "Muszę znać nazwiska artystów, którzy mają przynajmniej jedną angielską piosenkę.",
        "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"english\" GROUP BY T2.artist_name HAVING count(*) >= 1",
        "query_pl": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"angielski\" GROUP BY T2.artist_name HAVING count(*) >= 1"
    },
    {
        "db_id": "soccer_2",
        "question": "hello there!  Can you please provide me with a list of all college names?",
        "question_pl": "Witajcie!  Czy możesz podać mi listę wszystkich nazw uczelni?",
        "query": "SELECT cName FROM college ",
        "query_pl": "SELECT cName FROM college "
    },
    {
        "db_id": "roller_coaster",
        "question": "How fast are roller coasters in Austria?",
        "question_pl": "Jak szybkie są kolejki górskie w Austrii?",
        "query": "SELECT T2.Speed FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID where T1.Name = \"Austria\"",
        "query_pl": "SELECT T2.Speed FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID where T1.Name = \"Austria\""
    },
    {
        "db_id": "tracking_orders",
        "question": "List the name of all the distinct customers who have ordered with status \"packing\"",
        "question_pl": "Wymień nazwy wszystkich klientów, którzy złożyli zamówienie ze statusem \"pakowanie\".",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Pakowanie\""
    },
    {
        "db_id": "flight_company",
        "question": "Hi, which companies have operated more than one flight? ",
        "question_pl": "Cześć, które firmy obsługiwały więcej niż jeden lot?",
        "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1",
        "query_pl": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"
    },
    {
        "db_id": "soccer_2",
        "question": "How many states that have some college students playing in the mid position?",
        "question_pl": "W ilu stanach na pozycji środkowego obrońcy grają studenci?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' )",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  \"środek\" )"
    },
    {
        "db_id": "game_injury",
        "question": "What are the ids, scores, and dates of the games which caused at most two injury accidents?",
        "question_pl": "Jakie są identyfikatory, wyniki i daty meczów, które spowodowały co najwyżej dwa wypadki?",
        "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  <=  2",
        "query_pl": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  <=  2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "What are the names of the products with the color description \"red\"?",
        "question_pl": "Jak nazywają się produkty z opisem koloru \"czerwony\"?",
        "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" ",
        "query_pl": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"czerwony\" "
    },
    {
        "db_id": "railway",
        "question": "Please show the countries that have both managers of age above 50, and managers of age below 46",
        "question_pl": "Wskaż kraje, w których są zarówno menedżerowie w wieku powyżej 50 lat, jak i menedżerowie w wieku poniżej 46 lat.",
        "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46",
        "query_pl": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46"
    },
    {
        "db_id": "csu_1",
        "question": "Find the campus fee of \"San Jose State University\" in year 2000.",
        "question_pl": "Znajdź opłatę kampusową \"San Jose State University\" w 2000 roku.",
        "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year = 2000",
        "query_pl": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"Uniwersytet Stanowy San Jose\" AND t1.year = 2000"
    },
    {
        "db_id": "allergy_1",
        "question": "Which allergy has the most number of students affected?",
        "question_pl": "Która alergia dotyczy największej liczby uczniów?",
        "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "railway",
        "question": "Can you list the names of the locations that have two or more railways?",
        "question_pl": "Czy możesz wymienić nazwy miejsc, w których znajdują się dwie lub więcej linii kolejowych?",
        "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >= 2",
        "query_pl": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >= 2"
    },
    {
        "db_id": "gas_company",
        "question": "How many gas stations opened after 2000?",
        "question_pl": "Ile stacji benzynowych otwarto po 2000 roku?",
        "query": "SELECT count(*) from gas_station where open_year > 2000",
        "query_pl": "SELECT count(*) from gas_station where open_year > 2000"
    },
    {
        "db_id": "icfp_1",
        "question": "Please find all the papers published by \"Aaron Turon\"?",
        "question_pl": "Znajdź wszystkie artykuły opublikowane przez \"Aaron Turon\"?",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""
    },
    {
        "db_id": "formula_1",
        "question": "How many drivers have participated in 30 or fewer races?",
        "question_pl": "Ilu kierowców wzięło udział w 30 lub mniej wyścigach?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30)",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30)"
    },
    {
        "db_id": "dorm_1",
        "question": "Could you give me the number of dorms for each gender?",
        "question_pl": "Czy możesz podać liczbę akademików dla każdej płci?",
        "query": "SELECT count(*), gender  FROM dorm GROUP BY gender",
        "query_pl": "SELECT count(*), gender  FROM dorm GROUP BY gender"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "show the minimum order quality of all invoices",
        "question_pl": "Pokaż minimalną jakość zamówienia dla wszystkich faktur",
        "query": "SELECT min(Order_Quantity)  FROM INVOICES",
        "query_pl": "SELECT min(Order_Quantity)  FROM INVOICES"
    },
    {
        "db_id": "hr_1",
        "question": "Hello! Can you tell me how many total employees are on this list?",
        "question_pl": "Witaj! Czy możesz mi powiedzieć, ilu pracowników znajduje się na tej liście?",
        "query": "SELECT count(distinct EMPLOYEE_ID\t) from  employees",
        "query_pl": "SELECT count(distinct EMPLOYEE_ID\t) from  employees"
    },
    {
        "db_id": "hospital_1",
        "question": "I would like to know the names of all the physicians",
        "question_pl": "Chciałbym poznać nazwiska wszystkich lekarzy",
        "query": "SELECT name FROM physician",
        "query_pl": "SELECT name FROM physician"
    },
    {
        "db_id": "wedding",
        "question": "What are all church names? ",
        "question_pl": "Jakie są wszystkie nazwy kościołów?",
        "query": "SELECT name from church",
        "query_pl": "SELECT name from church"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "Which enzyme names have the substring \"PBG\"?",
        "question_pl": "Które nazwy enzymów mają podciąg \"PBG\"?",
        "query": "SELECT name FROM enzyme WHERE name LIKE \"%PBG%\"",
        "query_pl": "SELECT name FROM enzyme WHERE name LIKE \"%PBG%\""
    },
    {
        "db_id": "soccer_2",
        "question": "How many hours does a goalie need to play to meet the minimum?",
        "question_pl": "Ile godzin musi rozegrać bramkarz, aby spełnić minimum?",
        "query": "SELECT min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID and T1.pPos = 'goalie' GROUP BY T1.pPos",
        "query_pl": "SELECT min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID and T1.pPos = \"bramkarz\" GROUP BY T1.pPos"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "how many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT count(*) FROM customers",
        "query_pl": "SELECT count(*) FROM customers"
    },
    {
        "db_id": "college_1",
        "question": "What is the school code for the accounting department?",
        "question_pl": "Jaki jest kod szkoły dla działu księgowości?",
        "query": "SELECT School_Code FROM Department WHERE Dept_Name = 'Accounting'",
        "query_pl": "SELECT School_Code FROM Department WHERE Dept_Name = \"Księgowość\""
    },
    {
        "db_id": "machine_repair",
        "question": "What is the starting year of the oldest technician?",
        "question_pl": "Jaki jest początkowy rok najstarszego technika?",
        "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "wrestler",
        "question": "Show the times of elimination by \"Punk\" or \"Orton\".",
        "question_pl": "Pokaż czasy eliminacji przez \"Punka\" lub \"Ortona\".",
        "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"",
        "query_pl": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\""
    },
    {
        "db_id": "train_station",
        "question": "Which station has the greatest number of traims?",
        "question_pl": "Która stacja ma największą liczbę ofiar?",
        "query": "SELECT T2.* FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.* FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_government",
        "question": "Tell me the party email of the party with id 1?",
        "question_pl": "Podaj mi adres e-mail strony o identyfikatorze 1?",
        "query": "SELECT party_email FROM parties WHERE party_id = \"1\"",
        "query_pl": "SELECT party_email FROM parties WHERE party_id = \"1\""
    },
    {
        "db_id": "movie_1",
        "question": "Can you give me the names of the movies that has the top 3 highest rating star?",
        "question_pl": "Czy możesz podać mi nazwy filmów, które mają 3 najwyżej ocenione gwiazdki?",
        "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
        "query_pl": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
    },
    {
        "db_id": "customer_deliveries",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT count(customer_id) FROM Customers",
        "query_pl": "SELECT count(customer_id) FROM Customers"
    },
    {
        "db_id": "inn_1",
        "question": "WHAT IS ROOM ID OF MODERN DECOR?",
        "question_pl": "JAKI JEST IDENTYFIKATOR POKOJU O NOWOCZESNYM WYSTROJU?",
        "query": "SELECT roomId FROM Rooms WHERE decor = 'modern' ",
        "query_pl": "SELECT roomId FROM Rooms WHERE decor = \"nowoczesny\" "
    },
    {
        "db_id": "party_host",
        "question": "What are some parties with theme \"Spring\"?",
        "question_pl": "Jakie są imprezy z motywem przewodnim \"Wiosna\"?",
        "query": "SELECT * FROM party WHERE Party_Theme  =  \"Spring\" ",
        "query_pl": "SELECT * FROM party WHERE Party_Theme  =  \"Wiosna\" "
    },
    {
        "db_id": "wine_1",
        "question": "give me the name of the wineries",
        "question_pl": "Podaj mi nazwę winiarni",
        "query": "SELECT Winery FROM WINE",
        "query_pl": "SELECT Winery FROM WINE"
    },
    {
        "db_id": "store_1",
        "question": "What are the average invoice sizes of each country?",
        "question_pl": "Jakie są średnie wielkości faktur w poszczególnych krajach?",
        "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country",
        "query_pl": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country"
    },
    {
        "db_id": "college_2",
        "question": "Which building has a room with highest capacity?",
        "question_pl": "Który budynek ma salę o największej pojemności?",
        "query": "select building from classroom order by capacity desc limit 1",
        "query_pl": "select building from classroom order by capacity desc limit 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "What is the overall average amount of transactions? ",
        "question_pl": "Jaka jest ogólna średnia kwota transakcji?",
        "query": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS",
        "query_pl": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS"
    },
    {
        "db_id": "browser_web",
        "question": "What distinct accelerator names are compatible with Firefox.",
        "question_pl": "Jakie różne nazwy akceleratorów są kompatybilne z Firefoksem.",
        "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name =\"Firefox\"",
        "query_pl": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name =\"Firefox\""
    },
    {
        "db_id": "sports_competition",
        "question": "what are the name of the countries who have participated in both the friendly and tournament type competitions",
        "question_pl": "Jak nazywają się kraje, które brały udział zarówno w rozgrywkach towarzyskich, jak i turniejowych?",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  \"Przyjazny\" INTERSECT SELECT country FROM competition WHERE competition_type  =  \"Turniej\""
    },
    {
        "db_id": "city_record",
        "question": "how many city there",
        "question_pl": "ile jest tam miast",
        "query": "SELECT count(distinct City) from city",
        "query_pl": "SELECT count(distinct City) from city"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "list all the sales details",
        "question_pl": "Wymień wszystkie szczegóły sprzedaży",
        "query": "SELECT sales_details FROM sales",
        "query_pl": "SELECT sales_details FROM sales"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "How many teachers are there?",
        "question_pl": "Ilu jest nauczycieli?",
        "query": "select count(teacher_id) from Teachers",
        "query_pl": "select count(teacher_id) from Teachers"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "What are the IDs of problems that the staff member Dameon Frami reported?",
        "question_pl": "Jakie są identyfikatory problemów, które zgłosił członek personelu Dameon Frami?",
        "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\"",
        "query_pl": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\""
    },
    {
        "db_id": "college_3",
        "question": "how many students have not enrolled in any courses",
        "question_pl": "Ilu studentów nie zapisało się na żaden kurs?",
        "query": "SELECT COUNT(*) FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
        "query_pl": "SELECT COUNT(*) FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
    },
    {
        "db_id": "phone_market",
        "question": "Could you give me the names of all phones?",
        "question_pl": "Czy możesz podać mi nazwy wszystkich telefonów?",
        "query": "select distinct(name) from phone",
        "query_pl": "select distinct(name) from phone"
    },
    {
        "db_id": "train_station",
        "question": "What are the top three total number of passengers?",
        "question_pl": "Jaka jest łączna liczba pasażerów w pierwszej trójce?",
        "query": "SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3",
        "query_pl": "SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "what is the color code of product name \"chervil\"?",
        "question_pl": "Jaki jest kod koloru nazwy produktu \"trybula\"?",
        "query": "SELECT t1.color_code FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
        "query_pl": "SELECT t1.color_code FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"trybula\""
    },
    {
        "db_id": "inn_1",
        "question": "List all the room names. ",
        "question_pl": "Wymień wszystkie nazwy pomieszczeń.",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId",
        "query_pl": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId"
    },
    {
        "db_id": "activity_1",
        "question": "Hello there!  Thank you for taking the time to work with me!  Can you provide me with a list of all of the different activity names?",
        "question_pl": "Witaj!  Dziękuję, że poświęciłeś czas na współpracę ze mną!  Czy możesz dostarczyć mi listę wszystkich nazw różnych aktywności?",
        "query": "SELECT activity_name FROM Activity ",
        "query_pl": "SELECT activity_name FROM Activity "
    },
    {
        "db_id": "cre_Theme_park",
        "question": "How many hotels have a price of over 10000?",
        "question_pl": "Ile hoteli ma cenę powyżej 10000?",
        "query": "select count(*) from hotels WHERE price_range  >  10000",
        "query_pl": "select count(*) from hotels WHERE price_range  >  10000"
    },
    {
        "db_id": "allergy_1",
        "question": "I want to know advisor with the most number of students",
        "question_pl": "Chcę poznać doradcę z największą liczbą studentów",
        "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "What are the names of the products with the category \"Herbs\" please?",
        "question_pl": "Jak nazywają się produkty z kategorii \"Zioła\"?",
        "query": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "Show me the medicine name which can interact as 'inhibitor'?",
        "question_pl": "Pokaż mi nazwę leku, który może oddziaływać jako \"inhibitor\"?",
        "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor'",
        "query_pl": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  \"inhibitor\""
    },
    {
        "db_id": "customer_deliveries",
        "question": "Hi there!  Can you show me a list of all customer IDs for customers not located in the state of California?",
        "question_pl": "Cześć!  Czy możesz pokazać mi listę wszystkich identyfikatorów klientów spoza stanu Kalifornia?",
        "query": "SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'",
        "query_pl": "SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Kalifornia\""
    },
    {
        "db_id": "solvency_ii",
        "question": "Hello there!  Can you show me a list of all of the different product type codes?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę wszystkich kodów różnych typów produktów?",
        "query": " SELECT Product_Type_Code FROM Products",
        "query_pl": " SELECT Product_Type_Code FROM Products"
    },
    {
        "db_id": "insurance_fnol",
        "question": "Hello there!  Can you provide me with a list of all of the service names?",
        "question_pl": "Witajcie!  Czy możesz podać mi listę wszystkich nazw usług?",
        "query": "SELECT service_name FROM services ",
        "query_pl": "SELECT service_name FROM services "
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Show me the location ID of the Tourist Attraction ID 2113?",
        "question_pl": "Pokaż mi identyfikator lokalizacji atrakcji turystycznej ID 2113?",
        "query": "SELECT \tLocation_ID FROM Tourist_Attractions WHERE Tourist_Attraction_ID='2113'",
        "query_pl": "SELECT \tLocation_ID FROM Tourist_Attractions WHERE Tourist_Attraction_ID=\"2113\""
    },
    {
        "db_id": "shop_membership",
        "question": "Show the city and the number of branches opened before 2010 for each city",
        "question_pl": "Pokaż miasto i liczbę oddziałów otwartych przed 2010 r. dla każdego miasta.",
        "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city",
        "query_pl": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
    },
    {
        "db_id": "products_for_hire",
        "question": "Hello, what is the total number of bookings?",
        "question_pl": "Witaj, jaka jest całkowita liczba rezerwacji?",
        "query": "SELECT COUNT(*) FROM BOOKINGS",
        "query_pl": "SELECT COUNT(*) FROM BOOKINGS"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "What is the average price of all products?",
        "question_pl": "Jaka jest średnia cena wszystkich produktów?",
        "query": "SELECT avg(product_price) FROM products",
        "query_pl": "SELECT avg(product_price) FROM products"
    },
    {
        "db_id": "storm_record",
        "question": "how many storms caused damage to any regions?",
        "question_pl": "Ile burz wyrządziło szkody w jakimkolwiek regionie?",
        "query": "select count(*) from storm",
        "query_pl": "select count(*) from storm"
    },
    {
        "db_id": "network_2",
        "question": "is there any person who has no student friends",
        "question_pl": "Czy jest jakaś osoba, która nie ma przyjaciół wśród studentów?",
        "query": "SELECT * FROM person EXCEPT SELECT T1.* FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'",
        "query_pl": "SELECT * FROM person EXCEPT SELECT T1.* FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  \"uczeń\""
    },
    {
        "db_id": "game_1",
        "question": "what is the lname of linda",
        "question_pl": "Jak nazywa się Linda?",
        "query": "SELECT LName FROM Student where Fname='Linda'",
        "query_pl": "SELECT LName FROM Student where Fname=\"Linda\""
    },
    {
        "db_id": "phone_market",
        "question": "Can you show me the carriers that have phones with memories smaller than 32?",
        "question_pl": "Możesz mi wskazać operatorów, którzy mają telefony z pamięcią mniejszą niż 32?",
        "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 ",
        "query_pl": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 "
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many drama workshop groups are in Feliciaberg City?",
        "question_pl": "Ile grup warsztatów teatralnych jest w Feliciaberg City?",
        "query": "SELECT count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"",
        "query_pl": "SELECT count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "db_id": "college_2",
        "question": "Find the names of all instructors in the Art department who have taught some course and the course id.",
        "question_pl": "Znajdź nazwiska wszystkich instruktorów na wydziale sztuki, którzy prowadzili jakiś kurs, oraz identyfikator kursu.",
        "query": "SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'",
        "query_pl": "SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  \"Sztuka\""
    },
    {
        "db_id": "behavior_monitoring",
        "question": "How many student are involved in any kind of accident? ",
        "question_pl": "Ilu uczniów bierze udział w jakimkolwiek wypadku?",
        "query": "SELECT count(*) FROM STUDENTS WHERE student_id IN ( SELECT student_id FROM Behavior_Incident )",
        "query_pl": "SELECT count(*) FROM STUDENTS WHERE student_id IN ( SELECT student_id FROM Behavior_Incident )"
    },
    {
        "db_id": "film_rank",
        "question": "how many country participate in the market?",
        "question_pl": "Ile krajów uczestniczy w rynku?",
        "query": "select count(distinct country) from market",
        "query_pl": "select count(distinct country) from market"
    },
    {
        "db_id": "customer_complaints",
        "question": "WHAT IS LAST NAME OF THE STAFF WHO HAS HANDLED THE FIRST EVER COMPLAINT?",
        "question_pl": "JAKIE JEST NAZWISKO PRACOWNIKA, KTÓRY ROZPATRZYŁ PIERWSZĄ SKARGĘ?",
        "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1",
        "query_pl": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question": "What is the lowest duration of songs that have mp3 format and resolution below 800?",
        "question_pl": "Jaki jest najniższy czas trwania utworów w formacie mp3 i rozdzielczości poniżej 800?",
        "query": "SELECT min(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800",
        "query_pl": "SELECT min(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
    },
    {
        "db_id": "chinook_1",
        "question": "Which artist has the most albums? ",
        "question_pl": "Który artysta ma najwięcej albumów? ",
        "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question": "I want to know the names of advisors available",
        "question_pl": "Chcę poznać nazwiska dostępnych doradców",
        "query": "SELECT fname ,  lname FROM Faculty",
        "query_pl": "SELECT fname ,  lname FROM Faculty"
    },
    {
        "db_id": "inn_1",
        "question": "How many rooms are there?",
        "question_pl": "Ile jest pokoi?",
        "query": "SELECT count(*) FROM Rooms ;",
        "query_pl": "SELECT count(*) FROM Rooms ;"
    },
    {
        "db_id": "news_report",
        "question": "How many events are there?",
        "question_pl": "Ile jest wydarzeń?",
        "query": "SELECT count(*) FROM event ",
        "query_pl": "SELECT count(*) FROM event "
    },
    {
        "db_id": "school_finance",
        "question": "how many school are presented on the table",
        "question_pl": "ile szkół jest prezentowanych w tabeli",
        "query": "SELECT count(*)FROM school",
        "query_pl": "SELECT count(*)FROM school"
    },
    {
        "db_id": "college_3",
        "question": "How many male faculties live in NEB?",
        "question_pl": "Ilu mężczyzn mieszka w NEB?",
        "query": "SELECT COUNT(*) FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
        "query_pl": "SELECT COUNT(*) FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""
    },
    {
        "db_id": "college_2",
        "question": "Which courses ran in Fall 2009 and in Spring 2010?",
        "question_pl": "Które kursy były prowadzone jesienią 2009 i wiosną 2010?",
        "query": "SELECT * FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT * FROM SECTION WHERE semester  =  \"Upadek\" AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  \"Wiosna\" AND YEAR  =  2010"
    },
    {
        "db_id": "e_learning",
        "question": "List the author ids listed more than once in the courses",
        "question_pl": "Wyświetl identyfikatory autorów wymienione więcej niż raz w kursach",
        "query": "select author_id from Courses group by author_id having count(author_id)>1",
        "query_pl": "select author_id from Courses group by author_id having count(author_id)>1"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Could you please list the first and last names of all the customers that have at least two cards?",
        "question_pl": "Czy możesz wymienić imiona i nazwiska wszystkich klientów, którzy mają co najmniej dwie karty?",
        "query": "SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2",
        "query_pl": "SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "I want to know the payment methods available",
        "question_pl": "Chcę poznać dostępne metody płatności",
        "query": "SELECT distinct payment_method FROM customers ",
        "query_pl": "SELECT distinct payment_method FROM customers "
    },
    {
        "db_id": "dorm_1",
        "question": "what is the name of the dorms with capacity of greeter than  300 ",
        "question_pl": "Jak nazywają się akademiki, w których może mieszkać więcej niż 300 osób?",
        "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
        "query_pl": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
    },
    {
        "db_id": "store_1",
        "question": "Please show me a list of the top 5 countries by number of invoices. List country name.",
        "question_pl": "Pokaż mi listę 5 najlepszych krajów pod względem liczby faktur. Wymień nazwę kraju.",
        "query": "SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",
        "query_pl": "SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
    },
    {
        "db_id": "sakila_1",
        "question": "What is the genre name of the film HUNGER ROOF, please?",
        "question_pl": "Jaka jest nazwa gatunkowa filmu HUNGER ROOF?",
        "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'",
        "query_pl": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  \"HUNGER ROOF\""
    },
    {
        "db_id": "dorm_1",
        "question": "Find the name of the amenities that Smith Hall dorm has. ",
        "question_pl": "Znajdź nazwy udogodnień w akademiku Smith Hall.",
        "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'",
        "query_pl": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  \"Smith Hall\""
    },
    {
        "db_id": "workshop_paper",
        "question": "How many author are in the workshop altogether",
        "question_pl": "Ilu autorów jest łącznie w warsztacie?",
        "query": "select count(distinct author) from submission",
        "query_pl": "select count(distinct author) from submission"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "What is the average transaction amount?",
        "question_pl": "Jaka jest średnia kwota transakcji?",
        "query": "SELECT avg(transaction_amount) FROM Financial_transactions",
        "query_pl": "SELECT avg(transaction_amount) FROM Financial_transactions"
    },
    {
        "db_id": "product_catalog",
        "question": "how many Catalog Contents there",
        "question_pl": "Ile jest tam zawartości katalogu",
        "query": "SELECT count(*) FROM catalog_contents ",
        "query_pl": "SELECT count(*) FROM catalog_contents "
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "Show me the names of the workshop groups that have bookings with status code \"stop\"?",
        "question_pl": "Pokaż mi nazwy grup warsztatowych, które mają rezerwacje z kodem statusu \"stop\"?",
        "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"",
        "query_pl": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"zatrzymaj się\""
    },
    {
        "db_id": "assets_maintenance",
        "question": "what is the date of the earliest contract?",
        "question_pl": "Jaka jest data zawarcia najwcześniejszej umowy?",
        "query": "SELECT T2.contract_start_date FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
        "query_pl": "SELECT T2.contract_start_date FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.",
        "question_pl": "Które zasoby mają 2 części i mniej niż 2 dzienniki błędów? Wymień identyfikator zasobu i szczegóły.",
        "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2",
        "query_pl": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"
    },
    {
        "db_id": "musical",
        "question": "which musical ids showed up at least three times in the actor table?",
        "question_pl": "Które identyfikatory muzyczne pojawiły się co najmniej trzy razy w tabeli aktorów?",
        "query": "SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
        "query_pl": "SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
    },
    {
        "db_id": "phone_market",
        "question": "Can you show me the total number of phones?",
        "question_pl": "Czy możesz mi pokazać całkowitą liczbę telefonów?",
        "query": "SELECT count(*) from phone",
        "query_pl": "SELECT count(*) from phone"
    },
    {
        "db_id": "party_host",
        "question": "which locations of parties have hosts older than 50?",
        "question_pl": "Które lokalizacje imprez mają gospodarzy w wieku powyżej 50 lat?",
        "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50",
        "query_pl": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
    },
    {
        "db_id": "hr_1",
        "question": "Display the employee ID and salary of all employees who report to payam (First name)",
        "question_pl": "Wyświetl identyfikator pracownika i wynagrodzenie wszystkich pracowników, którzy zgłaszają się do payam (Imię)",
        "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )",
        "query_pl": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  \"Payam\" )"
    },
    {
        "db_id": "performance_attendance",
        "question": "list all dates available ",
        "question_pl": "Wymień wszystkie dostępne daty",
        "query": "SELECT Date FROM performance ",
        "query_pl": "SELECT Date FROM performance "
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many bookings are there?",
        "question_pl": "Ile jest rezerwacji?",
        "query": "SELECT count(*) FROM BOOKINGS",
        "query_pl": "SELECT count(*) FROM BOOKINGS"
    },
    {
        "db_id": "election",
        "question": "Return all the committees that have delegates from Democratic Party.",
        "question_pl": "Zwróć wszystkie komitety, które mają delegatów z Partii Demokratycznej.",
        "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"",
        "query_pl": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Demokratyczny\""
    },
    {
        "db_id": "perpetrator",
        "question": "show the date of the tallest perpetrator.",
        "question_pl": "pokaż datę najwyższego sprawcy.",
        "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_pl": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "db_id": "shop_membership",
        "question": "Which cities have a branch?",
        "question_pl": "Które miasta mają oddział?",
        "query": "SELECT distinct city FROM branch",
        "query_pl": "SELECT distinct city FROM branch"
    },
    {
        "db_id": "customer_complaints",
        "question": "Hello, how many complaints have we had?",
        "question_pl": "Witaj, ile mieliśmy skarg?",
        "query": " SELECT count(*) FROM complaints",
        "query_pl": " SELECT count(*) FROM complaints"
    },
    {
        "db_id": "baseball_1",
        "question": "how many postseason on the table",
        "question_pl": "ile postseason na stole",
        "query": "SELECT count(*) FROM postseason",
        "query_pl": "SELECT count(*) FROM postseason"
    },
    {
        "db_id": "epinions_1",
        "question": "What is the name of the item with the highest average rating?",
        "question_pl": "Jak nazywa się przedmiot z najwyższą średnią oceną?",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1"
    },
    {
        "db_id": "club_1",
        "question": "what is last name of the members in club?",
        "question_pl": "Jak nazywają się członkowie klubu?",
        "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid ",
        "query_pl": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid "
    },
    {
        "db_id": "e_learning",
        "question": "What is the date of enrollment of the course named \"Spanish\"?",
        "question_pl": "Jaka jest data zapisu na kurs o nazwie \"Hiszpański\"?",
        "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"",
        "query_pl": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Hiszpański\""
    },
    {
        "db_id": "soccer_2",
        "question": "What are the enrollments of all colleges in the state of FL?",
        "question_pl": "Jakie są zapisy na wszystkie uczelnie w stanie Floryda?",
        "query": "SELECT SUM(enr) FROM college WHERE state = 'FL'",
        "query_pl": "SELECT SUM(enr) FROM college WHERE state = \"FL\""
    },
    {
        "db_id": "hospital_1",
        "question": "Hello!  How are you!  Can you provide me with a list of all patient names?",
        "question_pl": "Witaj! Jak się masz!  Czy możesz podać mi listę nazwisk wszystkich pacjentów?",
        "query": "SELECT name FROM Patient",
        "query_pl": "SELECT name FROM Patient"
    },
    {
        "db_id": "insurance_fnol",
        "question": "Hello!  Can you provide me with a list of all of the settlement IDs and the corresponding settlement amounts?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich identyfikatorów rozliczeń i odpowiadających im kwot rozliczeń?",
        "query": "SELECT Settlement_ID, settlement_amount FROM settlements",
        "query_pl": "SELECT Settlement_ID, settlement_amount FROM settlements"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "Can you list the names of all customers who don't have any address information, please?",
        "question_pl": "Czy możesz wymienić nazwiska wszystkich klientów, którzy nie mają żadnych danych adresowych?",
        "query": "SELECT customer_name  FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)",
        "query_pl": "SELECT customer_name  FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
    },
    {
        "db_id": "bike_1",
        "question": "How many stations have an average bike availability above 10?",
        "question_pl": "Na ilu stacjach średnia dostępność rowerów przekracza 10?",
        "query": "select count(*) from (SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 )",
        "query_pl": "select count(*) from (SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 )"
    },
    {
        "db_id": "device",
        "question": "Hello!  Can you show me a list of all of the shop names?",
        "question_pl": "Witaj!  Czy możesz mi pokazać listę wszystkich nazw sklepów?",
        "query": "SELECT Shop_Name FROM shop ",
        "query_pl": "SELECT Shop_Name FROM shop "
    },
    {
        "db_id": "assets_maintenance",
        "question": "how many skills are presented on the table",
        "question_pl": "ile umiejętności jest prezentowanych w tabeli",
        "query": "SELECT count(*) FROM skills",
        "query_pl": "SELECT count(*) FROM skills"
    },
    {
        "db_id": "college_1",
        "question": "How many professors are there in total?",
        "question_pl": "Ilu jest w sumie profesorów?",
        "query": "SELECT count(*) FROM professor",
        "query_pl": "SELECT count(*) FROM professor"
    },
    {
        "db_id": "music_1",
        "question": "can you how me a list of artists?",
        "question_pl": "Możesz mi podać listę artystów?",
        "query": "SELECT artist_name FROM artist",
        "query_pl": "SELECT artist_name FROM artist"
    },
    {
        "db_id": "student_assessment",
        "question": "Which students didn't attend courses? ",
        "question_pl": "Którzy uczniowie nie uczestniczyli w kursach?",
        "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
        "query_pl": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
    },
    {
        "db_id": "musical",
        "question": "list the names of the musicals with more than three actors",
        "question_pl": "Wymień nazwy musicali z więcej niż trzema aktorami.",
        "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >  3",
        "query_pl": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >  3"
    },
    {
        "db_id": "activity_1",
        "question": "what are the names and activities of all faculty members who participated in some activity? ",
        "question_pl": "Jakie są nazwiska i działania wszystkich członków wydziału, którzy uczestniczyli w jakimś działaniu?",
        "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
        "query_pl": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
    },
    {
        "db_id": "college_2",
        "question": "What is the name of the student who has the highest total credits in the History department?",
        "question_pl": "Jak nazywa się student, który ma największą łączną liczbę punktów na wydziale historii?",
        "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1",
        "query_pl": "SELECT name FROM student WHERE dept_name  =  \"Historia\" ORDER BY tot_cred DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question": "How many rooms are in the apartment number suite 645?",
        "question_pl": "Ile pokoi znajduje się w apartamencie numer 645?",
        "query": "SELECT count(*) FROM Apartments WHERE apt_number = \"Suite 645\"",
        "query_pl": "SELECT count(*) FROM Apartments WHERE apt_number = \"Apartament 645\""
    },
    {
        "db_id": "body_builder",
        "question": "show me the body builders name.",
        "question_pl": "Pokaż mi nazwisko kulturysty.",
        "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id ",
        "query_pl": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id "
    },
    {
        "db_id": "college_2",
        "question": "Find the name of the department which has the highest average salary of professors",
        "question_pl": "Znajdź nazwę wydziału, który ma najwyższe średnie wynagrodzenie profesorów.",
        "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1",
        "query_pl": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question": "retrieve the country that has published the least papers?",
        "question_pl": "Wybierz kraj, który opublikował najmniej artykułów?",
        "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*)  LIMIT 1",
        "query_pl": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*)  LIMIT 1"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "What are the interaction type of ALA synthase?",
        "question_pl": "Jakie są typy interakcji syntazy ALA?",
        "query": "SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE name = \"ALA synthase\"",
        "query_pl": "SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE name = \"Syntaza ALA\""
    },
    {
        "db_id": "party_people",
        "question": "Hi how are you!?  Can you provide me with a list of all of the different member names?",
        "question_pl": "Cześć, jak się masz!?  Czy możesz podać mi listę wszystkich nazwisk różnych członków?",
        "query": "SELECT distinct member_name FROM member",
        "query_pl": "SELECT distinct member_name FROM member"
    },
    {
        "db_id": "tracking_orders",
        "question": "Which customers made at least two orders?",
        "question_pl": "Którzy klienci złożyli co najmniej dwa zamówienia?",
        "query": "SELECT T2.* ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.* ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "college_1",
        "question": "how many professors there",
        "question_pl": "ilu jest tam profesorów",
        "query": "SELECT count(*) from professor",
        "query_pl": "SELECT count(*) from professor"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "what are the details of the lots which are not used in any transactions?",
        "question_pl": "Jakie są szczegóły partii, które nie są używane w żadnych transakcjach?",
        "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id",
        "query_pl": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What are the response received dates for the documents described as 'Regular'?",
        "question_pl": "Jakie są daty otrzymania odpowiedzi dla dokumentów opisanych jako \"Regularne\"?",
        "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular'",
        "query_pl": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  \"Regularny\""
    },
    {
        "db_id": "party_people",
        "question": "How many parties are there?",
        "question_pl": "Ile jest partii?",
        "query": "SELECT count(*) FROM Party",
        "query_pl": "SELECT count(*) FROM Party"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "can you show me a list of transaction type code?",
        "question_pl": "Czy możesz pokazać mi listę kodów typów transakcji?",
        "query": "SELECT transaction_type_code FROM TRANSACTIONS",
        "query_pl": "SELECT transaction_type_code FROM TRANSACTIONS"
    },
    {
        "db_id": "assets_maintenance",
        "question": "Have many engineers that were contacted by each manager? ",
        "question_pl": "Czy masz wielu inżynierów, z którymi kontaktował się każdy menedżer?",
        "query": "SELECT count(T3.first_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "query_pl": "SELECT count(T3.first_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id"
    },
    {
        "db_id": "customers_card_transactions",
        "question": "Show card types with at least 5 cards?",
        "question_pl": "Pokaż typy kart z co najmniej 5 kartami?",
        "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5",
        "query_pl": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What are the names of the cities that all customers live in? ",
        "question_pl": "Jak nazywają się miasta, w których mieszkają wszyscy klienci?",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID",
        "query_pl": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "Can you list the share counts for all transactions?",
        "question_pl": "Czy możesz podać liczbę akcji dla wszystkich transakcji?",
        "query": "SELECT share_count FROM TRANSACTIONS",
        "query_pl": "SELECT share_count FROM TRANSACTIONS"
    },
    {
        "db_id": "chinook_1",
        "question": "How many composers do you have recorded in the system ?",
        "question_pl": "Ilu kompozytorów masz zarejestrowanych w systemie?",
        "query": "SELECT count(distinct composer) from track",
        "query_pl": "SELECT count(distinct composer) from track"
    },
    {
        "db_id": "e_learning",
        "question": "what are the subjects available? ",
        "question_pl": "Jakie tematy są dostępne?",
        "query": "select subject_name from subjects",
        "query_pl": "select subject_name from subjects"
    },
    {
        "db_id": "movie_1",
        "question": "How many directors are there?",
        "question_pl": "Ilu jest dyrektorów?",
        "query": "SELECT COUNT(DISTINCT director) FROM Movie",
        "query_pl": "SELECT COUNT(DISTINCT director) FROM Movie"
    },
    {
        "db_id": "twitter_1",
        "question": "Find the email of the user whose name contains the word \"Swift\"",
        "question_pl": "Znajdź adres e-mail użytkownika, którego nazwa zawiera słowo \"Swift\".",
        "query": "SELECT email FROM user_profiles WHERE name LIKE '%Swift%'",
        "query_pl": "SELECT email FROM user_profiles WHERE name LIKE '%Swift%'"
    },
    {
        "db_id": "tracking_orders",
        "question": "how many products there",
        "question_pl": "ile jest produktów",
        "query": "SELECT count(*) from products",
        "query_pl": "SELECT count(*) from products"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "How many orders are priced higher than 1000?",
        "question_pl": "Ile zamówień ma cenę wyższą niż 1000?",
        "query": "SELECT count(*) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
        "query_pl": "SELECT count(*) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "What payment method did Dr. Julia Wuckert MD use?",
        "question_pl": "Jakiej metody płatności użyła dr Julia Wuckert?",
        "query": "SELECT payment_method FROM customers WHERE customer_name = \"Dr. Julia Wuckert MD\"",
        "query_pl": "SELECT payment_method FROM customers WHERE customer_name = \"Dr Julia Wuckert MD\""
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question": "How many enzymes do not have any interactions?",
        "question_pl": "Ile enzymów nie wchodzi w żadne interakcje?",
        "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );",
        "query_pl": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"
    },
    {
        "db_id": "election",
        "question": "Tell me the Lieutenant Governor name for the year 1998 ?",
        "question_pl": "Podaj mi nazwisko gubernatora porucznika na rok 1998?",
        "query": "SELECT Lieutenant_Governor FROM party WHERE year = \"1998.0\"",
        "query_pl": "SELECT Lieutenant_Governor FROM party WHERE year = \"1998.0\""
    },
    {
        "db_id": "apartment_rentals",
        "question": "Hello. What are the IDs of guests with gender code Female?",
        "question_pl": "Witaj. Jakie są identyfikatory gości z kodem płci Kobieta?",
        "query": "SELECT guest_id FROM Guests WHERE gender_code  =  \"Female\"",
        "query_pl": "SELECT guest_id FROM Guests WHERE gender_code  =  \"Kobieta\""
    },
    {
        "db_id": "baseball_1",
        "question": "list the year id in which the least people enter hall of fame",
        "question_pl": "wymień rok id, w którym najmniej osób weszło do galerii sław",
        "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;",
        "query_pl": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "hospital_1",
        "question": "What was the start date of the most recent appointment?",
        "question_pl": "Jaka była data rozpoczęcia ostatniego zatrudnienia?",
        "query": "SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1",
        "query_pl": "SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1"
    },
    {
        "db_id": "epinions_1",
        "question": "What is the user id of Helen",
        "question_pl": "Jaki jest identyfikator użytkownika Helen",
        "query": "SELECT u_id FROM useracct where name=\"Helen\"",
        "query_pl": "SELECT u_id FROM useracct where name=\"Helen\""
    },
    {
        "db_id": "college_2",
        "question": "What are courses provided by Statistics deparment?",
        "question_pl": "Jakie kursy oferuje Wydział Statystyki?",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  \"Statystyki\""
    },
    {
        "db_id": "csu_1",
        "question": "ID 1 is for which Campus?",
        "question_pl": "ID 1 dla którego kampusu?",
        "query": "SELECT campus FROM campuses where id = '1'",
        "query_pl": "SELECT campus FROM campuses where id = \"1\""
    },
    {
        "db_id": "department_store",
        "question": "What are the IDs of all the products supplied by supplier 2?",
        "question_pl": "Jakie są identyfikatory wszystkich produktów dostarczonych przez dostawcę 2?",
        "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2",
        "query_pl": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2"
    },
    {
        "db_id": "customer_deliveries",
        "question": "How many customers used Visa?",
        "question_pl": "Ilu klientów korzystało z Visa?",
        "query": "SELECT count(DISTINCT customer_name) FROM Customers WHERE payment_method = 'Visa'",
        "query_pl": "SELECT count(DISTINCT customer_name) FROM Customers WHERE payment_method = \"Wiza\""
    },
    {
        "db_id": "bike_1",
        "question": "Hello there!  How are you?  Could you please provide me with a list of all trip IDs for the zip code 94002?",
        "question_pl": "Witaj!  Jak się masz?  Czy możesz podać mi listę wszystkich identyfikatorów podróży dla kodu pocztowego 94002?",
        "query": "SELECT id FROM trip WHERE zip_code  =  94002 ",
        "query_pl": "SELECT id FROM trip WHERE zip_code  =  94002 "
    },
    {
        "db_id": "music_4",
        "question": "What are the issue dates of volumes associated with the artist aged 23 or younger?",
        "question_pl": "Jakie są daty wydania tomów związanych z artystą w wieku 23 lat lub młodszym?",
        "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23",
        "query_pl": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
    },
    {
        "db_id": "college_1",
        "question": "First names of the proffesors teaching course ACCT-211?",
        "question_pl": "Imiona i nazwiska wykładowców prowadzących kurs ACCT-211?",
        "query": "SELECT DISTINCT T1.EMP_FNAME FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"",
        "query_pl": "SELECT DISTINCT T1.EMP_FNAME FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\""
    },
    {
        "db_id": "twitter_1",
        "question": "Can you show all user ids that have more than 1 tweet?",
        "question_pl": "Czy możesz pokazać wszystkie identyfikatory użytkowników, którzy mają więcej niż 1 tweet?",
        "query": "SELECT T1.uid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1",
        "query_pl": "SELECT T1.uid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
    },
    {
        "db_id": "network_2",
        "question": "Hi there!  Can you provide me with a list of all of the names of people on this list?",
        "question_pl": "Cześć!  Czy możesz podać mi listę wszystkich nazwisk osób znajdujących się na tej liście?",
        "query": "SELECT name FROM Person",
        "query_pl": "SELECT name FROM Person"
    },
    {
        "db_id": "store_1",
        "question": "How many tracks are in the Rock genre?",
        "question_pl": "Ile utworów należy do gatunku Rock?",
        "query": "SELECT count(T2.id) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";",
        "query_pl": "SELECT count(T2.id) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Skała\";"
    },
    {
        "db_id": "activity_1",
        "question": "What is the phone of Jerry Prince? ",
        "question_pl": "Jaki jest telefon Jerry\"ego Princea?",
        "query": "SELECT phone FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
        "query_pl": "SELECT phone FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Książę\""
    },
    {
        "db_id": "ship_1",
        "question": "What rank is Captain Conway?",
        "question_pl": "Jaką rangę ma kapitan Conway?",
        "query": "SELECT Rank FROM captain WHERE name like '%Conway%'",
        "query_pl": "SELECT Rank FROM captain WHERE name like '%Conway%'"
    },
    {
        "db_id": "icfp_1",
        "question": "What is the number of papers published by Tokohu University",
        "question_pl": "Jaka jest liczba artykułów opublikowanych przez Uniwersytet Tokohu?",
        "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Tokohu University\"",
        "query_pl": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Uniwersytet Tokohu\""
    },
    {
        "db_id": "book_2",
        "question": "how many publishers are there?",
        "question_pl": "Ilu jest wydawców?",
        "query": "SELECT count(distinct Publisher) FROM publication ",
        "query_pl": "SELECT count(distinct Publisher) FROM publication "
    },
    {
        "db_id": "swimming",
        "question": "hi. what is the average capacity of the stadiums?",
        "question_pl": "Cześć. jaka jest średnia pojemność stadionów?",
        "query": "SELECT avg(capacity) FROM stadium ",
        "query_pl": "SELECT avg(capacity) FROM stadium "
    },
    {
        "db_id": "apartment_rentals",
        "question": "Hi - can you please tell me the average room count of all Provisional bookings?",
        "question_pl": "Cześć - czy możesz mi podać średnią liczbę pokoi we wszystkich rezerwacjach tymczasowych?",
        "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"",
        "query_pl": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Tymczasowe\""
    },
    {
        "db_id": "small_bank_1",
        "question": "Could you please tell me the names on all accounts in the bank?",
        "question_pl": "Czy możesz mi podać nazwy wszystkich kont w banku?",
        "query": "SELECT name from  ACCOUNTS",
        "query_pl": "SELECT name from  ACCOUNTS"
    },
    {
        "db_id": "product_catalog",
        "question": "What are the entry names of catalog with the attribute processed by most entries?",
        "question_pl": "Jakie są nazwy wpisów w katalogu z atrybutem przetwarzanym przez większość wpisów?",
        "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "college_3",
        "question": "How many students are not enrolled in the course?",
        "question_pl": "Ilu studentów nie jest zapisanych na kurs?",
        "query": "SELECT count(*) FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
        "query_pl": "SELECT count(*) FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
    },
    {
        "db_id": "inn_1",
        "question": "which rooms have reservations ?",
        "question_pl": "Które pokoje są zarezerwowane?",
        "query": "SELECT DISTINCT room FROM reservations",
        "query_pl": "SELECT DISTINCT room FROM reservations"
    },
    {
        "db_id": "restaurant_1",
        "question": "What is the age of the student named Linda Smith?",
        "question_pl": "Jaki jest wiek uczennicy o imieniu Linda Smith?",
        "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
        "query_pl": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"
    },
    {
        "db_id": "baseball_1",
        "question": "what is the number of wins the team Boston Red Stockings got in the postseasons each year in history?",
        "question_pl": "Jaka jest liczba zwycięstw drużyny Boston Red Stockings w postseason każdego roku w historii?",
        "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year",
        "query_pl": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  \"Czerwone pończochy Boston\" GROUP BY T1.year"
    },
    {
        "db_id": "customer_complaints",
        "question": "What is the phone number of the customer who has filed the most recent complaint?",
        "question_pl": "Jaki jest numer telefonu klienta, który złożył ostatnią skargę?",
        "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
        "query_pl": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "What projects are detailed as 'omnis'?",
        "question_pl": "Jakie projekty są wyszczególnione jako \"omnis\"?",
        "query": "SELECT T2.* FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis'",
        "query_pl": "SELECT T2.* FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  \"omnis\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question": "What is the description of the type of service that is performed the most often?",
        "question_pl": "Jaki jest opis rodzaju usługi, która jest wykonywana najczęściej?",
        "query": "SELECT T1.Service_Type_Description  FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Service_Type_Description  FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question": "Can you show me the top 3 highest room counts?",
        "question_pl": "Czy możesz mi pokazać 3 najwyższe liczby pokoi?",
        "query": "SELECT room_count FROM Apartments order by room_count DESC LIMIT 3",
        "query_pl": "SELECT room_count FROM Apartments order by room_count DESC LIMIT 3"
    },
    {
        "db_id": "customers_and_invoices",
        "question": "What is the customer ID of the customer with the most number of accounts?",
        "question_pl": "Jaki jest identyfikator klienta z największą liczbą kont?",
        "query": "SELECT T1.customer_id  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.customer_id  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "soccer_2",
        "question": "what are the college names of the students whose tryout decision is yes",
        "question_pl": "Jak nazywają się uczelnie studentów, których decyzja o przyjęciu na tryout jest pozytywna?",
        "query": "SELECT cName FROM Tryout WHERE decision = \"yes\"",
        "query_pl": "SELECT cName FROM Tryout WHERE decision = \"tak\""
    },
    {
        "db_id": "swimming",
        "question": "what is the name of the stadium with the  maximum capacity",
        "question_pl": "Jak nazywa się stadion o maksymalnej pojemności?",
        "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
        "query_pl": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"
    },
    {
        "db_id": "tracking_orders",
        "question": "how many orders there",
        "question_pl": "ile jest zamówień",
        "query": "SELECT count(*) FROM orders",
        "query_pl": "SELECT count(*) FROM orders"
    },
    {
        "db_id": "music_1",
        "question": "Return the names of songs for which the format is mp3 and resolution is below 1000.",
        "question_pl": "Zwróć nazwy utworów, których format to mp3, a rozdzielczość jest mniejsza niż 1000.",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
    },
    {
        "db_id": "movie_1",
        "question": "Show the names of all reviewers. ",
        "question_pl": "Pokaż nazwiska wszystkich recenzentów.",
        "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name",
        "query_pl": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
    },
    {
        "db_id": "baseball_1",
        "question": "What is the Open Year of the Riverside Park?",
        "question_pl": "Jaki jest rok otwarty parku Riverside?",
        "query": "SELECT T1.year FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T2.park_name = \"Riverside Park\";",
        "query_pl": "SELECT T1.year FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T2.park_name = \"Riverside Park\";"
    },
    {
        "db_id": "university_basketball",
        "question": "Which school has the largest enrollment?",
        "question_pl": "Która szkoła ma największą liczbę uczniów?",
        "query": "SELECT school FROM university ORDER BY enrollment DESC LIMIT 1",
        "query_pl": "SELECT school FROM university ORDER BY enrollment DESC LIMIT 1"
    },
    {
        "db_id": "mountain_photos",
        "question": "How many camera lenses are not used in taking any photos?",
        "question_pl": "Ile obiektywów aparatu nie jest używanych do robienia zdjęć?",
        "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
        "query_pl": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"
    },
    {
        "db_id": "voter_2",
        "question": "Number of students in each major?",
        "question_pl": "Liczba studentów na każdym kierunku?",
        "query": "SELECT Major, count(*) FROM STUDENT GROUP BY major",
        "query_pl": "SELECT Major, count(*) FROM STUDENT GROUP BY major"
    },
    {
        "db_id": "music_1",
        "question": "What is the ID of the longest song, please?",
        "question_pl": "Jaki jest identyfikator najdłuższej piosenki?",
        "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
        "query_pl": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
    },
    {
        "db_id": "candidate_poll",
        "question": "What are the top 3 highest support rates?",
        "question_pl": "Jakie są 3 najwyższe wskaźniki wsparcia?",
        "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
        "query_pl": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
    },
    {
        "db_id": "insurance_policies",
        "question": "Hello! Can you show me a list of all the claim IDs and their associated claim amount?",
        "question_pl": "Witaj! Czy możesz pokazać mi listę wszystkich identyfikatorów roszczeń i powiązanych z nimi kwot roszczeń?",
        "query": "SELECT claim_id, amount_claimed FROM Claims ",
        "query_pl": "SELECT claim_id, amount_claimed FROM Claims "
    },
    {
        "db_id": "roller_coaster",
        "question": "what is the highest length of coaster",
        "question_pl": "jaka jest największa długość kolejki górskiej",
        "query": "SELECT max(Length) FROM roller_coaster",
        "query_pl": "SELECT max(Length) FROM roller_coaster"
    },
    {
        "db_id": "movie_1",
        "question": "What are the ratingDate of mID 101?",
        "question_pl": "Jaka jest data ratingu mID 101?",
        "query": "SELECT ratingDate FROM Rating WHERE mID = 101",
        "query_pl": "SELECT ratingDate FROM Rating WHERE mID = 101"
    },
    {
        "db_id": "e_learning",
        "question": "How many failed the exam? ",
        "question_pl": "Ilu z nich nie zdało egzaminu?",
        "query": "SELECT count(*) FROM Student_Tests_Taken where test_result='Fail'",
        "query_pl": "SELECT count(*) FROM Student_Tests_Taken where test_result=\"Niepowodzenie\""
    },
    {
        "db_id": "products_for_hire",
        "question": "Could you show me the maximum booked count for the booked products?",
        "question_pl": "Czy możesz pokazać mi maksymalną liczbę zarezerwowanych produktów?",
        "query": "SELECT max(booked_count) FROM products_booked",
        "query_pl": "SELECT max(booked_count) FROM products_booked"
    },
    {
        "db_id": "behavior_monitoring",
        "question": "Find the start date of behavior incidents of students with the last name \"Fahey\"?",
        "question_pl": "Znajdź datę rozpoczęcia incydentów związanych z zachowaniem uczniów o nazwisku \"Fahey\"?",
        "query": "SELECT T1.date_incident_start  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"",
        "query_pl": "SELECT T1.date_incident_start  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
    },
    {
        "db_id": "ship_mission",
        "question": "Show the most common type of ships",
        "question_pl": "Pokaż najpopularniejsze typy statków",
        "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question": "How many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(*) FROM student",
        "query_pl": "SELECT count(*) FROM student"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question": "what are the names of the payment method of customers who have both mailshot in 'Order' outcome and mailshot in 'No response' outcome.",
        "question_pl": "Jakie są nazwy metod płatności klientów, którzy otrzymali zarówno wiadomość e-mail w wyniku \"Zamówienie\", jak i wiadomość e-mail w wyniku \"Brak odpowiedzi\".",
        "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'",
        "query_pl": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  \"Zamówienie\" INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  \"Brak odpowiedzi\""
    },
    {
        "db_id": "sports_competition",
        "question": "What countries have not participated in any competition with Friendly type?",
        "question_pl": "Jakie kraje nie brały udziału w żadnych zawodach typu Friendly?",
        "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
        "query_pl": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  \"Przyjazny\""
    },
    {
        "db_id": "cre_Theme_park",
        "question": "Thanks. What is the visit details of the visitor whose detail is Vincent? ",
        "question_pl": "Dzięki. Jakie są szczegóły wizyty gościa, którego dane to Vincent?",
        "query": "SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
        "query_pl": "SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
    },
    {
        "db_id": "aircraft",
        "question": "What are the maximum number of transit passengers of all airports?",
        "question_pl": "Jaka jest maksymalna liczba pasażerów tranzytowych na wszystkich lotniskach?",
        "query": "SELECT max(Transit_Passengers) FROM airport",
        "query_pl": "SELECT max(Transit_Passengers) FROM airport"
    },
    {
        "db_id": "student_1",
        "question": "How many students does KAWA GORDON teaches?",
        "question_pl": "Ilu studentów uczy KAWA GORDON?",
        "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"",
        "query_pl": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\""
    },
    {
        "db_id": "store_1",
        "question": "How many released albums are there?",
        "question_pl": "Ile masz wydanych albumów?",
        "query": "SELECT count(*) from albums",
        "query_pl": "SELECT count(*) from albums"
    },
    {
        "db_id": "journal_committee",
        "question": "Hello. What is the name of the youngest editor?",
        "question_pl": "Witaj. Jak nazywa się najmłodszy redaktor?",
        "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
        "query_pl": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1"
    },
    {
        "db_id": "device",
        "question": "WHICH SHOP HAS THE LARGEST QUANTITY OF DEVICES IN STOCK",
        "question_pl": "KTÓRY SKLEP MA NAJWIĘKSZĄ ILOŚĆ URZĄDZEŃ W MAGAZYNIE?",
        "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1",
        "query_pl": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question": "What is the tallest height?",
        "question_pl": "Jaki jest najwyższy wzrost?",
        "query": "select max(Height) from people",
        "query_pl": "select max(Height) from people"
    },
    {
        "db_id": "school_finance",
        "question": "Can you show me the average enrollment of all schools?",
        "question_pl": "Czy możesz mi pokazać średnią liczbę uczniów we wszystkich szkołach?",
        "query": "SELECT avg(enrollment) FROM school",
        "query_pl": "SELECT avg(enrollment) FROM school"
    },
    {
        "db_id": "train_station",
        "question": "Could you show me all the locations that have train stations with at least 15 platforms?",
        "question_pl": "Czy możesz pokazać mi wszystkie lokalizacje, które mają stacje kolejowe z co najmniej 15 peronami?",
        "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15",
        "query_pl": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15"
    },
    {
        "db_id": "hr_1",
        "question": "hi. show me the names of all of the departments",
        "question_pl": "cześć. pokaż mi nazwy wszystkich działów",
        "query": "SELECT department_name FROM departments",
        "query_pl": "SELECT department_name FROM departments"
    },
    {
        "db_id": "hospital_1",
        "question": "Show me the names of all the physicians?",
        "question_pl": "Pokaż mi nazwiska wszystkich lekarzy?",
        "query": "SELECT name FROM physician ",
        "query_pl": "SELECT name FROM physician "
    },
    {
        "db_id": "department_store",
        "question": "how many customer orders there",
        "question_pl": "Ile jest zamówień klientów",
        "query": "SELECT count(*) from Customer_Orders",
        "query_pl": "SELECT count(*) from Customer_Orders"
    },
    {
        "db_id": "network_2",
        "question": "What city does Alice live in?",
        "question_pl": "W jakim mieście mieszka Alice?",
        "query": "SELECT city from person where name = \"Alice\"",
        "query_pl": "SELECT city from person where name = \"Alice\""
    },
    {
        "db_id": "hospital_1",
        "question": "How many physicians are there in total?",
        "question_pl": "Ilu jest w sumie lekarzy?",
        "query": "select count(*) from Physician",
        "query_pl": "select count(*) from Physician"
    },
    {
        "db_id": "music_4",
        "question": "Hello, can you please tell me the most weeks spent on top?",
        "question_pl": "Witaj, czy możesz mi powiedzieć, ile tygodni spędziłeś na szczycie?",
        "query": "SELECT max(Weeks_on_Top) FROM volume",
        "query_pl": "SELECT max(Weeks_on_Top) FROM volume"
    },
    {
        "db_id": "flight_4",
        "question": "hi. How many routes are there?",
        "question_pl": "Cześć. Ile jest tras?",
        "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ",
        "query_pl": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 "
    },
    {
        "db_id": "dorm_1",
        "question": "What are the names of all the dorms?",
        "question_pl": "Jak nazywają się wszystkie akademiki?",
        "query": "SELECT dorm_name FROM dorm",
        "query_pl": "SELECT dorm_name FROM dorm"
    },
    {
        "db_id": "college_2",
        "question": "What is the prerequisite for Mobile computing?",
        "question_pl": "Jaki jest warunek wstępny dla komputerów mobilnych?",
        "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
        "query_pl": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  \"Komputery mobilne\")"
    },
    {
        "db_id": "phone_1",
        "question": "Tell me the chip model which has screen mode greater than 2.0 ? And also tell me the company name of that...",
        "question_pl": "Powiedz mi model chipa, który ma tryb ekranu większy niż 2.0? A także podaj mi nazwę firmy tego...",
        "query": "SELECT chip_model, Company_name FROM phone where screen_mode>2",
        "query_pl": "SELECT chip_model, Company_name FROM phone where screen_mode>2"
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the apartment type codes?",
        "question_pl": "Jakie są kody typów mieszkań?",
        "query": "SELECT apt_type_code FROM Apartments ",
        "query_pl": "SELECT apt_type_code FROM Apartments "
    },
    {
        "db_id": "party_host",
        "question": "what is the average age",
        "question_pl": "Jaki jest średni wiek",
        "query": "SELECT avg(age) FROM HOST",
        "query_pl": "SELECT avg(age) FROM HOST"
    },
    {
        "db_id": "insurance_policies",
        "question": "Which claims caused more than 2 settlements? Please list the date the claim was made and the claim id?",
        "question_pl": "Które roszczenia spowodowały więcej niż 2 ugody? Podaj datę zgłoszenia roszczenia i identyfikator roszczenia?",
        "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2"
    },
    {
        "db_id": "icfp_1",
        "question": "Hello! Can you provide me with a list of the First and Last names of all authors with the last name of \"Ohori\"?",
        "question_pl": "Witaj! Czy możesz podać mi listę imion i nazwisk wszystkich autorów o nazwisku \"Ohori\"?",
        "query": "SELECT fname, lname FROM authors where lname  =  \"Ohori\"",
        "query_pl": "SELECT fname, lname FROM authors where lname  =  \"Ohori\""
    },
    {
        "db_id": "theme_gallery",
        "question": "Can you list the ages of all the artists from United States?",
        "question_pl": "Czy możesz podać wiek wszystkich artystów ze Stanów Zjednoczonych?",
        "query": "SELECT age from artist where country = \"United States\"",
        "query_pl": "SELECT age from artist where country = \"Stany Zjednoczone\""
    },
    {
        "db_id": "formula_1",
        "question": "Hello, how many drivers are there in total?",
        "question_pl": "Witaj, ilu jest w sumie kierowców?",
        "query": "SELECT count(*) from drivers",
        "query_pl": "SELECT count(*) from drivers"
    },
    {
        "db_id": "department_store",
        "question": "I want to know the store chains with the largest department stores",
        "question_pl": "Chcę poznać sieci sklepów z największymi domami towarowymi",
        "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What are the ids of documents with the letter 's' in the name with any expense budgets?",
        "question_pl": "Jakie są identyfikatory dokumentów z literą \"s\" w nazwie z budżetami wydatków?",
        "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
        "query_pl": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
    },
    {
        "db_id": "college_3",
        "question": "What department is the Introduction to Computer Science course in?",
        "question_pl": "Na jakim wydziale prowadzony jest kurs Wprowadzenie do informatyki?",
        "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"",
        "query_pl": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"WPROWADZENIE DO INFORMATYKI\""
    },
    {
        "db_id": "perpetrator",
        "question": "HOW MANY PEOPLE HAS KILLED AT SOUTH KOREA ?",
        "question_pl": "ILE OSÓB ZGINĘŁO W KOREI POŁUDNIOWEJ?",
        "query": "SELECT killed FROM perpetrator WHERE Country=\"South Korea\"",
        "query_pl": "SELECT killed FROM perpetrator WHERE Country=\"Korea Południowa\""
    },
    {
        "db_id": "architecture",
        "question": "How many mills are built by American architects?",
        "question_pl": "Ile młynów zostało zbudowanych przez amerykańskich architektów?",
        "query": "SELECT count(*) FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' ",
        "query_pl": "SELECT count(*) FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  \"Amerykanin\" "
    },
    {
        "db_id": "club_1",
        "question": "What is the average age of all of the members of the club called \"Bootup Baltimore\"?",
        "question_pl": "Jaki jest średni wiek wszystkich członków klubu o nazwie \"Bootup Baltimore\"?",
        "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"",
        "query_pl": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Can you list the names of all the customers who never placed a single order?",
        "question_pl": "Czy możesz wymienić nazwiska wszystkich klientów, którzy nigdy nie złożyli ani jednego zamówienia?",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
    },
    {
        "db_id": "shop_membership",
        "question": "What is the total pounds of purchases in the year 2018 for all branches in London?",
        "question_pl": "Jaka jest łączna kwota zakupów w funtach w roku 2018 dla wszystkich oddziałów w Londynie?",
        "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018",
        "query_pl": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  \"Londyn\" AND T1.year  =  2018"
    },
    {
        "db_id": "music_1",
        "question": "how many file ids?",
        "question_pl": "Ile identyfikatorów plików?",
        "query": "SELECT count(distinct f_id) FROM files ",
        "query_pl": "SELECT count(distinct f_id) FROM files "
    },
    {
        "db_id": "railway",
        "question": "Which builder has the least trains? ",
        "question_pl": "Który konstruktor ma najmniej pociągów?",
        "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID order by count(*) asc limit 1",
        "query_pl": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID order by count(*) asc limit 1"
    },
    {
        "db_id": "college_2",
        "question": "Hello there!  Can you show me a list of all of the departments and the budgets?",
        "question_pl": "Witajcie!  Czy możesz mi pokazać listę wszystkich działów i budżetów?",
        "query": "SELECT dept_name,budget FROM department",
        "query_pl": "SELECT dept_name,budget FROM department"
    },
    {
        "db_id": "ship_1",
        "question": "how many ship there",
        "question_pl": "Ile statków tam jest",
        "query": "SELECT count(*) FROM ship",
        "query_pl": "SELECT count(*) FROM ship"
    },
    {
        "db_id": "county_public_safety",
        "question": "Could you please get me the name of the county with the largest population?",
        "question_pl": "Czy możesz podać mi nazwę hrabstwa o największej populacji?",
        "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
        "query_pl": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
    },
    {
        "db_id": "student_1",
        "question": "Can you tell me how many teachers teach fifth grade?",
        "question_pl": "Czy możesz mi powiedzieć, ilu nauczycieli uczy w piątej klasie?",
        "query": "SELECT count(distinct T2.lastname) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5",
        "query_pl": "SELECT count(distinct T2.lastname) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
    },
    {
        "db_id": "device",
        "question": "Show me the open year of all shops in numerical order.",
        "question_pl": "Pokaż mi rok otwarcia wszystkich sklepów w kolejności numerycznej.",
        "query": "select open_year from shop order by open_year",
        "query_pl": "select open_year from shop order by open_year"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Can you list the details of all the customers please?",
        "question_pl": "Czy możesz podać dane wszystkich klientów?",
        "query": "SELECT customer_details FROM customers ",
        "query_pl": "SELECT customer_details FROM customers "
    },
    {
        "db_id": "flight_4",
        "question": "What are the names of the airlines ?",
        "question_pl": "Jakie są nazwy linii lotniczych?",
        "query": "select \tname from airlines",
        "query_pl": "select \tname from airlines"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question": "can you show me a list of location name?",
        "question_pl": "Czy możesz mi pokazać listę nazw lokalizacji?",
        "query": "SELECT location_name FROM Ref_Locations",
        "query_pl": "SELECT location_name FROM Ref_Locations"
    },
    {
        "db_id": "baseball_1",
        "question": "How many games were played at Columbia Park?",
        "question_pl": "Ile meczów rozegrano w Columbia Park?",
        "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T2.park_name = 'Columbia Park';",
        "query_pl": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T2.park_name = \"Columbia Park\";"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "How many things are there with status \"close\"?",
        "question_pl": "Ile jest rzeczy ze statusem \"blisko\"?",
        "query": "select count(*) as num from Timed_Status_of_Things where \tStatus_of_Thing_Code = 'Close'",
        "query_pl": "select count(*) as num from Timed_Status_of_Things where \tStatus_of_Thing_Code = \"Zamknij\""
    },
    {
        "db_id": "store_1",
        "question": "Can you please list the names of all tracks in the playlists of Movies?",
        "question_pl": "Czy możesz wymienić nazwy wszystkich utworów na listach odtwarzania filmów?",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";",
        "query_pl": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Filmy\";"
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment with the most recent start date?",
        "question_pl": "Jaki jest identyfikator spotkania z najnowszą datą rozpoczęcia?",
        "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
        "query_pl": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
    },
    {
        "db_id": "company_office",
        "question": "Show the names of the buildings",
        "question_pl": "Pokaż nazwy budynków",
        "query": "SELECT name FROM buildings ",
        "query_pl": "SELECT name FROM buildings "
    },
    {
        "db_id": "chinook_1",
        "question": "Filter the track table to show only those records with unit price bigger than 1",
        "question_pl": "Filtruj tabelę ścieżek, aby wyświetlić tylko te rekordy, których cena jednostkowa jest większa niż 1.",
        "query": "SELECT * FROM track WHERE UnitPrice>1",
        "query_pl": "SELECT * FROM track WHERE UnitPrice>1"
    },
    {
        "db_id": "college_1",
        "question": "How many students number in this table?",
        "question_pl": "Ilu uczniów znajduje się w tej tabeli?",
        "query": "SELECT count(*) FROM student",
        "query_pl": "SELECT count(*) FROM student"
    },
    {
        "db_id": "loan_1",
        "question": "FIND THE NAME OF CUSTOMER WHO HAS THE LOWEST CREDIT SCORE",
        "question_pl": "ZNAJDŹ NAZWĘ KLIENTA, KTÓRY MA NAJNIŻSZĄ OCENĘ KREDYTOWĄ",
        "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
        "query_pl": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question": "Hello!  Can you provide me with a list of all of the staff members first and last names?",
        "question_pl": "Witaj!  Czy możesz podać mi listę imion i nazwisk wszystkich pracowników?",
        "query": "SELECT staff_first_name ,  staff_last_name FROM staff",
        "query_pl": "SELECT staff_first_name ,  staff_last_name FROM staff"
    },
    {
        "db_id": "cinema",
        "question": "How many movie theatres have a capacity of at least 300 people?",
        "question_pl": "Ile sal kinowych może pomieścić co najmniej 300 osób?",
        "query": "SELECT count(*) FROM cinema WHERE capacity  >=  300",
        "query_pl": "SELECT count(*) FROM cinema WHERE capacity  >=  300"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question": "What was the product id for the customer that ordered the most product quantity?",
        "question_pl": "Jaki był identyfikator produktu klienta, który zamówił największą ilość produktu?",
        "query": "SELECT  T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1",
        "query_pl": "SELECT  T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient order by the date they underwent treatment. Recent first.",
        "question_pl": "Znajdź kolejność pacjentów według daty ich leczenia. Ostatnio pierwszy.",
        "query": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC",
        "query_pl": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC"
    },
    {
        "db_id": "flight_1",
        "question": "What is the average price for flights from Los Angeles to Honolulu",
        "question_pl": "Jaka jest średnia cena lotów z Los Angeles do Honolulu?",
        "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
        "query_pl": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
    },
    {
        "db_id": "coffee_shop",
        "question": "Which address has members younger than 30?",
        "question_pl": "Który adres ma członków poniżej 30 roku życia?",
        "query": "SELECT address FROM member WHERE age  <  30",
        "query_pl": "SELECT address FROM member WHERE age  <  30"
    },
    {
        "db_id": "party_host",
        "question": "list the locations available? ",
        "question_pl": "Wymień dostępne lokalizacje?",
        "query": "SELECT Location FROM party",
        "query_pl": "SELECT Location FROM party"
    },
    {
        "db_id": "twitter_1",
        "question": "Show me all the users.",
        "question_pl": "Pokaż mi wszystkich użytkowników.",
        "query": "SELECT name FROM user_profiles",
        "query_pl": "SELECT name FROM user_profiles"
    },
    {
        "db_id": "college_2",
        "question": "How many teachers are there?",
        "question_pl": "Ilu jest nauczycieli?",
        "query": "SELECT count(name) FROM instructor WHERE id IN (SELECT id FROM teaches)",
        "query_pl": "SELECT count(name) FROM instructor WHERE id IN (SELECT id FROM teaches)"
    },
    {
        "db_id": "sakila_1",
        "question": "What is the largest payment amount?",
        "question_pl": "Jaka jest największa kwota płatności?",
        "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
        "query_pl": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question": "Can you show me the total number of airports?",
        "question_pl": "Czy możesz mi pokazać całkowitą liczbę lotnisk?",
        "query": "SELECT COUNT(apid) FROM airports",
        "query_pl": "SELECT COUNT(apid) FROM airports"
    },
    {
        "db_id": "store_1",
        "question": "How many employees are IT Staff?",
        "question_pl": "Ilu pracowników zatrudnia dział IT?",
        "query": "SELECT count(*) FROM employees WHERE title  =  'IT Staff'",
        "query_pl": "SELECT count(*) FROM employees WHERE title  =  \"Personel IT\""
    },
    {
        "db_id": "csu_1",
        "question": "Please tell me the number of undergraduates from each campus in the year 2004",
        "question_pl": "Podaj liczbę studentów z każdego kampusu w 2004 roku.",
        "query": "SELECT t2.campus, sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 group by t2.Campus",
        "query_pl": "SELECT t2.campus, sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 group by t2.Campus"
    },
    {
        "db_id": "company_employee",
        "question": "what is the name of the company with more than 200 sales? ",
        "question_pl": "Jak nazywa się firma z ponad 200 sprzedażami?",
        "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200",
        "query_pl": "SELECT name FROM company WHERE Sales_in_Billion  >  200"
    },
    {
        "db_id": "cinema",
        "question": "what is the total number of showtimes at each cinema?",
        "question_pl": "Jaka jest łączna liczba seansów w każdym kinie?",
        "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id",
        "query_pl": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id"
    },
    {
        "db_id": "activity_1",
        "question": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
        "question_pl": "Pokaż identyfikator każdego członka wydziału wraz z liczbą studentów, którym doradza.",
        "query": "SELECT T1.FacID , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID",
        "query_pl": "SELECT T1.FacID , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID"
    },
    {
        "db_id": "school_finance",
        "question": "list the amount for the largest donation",
        "question_pl": "Wymień kwotę największej darowizny",
        "query": "SELECT amount  FROM endowment ORDER BY amount DESC LIMIT 1",
        "query_pl": "SELECT amount  FROM endowment ORDER BY amount DESC LIMIT 1"
    },
    {
        "db_id": "decoration_competition",
        "question": "Please show the names of all members who go to Saskatchewan School",
        "question_pl": "Podaj nazwiska wszystkich członków, którzy uczęszczają do szkoły w Saskatchewan.",
        "query": "SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T1.Name = 'Saskatchewan School'",
        "query_pl": "SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T1.Name = \"Szkoła Saskatchewan\""
    },
    {
        "db_id": "train_station",
        "question": "Can you please list all of the locations with only one station?",
        "question_pl": "Czy możesz wymienić wszystkie lokalizacje z tylko jedną stacją?",
        "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
        "query_pl": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"
    },
    {
        "db_id": "company_office",
        "question": "what is the highest profits of companies",
        "question_pl": "Jakie są najwyższe zyski firm",
        "query": "SELECT max(Profits_billion)  FROM Companies ",
        "query_pl": "SELECT max(Profits_billion)  FROM Companies "
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Show the statement id and the statement detail for the statement with most number of accounts?",
        "question_pl": "Pokaż identyfikator wyciągu i szczegóły wyciągu dla wyciągu z największą liczbą kont?",
        "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question": "Can you please list all the ranks and the number of male faculty members for those ranks?",
        "question_pl": "Czy możesz wymienić wszystkie rangi i liczbę wykładowców płci męskiej dla tych rang?",
        "query": "SELECT rank ,  sex ,  count(*) FROM Faculty WHERE sex = \"M\" GROUP BY rank ,  sex",
        "query_pl": "SELECT rank ,  sex ,  count(*) FROM Faculty WHERE sex = \"M\" GROUP BY rank ,  sex"
    },
    {
        "db_id": "wine_1",
        "question": "What is the name of the grape whose wine products had the highest average price?",
        "question_pl": "Jak nazywa się winogrono, którego produkty winiarskie miały najwyższą średnią cenę?",
        "query": "SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
        "query_pl": "SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_orders",
        "question": "What is the ID of the oldest customer?",
        "question_pl": "Jaki jest identyfikator najstarszego klienta?",
        "query": "SELECT  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
        "query_pl": "SELECT  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question": "What days were the claims made?",
        "question_pl": "W jakich dniach zgłoszono roszczenia?",
        "query": "SELECT Date_Claim_Made FROM Claims",
        "query_pl": "SELECT Date_Claim_Made FROM Claims"
    },
    {
        "db_id": "chinook_1",
        "question": "what is the average of the milliseconds?",
        "question_pl": "Jaka jest średnia z milisekund?",
        "query": "SELECT avg(Milliseconds) from Track",
        "query_pl": "SELECT avg(Milliseconds) from Track"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "Hello!  Can you please show me a list of all of the product names and their associated product IDs?",
        "question_pl": "Witaj!  Czy możesz pokazać mi listę wszystkich nazw produktów i powiązanych z nimi identyfikatorów produktów?",
        "query": "SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code",
        "query_pl": "SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code"
    },
    {
        "db_id": "baseball_1",
        "question": "What is the average height of all players?",
        "question_pl": "Jaki jest średni wzrost wszystkich graczy?",
        "query": "SELECT avg(height) FROM player",
        "query_pl": "SELECT avg(height) FROM player"
    },
    {
        "db_id": "culture_company",
        "question": "HOW MANY DIRECTORE IN MOVIE TABLE ? List them.",
        "question_pl": "ILU REŻYSERÓW W TABELI FILMÓW? Wymień ich.",
        "query": "SELECT distinct Director FROM movie group by Director",
        "query_pl": "SELECT distinct Director FROM movie group by Director"
    },
    {
        "db_id": "store_1",
        "question": "What county does Roberto Almeida live in?",
        "question_pl": "W jakim hrabstwie mieszka Roberto Almeida?",
        "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\"",
        "query_pl": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\""
    },
    {
        "db_id": "university_basketball",
        "question": "Can you show me which school is founded most recently?   ",
        "question_pl": "Czy możesz mi pokazać, która szkoła została założona najpóźniej?   ",
        "query": "SELECT * FROM university order by founded desc LIMIT 1",
        "query_pl": "SELECT * FROM university order by founded desc LIMIT 1"
    },
    {
        "db_id": "game_injury",
        "question": "After season 2010 how many different kinds of injuries were there?",
        "question_pl": "Po sezonie 2010 ile było różnych rodzajów kontuzji?",
        "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010",
        "query_pl": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"
    },
    {
        "db_id": "bike_1",
        "question": "Where do the trips end?",
        "question_pl": "Gdzie kończą się podróże?",
        "query": "SELECT DISTINCT T2.city FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id",
        "query_pl": "SELECT DISTINCT T2.city FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
    },
    {
        "db_id": "manufactory_1",
        "question": "where is the Headquarter of Sony?",
        "question_pl": "Gdzie znajduje się główna siedziba Sony?",
        "query": "SELECT \tHeadquarter  FROM manufacturers WHERE  Name=\"Sony\"",
        "query_pl": "SELECT \tHeadquarter  FROM manufacturers WHERE  Name=\"Sony\""
    },
    {
        "db_id": "storm_record",
        "question": "What are the names of all storms?",
        "question_pl": "Jak nazywają się wszystkie burze?",
        "query": "SELECT name FROM storm",
        "query_pl": "SELECT name FROM storm"
    },
    {
        "db_id": "college_2",
        "question": "Can you show all rooms with a capacity larger than 50?",
        "question_pl": "Czy możesz pokazać wszystkie pokoje o pojemności większej niż 50?",
        "query": "SELECT * FROM classroom WHERE capacity  >  50 ",
        "query_pl": "SELECT * FROM classroom WHERE capacity  >  50 "
    },
    {
        "db_id": "city_record",
        "question": "Which cities are host cities?",
        "question_pl": "Które miasta są miastami-gospodarzami?",
        "query": "SELECT T1.city FROM city AS T1 JOIN  hosting_city AS T4 ON T1.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN  hosting_city AS T4 ON T1.city_id  =  T4.host_city"
    },
    {
        "db_id": "college_1",
        "question": "What is the first name and last name of the youngest student whose GPA is above 3?",
        "question_pl": "Jakie jest imię i nazwisko najmłodszego ucznia, którego GPA wynosi powyżej 3?",
        "query": "SELECT stu_fname ,  stu_lname  FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
        "query_pl": "SELECT stu_fname ,  stu_lname  FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
    },
    {
        "db_id": "movie_1",
        "question": "list out the movies on the table",
        "question_pl": "Wymień filmy na stole",
        "query": "SELECT * FROM Movie",
        "query_pl": "SELECT * FROM Movie"
    },
    {
        "db_id": "shop_membership",
        "question": "how many purchases did each member make?",
        "question_pl": "Ile zakupów dokonał każdy członek?",
        "query": "SELECT T1.member_id, count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id group by T1.member_id",
        "query_pl": "SELECT T1.member_id, count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id group by T1.member_id"
    },
    {
        "db_id": "apartment_rentals",
        "question": "What are the facility codes of all the apartments that have more than 4 bedrooms?",
        "question_pl": "Jakie są kody obiektów wszystkich apartamentów, które mają więcej niż 4 sypialnie?",
        "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4",
        "query_pl": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"
    },
    {
        "db_id": "candidate_poll",
        "question": "Hello. How many people have a weight that is higher than 85?",
        "question_pl": "Witaj. Ile osób ma wagę wyższą niż 85?",
        "query": "SELECT count(*)  FROM people WHERE weight  >  85",
        "query_pl": "SELECT count(*)  FROM people WHERE weight  >  85"
    },
    {
        "db_id": "coffee_shop",
        "question": "What are the average score and average staff number of all shops?",
        "question_pl": "Jaki jest średni wynik i średnia liczba pracowników we wszystkich sklepach?",
        "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop",
        "query_pl": "SELECT avg(num_of_staff) ,  avg(score) FROM shop"
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many people are in the staff?",
        "question_pl": "Ile osób liczy personel?",
        "query": "SELECT count(*) from staff",
        "query_pl": "SELECT count(*) from staff"
    },
    {
        "db_id": "local_govt_and_lot",
        "question": "how many residents does each property have?list property id ",
        "question_pl": "ilu mieszkańców ma każda nieruchomość? wymień identyfikator nieruchomości",
        "query": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id",
        "query_pl": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id"
    },
    {
        "db_id": "flight_1",
        "question": "what was the destination of flight 99 ?",
        "question_pl": "Jaki był cel lotu 99?",
        "query": "SELECT destination FROM Flight WHERE flno  =  99",
        "query_pl": "SELECT destination FROM Flight WHERE flno  =  99"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "what are the different type of payement method?",
        "question_pl": "Jakie są różne rodzaje metod płatności?",
        "query": "SELECT DISTINCT payment_method FROM customers",
        "query_pl": "SELECT DISTINCT payment_method FROM customers"
    },
    {
        "db_id": "flight_4",
        "question": "which country has the airport with the highest altitude? ",
        "question_pl": "Który kraj ma lotnisko o największej wysokości?",
        "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
        "query_pl": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
    },
    {
        "db_id": "network_2",
        "question": "How many females are under age 40?",
        "question_pl": "Ile kobiet jest w wieku poniżej 40 lat?",
        "query": "select count(*) from person where gender = 'female' and age < 40",
        "query_pl": "select count(*) from person where gender = \"kobieta\" and age < 40"
    },
    {
        "db_id": "movie_1",
        "question": "ids of reviewers who did not give 4 star?",
        "question_pl": "Idy recenzentów, którzy nie dali 4 gwiazdek?",
        "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4",
        "query_pl": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "Show the document name and the document date for all documents on project with details 'Graph Database project'",
        "question_pl": "Pokaż nazwę dokumentu i datę dokumentu dla wszystkich dokumentów w projekcie ze szczegółami \"Projekt graficznej bazy danych\".",
        "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
        "query_pl": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  \"Projekt graficznej bazy danych\""
    },
    {
        "db_id": "bike_1",
        "question": "Tell me the start date and start station id for id 900504?",
        "question_pl": "Podaj mi datę rozpoczęcia i identyfikator stacji początkowej dla identyfikatora 900504?",
        "query": "select start_date, start_station_name from trip where id = 900504",
        "query_pl": "select start_date, start_station_name from trip where id = 900504"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question": "What is the budget type code with the largest number of documents?",
        "question_pl": "Jaki jest kod typu budżetu z największą liczbą dokumentów?",
        "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question": "Can you list all the instruments used in the song Le Pop?",
        "question_pl": "Czy możesz wymienić wszystkie instrumenty użyte w utworze Le Pop?",
        "query": "SELECT DISTINCT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
        "query_pl": "SELECT DISTINCT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
    },
    {
        "db_id": "hr_1",
        "question": "Display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN",
        "question_pl": "Wyświetl numer pracownika i identyfikator stanowiska dla wszystkich pracowników, których wynagrodzenie jest niższe niż wynagrodzenie pracowników, których stanowisko to MK_MAN.",
        "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
        "query_pl": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  \"MK_MAN\" )"
    },
    {
        "db_id": "driving_school",
        "question": "Can you list the address id of all customers who lived in Lockmanfurt?",
        "question_pl": "Czy możesz podać dane adresowe wszystkich klientów, którzy mieszkali w Lockmanfurt?",
        "query": "SELECT T2.address_id FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
        "query_pl": "SELECT T2.address_id FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"
    },
    {
        "db_id": "wine_1",
        "question": "List the grape of the wines whose score is higher than 93 ordered by Name.",
        "question_pl": "Wymień szczepy win, których ocena jest wyższa niż 93, uporządkowane według nazwy.",
        "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
        "query_pl": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Which contact codes were used for less than 5 minutes?",
        "question_pl": "Które kody kontaktowe były używane przez mniej niż 5 minut?",
        "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5",
        "query_pl": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"
    },
    {
        "db_id": "music_1",
        "question": "what is the duration of the longest song grouped by genre?",
        "question_pl": "Jaki jest czas trwania najdłuższego utworu pogrupowanego według gatunku?",
        "query": "SELECT max(T1.duration),  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is",
        "query_pl": "SELECT max(T1.duration),  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question": "Show the shipping charge and customer id for customer orders with order status \"Cancelled\"",
        "question_pl": "Pokaż opłatę za wysyłkę i identyfikator klienta dla zamówień klientów ze statusem \"Anulowane\".",
        "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' ",
        "query_pl": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  \"Anulowane\" "
    },
    {
        "db_id": "club_1",
        "question": "How many clubs does the student Eric Tai belong to?",
        "question_pl": "Do ilu klubów należy uczeń Eric Tai?",
        "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"",
        "query_pl": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\""
    },
    {
        "db_id": "store_1",
        "question": "How many invoices in this table?",
        "question_pl": "Ile faktur znajduje się w tej tabeli?",
        "query": "SELECT count(*) FROM invoices ",
        "query_pl": "SELECT count(*) FROM invoices "
    },
    {
        "db_id": "customers_and_addresses",
        "question": "Find the state of all cities with post code starting with 4.",
        "question_pl": "Znajdź stan wszystkich miast z kodem pocztowym zaczynającym się od 4.",
        "query": "SELECT state_province_county  FROM addresses WHERE zip_postcode LIKE \"4%\"",
        "query_pl": "SELECT state_province_county  FROM addresses WHERE zip_postcode LIKE \"4%\""
    },
    {
        "db_id": "manufacturer",
        "question": "how can find total market rate of the furniture",
        "question_pl": "jak znaleźć całkowitą stawkę rynkową mebli",
        "query": "SELECT sum(market_rate) FROM furniture ",
        "query_pl": "SELECT sum(market_rate) FROM furniture "
    },
    {
        "db_id": "activity_1",
        "question": "how many faculties?",
        "question_pl": "ile wydziałów?",
        "query": "SELECT count(*) FROM Faculty",
        "query_pl": "SELECT count(*) FROM Faculty"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question": "Show the role description of the project staff involved in the most number of project outcomes",
        "question_pl": "Pokaż opis ról personelu projektu zaangażowanego w największą liczbę rezultatów projektu.",
        "query": "SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_management",
        "question": "Can you list the states where the secretaries of the Treasury department were born?",
        "question_pl": "Czy możesz wymienić stany, w których urodzili się sekretarze Departamentu Skarbu?",
        "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury'",
        "query_pl": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  \"Skarb Państwa\""
    },
    {
        "db_id": "cinema",
        "question": "what is the capacity of Codling Cinema",
        "question_pl": "jaka jest pojemność Codling Cinema",
        "query": "SELECT capacity from cinema where name = \"Codling\"",
        "query_pl": "SELECT capacity from cinema where name = \"Codling\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "what is the name of the policy types used by more than 2 customers? ",
        "question_pl": "Jak nazywają się typy polis używane przez więcej niż 2 klientów?",
        "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2",
        "query_pl": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
    },
    {
        "db_id": "e_learning",
        "question": "Can you please provide the names of all courses?",
        "question_pl": "Czy możesz podać nazwy wszystkich kursów?",
        "query": "SELECT course_name from Courses",
        "query_pl": "SELECT course_name from Courses"
    },
    {
        "db_id": "products_gen_characteristics",
        "question": "how many ref colors are on the table",
        "question_pl": "Ile kolorów ref znajduje się na stole",
        "query": "SELECT COUNT(DISTINCT color_description) FROM Ref_Colors",
        "query_pl": "SELECT COUNT(DISTINCT color_description) FROM Ref_Colors"
    },
    {
        "db_id": "chinook_1",
        "question": "What is the least common media type in all tracks",
        "question_pl": "Jaki jest najmniej popularny typ nośnika we wszystkich utworach?",
        "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "formula_1",
        "question": "Can you list driver iDs for all drivers that had first position in laptime at least twice?",
        "question_pl": "Czy możesz podać identyfikatory wszystkich kierowców, którzy przynajmniej dwa razy zajęli pierwsze miejsce w czasie okrążenia?",
        "query": "SELECT T1.driverid FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.driverid FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  \"1\" GROUP BY T1.driverid HAVING count(*)  >=  2"
    },
    {
        "db_id": "game_injury",
        "question": "How many injury accidents are there in total?",
        "question_pl": "Ile jest łącznie wypadków z obrażeniami ciała?",
        "query": "SELECT count(*) from injury_accident",
        "query_pl": "SELECT count(*) from injury_accident"
    },
    {
        "db_id": "movie_1",
        "question": "Please show me the names and years of the movies that has the top 3 highest rating stars",
        "question_pl": "Pokaż mi nazwy i lata filmów, które mają 3 najwyżej oceniane gwiazdki",
        "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
        "query_pl": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
    },
    {
        "db_id": "riding_club",
        "question": "Show the residences that have both a player of gender \"M\" and a player \"F\".",
        "question_pl": "Pokaż rezydencje, w których znajduje się zarówno gracz płci \"M\", jak i gracz płci \"F\".",
        "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\"",
        "query_pl": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\""
    },
    {
        "db_id": "swimming",
        "question": "what is the name of the countries that do not have a stadium that was opened after 2006? ",
        "question_pl": "Jak nazywają się kraje, które nie mają stadionu otwartego po 2006 roku?",
        "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006",
        "query_pl": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006"
    },
    {
        "db_id": "epinions_1",
        "question": "which item has the highest rating?",
        "question_pl": "Który przedmiot ma najwyższą ocenę?",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id order by rating desc limit 1",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id order by rating desc limit 1"
    },
    {
        "db_id": "sakila_1",
        "question": "what film has rental fee of 0.99?",
        "question_pl": "Jaki film ma opłatę za wypożyczenie w wysokości 0,99?",
        "query": "SELECT title FROM film WHERE rental_rate = 0.99",
        "query_pl": "SELECT title FROM film WHERE rental_rate = 0.99"
    },
    {
        "db_id": "ship_mission",
        "question": "show names of ships involved in a mission launched after 1928.",
        "question_pl": "Pokaż nazwy statków biorących udział w misji rozpoczętej po 1928 roku.",
        "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928",
        "query_pl": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
    },
    {
        "db_id": "music_4",
        "question": "What is the maximum weeks on top in the table?",
        "question_pl": "Ile maksymalnie tygodni możesz spędzić na szczycie tabeli?",
        "query": "SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
        "query_pl": "SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
    },
    {
        "db_id": "network_2",
        "question": "Find the name and age of the person who is a friend of both Dan and Alice.",
        "question_pl": "Znajdź imię i wiek osoby, która jest przyjacielem Dana i Alice.",
        "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'",
        "query_pl": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  \"Dan\" INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  \"Alice\""
    },
    {
        "db_id": "product_catalog",
        "question": "What is the height of Cola?",
        "question_pl": "Jaka jest wysokość Coli?",
        "query": "SELECT height  FROM catalog_contents WHERE \tcatalog_entry_name=\"Cola\"",
        "query_pl": "SELECT height  FROM catalog_contents WHERE \tcatalog_entry_name=\"Cola\""
    },
    {
        "db_id": "chinook_1",
        "question": "what are the durations of the longest tracts?",
        "question_pl": "Jaki jest czas trwania najdłuższych tras?",
        "query": "SELECT max(Milliseconds) FROM TRACK",
        "query_pl": "SELECT max(Milliseconds) FROM TRACK"
    },
    {
        "db_id": "tracking_share_transactions",
        "question": "What are the dates of transactions with amount smaller than 3000?",
        "question_pl": "Jakie są daty transakcji na kwotę mniejszą niż 3000?",
        "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
        "query_pl": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
    },
    {
        "db_id": "phone_1",
        "question": "What is the hardware model name for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text?",
        "question_pl": "Jaka jest nazwa modelu sprzętu dla telefonów wyprodukowanych przez \"Nokia Corporation\", ale których typ trybu ekranu nie jest tekstowy?",
        "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";",
        "query_pl": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Tekst\";"
    },
    {
        "db_id": "voter_2",
        "question": "How many students have a major of 600?",
        "question_pl": "Ilu studentów ukończyło 600 kierunków?",
        "query": "SELECT COUNT(*) FROM Student WHERE Major = 600",
        "query_pl": "SELECT COUNT(*) FROM Student WHERE Major = 600"
    },
    {
        "db_id": "restaurant_1",
        "question": "Hello! Can you provide me with the time spent in all restaurants by Linda Smith?",
        "question_pl": "Witaj! Czy możesz podać mi czas spędzony we wszystkich restauracjach przez Lindę Smith?",
        "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";",
        "query_pl": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";"
    },
    {
        "db_id": "party_host",
        "question": "What is the location of the Id no-1?",
        "question_pl": "Jaka jest lokalizacja identyfikatora nr 1?",
        "query": "SELECT Location FROM party where Party_ID = 1",
        "query_pl": "SELECT Location FROM party where Party_ID = 1"
    },
    {
        "db_id": "shop_membership",
        "question": "What are the names for the top three branches with most number of membership?",
        "question_pl": "Jak nazywają się trzy oddziały z największą liczbą członków?",
        "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
        "query_pl": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
    },
    {
        "db_id": "allergy_1",
        "question": "Can you get me the first names of students that have a milk allergy?",
        "question_pl": "Czy możesz podać mi imiona uczniów, którzy mają alergię na mleko?",
        "query": "SELECT DISTINCT T1.fname  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" ",
        "query_pl": "SELECT DISTINCT T1.fname  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Mleko\" "
    },
    {
        "db_id": "manufactory_1",
        "question": "Can you show the Name of the Products of Code 1?",
        "question_pl": "Czy możesz pokazać nazwę produktów z kodem 1?",
        "query": "SELECT Name FROM Products WHERE Code=1",
        "query_pl": "SELECT Name FROM Products WHERE Code=1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question": "Hello!  Can you provide me with a list of all customer ids and their associated policy type codes?",
        "question_pl": "Witaj!  Czy możesz dostarczyć mi listę wszystkich identyfikatorów klientów i powiązanych z nimi kodów typów polis?",
        "query": "select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id",
        "query_pl": "select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id"
    },
    {
        "db_id": "csu_1",
        "question": "For each Orange county campus, report the number of degrees granted after 2000.",
        "question_pl": "Dla każdego kampusu w hrabstwie Orange podaj liczbę stopni naukowych przyznanych po 2000 roku.",
        "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus",
        "query_pl": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Pomarańczowy\" AND T2.year  >=  2000 GROUP BY T1.campus"
    },
    {
        "db_id": "driving_school",
        "question": "How many lessons taken by customer with first name as Ryan and last name as Goodwin were completed?",
        "question_pl": "Ile lekcji zostało ukończonych przez klienta o imieniu Ryan i nazwisku Goodwin?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Zakończone\";"
    },
    {
        "db_id": "game_injury",
        "question": "What game id did the player Walter Samuel get injured during, please?",
        "question_pl": "W którym meczu Walter Samuel doznał kontuzji?",
        "query": "SELECT  game_id FROM injury_accident where Player = 'Walter Samuel'",
        "query_pl": "SELECT  game_id FROM injury_accident where Player = \"Walter Samuel\""
    },
    {
        "db_id": "voter_2",
        "question": "What is the city code of the city that the most students live in?",
        "question_pl": "Jaki jest kod miasta, w którym mieszka najwięcej studentów?",
        "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question": "How many customers are there?",
        "question_pl": "Ilu masz klientów?",
        "query": "SELECT count(*) from customer",
        "query_pl": "SELECT count(*) from customer"
    },
    {
        "db_id": "scientist_1",
        "question": "What are assigned project names? ",
        "question_pl": "Jakie są przypisane nazwy projektów?",
        "query": "SELECT t1.Name FROM Projects as t1 join AssignedTo as t2 on t1.Code = t2.Project",
        "query_pl": "SELECT t1.Name FROM Projects as t1 join AssignedTo as t2 on t1.Code = t2.Project"
    },
    {
        "db_id": "department_store",
        "question": "Hi there!  Can you provide me with a list of all Staff Department Assignments \"date assigned to\" values?",
        "question_pl": "Cześć!  Czy możesz udostępnić mi listę wszystkich wartości \"dane przypisania do\" przypisanych do działów pracowników?",
        "query": "SELECT date_assigned_to  from Staff_Department_Assignments ",
        "query_pl": "SELECT date_assigned_to  from Staff_Department_Assignments "
    },
    {
        "db_id": "scientist_1",
        "question": "What project has the longest time? List the name.",
        "question_pl": "Który projekt trwa najdłużej? Wymień nazwę.",
        "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
        "query_pl": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
    },
    {
        "db_id": "protein_institute",
        "question": "what are the names of the institutions?  ",
        "question_pl": "Jakie są nazwy instytucji?  ",
        "query": "SELECT institution FROM institution",
        "query_pl": "SELECT institution FROM institution"
    },
    {
        "db_id": "college_3",
        "question": "How many departments are there?",
        "question_pl": "Ile jest działów?",
        "query": "select count(*) from department",
        "query_pl": "select count(*) from department"
    },
    {
        "db_id": "store_1",
        "question": "List all tracks bought by customer Daan Peeters",
        "question_pl": "Lista wszystkich utworów kupionych przez klienta Daan Peeters",
        "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";",
        "query_pl": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"
    },
    {
        "db_id": "loan_1",
        "question": "what is the average of account balance?",
        "question_pl": "Jaki jest średni stan konta?",
        "query": "SELECT avg(acc_bal) FROM customer ",
        "query_pl": "SELECT avg(acc_bal) FROM customer "
    },
    {
        "db_id": "flight_1",
        "question": "How many origin are there? ",
        "question_pl": "Ile jest źródeł?",
        "query": "SELECT count(distinct origin) FROM Flight ",
        "query_pl": "SELECT count(distinct origin) FROM Flight "
    },
    {
        "db_id": "school_finance",
        "question": "WHAT ARE THE MASCOTS FOR THE SCHOOLS ENROLLMENTS ABOVE THE AVERAGE",
        "question_pl": "JAKIE SĄ MASKOTKI SZKÓŁ, DO KTÓRYCH ZAPISUJE SIĘ PONADPRZECIĘTNA LICZBA UCZNIÓW?",
        "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)",
        "query_pl": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"
    },
    {
        "db_id": "store_1",
        "question": "how many album id ",
        "question_pl": "Ile identyfikatorów albumów",
        "query": "SELECT count(distinct album_id) from tracks",
        "query_pl": "SELECT count(distinct album_id) from tracks"
    }
]