[
    {
        "db_id": "concert_singer",
        "question_original": "How many singers do we have?",
        "question_original_pl": "Ilu mamy wokalistów?",
        "question": "How many vocalists do we have?",
        "question_pl": "Ilu mamy wokalistów?",
        "query": "SELECT count(*) FROM singer",
        "query_pl": "SELECT count(*) FROM singer"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the total number of singers?",
        "question_original_pl": "Jaka jest łączna liczba wokalistów?",
        "question": "What is the total number of musicians?",
        "question_pl": "Jaka jest całkowita liczba muzyków?",
        "query": "SELECT count(*) FROM singer",
        "query_pl": "SELECT count(*) FROM singer"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "question_original_pl": "Pokaż imię i nazwisko, kraj, wiek wszystkich piosenkarzy uporządkowanych według wieku od najstarszego do najmłodszego.",
        "question": "Show name, nationality, age for all vocalists ordered by age from the oldest to the youngest.",
        "question_pl": "Pokaż imię i nazwisko, narodowość, wiek wszystkich wokalistów w kolejności od najstarszego do najmłodszego.",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "query_pl": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names, countries, and ages for every singer in descending order of age?",
        "question_original_pl": "Jakie są imiona, kraje i wiek każdego piosenkarza w kolejności malejącej według wieku?",
        "question": "What are the names, nationalities, and ages for every musicians in descending order of age?",
        "question_pl": "Jakie są nazwiska, narodowości i wiek wszystkich muzyków w kolejności malejącej według wieku?",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "query_pl": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the average, minimum, and maximum age of all singers from France?",
        "question_original_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich piosenkarzy z Francji?",
        "question": "What is the average, minimum, and maximum age of all vocalists from France?",
        "question_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich wokalistów z Francja?",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "query_pl": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  \"Francja\""
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the average, minimum, and maximum age for all French singers?",
        "question_original_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich francuskich piosenkarzy?",
        "question": "What is the average, minimum, and maximum age for all French musicians?",
        "question_pl": "Jaki jest średni, minimalny i maksymalny wiek wszystkich francuskich muzyków?",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "query_pl": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  \"Francja\""
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show the name and the release year of the song by the youngest singer.",
        "question_original_pl": "Pokaż nazwę i rok wydania utworu najmłodszego piosenkarza.",
        "question": "Show the name and the publish year of the song by the youngest vocalists.",
        "question_pl": "Pokaż nazwę i rok wydania piosenki przez najmłodszych wokalistów.",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "query_pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names and release years for all the songs of the youngest singer?",
        "question_original_pl": "Jakie są nazwy i lata wydania wszystkich piosenek najmłodszego piosenkarza?",
        "question": "What are the names and publish years for all the songs of the youngest musicians?",
        "question_pl": "Jakie są imiona i lata publikacji wszystkich piosenek najmłodszych muzyków?",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "query_pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are all distinct countries where singers above age 20 are from?",
        "question_original_pl": "Z jakich krajów pochodzą piosenkarze powyżej 20 roku życia?",
        "question": "What are all distinct nationalities where vocalists above age 20 are from?",
        "question_pl": "Z jakich narodowości pochodzą wokaliści powyżej 20 roku życia?",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "query_pl": "SELECT DISTINCT country FROM singer WHERE age  >  20"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are  the different countries with singers above age 20?",
        "question_original_pl": "W jakich krajach są piosenkarze powyżej 20 roku życia?",
        "question": "What are the different nationalities with musicians above age 20?",
        "question_pl": "Jakiej narodowości są muzycy powyżej 20 roku życia?",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "query_pl": "SELECT DISTINCT country FROM singer WHERE age  >  20"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show all countries and the number of singers in each country.",
        "question_original_pl": "Pokaż wszystkie kraje i liczbę piosenkarzy w każdym z nich.",
        "question": "Show all State and the number of vocalists in each country.",
        "question_pl": "Pokaż wszystkie kraje i liczbę wokalistów w każdym z nich.",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "query_pl": "SELECT country ,  count(*) FROM singer GROUP BY country"
    },
    {
        "db_id": "concert_singer",
        "question_original": "How many singers are from each country?",
        "question_original_pl": "Ilu piosenkarzy pochodzi z każdego kraju?",
        "question": "How many musicians are from each State?",
        "question_pl": "Ilu muzyków pochodzi z każdego stanu?",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "query_pl": "SELECT country ,  count(*) FROM singer GROUP BY country"
    },
    {
        "db_id": "concert_singer",
        "question_original": "List all song names by singers above the average age.",
        "question_original_pl": "Wymień wszystkie nazwy piosenek piosenkarzy powyżej średniego wieku.",
        "question": "List all music titles by vocalists above the average age.",
        "question_pl": "Wymień wszystkie tytuły muzyczne wokalistów powyżej średniej wieku.",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "query_pl": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are all the song names by singers who are older than average?",
        "question_original_pl": "Jakie są nazwy piosenek piosenkarzy, którzy są starsi niż przeciętnie?",
        "question": "What are all the music titles by musicians who are older than average?",
        "question_pl": "Jakie są wszystkie tytuły muzyczne muzyków, którzy są starsi niż przeciętnie?",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "query_pl": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "question_original_pl": "Pokaż lokalizację i nazwę wszystkich stadionów o pojemności od 5000 do 10000.",
        "question": "Show position and name for all stadiums with number of seats between 5000 and 10000.",
        "question_pl": "Pokaż pozycję i nazwę wszystkich stadionów z liczbą miejsc od 5000 do 10000.",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "query_pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "question_original_pl": "Jakie są lokalizacje i nazwy wszystkich stacji o pojemności od 5000 do 10000?",
        "question": "What are the addresses and names of all stations with number of seats between 5000 and 10000?",
        "question_pl": "Jakie są adresy i nazwy wszystkich stacji z liczbą miejsc między 5000 a 10000?",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "query_pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the average and the maximum capacity of all stadiums?",
        "question_original_pl": "Jaka jest maksymalna pojemność i średnia pojemność wszystkich stadionów?",
        "question": "What is the average and the maximum seats of all stadiums?",
        "question_pl": "Jaka jest średnia i maksymalna liczba miejsc na wszystkich stadionach?",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
        "query_pl": "select max(capacity), average from stadium"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the average and maximum capacities for all stations?",
        "question_original_pl": "Jaka jest średnia i maksymalna pojemność wszystkich stadionów?",
        "question": "What is the average and maximum seats for all stations?",
        "question_pl": "Jaka jest średnia i maksymalna liczba miejsc dla wszystkich stacji?",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
        "query_pl": "select avg(capacity) ,  max(capacity) from stadium"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the name and capacity for the stadium with highest average attendance?",
        "question_original_pl": "Jaka jest nazwa i pojemność stadionu z najwyższą średnią frekwencją?",
        "question": "What is the name and number of seats for the stadium with highest average attendance?",
        "question_pl": "Jaka jest nazwa i liczba miejsc na stadionie o najwyższej średniej frekwencji?",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "query_pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the name and capacity for the stadium with the highest average attendance?",
        "question_original_pl": "Jak nazywa się stadion o największej średniej frekwencji i jaką ma pojemność?",
        "question": "What is the name and number of seats for the stadium with the highest average attendance?",
        "question_pl": "Jaka jest nazwa i liczba miejsc na stadionie z najwyższą średnią frekwencją?",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "query_pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "How many concerts are there in year 2014 or 2015?",
        "question_original_pl": "Ile koncertów odbędzie się w 2014 lub 2015 roku?",
        "question": "How many shows are there in year 2014 or 2015?",
        "question_pl": "Ile koncertów odbędzie się w 2014 lub 2015 roku?",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "query_pl": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015"
    },
    {
        "db_id": "concert_singer",
        "question_original": "How many concerts occurred in 2014 or 2015?",
        "question_original_pl": "Ile koncertów odbyło się w 2014 lub 2015 roku?",
        "question": "How many shows occurred in 2014 or 2015?",
        "question_pl": "Ile pokazów odbyło się w 2014 lub 2015 roku?",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "query_pl": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show the stadium name and the number of concerts in each stadium.",
        "question_original_pl": "Pokaż nazwę stadionu i liczbę koncertów na każdym stadionie.",
        "question": "Show the stadium name and the number of shows in each stadium.",
        "question_pl": "Pokaż nazwę stadionu i liczbę występów na każdym stadionie.",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "For each stadium, how many concerts play there?",
        "question_original_pl": "Ile koncertów odbywa się na każdym stadionie?",
        "question": "For each stadium, how many shows play there?",
        "question_pl": "Ile koncertów odbywa się na każdym stadionie?",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "question_original_pl": "Pokaż nazwę i pojemność stadionu z największą liczbą koncertów w roku 2014 lub później.",
        "question": "Show the stadium name and number of seats with most number of shows in year 2014 or after.",
        "question_pl": "Pokaż nazwę stadionu i liczbę miejsc z największą liczbą występów w roku 2014 lub później.",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the name and capacity of the stadium  with the most concerts after 2013?",
        "question_original_pl": "Jak nazywa się i jaką pojemność ma stadion, na którym odbyło się najwięcej koncertów po 2013 roku?",
        "question": "What is the name and number of seats of the stadium with the most shows after 2013?",
        "question_pl": "Jaka jest nazwa i liczba miejsc na stadionie z największą liczbą koncertów po 2013 roku?",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Which year has most number of concerts?",
        "question_original_pl": "Który rok ma najwięcej koncertów?",
        "question": "Which year has most number of shows?",
        "question_pl": "Który rok ma najwięcej występów?",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the year that had the most concerts?",
        "question_original_pl": "W którym roku odbyło się najwięcej koncertów?",
        "question": "What is the time that had the most shows?",
        "question_pl": "O której godzinie było najwięcej pokazów?",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show the stadium names without any concert.",
        "question_original_pl": "Pokaż nazwy stadionów bez żadnego koncertu.",
        "question": "Show the stadium names without any shows.",
        "question_pl": "Pokaż nazwy stadionów bez żadnych pokazów.",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "query_pl": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names of the stadiums without any concerts?",
        "question_original_pl": "Jak nazywają się stadiony, na których nie ma koncertów?",
        "question": "What are the names of the stadiums without any shows?",
        "question_pl": "Jak nazywają się stadiony, na których nie ma koncertów?",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "query_pl": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "question_original_pl": "Pokaż kraje, z których pochodzą piosenkarz w wieku powyżej 40 lat i piosenkarz w wieku poniżej 30 lat.",
        "question": "Show States where a singer above age 40 and a singer below 30 are from.",
        "question_pl": "Pokaż stany, z których pochodzą piosenkarz w wieku powyżej 40 lat i piosenkarz w wieku poniżej 30 lat.",
        "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "query_pl": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "question_original_pl": "Pokaż nazwy wszystkich stadionów z wyjątkiem stadionów, na których odbył się koncert w 2014 roku.",
        "question": "Show names for all stadiums except for stadiums having a shows in year 2014.",
        "question_pl": "Pokaż nazwy wszystkich stadionów z wyjątkiem stadionów, na których odbyły się pokazy w 2014 roku.",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "query_pl": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names of all stadiums that did not have a concert in 2014?",
        "question_original_pl": "Jak nazywają się wszystkie stadiony, na których nie odbył się koncert w 2014 roku?",
        "question": "What are the names of all stadiums that did not have a shows in 2014?",
        "question_pl": "Jak nazywają się wszystkie stadiony, na których nie odbyły się pokazy w 2014 roku?",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "query_pl": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Show the name and theme for all concerts and the number of singers in each concert.",
        "question_original_pl": "Pokaż nazwę i temat wszystkich koncertów oraz liczbę wokalistów na każdym koncercie.",
        "question": "Show the name and theme for all shows and the number of vocalists in each shows.",
        "question_pl": "Podaj nazwę i temat wszystkich występów oraz liczbę wokalistów w każdym z nich.",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "query_pl": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names, themes, and number of singers for each and every concert?",
        "question_original_pl": "Jakie są nazwy, tematy i liczba wokalistów na każdym koncercie?",
        "question": "What are the names, themes, and number of singers for each and every show?",
        "question_pl": "Jakie są nazwy, tematy i liczba piosenkarzy w każdym programie?",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "query_pl": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "List singer names and number of concerts for each singer.",
        "question_original_pl": "Wymień nazwiska piosenkarzy i liczbę koncertów każdego z nich.",
        "question": "List singer names and number of shows for each musicians.",
        "question_pl": "Wymień nazwiska wokalistów i liczbę występów każdego z muzyków.",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names of the singers and number of concerts for each person?",
        "question_original_pl": "Jakie są nazwiska piosenkarzy i liczba koncertów dla każdej osoby?",
        "question": "What are the names of the singers and number of shows for each person?",
        "question_pl": "Jakie są nazwiska piosenkarzy i liczba występów każdej osoby?",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
    },
    {
        "db_id": "concert_singer",
        "question_original": "List all singer names in concerts in year 2014.",
        "question_original_pl": "Wymień wszystkie nazwiska piosenkarzy na koncertach w 2014 roku.",
        "question": "List all vocalist names in shows in year 2014.",
        "question_pl": "Wymień wszystkie nazwiska wokalistów w koncertach w 2014 roku.",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "query_pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names of the singers who performed in a concert in 2014?",
        "question_original_pl": "Jak nazywają się piosenkarze, którzy wystąpili na koncercie w 2014 roku?",
        "question": "What are the names of the musicians who performed in a musical performance in 2014?",
        "question_pl": "Jak nazywają się muzycy, którzy wystąpili w spektaklu muzycznym w 2014 roku?",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "query_pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014"
    },
    {
        "db_id": "concert_singer",
        "question_original": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "question_original_pl": "Jak nazywa się i z jakiego kraju pochodzi piosenkarz, którego utwór nosi tytuł \"Hej\"?",
        "question": "what is the name and nation of the vocalist who have a song having 'Hey' in its title?",
        "question_pl": "Jak nazywa się i jakiej narodowości jest wokalista, którego piosenka ma w tytule \"Hej\"?",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "query_pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "question_original_pl": "Jak nazywa się i z jakiego kraju pochodzi każdy piosenkarz, który ma w tytule utwór ze słowem \"Hej\"?",
        "question": "What is the name and nationality of origin of every musicians who has a song with the word 'Hey' in its title?",
        "question_pl": "Jak nazywa się i jakiej narodowości jest każdy muzyk, który ma w tytule piosenkę ze słowem \"Hej\"?",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "query_pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "question_original_pl": "Znajdź nazwy i lokalizacje stadionów, na których odbyły się koncerty w latach 2014 i 2015.",
        "question": "Find the name and position of the stadiums which some musical performances happened in the years of both 2014 and 2015.",
        "question_pl": "Znajdź nazwę i położenie stadionów, na których odbyły się występy muzyczne w latach 2014 i 2015.",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "query_pl": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "question_original_pl": "Jakie są nazwy i lokalizacje stadionów, na których odbyły się koncerty w 2014 i 2015 roku?",
        "question": "What are the names and addresses of the stadiums that had musical performances that occurred in both 2014 and 2015?",
        "question_pl": "Jakie są nazwy i adresy stadionów, na których odbywały się występy muzyczne w 2014 i 2015 roku?",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "query_pl": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
    },
    {
        "db_id": "concert_singer",
        "question_original": "Find the number of concerts happened in the stadium with the highest capacity.",
        "question_original_pl": "Znajdź liczbę koncertów, które odbyły się na stadionie o największej pojemności.",
        "question": "Find the number of musical performances happened in the stadium with the highest number of seats.",
        "question_pl": "Znajdź liczbę występów muzycznych, które odbyły się na stadionie z największą liczbą miejsc.",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
        "query_pl": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)"
    },
    {
        "db_id": "concert_singer",
        "question_original": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "question_original_pl": "Jaka jest liczba koncertów, które odbyły się na stadionie o największej pojemności?",
        "question": "What are the number of musical performances that occurred in the stadium with the largest number of seats?",
        "question_pl": "Jaka jest liczba występów muzycznych, które odbyły się na stadionie o największej liczbie miejsc?",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
        "query_pl": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the number of pets whose weight is heavier than 10.",
        "question_original_pl": "Znajdź liczbę zwierząt, których waga jest większa niż 10.",
        "question": "Find the number of animals who is heavier than 10.",
        "question_pl": "Znajdź liczbę zwierząt, które są cięższe niż 10.",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "query_pl": "SELECT count(*) FROM pets WHERE weight  >  10"
    },
    {
        "db_id": "pets_1",
        "question_original": "How many pets have a greater weight than 10?",
        "question_original_pl": "Ile zwierząt ma wagę większą niż 10?",
        "question": "How many animals heavier than 10?",
        "question_pl": "Ile zwierząt jest cięższych niż 10?",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "query_pl": "SELECT count(*) FROM pets WHERE weight  >  10"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the weight of the youngest dog.",
        "question_original_pl": "Znajdź wagę najmłodszego psa.",
        "question": "Find the weight of the youngest puppy.",
        "question_pl": "Znajdź wagę najmłodszego szczeniaka.",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_pl": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "db_id": "pets_1",
        "question_original": "How much does the youngest dog weigh?",
        "question_original_pl": "Ile waży najmłodszy pies?",
        "question": "How much does the youngest puppy weigh?",
        "question_pl": "Ile waży najmłodsze szczenię?",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_pl": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "question_original_pl": "Znajdź maksymalną wagę dla każdego typu zwierzęcia. Wymień maksymalną wagę i typ zwierzęcia.",
        "question": "Find the maximum weight for each category of pet. List the maximum weight and pet category.",
        "question_pl": "Znajdź maksymalną wagę dla każdej kategorii zwierząt domowych. Wymień maksymalną wagę i kategorię zwierzęcia.",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "query_pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
    },
    {
        "db_id": "pets_1",
        "question_original": "List the maximum weight and type for each type of pet.",
        "question_original_pl": "Wymień maksymalną wagę i typ dla każdego rodzaju zwierzęcia.",
        "question": "List the maximum weight and category for each species of domestic animals.",
        "question_pl": "Wymień maksymalną wagę i kategorię dla każdego gatunku zwierząt domowych.",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "query_pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find number of pets owned by students who are older than 20.",
        "question_original_pl": "Znajdź liczbę zwierząt domowych posiadanych przez uczniów w wieku powyżej 20 lat.",
        "question": "Find number of animals owned by students who are older than 20.",
        "question_pl": "Znajdź liczbę zwierząt posiadanych przez uczniów w wieku powyżej 20 lat.",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
    },
    {
        "db_id": "pets_1",
        "question_original": "How many pets are owned by students that have an age greater than 20?",
        "question_original_pl": "Ile zwierząt domowych posiadają uczniowie w wieku powyżej 20 lat?",
        "question": "How many animals are owned by students that have an age greater than 20?",
        "question_pl": "Ile zwierząt jest własnością uczniów w wieku powyżej 20 lat?",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the number of dog pets that are raised by female students (with sex F).",
        "question_original_pl": "Znajdź liczbę psów, które są wychowywane przez studentki (z płcią F).",
        "question": "Find the number of puppies that are raised by female students (with gender F).",
        "question_pl": "Znajdź liczbę szczeniąt wychowanych przez studentki (z płcią F).",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  \"F\" AND T3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "How many dog pets are raised by female students?",
        "question_original_pl": "Ile psich pupili jest wychowywanych przez studentki?",
        "question": "How many puppies are raised by female students?",
        "question_pl": "Ile szczeniąt jest wychowywanych przez studentki?",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "query_pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  \"F\" AND T3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the number of distinct type of pets.",
        "question_original_pl": "Znajdź liczbę różnych typów zwierząt domowych.",
        "question": "Find the number of distinct species of domestic animals.",
        "question_pl": "Znajdź liczbę odrębnych gatunków zwierząt domowych.",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "query_pl": "SELECT count(DISTINCT pettype) FROM pets"
    },
    {
        "db_id": "pets_1",
        "question_original": "How many different types of pet are there?",
        "question_original_pl": "Ile jest różnych rodzajów zwierząt domowych?",
        "question": "How many different species of animals are there?",
        "question_pl": "Ile jest różnych gatunków zwierząt?",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "query_pl": "SELECT count(DISTINCT pettype) FROM pets"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the first name of students who have cat or dog pet.",
        "question_original_pl": "Znajdź imiona uczniów, którzy mają kota lub psa.",
        "question": "Find the given name of students who have kitten or puppy pet.",
        "question_pl": "Znajdź imiona uczniów, którzy mają kociaka lub szczeniaka.",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "query_pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" OR T3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "What are the first names of every student who has a cat or dog as a pet?",
        "question_original_pl": "Jakie są imiona każdego ucznia, który ma kota lub psa jako zwierzę domowe?",
        "question": "What are the given names of every student who has a kitten or puppy as a pet?",
        "question_pl": "Jakie są imiona każdego ucznia, który ma kociaka lub szczeniaka jako zwierzę domowe?",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "query_pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" OR T3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the name of students who have both cat and dog pets.",
        "question_original_pl": "Znajdź imiona uczniów, którzy mają zarówno kota, jak i psa.",
        "question": "Find the name of students who have both kitten and puppy pets.",
        "question_pl": "Znajdź imiona uczniów, którzy mają zarówno kociaka, jak i szczeniaka.",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "query_pl": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  \"kot\" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "What are the students' first names who have both cats and dogs as pets?",
        "question_original_pl": "Jakie są imiona uczniów, którzy mają zarówno koty, jak i psy jako zwierzęta domowe?",
        "question": "What are the students' given names who have both kittens and puppies as pets?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają zarówno kocięta, jak i szczenięta?",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "query_pl": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\" INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the major and age of students who do not have a cat pet.",
        "question_original_pl": "Znajdź kierunek studiów i wiek studentów, którzy nie mają kota.",
        "question": "Find the major and age of students who do not have a kitten pet.",
        "question_pl": "Znajdź kierunek studiów i wiek studentów, którzy nie mają kociaka.",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")"
    },
    {
        "db_id": "pets_1",
        "question_original": "What major is every student who does not own a cat as a pet, and also how old are they?",
        "question_original_pl": "Na jakim kierunku jest każdy student, który nie posiada kota jako zwierzęcia domowego, a także ile ma lat?",
        "question": "What discipline is every student who does not own a kitten as a pet, and also how old are they?",
        "question_pl": "Jaką dyscyplinę ma każdy uczeń, który nie posiada kociaka jako zwierzątka domowego, a także ile ma lat?",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the id of students who do not have a cat pet.",
        "question_original_pl": "Znajdź identyfikator uczniów, którzy nie mają kota.",
        "question": "Find the id of students who do not have a kitten pet.",
        "question_pl": "Znajdź identyfikator uczniów, którzy nie mają kociaka.",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "query_pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\""
    },
    {
        "db_id": "pets_1",
        "question_original": "What are the ids of the students who do not own cats as pets?",
        "question_original_pl": "Jakie są identyfikatory uczniów, którzy nie posiadają kotów jako zwierząt domowych?",
        "question": "What are the ids of the students who do not own kittens as pets?",
        "question_pl": "Jakie są identyfikatory uczniów, którzy nie posiadają kociąt jako zwierząt domowych?",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "query_pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "question_original_pl": "Znajdź imię i wiek uczniów, którzy mają psa, ale nie mają kota.",
        "question": "Find the given name and age of students who have a puppy but do not have a cat as a pet.",
        "question_pl": "Znajdź imię i wiek uczniów, którzy mają szczeniaka, ale nie mają kota.",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\" AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the first name of every student who has a dog but does not have a cat?",
        "question_original_pl": "Jak ma na imię każdy uczeń, który ma psa, ale nie ma kota?",
        "question": "What is the given name of every student who has a dog but does not have a kitten?",
        "question_pl": "Jak nazywa się każdy uczeń, który ma psa, ale nie ma kociaka?",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"pies\" AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  \"kot\")"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the type and weight of the youngest pet.",
        "question_original_pl": "Znajdź typ i wagę najmłodszego zwierzaka.",
        "question": "Find the category and weight of the youngest pet.",
        "question_pl": "Znajdź kategorię i wagę najmłodszego zwierzaka.",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_pl": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "db_id": "pets_1",
        "question_original": "What type of pet is the youngest animal, and how much does it weigh?",
        "question_original_pl": "Jakiego rodzaju zwierzęciem jest najmłodsze zwierzę i ile waży?",
        "question": "What species of animal is the youngest animal, and how much does it weigh?",
        "question_pl": "Jakiego gatunku zwierzę jest najmłodsze i ile waży?",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_pl": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the id and weight of all pets whose age is older than 1.",
        "question_original_pl": "Znajdź identyfikator i wagę wszystkich zwierząt, których wiek jest większy niż 1.",
        "question": "Find the id and weight of all animals whose age is older than 1.",
        "question_pl": "Znajdź identyfikator i wagę wszystkich zwierząt, których wiek jest większy niż 1.",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "query_pl": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the id and weight of every pet who is older than 1?",
        "question_original_pl": "Jaki jest identyfikator i waga każdego zwierzęcia, które ma więcej niż 1 rok?",
        "question": "What is the id and weight of every animals who is older than 1?",
        "question_pl": "Jaki jest identyfikator i waga każdego zwierzęcia, które ma więcej niż 1 rok?",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "query_pl": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the average and maximum age for each type of pet.",
        "question_original_pl": "Znajdź średni i maksymalny wiek dla każdego typu zwierzęcia.",
        "question": "Find the average and maximum age for each species of animal.",
        "question_pl": "Znajdź średni i maksymalny wiek dla każdego gatunku zwierzęcia.",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "query_pl": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the average and maximum age for each pet type?",
        "question_original_pl": "Jaki jest średni i maksymalny wiek dla każdego typu zwierzęcia?",
        "question": "What is the average and maximum age for each pet species?",
        "question_pl": "Jaki jest średni i maksymalny wiek dla każdego gatunku zwierząt domowych?",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "query_pl": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the average weight for each pet type.",
        "question_original_pl": "Znajdź średnią wagę dla każdego typu zwierzęcia.",
        "question": "Find the average weight for each pet category.",
        "question_pl": "Znajdź średnią wagę dla każdej kategorii zwierząt domowych.",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "query_pl": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the average weight for each type of pet?",
        "question_original_pl": "Jaka jest średnia waga dla każdego typu zwierzęcia?",
        "question": "What is the average weight for each species of pet?",
        "question_pl": "Jaka jest średnia waga każdego gatunku zwierzęcia domowego?",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "query_pl": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the first name and age of students who have a pet.",
        "question_original_pl": "Znajdź imię i wiek uczniów, którzy mają zwierzę domowe.",
        "question": "Find the given name and age of students who have a pet.",
        "question_pl": "Znajdź imię i wiek uczniów, którzy mają zwierzę domowe.",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "query_pl": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
    },
    {
        "db_id": "pets_1",
        "question_original": "What are the different first names and ages of the students who do have pets?",
        "question_original_pl": "Jakie są imiona i wiek uczniów, którzy mają zwierzęta?",
        "question": "What are the different given names and ages of the students who do have pets?",
        "question_pl": "Jakie są różne imiona i wiek uczniów, którzy mają zwierzęta?",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "query_pl": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the id of the pet owned by student whose last name is 'Smith'.",
        "question_original_pl": "Znajdź identyfikator zwierzęcia należącego do ucznia, którego nazwisko to \"Smith\".",
        "question": "Find the id of the animals owned by student whose family name is 'Smith'.",
        "question_pl": "Znajdź identyfikatory zwierząt należących do ucznia, którego nazwisko brzmi \"Smith\".",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "query_pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  \"Smith\""
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "question_original_pl": "Jaki jest identyfikator zwierzęcia należącego do ucznia o nazwisku \"Smith\"?",
        "question": "What is the id of the animals owned by the student whose family name is 'Smith'?",
        "question_pl": "Jaki jest identyfikator zwierząt należących do ucznia, którego nazwisko brzmi \"Smith\"?",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "query_pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  \"Smith\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the number of pets for each student who has any pet and student id.",
        "question_original_pl": "Znajdź liczbę zwierząt domowych dla każdego ucznia, który ma jakiekolwiek zwierzę domowe i identyfikator ucznia.",
        "question": "Find the number of animals for each student who has any pet and student id.",
        "question_pl": "Znajdź liczbę zwierząt dla każdego ucznia, który ma jakiekolwiek zwierzę domowe i identyfikator ucznia.",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "query_pl": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
    },
    {
        "db_id": "pets_1",
        "question_original": "For students who have pets, how many pets does each student have?",
        "question_original_pl": "W przypadku uczniów, którzy mają zwierzęta domowe, ile zwierząt ma każdy uczeń? Wymień ich identyfikatory zamiast imion.",
        "question": "For students who have pets, how many animals does each student have?",
        "question_pl": "Ilu uczniów posiada zwierzęta domowe?",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "query_pl": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the first name and gender of student who have more than one pet.",
        "question_original_pl": "Znajdź imię i płeć ucznia, który ma więcej niż jedno zwierzę domowe.",
        "question": "Find the given name and gender of student who have more than one pet.",
        "question_pl": "Znajdź imię i płeć ucznia, który ma więcej niż jedno zwierzę domowe.",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "query_pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the first name and gender of the all the students who have more than one pet?",
        "question_original_pl": "Jakie jest imię i płeć wszystkich uczniów, którzy mają więcej niż jedno zwierzę domowe?",
        "question": "What is the given name and gender of the all the students who have more than one pet?",
        "question_pl": "Jakie jest imię i płeć wszystkich uczniów, którzy mają więcej niż jedno zwierzę domowe?",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "query_pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the last name of the student who has a cat that is age 3.",
        "question_original_pl": "Znajdź nazwisko ucznia, który ma kota w wieku 3 lat.",
        "question": "Find the family name of the student who has a kitten that is age 3.",
        "question_pl": "Znajdź nazwisko ucznia, który ma kociaka w wieku 3 lat.",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "query_pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  \"kot\""
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the last name of the student who has a cat that is 3 years old?",
        "question_original_pl": "Jak nazywa się uczeń, który ma kota w wieku 3 lat?",
        "question": "What is the family name of the student who has a kitten that is 3 years old?",
        "question_pl": "Jak nazywa się rodzina ucznia, który ma kociaka w wieku 3 lat?",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "query_pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  \"kot\""
    },
    {
        "db_id": "pets_1",
        "question_original": "Find the average age of students who do not have any pet.",
        "question_original_pl": "Znajdź średni wiek uczniów, którzy nie mają zwierząt domowych.",
        "question": "Find the average age of students who do not have any pet.",
        "question_pl": "Znajdź średnią wieku uczniów, którzy nie mają żadnego zwierzaka.",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
        "query_pl": "select avg(age) from student where stuid not in (select stuid from has_pet)"
    },
    {
        "db_id": "pets_1",
        "question_original": "What is the average age for all students who do not own any pets?",
        "question_original_pl": "Jaki jest średni wiek wszystkich studentów, którzy nie posiadają zwierząt domowych?",
        "question": "What is the average age for all students who do not own any pets?",
        "question_pl": "Jaki jest średni wiek wszystkich uczniów, którzy nie posiadają zwierząt domowych?",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
        "query_pl": "select avg(age) from student where stuid not in (select stuid from has_pet)"
    },
    {
        "db_id": "car_1",
        "question_original": "How many continents are there?",
        "question_original_pl": "Ile jest kontynentów?",
        "question": "How many continents are there?",
        "question_pl": "Ile jest kontynentów?",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "query_pl": "SELECT count(*) FROM CONTINENTS;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of continents?",
        "question_original_pl": "Jaka jest liczba kontynentów?",
        "question": "What is the number of continents?",
        "question_pl": "Jaka jest liczba kontynentów?",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "query_pl": "SELECT count(*) FROM CONTINENTS;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "question_original_pl": "Ile krajów ma każdy kontynent? Wymień identyfikator kontynentu, nazwę kontynentu i liczbę krajów.",
        "question": "How many States does each continent have? List the continent id, continent name and the number of nations.",
        "question_pl": "Ile państw ma każdy kontynent? Wymień identyfikator kontynentu, nazwę kontynentu i liczbę państw.",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "query_pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
    },
    {
        "db_id": "car_1",
        "question_original": "For each continent, list its id, name, and how many countries it has?",
        "question_original_pl": "Dla każdego kontynentu wymień jego identyfikator, nazwę i liczbę krajów?",
        "question": "For each continent, list its id, name, and how many States it has?",
        "question_pl": "Dla każdego kontynentu wymień jego identyfikator, nazwę i liczbę państw?",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "query_pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many countries are listed?",
        "question_original_pl": "Ile krajów znajduje się na liście?",
        "question": "How many States are listed?",
        "question_pl": "Ile państw znajduje się na liście?",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "query_pl": "SELECT count(*) FROM COUNTRIES;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many countries exist?",
        "question_original_pl": "Ile krajów istnieje?",
        "question": "How many countries exist?",
        "question_pl": "Ile krajów istnieje?",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "query_pl": "SELECT count(*) FROM COUNTRIES;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many models does each car maker produce? List maker full name, id and the number.",
        "question_original_pl": "Ile modeli produkują poszczególni producenci samochodów? Wymień pełną nazwę producenta, identyfikator i numer.",
        "question": "How many models does each car manufacturer produce? List manufacturer full name, id and the number.",
        "question_pl": "Ile modeli produkuje każdy producent samochodów? Wymień pełną nazwę producenta, identyfikator i numer.",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "query_pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the full name of each car maker, along with its id and how many models it produces?",
        "question_original_pl": "Jaka jest pełna nazwa każdego producenta samochodów, wraz z jego identyfikatorem i liczbą produkowanych modeli?",
        "question": "What is the full name of each car manufacturer, along with its id and how many models it produces?",
        "question_pl": "Jaka jest pełna nazwa każdego producenta samochodów, wraz z jego identyfikatorem i liczbą produkowanych modeli?",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "query_pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which model of the car has the minimum horsepower?",
        "question_original_pl": "Który model samochodu ma najmniejszą moc?",
        "question": "Which model of the vehicle has the minimum horsepower?",
        "question_pl": "Który model pojazdu ma minimalną moc?",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the model of the car with the smallest amount of horsepower?",
        "question_original_pl": "Jaki jest model samochodu o najmniejszej mocy?",
        "question": "What is the model of the vehicle with the smallest amount of power?",
        "question_pl": "Jaki jest model pojazdu o najmniejszej mocy?",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "Find the model of the car whose weight is below the average weight.",
        "question_original_pl": "Znajdź model samochodu, którego waga jest poniżej średniej wagi.",
        "question": "Find the model of the vehicle who is lighter than the average.",
        "question_pl": "Znajdź model pojazdu, który jest lżejszy niż średnia.",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "query_pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the model for the car with a weight smaller than the average?",
        "question_original_pl": "Jaki jest model samochodu o masie mniejszej niż średnia?",
        "question": "What is the model for the vehicle with a weight smaller than the average?",
        "question_pl": "Jaki jest model pojazdu o masie mniejszej niż średnia?",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "query_pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
    },
    {
        "db_id": "car_1",
        "question_original": "Find the name of the makers that produced some cars in the year of 1970?",
        "question_original_pl": "Znajdź nazwy producentów, którzy wyprodukowali kilka samochodów w 1970 roku?",
        "question": "Find the name of the manufacturer that produced some vehicles in the year of 1970?",
        "question_pl": "Znajdź nazwę producenta, który wyprodukował kilka pojazdów w 1970 roku?",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "query_pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  \"1970\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the name of the different car makers who produced a car in 1970?",
        "question_original_pl": "Jak nazywają się różni producenci samochodów, którzy wyprodukowali samochód w 1970 roku?",
        "question": "What is the name of the different car manufacturers who produced a vehicle in 1970?",
        "question_pl": "Jak nazywają się różni producenci samochodów, którzy wyprodukowali pojazd w 1970 roku?",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "query_pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  \"1970\";"
    },
    {
        "db_id": "car_1",
        "question_original": "Find the make and production time of the cars that were produced in the earliest year?",
        "question_original_pl": "Znajdź markę i czas produkcji samochodów, które zostały wyprodukowane w najwcześniejszym roku?",
        "question": "Find the make and production time of the vehicles that were produced in the earliest year?",
        "question_pl": "Znajdź markę i czas produkcji pojazdów, które zostały wyprodukowane w najwcześniejszym roku?",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "query_pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maker of the car produced in the earliest year and what year was it?",
        "question_original_pl": "Jaki jest producent samochodu wyprodukowanego w najwcześniejszym roku i który to był rok?",
        "question": "What is the manufacturer of the vehicle produced in the earliest year and what year was it?",
        "question_pl": "Jaki jest producent pojazdu wyprodukowanego w najwcześniejszym roku i który to był rok?",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "query_pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
    },
    {
        "db_id": "car_1",
        "question_original": "Which distinct car models are the produced after 1980?",
        "question_original_pl": "Które modele samochodów są produkowane po 1980 roku?",
        "question": "Which distinct vehicle models are the produced after 1980?",
        "question_pl": "Które modele pojazdów są produkowane po 1980 roku?",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the different models for the cards produced after 1980?",
        "question_original_pl": "Jakie są różne modele kart wyprodukowanych po 1980 roku?",
        "question": "What are the different models for the vehicles produced after 1980?",
        "question_pl": "Jakie są różne modele pojazdów wyprodukowanych po 1980 roku?",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many car makers are there in each continents? List the continent name and the count.",
        "question_original_pl": "Ilu producentów samochodów jest na każdym kontynencie? Wymień nazwę kontynentu i liczbę producentów.",
        "question": "How many car manufacturers are there in each continents? List the continent name and the count.",
        "question_pl": "Ilu producentów samochodów jest na każdym kontynencie? Wymień nazwę kontynentu i liczbę producentów.",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "query_pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the name of each continent and how many car makers are there in each one?",
        "question_original_pl": "Jak nazywają się poszczególne kontynenty i ilu producentów samochodów jest na każdym z nich?",
        "question": "What is the name of each continent and how many vehicle manufacturers are there in each one?",
        "question_pl": "Jak nazywają się poszczególne kontynenty i ilu producentów pojazdów jest na każdym z nich?",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "query_pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which of the countries has the most car makers? List the country name.",
        "question_original_pl": "Który z krajów ma najwięcej producentów samochodów? Wymień nazwę kraju.",
        "question": "Which of the States has the most car manufacturers? List the State name.",
        "question_pl": "Który ze stanów ma najwięcej producentów samochodów? Wymień nazwę stanu.",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the name of the country with the most car makers?",
        "question_original_pl": "Jak nazywa się kraj z największą liczbą producentów samochodów?",
        "question": "What is the name of the State with the most vehicle manufacturers?",
        "question_pl": "Jak nazywa się państwo z największą liczbą producentów pojazdów?",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many car models are produced by each maker? List the count and the maker full name.",
        "question_original_pl": "Ile modeli samochodów wyprodukowali poszczególni producenci? Wymień tylko liczbę i pełną nazwę producenta.",
        "question": "How many vehicle models are produced by each manufacturer? List the count and the manufacturer full name.",
        "question_pl": "Ile modeli pojazdów produkują poszczególni producenci? Wymień liczbę i pełną nazwę producenta.",
        "query": "SELECT Count(*) ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "query_pl": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "question_original_pl": "Jaka jest liczba modeli samochodów produkowanych przez każdego producenta i jaki jest identyfikator oraz pełna nazwa każdego producenta?",
        "question": "What is the number of vehicle models that are produced by each manufacturer and what is the id and full name of each manufacturer?",
        "question_pl": "Jaka jest liczba modeli pojazdów produkowanych przez każdego producenta oraz jaki jest identyfikator i pełna nazwa każdego producenta?",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "query_pl": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "question_original_pl": "Jakie jest przyspieszenie samochodu marki amc hornet sportabout (sw)?",
        "question": "What is the accelerate of the vehicle make amc hornet sportabout (sw)?",
        "question_pl": "Jakie jest przyspieszenie pojazdu marki amc hornet sportabout (sw)?",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "query_pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  \"amc hornet sportabout (sw)\";"
    },
    {
        "db_id": "car_1",
        "question_original": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "question_original_pl": "Jak bardzo przyspiesza samochód, który robi amc hornet sportabout (sw)?",
        "question": "How much does the vehicle accelerate that makes out amc hornet sportabout (sw)?",
        "question_pl": "Jak bardzo przyspiesza pojazd, który tworzy amc hornet sportabout (sw)?",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "query_pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  \"amc hornet sportabout (sw)\";"
    },
    {
        "db_id": "car_1",
        "question_original": "How many car makers are there in france?",
        "question_original_pl": "Ilu producentów samochodów jest we Francji?",
        "question": "How many French car manufacturers are there?",
        "question_pl": "Ilu jest francuskich producentów samochodów?",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  \"francja\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of makers of car in France?",
        "question_original_pl": "Jaka jest liczba twórców opieki we Francji?",
        "question": "What is the number of manufacturers of vehicle in France?",
        "question_pl": "Jaka jest liczba producentów pojazdów w Francja?",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  \"francja\";"
    },
    {
        "db_id": "car_1",
        "question_original": "How many car models are produced in the usa?",
        "question_original_pl": "Ile modeli samochodów jest produkowanych w USA?",
        "question": "How many vehicle models are produced in the usa?",
        "question_pl": "Ile modeli pojazdów jest produkowanych w USA?",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "query_pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  \"uSA\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the count of the car models produced in the United States?",
        "question_original_pl": "Jaka jest liczba modeli samochodów produkowanych w Stanach Zjednoczonych?",
        "question": "What is the count of the vehicle models produced in the United States?",
        "question_pl": "Jaka jest liczba modeli pojazdów produkowanych w Stanach Zjednoczonych?",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "query_pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  \"uSA\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "question_original_pl": "Jaka jest średnia mil na galon (mpg) samochodów z 4 cylindrami?",
        "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "question_pl": "Jaka jest średnia mil na galon (mpg) samochodów z 4 cylindrami?",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "query_pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average miles per gallon of all the cars with 4 cylinders?",
        "question_original_pl": "Jaka jest średnia mil na galon wszystkich kart z 4 cylindrami?",
        "question": "What is the average miles per gallon of all the cars with 4 cylinders?",
        "question_pl": "Jaka jest średnia mil na galon wszystkich samochodów z 4 cylindrami?",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "query_pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
        "question_original_pl": "Jaka jest najmniejsza waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?",
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
        "question_pl": "Jaka jest najmniejsza waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
        "query_pl": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the minimu weight of the car with 8 cylinders produced in 1974?",
        "question_original_pl": "Jaka jest minimalna waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?",
        "question": "What is the minimu weight of the car with 8 cylinders produced in 1974?",
        "question_pl": "Jaka jest minimalna masa samochodu z 8 cylindrami wyprodukowanego w 1974 roku?",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
        "query_pl": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974"
    },
    {
        "db_id": "car_1",
        "question_original": "What are all the makers and models?",
        "question_original_pl": "Jacy są wszyscy producenci i modele?",
        "question": "What are all the companies and models?",
        "question_pl": "Jakie są wszystkie firmy i modele?",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "query_pl": "SELECT Maker ,  Model FROM MODEL_LIST;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the makers and models?",
        "question_original_pl": "Jacy są producenci i modele?",
        "question": "What are the manufacturers and models?",
        "question_pl": "Jacy są producenci i modele?",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "query_pl": "SELECT Maker ,  Model FROM MODEL_LIST;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the countries having at least one car maker? List name and id.",
        "question_original_pl": "Jakie kraje mają co najmniej jednego producenta samochodów? Wymień nazwę i identyfikator.",
        "question": "What are the States having at least one vehicle manufacturer? List name and id.",
        "question_pl": "W jakich stanach jest co najmniej jeden producent pojazdów? Wymień nazwę i identyfikator.",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "query_pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the names and ids of all countries with at least one car maker?",
        "question_original_pl": "Jakie są nazwy i identyfikatory wszystkich krajów z co najmniej jednym producentem samochodów?",
        "question": "What are the names and ids of all States with at least one vehicle manufacturer?",
        "question_pl": "Jakie są nazwy i identyfikatory wszystkich stanów z co najmniej jednym producentem pojazdów?",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "query_pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of the cars with horsepower more than 150?",
        "question_original_pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?",
        "question": "What is the number of the vehicle with power more than 150?",
        "question_pl": "Jaki jest numer pojazdu o mocy większej niż 150?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of cars with a horsepower greater than 150?",
        "question_original_pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?",
        "question": "What is the number of vehicles with a power greater than 150?",
        "question_pl": "Jaka jest liczba pojazdów o mocy większej niż 150?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average weight of cars each year?",
        "question_original_pl": "Jaka jest średnia waga samochodów każdego roku?",
        "question": "What is the average weight of vehicles each year?",
        "question_pl": "Jaka jest średnia waga pojazdów każdego roku?",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "query_pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average weight and year for each year?",
        "question_original_pl": "Jaka jest średnia waga i rok dla każdego roku?",
        "question": "What is the average weight and year for each year?",
        "question_pl": "Jaka jest średnia waga i rok dla każdego roku?",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "query_pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which countries in europe have at least 3 car manufacturers?",
        "question_original_pl": "Które kraje w Europie mają co najmniej 3 producentów samochodów?",
        "question": "Which States in europe have at least 3 vehicle manufacturers?",
        "question_pl": "Które państwa w Europie mają co najmniej 3 producentów pojazdów?",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "query_pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  \"europa\" GROUP BY T1.CountryName HAVING count(*)  >=  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the names of all European countries with at least 3 manufacturers?",
        "question_original_pl": "Jak nazywają się wszystkie kraje europejskie z co najmniej 3 producentami?",
        "question": "What are the names of all European States with at least 3 manufacturers?",
        "question_pl": "Jak nazywają się wszystkie państwa europejskie z co najmniej 3 producentami?",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "query_pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  \"europa\" GROUP BY T1.CountryName HAVING count(*)  >=  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "question_original_pl": "Jaka jest maksymalna moc i marka modeli samochodów z 3 cylindrami?",
        "question": "What is the maximum power and the manufacturer of the vehicle models with 3 cylinders?",
        "question_pl": "Jaka jest maksymalna moc i producent modeli pojazdów z 3 cylindrami?",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "question_original_pl": "Jaka jest największa moc w modelach z 3 cylindrami i jaka to marka?",
        "question": "What is the largest amount of power for the models with 3 cylinders and what manufacturer is it?",
        "question_pl": "Jaka jest największa moc modeli z 3 cylindrami i jaki to producent?",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "question_original_pl": "Który model oszczędza najwięcej benzyny? Oznacza to, że ma maksymalną liczbę mil na galon.",
        "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "question_pl": "Który model oszczędza najwięcej benzyny? Oznacza to, że ma maksymalną liczbę mil na galon.",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the car model with the highest mpg?",
        "question_original_pl": "Jaki jest model samochodu o najwyższym mpg?",
        "question": "What is the automobile model with the highest mpg?",
        "question_pl": "Jaki jest model samochodu o najwyższym zużyciu paliwa?",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "query_pl": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average horsepower of the cars before 1980?",
        "question_original_pl": "Jaka jest średnia moc samochodów sprzed 1980 roku?",
        "question": "What is the average power of the automobile before 1980?",
        "question_pl": "Jaka była średnia moc samochodu przed 1980 rokiem?",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "query_pl": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average horsepower for all cars produced before 1980?",
        "question_original_pl": "Jaka jest średnia moc wszystkich samochodów wyprodukowanych przed 1980 rokiem?",
        "question": "What is the average power for all automobiles produced before 1980?",
        "question_pl": "Jaka jest średnia moc wszystkich samochodów wyprodukowanych przed 1980 rokiem?",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "query_pl": "select avg(horsepower) from cars_data where year  <  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average edispl of the cars of model volvo?",
        "question_original_pl": "Jaka jest średnia prędkość samochodów modelu volvo?",
        "question": "What is the average edispl of the automobile of model volvo?",
        "question_pl": "Jaka jest średnia cena samochodu modelu volvo?",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "query_pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  \"volvo\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the average edispl for all volvos?",
        "question_original_pl": "Jaki jest średni edispl dla wszystkich volvo?",
        "question": "What is the average edispl for all volvos?",
        "question_pl": "Jaki jest średni edispl dla wszystkich volvo?",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "query_pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  \"volvo\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maximum accelerate for different number of cylinders?",
        "question_original_pl": "Jakie jest maksymalne przyspieszenie dla różnej liczby cylindrów?",
        "question": "What is the maximum accelerate for different number of cylinders?",
        "question_pl": "Jakie jest maksymalne przyspieszenie dla różnej liczby cylindrów?",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "query_pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maximum accelerate for all the different cylinders?",
        "question_original_pl": "Jakie jest maksymalne przyspieszenie dla wszystkich cylindrów?",
        "question": "What is the maximum accelerate for all the different cylinders?",
        "question_pl": "Jakie jest maksymalne przyspieszenie dla wszystkich cylindrów?",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "query_pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which model has the most version(make) of cars?",
        "question_original_pl": "Który model ma najwięcej wersji (marek) samochodów?",
        "question": "Which model has the most version(make) of automobiles?",
        "question_pl": "Który model ma najwięcej wersji (marek) samochodów?",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What model has the most different versions?",
        "question_original_pl": "Który model ma najwięcej różnych wersji?",
        "question": "What model has the most different versions?",
        "question_pl": "Który model ma najwięcej różnych wersji?",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many cars have more than 4 cylinders?",
        "question_original_pl": "Ile samochodów ma więcej niż 4 cylindry?",
        "question": "How many vehicles have more than 4 cylinders?",
        "question_pl": "Ile pojazdów ma więcej niż 4 cylindry?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of cars with more than 4 cylinders?",
        "question_original_pl": "Jaka jest liczba samochodów z więcej niż 4 cylindrami?",
        "question": "What is the number of vehicles with more than 4 cylinders?",
        "question_pl": "Jaka jest liczba pojazdów z więcej niż 4 cylindrami?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
    },
    {
        "db_id": "car_1",
        "question_original": "how many cars were produced in 1980?",
        "question_original_pl": "Ile samochodów wyprodukowano w 1980 roku?",
        "question": "how many automobiles were produced in 1980?",
        "question_pl": "Ile samochodów wyprodukowano w 1980 roku?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "In 1980, how many cars were made?",
        "question_original_pl": "Ile samochodów wyprodukowano w 1980 roku?",
        "question": "In 1980, how many automobiles were made?",
        "question_pl": "Ile samochodów wyprodukowano w 1980 roku?",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "query_pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many car models were produced by the maker with full name American Motor Company?",
        "question_original_pl": "Ile modeli samochodów zostało wyprodukowanych przez producenta o pełnej nazwie American Motor Company?",
        "question": "How many automobile models were produced by the manufacturer with full name American Motor Company?",
        "question_pl": "Ile modeli samochodów zostało wyprodukowanych przez producenta o pełnej nazwie American Motor Company?",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  \"American Motor Company\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of car models created by the car maker American Motor Company?",
        "question_original_pl": "Jaka jest liczba modeli samochodów stworzonych przez producenta samochodów American Motor Company?",
        "question": "What is the number of automobile models created by the car manufacturer American Motor Company?",
        "question_pl": "Jaka jest liczba modeli samochodów stworzonych przez producenta samochodów American Motor Company?",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "query_pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  \"American Motor Company\";"
    },
    {
        "db_id": "car_1",
        "question_original": "Which makers designed more than 3 car models? List full name and the id.",
        "question_original_pl": "Którzy producenci zaprojektowali więcej niż 3 modele samochodów? Wymień pełną nazwę i identyfikator.",
        "question": "Which manufacturers designed more than 3 vehicle models? List full name and the id.",
        "question_pl": "Którzy producenci zaprojektowali więcej niż 3 modele pojazdów? Wymień pełną nazwę i identyfikator.",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the names and ids of all makers with more than 3 models?",
        "question_original_pl": "Jakie są nazwy i identyfikatory wszystkich producentów posiadających więcej niż 3 modele?",
        "question": "What are the names and ids of all manufacturers with more than 3 models?",
        "question_pl": "Jakie są nazwy i identyfikatory wszystkich producentów posiadających więcej niż 3 modele?",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "question_original_pl": "Jakie charakterystyczne modele są produkowane przez producenta o pełnej nazwie General Motors lub ważą więcej niż 3500?",
        "question": "Which distinctive types are produced by manufacturer with the full name General Motors or weighing more than 3500?",
        "question_pl": "Jakie charakterystyczne typy są produkowane przez producenta o pełnej nazwie General Motors lub ważące więcej niż 3500?",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "query_pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  \"General Motors\" OR T4.weight  >  3500;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "question_original_pl": "Jakie są różne modele stworzone przez producenta samochodów General Motors lub ważące ponad 3500?",
        "question": "What are the different models created by either the car manufacturer General Motors or weighed more than 3500?",
        "question_pl": "Jakie są różne modele stworzone przez producenta samochodów General Motors lub ważące ponad 3500?",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "query_pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  \"General Motors\" OR T4.weight  >  3500;"
    },
    {
        "db_id": "car_1",
        "question_original": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
        "question_original_pl": "W których latach produkowano samochody ważące nie mniej niż 3000 i nie więcej niż 4000?",
        "question": "In which years automobiles were produced weighing no less than 3000 and no more than 4000?",
        "question_pl": "W których latach produkowano samochody o masie nie mniejszej niż 3000 i nie większej niż 4000?",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
        "query_pl": "select distinct year from cars_data where weight between 3000 and 4000;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
        "question_original_pl": "W jakich latach produkowano samochody ważące mniej niż 4000 i samochody ważące więcej niż 3000?",
        "question": "What are the different years in which there were vehicles produced that weighed less than 4000 and also vehicles that weighted more than 3000?",
        "question_pl": "W jakich latach produkowano pojazdy ważące mniej niż 4000 i pojazdy ważące więcej niż 3000?",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
        "query_pl": "select distinct year from cars_data where weight between 3000 and 4000;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the horsepower of the car with the largest accelerate?",
        "question_original_pl": "Jaka jest moc samochodu z największym przyspieszeniem?",
        "question": "What is the power of the automobile with the largest accelerate?",
        "question_pl": "Jaka jest moc samochodu z największym przyspieszeniem?",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "query_pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the horsepower of the car with the greatest accelerate?",
        "question_original_pl": "Jaka jest moc samochodu z największym przyspieszeniem?",
        "question": "What is the power of the automobile with the greatest accelerate?",
        "question_pl": "Jaka jest moc samochodu z największym przyspieszeniem?",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "query_pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "question_original_pl": "Dla modelu volvo, ile cylindrów ma samochód z najmniejszym przyspieszeniem?",
        "question": "For model volvo, how many cylinders does the automobile with the least accelerate have?",
        "question_pl": "Dla modelu volvo, ile cylindrów ma samochód z najmniejszym przyspieszeniem?",
        "query": "SELECT count(cylinders) FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "query_pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  \"volvo\" ORDER BY T1.accelerate ASC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "question_original_pl": "W przypadku modelu volvo, ile cylindrów ma wersja z najmniejszym przyspieszeniem?",
        "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "question_pl": "W przypadku modelu volvo, ile cylindrów ma wersja z najmniejszym przyspieszeniem?",
        "query": "SELECT count(cylinders) FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "query_pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  \"volvo\" ORDER BY T1.accelerate ASC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "question_original_pl": "Ile samochodów ma większe przyspieszenie niż samochód o największej mocy?",
        "question": "How many automobiles have a larger accelerate than the automobile with the largest power?",
        "question_pl": "Ile samochodów ma większe przyspieszenie niż samochód o największej mocy?",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "question_original_pl": "Jaka jest liczba samochodów z większym przyspieszeniem niż ten z największą mocą?",
        "question": "What is the number of automobiles with a greater accelerate than the one with the most power?",
        "question_pl": "Jaka jest liczba samochodów z większym przyspieszeniem niż ten z największą mocą?",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
    },
    {
        "db_id": "car_1",
        "question_original": "How many countries has more than 2 car makers?",
        "question_original_pl": "Ile krajów ma więcej niż 2 producentów samochodów?",
        "question": "How many States has more than 2 car manufacturers?",
        "question_pl": "Ile stanów ma więcej niż 2 producentów samochodów?",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
        "query_pl": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of countries with more than 2 car makers?",
        "question_original_pl": "Jaka jest liczba krajów z więcej niż 2 producentami samochodów?",
        "question": "What is the number of States with more than 2 car manufacturers?",
        "question_pl": "Jaka jest liczba stanów z więcej niż 2 producentami samochodów?",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
        "query_pl": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2"
    },
    {
        "db_id": "car_1",
        "question_original": "How many cars has over 6 cylinders?",
        "question_original_pl": "Ile samochodów ma ponad 6 cylindrów?",
        "question": "How many automobiles has over 6 cylinders?",
        "question_pl": "Ile samochodów ma ponad 6 cylindrów?",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the number of cars with over 6 cylinders?",
        "question_original_pl": "Jaka jest liczba samochodów z ponad 6 cylindrami?",
        "question": "What is the number of automobiles with over 6 cylinders?",
        "question_pl": "Jaka jest liczba samochodów z ponad 6 cylindrami?",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "query_pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
    },
    {
        "db_id": "car_1",
        "question_original": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "question_original_pl": "W przypadku samochodów z 4 cylindrami, który model ma największą moc?",
        "question": "For the automobiles with 4 cylinders, which model has the largest power?",
        "question_pl": "W przypadku samochodów z 4 cylindrami, który model ma największą moc?",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "question_original_pl": "Który model samochodu z 4 cylindrami ma największą moc?",
        "question": "For all of the 4 cylinder automobiles, which model has the most power?",
        "question_pl": "Który z 4-cylindrowych samochodów ma największą moc?",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
    },
    {
        "db_id": "car_1",
        "question_original": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "question_original_pl": "Spośród samochodów o mocy większej niż najniższa, które nie mają więcej niż 3 cylindry? Wymień markę i nazwę samochodu.",
        "question": "Among the automobiles with more than lowest power, which ones do not have more than 3 cylinders? List the vehicle makeid and manufacturer name.",
        "question_pl": "Spośród samochodów o ponad najniższej mocy, które nie mają więcej niż 3 cylindry? Wymień markę pojazdu i nazwę producenta.",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "query_pl": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?",
        "question_original_pl": "Wśród samochodów, które nie mają minimalnej mocy, jakie są identyfikatory marek i nazwy wszystkich tych, które mają mniej niż 4 cylindry?",
        "question": "Among the automobiles that do not have the minimum power, what are the manufacturer ids and names of al those with less than 4 cylinders?",
        "question_pl": "Wśród samochodów, które nie mają minimalnej mocy, jakie są identyfikatory producentów i nazwy wszystkich tych, które mają mniej niż 4 cylindry?",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <  4;",
        "query_pl": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?",
        "question_original_pl": "Jaka jest maksymalna liczba mil na galon samochodu z 8 cylindrami lub wyprodukowanego przed 1980 rokiem?",
        "question": "What is the maximum miles per gallon of the automobile with 8 cylinders or produced before 1980?",
        "question_pl": "Jaka jest maksymalna liczba mil na galon samochodu z 8 cylindrami lub wyprodukowanego przed 1980 rokiem?",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;",
        "query_pl": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980"
    },
    {
        "db_id": "car_1",
        "question_original": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?",
        "question_original_pl": "Jaki jest maksymalny mpg samochodów, które miały 8 cylindrów lub które zostały wyprodukowane przed 1980 rokiem?",
        "question": "What is the maximum mpg of the automobiles that had 8 cylinders or that were produced before 1980?",
        "question_pl": "Jaki jest maksymalny mpg samochodów z 8 cylindrami lub wyprodukowanych przed 1980 rokiem?",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;",
        "query_pl": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980"
    },
    {
        "db_id": "car_1",
        "question_original": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "question_original_pl": "Które modele są lżejsze niż 3500, ale nie są produkowane przez \"Ford Motor Company\"?",
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "question_pl": "Które modele są lżejsze niż 3500, ale nie są produkowane przez \"Ford Motor Company\"?",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != \"Ford Motor Company\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "question_original_pl": "Jakie są różne modele, które są lżejsze niż 3500, ale nie zostały zbudowane przez Ford Motor Company?",
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "question_pl": "Jakie są różne modele, które są lżejsze niż 3500, ale nie zostały zbudowane przez Ford Motor Company?",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "query_pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != \"Ford Motor Company\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the name of the countries where there is not a single car maker?",
        "question_original_pl": "Jak nazywają się kraje, w których nie ma ani jednego producenta samochodów?",
        "question": "What are the name of the States where there is not a single automobile maker?",
        "question_pl": "Jak nazywają się państwa, w których nie ma ani jednego producenta samochodów?",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "query_pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the names of the countries with no car makers?",
        "question_original_pl": "Jak nazywają się kraje, w których nie ma producentów samochodów?",
        "question": "What are the names of the States with no vehicle manufacturers?",
        "question_pl": "Jak nazywają się państwa, w których nie ma producentów pojazdów?",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "query_pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
    },
    {
        "db_id": "car_1",
        "question_original": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.",
        "question_original_pl": "Którzy producenci samochodów produkują co najmniej 2 modele i więcej niż 3 modele? Wymień id i producenta.",
        "question": "Which are the automobile manufacturers which produce at least 2 models and more than 3 automobile manufacturers? List the id and the manufacturer.",
        "question_pl": "Którzy producenci samochodów produkują co najmniej 2 modele i więcej niż 3? Wymień id i producenta.",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_pl": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "question_original_pl": "Jakie są identyfikatory i producenci wszystkich producentów samochodów, którzy produkują co najmniej 2 modele i więcej niż 3 samochody?",
        "question": "What are the ids and manufacturers of all automobile manufacturers that produce at least 2 models and make more than 3 automobiles?",
        "question_pl": "Jakie są identyfikatory i producenci wszystkich producentów samochodów, którzy produkują co najmniej 2 modele i więcej niż 3 samochody?",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_pl": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "question_original_pl": "Jakie są identyfikatory i nazwy krajów, które mają więcej niż 3 producentów samochodów lub produkują model \"fiat\"?",
        "question": "What are the id and names of the nations which have more than 3 vehicle manufacturers or produce the 'fiat' model?",
        "question_pl": "Jakie są identyfikatory i nazwy krajów, które mają więcej niż 3 producentów pojazdów lub produkują model \"fiat\"?",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "query_pl": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  \"fiat\";"
    },
    {
        "db_id": "car_1",
        "question_original": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?",
        "question_original_pl": "Jakie są identyfikatory i nazwy wszystkich krajów, które mają więcej niż 3 producentów samochodów lub produkują model Fiata?",
        "question": "What are the ids and names of all States that either have more than 3 automobile manufacturers or produce fiats?",
        "question_pl": "Jakie są identyfikatory i nazwy wszystkich stanów, które mają więcej niż 3 producentów samochodów lub produkują fiaty?",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "query_pl": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  \"fiat\";"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which country does Airline \"JetBlue Airways\" belong to?",
        "question_original_pl": "Do jakiego kraju należy linia lotnicza \"JetBlue Airways\"?",
        "question": "Which State does Airways \"JetBlue Airways\" belong to?",
        "question_pl": "Do jakiego stanu należą linie lotnicze \"JetBlue Airways\"?",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What country is Jetblue Airways affiliated with?",
        "question_original_pl": "Z jakim krajem powiązane są linie Jetblue Airways?",
        "question": "What State is Jetblue Airways affiliated with?",
        "question_pl": "Z jakim stanem powiązane są linie Jetblue Airways?",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "question_original_pl": "Jaki jest skrót od linii lotniczej \"JetBlue Airways\"?",
        "question": "What is the shortened word of Airline \"JetBlue Airways\"?",
        "question_pl": "Jak brzmi skrócona nazwa linii lotniczych \"JetBlue Airways\"?",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which abbreviation corresponds to Jetblue Airways?",
        "question_original_pl": "Który skrót odpowiada Jetblue Airways?",
        "question": "Which shortened word corresponds to Jetblue Airways?",
        "question_pl": "Które skrócone słowo odpowiada Jetblue Airways?",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "List all airline names and their abbreviations in \"USA\".",
        "question_original_pl": "Wymień wszystkie nazwy linii lotniczych i ich skróty w \"USA\".",
        "question": "List all airway names and their shortened word in \"USA\".",
        "question_pl": "Wymień wszystkie nazwy dróg lotniczych i ich skróty w \"USA\".",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are the airline names and abbreviations for airlines in the USA?",
        "question_original_pl": "Jakie są nazwy i skróty linii lotniczych w USA?",
        "question": "What are the airway names and shortened words for airways in the USA?",
        "question_pl": "Jakie są nazwy i skróty dróg oddechowych w USA?",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\""
    },
    {
        "db_id": "flight_2",
        "question_original": "List the airport code and name in the city of Anthony.",
        "question_original_pl": "Wymień kod i nazwę lotniska w mieście Anthony.",
        "question": "List the airport code and name in the city of Anthony.",
        "question_pl": "Wymień kod i nazwę lotniska w mieście Anthony.",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "query_pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the airport code and airport name corresonding to the city Anthony.",
        "question_original_pl": "Podaj kod lotniska i nazwę lotniska odpowiadającą miastu Anthony.",
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "question_pl": "Podaj kod lotniska i nazwę lotniska odpowiadającą miastu Anthony.",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "query_pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many airlines do we have?",
        "question_original_pl": "Ile mamy linii lotniczych?",
        "question": "How many airways do we have?",
        "question_pl": "Ile mamy dróg oddechowych?",
        "query": "SELECT count(*) FROM AIRLINES",
        "query_pl": "SELECT count(*) FROM AIRLINES"
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the total number of airlines?",
        "question_original_pl": "Jaka jest łączna liczba linii lotniczych?",
        "question": "What is the total amount of airways?",
        "question_pl": "Jaka jest całkowita liczba dróg oddechowych?",
        "query": "SELECT count(*) FROM AIRLINES",
        "query_pl": "SELECT count(*) FROM AIRLINES"
    },
    {
        "db_id": "flight_2",
        "question_original": "How many airports do we have?",
        "question_original_pl": "Ile mamy lotnisk?",
        "question": "How many aerodromes do we have?",
        "question_pl": "Ile mamy lotnisk?",
        "query": "SELECT count(*) FROM AIRPORTS",
        "query_pl": "SELECT count(*) FROM AIRPORTS"
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of  airports.",
        "question_original_pl": "Zwróć liczbę lotnisk.",
        "question": "Return the number of  aerodromes.",
        "question_pl": "Zwróć liczbę lotnisk.",
        "query": "SELECT count(*) FROM AIRPORTS",
        "query_pl": "SELECT count(*) FROM AIRPORTS"
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights do we have?",
        "question_original_pl": "Ile mamy lotów?",
        "question": "How many flights do we have?",
        "question_pl": "Ile mamy lotów?",
        "query": "SELECT count(*) FROM FLIGHTS",
        "query_pl": "SELECT count(*) FROM FLIGHTS"
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of flights.",
        "question_original_pl": "Zwróć liczbę lotów.",
        "question": "Return the number of flights.",
        "question_pl": "Zwróć liczbę lotów.",
        "query": "SELECT count(*) FROM FLIGHTS",
        "query_pl": "SELECT count(*) FROM FLIGHTS"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airline has abbreviation 'UAL'?",
        "question_original_pl": "Która linia lotnicza ma skrót \"UAL\"?",
        "question": "Which airway can be shortened as word 'UAL'?",
        "question_pl": "Które drogi oddechowe można skrócić do słowa \"UAL\"?",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "query_pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the airline with abbreviation 'UAL'.",
        "question_original_pl": "Podaj linię lotniczą ze skrótem \"UAL\".",
        "question": "Give the airway with abbreviation 'UAL'.",
        "question_pl": "Podaj drogę oddechową ze skrótem \"UAL\".",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "query_pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many airlines are from USA?",
        "question_original_pl": "Ile linii lotniczych pochodzi z USA?",
        "question": "How many airways are from USA?",
        "question_pl": "Ile linii lotniczych pochodzi z USA?",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of airlines in the USA.",
        "question_original_pl": "Zwróć liczbę linii lotniczych w USA.",
        "question": "Return the number of airways in the USA.",
        "question_pl": "Zwróć liczbę linii lotniczych w USA.",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which city and country is the Alton airport at?",
        "question_original_pl": "W jakim mieście i kraju znajduje się lotnisko Alton?",
        "question": "Which town and State is the Alton airport at?",
        "question_pl": "W którym mieście i stanie znajduje się lotnisko Alton?",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "query_pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the city and country for the Alton airport.",
        "question_original_pl": "Podaj miasto i kraj, w którym znajduje się lotnisko Alton.",
        "question": "Give the town and State for the Alton airport.",
        "question_pl": "Podaj miasto i stan dla lotniska Alton.",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "query_pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the airport name for airport 'AKO'?",
        "question_original_pl": "Jaka jest nazwa lotniska \"AKO?",
        "question": "What is the aerodrome name for airport 'AKO'?",
        "question_pl": "Jaka jest nazwa lotniska \"AKO\"?",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the name of the airport with code 'AKO'.",
        "question_original_pl": "Zwróć nazwę lotniska z kodem \"AKO\".",
        "question": "Return the name of the aerodrome with code 'AKO'.",
        "question_pl": "Zwróć nazwę lotniska z kodem \"AKO\".",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are airport names at City 'Aberdeen'?",
        "question_original_pl": "Jakie są nazwy lotnisk w City \"Aberdeen?",
        "question": "What are aerodrome names at town 'Aberdeen'?",
        "question_pl": "Jakie są nazwy lotnisk w mieście Aberdeen?",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are the names of airports in Aberdeen?",
        "question_original_pl": "Jak nazywają się lotniska w Aberdeen?",
        "question": "What are the names of aerodrome in Aberdeen?",
        "question_pl": "Jakie są nazwy lotnisk w Aberdeen?",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "query_pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights depart from 'APG'?",
        "question_original_pl": "Ile lotów rozpoczyna się od \"APG\"?",
        "question": "How many flights depart from 'APG'?",
        "question_pl": "Ile lotów rozpoczyna się od \"APG\"?",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Count the number of flights departing from 'APG'.",
        "question_original_pl": "Policz liczbę lotów odlatujących z \"APG\".",
        "question": "Count the amount of flights departing from 'APG'.",
        "question_pl": "Policz liczbę lotów odlatujących z \"APG\".",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights have destination ATO?",
        "question_original_pl": "Ile lotów ma miejsce docelowe ATO?",
        "question": "How many flights have terminal ATO?",
        "question_pl": "Ile lotów ma terminal ATO?",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Count the number of flights into ATO.",
        "question_original_pl": "Policz liczbę lotów do ATO.",
        "question": "Count the number of flights into ATO.",
        "question_pl": "Policz liczbę lotów do ATO.",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights depart from City Aberdeen?",
        "question_original_pl": "Ile lotów rozpoczyna się od City Aberdeen?",
        "question": "How many flights depart from City Aberdeen?",
        "question_pl": "Ile lotów rozpoczyna się od City Aberdeen?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of flights departing from Aberdeen.",
        "question_original_pl": "Zwróć liczbę lotów rozpoczynających się w Aberdeen.",
        "question": "Return the number of flights departing from Aberdeen.",
        "question_pl": "Zwróć liczbę lotów rozpoczynających się w Aberdeen.",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights arriving in Aberdeen city?",
        "question_original_pl": "Ile lotów przylatuje do miasta Aberdeen?",
        "question": "How many flights arriving in Aberdeen city?",
        "question_pl": "Ile lotów przylatuje do miasta Aberdeen?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of flights arriving in Aberdeen.",
        "question_original_pl": "Zwróć liczbę lotów przylatujących do Aberdeen.",
        "question": "Return the number of flights arriving in Aberdeen.",
        "question_pl": "Zwróć liczbę lotów przylatujących do Aberdeen.",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "question_original_pl": "Ile lotów rozpoczyna się w mieście \"Aberdeen\" i ma miejsce docelowe w mieście \"Ashley\"?",
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "question_pl": "Ile lotów rozpoczyna się w mieście \"Aberdeen\" i ma miejsce docelowe w mieście \"Ashley\"?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights fly from Aberdeen to Ashley?",
        "question_original_pl": "Ile jest lotów z Aberdeen do Ashley?",
        "question": "How many flights fly from Aberdeen to Ashley?",
        "question_pl": "Ile jest lotów z Aberdeen do Ashley?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights does airline 'JetBlue Airways' have?",
        "question_original_pl": "Ile lotów obsługują linie lotnicze \"JetBlue Airways\"?",
        "question": "How many flights does airway 'JetBlue Airways' have?",
        "question_pl": "Ile lotów obsługują linie lotnicze \"JetBlue Airways\"?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the number of Jetblue Airways flights.",
        "question_original_pl": "Podaj liczbę lotów linii Jetblue Airways.",
        "question": "Give the number of Jetblue Airways flights.",
        "question_pl": "Podaj liczbę lotów linii Jetblue Airways.",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "question_original_pl": "Ile lotów \"United Airlines\" odbywa się na lotnisko \"ASY\"?",
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "question_pl": "Ile lotów \"United Airlines\" odbywa się na lotnisko \"ASY\"?",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Count the number of United Airlines flights arriving in ASY Airport.",
        "question_original_pl": "Policz liczbę lotów United Airlines przylatujących na lotnisko ASY.",
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "question_pl": "Policz liczbę lotów United Airlines przylatujących na lotnisko ASY.",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "question_original_pl": "Ile lotów linii \"United Airlines\" odlatuje z lotniska \"AHD\"?",
        "question": "How many 'United Airlines' flights leave from Airport 'AHD'?",
        "question_pl": "Ile lotów \"United Airlines\" odlatuje z lotniska \"AHD\"?",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Return the number of United Airlines flights leaving from AHD Airport.",
        "question_original_pl": "Zwróć liczbę lotów United Airlines z lotniska AHD.",
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "question_pl": "Zwróć liczbę lotów United Airlines z lotniska AHD.",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "query_pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many United Airlines flights go to City 'Aberdeen'?",
        "question_original_pl": "Ile lotów United Airlines odbywa się do miasta Aberdeen?",
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "question_pl": "Ile lotów United Airlines odbywa się do miasta Aberdeen?",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "question_original_pl": "Policz liczbę lotów United Airlines, które przylatują do Aberdeen.",
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "question_pl": "Policz liczbę lotów United Airlines, które przylatują do Aberdeen.",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "query_pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which city has most number of arriving flights?",
        "question_original_pl": "Które miasto ma największą liczbę przylatujących lotów?",
        "question": "Which town has most number of arriving flights?",
        "question_pl": "Które miasto ma największą liczbę przylatujących lotów?",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which city has the most frequent destination airport?",
        "question_original_pl": "Które miasto ma najczęściej wybierane lotnisko docelowe?",
        "question": "Which town has the most frequent terminal aerodrome?",
        "question_pl": "Które miasto ma najczęściej odwiedzane lotnisko końcowe?",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which city has most number of departing flights?",
        "question_original_pl": "Które miasto ma najwięcej odlatujących lotów?",
        "question": "Which town has most number of departing flights?",
        "question_pl": "Które miasto ma najwięcej odlatujących lotów?",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which city is the most frequent source airport?",
        "question_original_pl": "Które miasto jest najczęściej wybieranym lotniskiem?",
        "question": "Which town is the most frequent source aerodrome?",
        "question_pl": "Które miasto jest najczęstszym lotniskiem źródłowym?",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the code of airport that has the highest number of flights?",
        "question_original_pl": "Jaki jest kod lotniska, które obsługuje największą liczbę lotów?",
        "question": "What is the code of aerodrome that has the highest number of flights?",
        "question_pl": "Jaki jest kod lotniska, na którym odbywa się największa liczba lotów?",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the airport code of the airport with the most flights?",
        "question_original_pl": "Jaki jest kod lotniska obsługującego najwięcej lotów?",
        "question": "What is the aerodrome code of the aerodrome with the most flights?",
        "question_pl": "Jaki jest kod lotniska, na którym odbywa się najwięcej lotów?",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the code of airport that has fewest number of flights?",
        "question_original_pl": "Jaki jest kod lotniska, które ma najmniejszą liczbę lotów?",
        "question": "What is the code of aerodrome that has fewest number of flights?",
        "question_pl": "Jaki jest kod lotniska, na którym odbywa się najmniej lotów?",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the code of the airport with the least flights.",
        "question_original_pl": "Podaj kod lotniska z najmniejszą liczbą lotów.",
        "question": "Give the code of the aerodrome with the least flights.",
        "question_pl": "Podaj kod lotniska z najmniejszą liczbą lotów.",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airline has most number of flights?",
        "question_original_pl": "Która linia lotnicza ma najwięcej lotów?",
        "question": "Which airway has most number of flights?",
        "question_pl": "Która linia lotnicza ma najwięcej lotów?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What airline serves the most flights?",
        "question_original_pl": "Która linia lotnicza obsługuje najwięcej lotów?",
        "question": "What airway serves the most flights?",
        "question_pl": "Która linia lotnicza obsługuje najwięcej lotów?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "question_original_pl": "Znajdź skrót i kraj linii lotniczej, która ma najmniejszą liczbę lotów?",
        "question": "Find the shortened word and State of the airway that has fewest number of flights?",
        "question_pl": "Znajdź skrócone słowo i państwo, które ma najmniejszą liczbę lotów?",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "question_original_pl": "Jaki jest skrót nazwy linii lotniczej z najmniejszą liczbą lotów i w jakim kraju się ona znajduje?",
        "question": "What is the shortened word of the airway has the fewest flights and what State is it in?",
        "question_pl": "Jak w skrócie nazywa się droga lotnicza z najmniejszą liczbą lotów i w jakim stanie się ona znajduje?",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "flight_2",
        "question_original": "What are airlines that have some flight departing from airport 'AHD'?",
        "question_original_pl": "Jakie linie lotnicze oferują loty z lotniska \"AHD?",
        "question": "What are airways that have some flight departing from aerodrome 'AHD'?",
        "question_pl": "Jakie są linie lotnicze, których niektóre loty rozpoczynają się z lotniska \"AHD?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have a flight with source airport AHD?",
        "question_original_pl": "Które linie lotnicze mają loty ze źródłowym lotniskiem AHD?",
        "question": "Which airways have a flight with source airport AHD?",
        "question_pl": "Które linie lotnicze mają loty z lotniskiem źródłowym AHD?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are airlines that have flights arriving at airport 'AHD'?",
        "question_original_pl": "Jakie linie lotnicze obsługują loty na lotnisko \"AHD?",
        "question": "What are airways that have flights arriving at airport 'AHD'?",
        "question_pl": "Jakie linie lotnicze obsługują loty na lotnisko \"AHD?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have a flight with destination airport AHD?",
        "question_original_pl": "Które linie lotnicze mają loty z lotniskiem docelowym AHD?",
        "question": "Which airways have a flight with terminal airport AHD?",
        "question_pl": "Które linie lotnicze mają loty z lotniskiem AHD?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "question_original_pl": "Znajdź wszystkie linie lotnicze, które oferują loty z obu lotnisk 'APG' i \"CVO.",
        "question": "Find all airways that have flights from both aerodromes 'APG' and 'CVO'.",
        "question_pl": "Znajdź wszystkie linie lotnicze, które oferują loty z obu lotnisk 'APG' i \"CVO.",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have departing flights from both APG and CVO airports?",
        "question_original_pl": "Które linie lotnicze oferują loty z lotnisk APG i CVO?",
        "question": "Which airways have departing flights from both APG and CVO aerodromes?",
        "question_pl": "Które linie lotnicze oferują loty z lotnisk APG i CVO?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "question_original_pl": "Znajdź wszystkie linie lotnicze, które mają loty z lotniska \"CVO, ale nie z 'APG'.",
        "question": "Find all airways that have flights from airport 'CVO' but not from 'APG'.",
        "question_pl": "Znajdź wszystkie linie lotnicze, które mają loty z lotniska \"CVO, ale nie z 'APG'.",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have departures from CVO but not from APG airports?",
        "question_original_pl": "Które linie lotnicze mają wyloty z CVO, ale nie z lotnisk APG?",
        "question": "Which airways have departures from CVO but not from APG airports?",
        "question_pl": "Które linie lotnicze mają wyloty z CVO, ale nie z lotnisk APG?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Find all airlines that have at least 10 flights.",
        "question_original_pl": "Znajdź wszystkie linie lotnicze, które mają co najmniej 10 lotów.",
        "question": "Find all airways that have at least 10 flights.",
        "question_pl": "Znajdź wszystkie linie lotnicze, które oferują co najmniej 10 lotów.",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have at least 10 flights?",
        "question_original_pl": "Które linie lotnicze mają co najmniej 10 lotów?",
        "question": "Which airways have at least 10 flights?",
        "question_pl": "Które linie lotnicze mają co najmniej 10 lotów?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
    },
    {
        "db_id": "flight_2",
        "question_original": "Find all airlines that have fewer than 200 flights.",
        "question_original_pl": "Znajdź wszystkie linie lotnicze, które wykonują mniej niż 200 lotów.",
        "question": "Find all airways that have fewer than 200 flights.",
        "question_pl": "Znajdź wszystkie linie lotnicze, które obsługują mniej niż 200 lotów.",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airlines have less than 200 flights?",
        "question_original_pl": "Które linie lotnicze obsługują mniej niż 200 lotów?",
        "question": "Which airways have less than 200 flights?",
        "question_pl": "Które linie lotnicze obsługują mniej niż 200 lotów?",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "query_pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
    },
    {
        "db_id": "flight_2",
        "question_original": "What are flight numbers of Airline \"United Airlines\"?",
        "question_original_pl": "Jakie są numery lotów linii lotniczych \"United Airlines\"?",
        "question": "What are flight codes of airway \"United Airlines\"?",
        "question_pl": "Jakie są kody lotów linii lotniczych \"United Airlines\"?",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Which flight numbers correspond to United Airlines flights?",
        "question_original_pl": "Które numery lotów odpowiadają lotom United Airlines?",
        "question": "Which flight codes correspond to United Airlines flights?",
        "question_pl": "Które kody lotów odpowiadają lotom United Airlines?",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are flight numbers of flights departing from Airport \"APG\"?",
        "question_original_pl": "Jakie są numery lotów odlatujących z lotniska \"APG\"?",
        "question": "What are flight codes of flights departing from Airport \"APG\"?",
        "question_pl": "Jakie są kody lotów odlatujących z lotniska \"APG\"?",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the flight numbers of flights leaving from APG.",
        "question_original_pl": "Podaj numery lotów odlatujących z APG.",
        "question": "Give the flight codes of flights leaving from APG.",
        "question_pl": "Podaj kody lotów odlatujących z APG.",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "question_original_pl": "Jakie są numery lotów przylatujących na lotnisko \"APG\"?",
        "question": "What are flight codes of flights arriving at Airport \"APG\"?",
        "question_pl": "Jakie są kody lotów przylatujących na lotnisko \"APG\"?",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the flight numbers of flights landing at APG.",
        "question_original_pl": "Podaj numery lotów lądujących w APG.",
        "question": "Give the flight codes of flights landing at APG.",
        "question_pl": "Podaj kody lotów lądujących w APG.",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "query_pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "question_original_pl": "Jakie są numery lotów odlatujących z miasta \"Aberdeen\"?",
        "question": "What are flight codes of flights departing from City \"Aberdeen \"?",
        "question_pl": "Jakie są kody lotów odlatujących z miasta \"Aberdeen\"?",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the flight numbers of flights leaving from Aberdeen.",
        "question_original_pl": "Podaj numery lotów odlatujących z Aberdeen.",
        "question": "Give the flight codes of flights leaving from Aberdeen.",
        "question_pl": "Podaj kody lotów odlatujących z Aberdeen.",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "question_original_pl": "Jakie są numery lotów przylatujących do miasta \"Aberdeen\"?",
        "question": "What are flight codes of flights arriving in City \"Aberdeen\"?",
        "question_pl": "Jakie są kody lotów przylatujących do miasta \"Aberdeen\"?",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Give the flight numbers of flights arriving in Aberdeen.",
        "question_original_pl": "Podaj numery lotów przylatujących do Aberdeen.",
        "question": "Give the flight codes of flights arriving in Aberdeen.",
        "question_pl": "Podaj kody lotów przylatujących do Aberdeen.",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "question_original_pl": "Znajdź liczbę lotów lądujących w mieście Aberdeen lub Abilene.",
        "question": "Find the code of flights landing in the city of Aberdeen or Abilene.",
        "question_pl": "Znajdź kod lotów lądujących w mieście Aberdeen lub Abilene.",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "query_pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\""
    },
    {
        "db_id": "flight_2",
        "question_original": "How many flights land in Aberdeen or Abilene?",
        "question_original_pl": "Ile lotów ląduje w Aberdeen lub Abilene?",
        "question": "How many flights land in Aberdeen or Abilene?",
        "question_pl": "Ile lotów ląduje w Aberdeen lub Abilene?",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "query_pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\""
    },
    {
        "db_id": "flight_2",
        "question_original": "Find the name of airports which do not have any flight in and out.",
        "question_original_pl": "Znajdź nazwy lotnisk, które nie obsługują żadnych lotów tam i z powrotem.",
        "question": "Find the name of aerodromes which do not have any flight in and out.",
        "question_pl": "Znajdź nazwy lotnisk, na których nie odbywają się żadne loty.",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "query_pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
    },
    {
        "db_id": "flight_2",
        "question_original": "Which airports do not have departing or arriving flights?",
        "question_original_pl": "Które lotniska nie mają odlatujących lub przylatujących lotów?",
        "question": "Which aerodromes do not have leaving or arriving flights?",
        "question_pl": "Które lotniska nie mają lotów odlatujących lub przylatujących?",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "query_pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "How many employees are there?",
        "question_original_pl": "Ilu masz pracowników?",
        "question": "How many workers are there?",
        "question_pl": "Ilu jest pracowników?",
        "query": "SELECT count(*) FROM employee",
        "query_pl": "SELECT count(*) FROM employee"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Count the number of employees",
        "question_original_pl": "Policz liczbę pracowników",
        "question": "Count the number of staffs",
        "question_pl": "Policz liczbę pracowników",
        "query": "SELECT count(*) FROM employee",
        "query_pl": "SELECT count(*) FROM employee"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Sort employee names by their age in ascending order.",
        "question_original_pl": "Sortuj nazwiska pracowników według ich wieku w porządku rosnącym.",
        "question": "Sort worker names by their age in ascending order.",
        "question_pl": "Posortuj nazwiska pracowników według ich wieku w porządku rosnącym.",
        "query": "SELECT name FROM employee ORDER BY age",
        "query_pl": "SELECT name FROM employee ORDER BY age"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "List the names of employees and sort in ascending order of age.",
        "question_original_pl": "Wypisz nazwiska pracowników i posortuj je rosnąco według wieku.",
        "question": "List the names of workers and sort in ascending order of age.",
        "question_pl": "Wypisz nazwiska pracowników i posortuj je rosnąco według wieku.",
        "query": "SELECT name FROM employee ORDER BY age",
        "query_pl": "SELECT name FROM employee ORDER BY age"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What is the number of employees from each city?",
        "question_original_pl": "Jaka jest liczba pracowników z każdego miasta?",
        "question": "What is the number of workers from each town?",
        "question_pl": "Jaka jest liczba pracowników z każdego miasta?",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "query_pl": "SELECT count(*) ,  city FROM employee GROUP BY city"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Count the number of employees for each city.",
        "question_original_pl": "Policz liczbę pracowników w każdym mieście.",
        "question": "Count the number of staffs for each town.",
        "question_pl": "Policz liczbę pracowników w każdym mieście.",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "query_pl": "SELECT count(*) ,  city FROM employee GROUP BY city"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which cities do more than one employee under age 30 come from?",
        "question_original_pl": "Z których miast pochodzi więcej niż jeden pracownik w wieku poniżej 30 lat?",
        "question": "Which towns do more than one staff under age 30 come from?",
        "question_pl": "Z których miast pochodzi więcej niż jeden pracownik w wieku poniżej 30 lat?",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "query_pl": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the cities that have more than one employee under age 30.",
        "question_original_pl": "Znajdź miasta, które mają więcej niż jednego pracownika poniżej 30 roku życia.",
        "question": "Find the towns that have more than one worker under age 30.",
        "question_pl": "Znajdź miasta, w których jest więcej niż jeden pracownik w wieku poniżej 30 lat.",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "query_pl": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the number of shops in each location.",
        "question_original_pl": "Znajdź liczbę sklepów w każdej lokalizacji.",
        "question": "Find the number of shops in each city.",
        "question_pl": "Znajdź liczbę sklepów w każdym mieście.",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "query_pl": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "How many shops are there in each location?",
        "question_original_pl": "Ile sklepów znajduje się w każdej lokalizacji?",
        "question": "How many stores are there in each city?",
        "question_pl": "Ile sklepów znajduje się w każdym mieście?",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "query_pl": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the manager name and district of the shop whose number of products is the largest.",
        "question_original_pl": "Znajdź nazwisko kierownika i dzielnicę sklepu, w którym liczba produktów jest największa.",
        "question": "Find the head name and district of the shop whose number of commodities is the largest.",
        "question_pl": "Znajdź nazwę i dzielnicę sklepu, w którym liczba towarów jest największa.",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "query_pl": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What are the manager name and district of the shop that sells the largest number of products?",
        "question_original_pl": "Jaka jest nazwa kierownika i dzielnica sklepu, który sprzedaje największą liczbę produktów?",
        "question": "What are the director name and district of the market that sells the largest number of goods?",
        "question_pl": "Podaj nazwę dyrektora i dzielnicę rynku, na którym sprzedaje się najwięcej towarów?",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "query_pl": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "find the minimum and maximum number of products of all stores.",
        "question_original_pl": "znajdź minimalną i maksymalną liczbę produktów we wszystkich sklepach.",
        "question": "find the minimum and maximum number of merchandises of all stores.",
        "question_pl": "Znajdź minimalną i maksymalną liczbę towarów we wszystkich sklepach.",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "query_pl": "SELECT min(Number_products) ,  max(Number_products) FROM shop"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What are the minimum and maximum number of products across all the shops?",
        "question_original_pl": "Jaka jest minimalna i maksymalna liczba produktów we wszystkich sklepach?",
        "question": "What are the minimum and maximum number of goods across all the stores?",
        "question_pl": "Jaka jest minimalna i maksymalna liczba towarów we wszystkich sklepach?",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "query_pl": "SELECT min(Number_products) ,  max(Number_products) FROM shop"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Return the name, location and district of all shops in descending order of number of products.",
        "question_original_pl": "Zwróć nazwę, lokalizację i dzielnicę wszystkich sklepów w porządku malejącym według liczby produktów.",
        "question": "Return the name, city and district of all markets in descending order of number of commodities.",
        "question_pl": "Zwróć nazwę, miasto i dzielnicę wszystkich rynków w porządku malejącym według liczby towarów.",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "query_pl": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "question_original_pl": "Posortuj wszystkie sklepy według liczby produktów w porządku malejącym i zwróć nazwę, lokalizację i dzielnicę każdego sklepu.",
        "question": "Sort all the stores by number merchandises in descending order, and return the name, city and district of each store.",
        "question_pl": "Posortuj wszystkie sklepy według liczby towarów w porządku malejącym i zwróć nazwę, miasto i dzielnicę każdego sklepu.",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "query_pl": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the names of stores whose number products is more than the average number of products.",
        "question_original_pl": "Znajdź nazwy sklepów, w których liczba produktów jest większa niż średnia liczba produktów.",
        "question": "Find the names of stores whose number merchandises is more than the average number of merchandises.",
        "question_pl": "Znajdź nazwy sklepów, w których liczba towarów jest większa niż średnia liczba towarów.",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "query_pl": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which shops' number products is above the average? Give me the shop names.",
        "question_original_pl": "W których sklepach liczba produktów jest powyżej średniej? Podaj nazwy sklepów.",
        "question": "Which shops' number goods is above the average? Give me the store names.",
        "question_pl": "W których sklepach liczba towarów jest powyżej średniej? Podaj nazwy sklepów.",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "query_pl": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "find the name of employee who was awarded the most times in the evaluation.",
        "question_original_pl": "znajdź imię i nazwisko pracownika, który został nagrodzony najwięcej razy w ocenie.",
        "question": "find the name of staff who was awarded the most times in the assessment.",
        "question_pl": "znajdź nazwisko pracownika, który otrzymał najwięcej punktów w ocenie.",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which employee received the most awards in evaluations? Give me the employee name.",
        "question_original_pl": "Który pracownik otrzymał najwięcej nagród w ocenie? Podaj imię i nazwisko pracownika.",
        "question": "Which worker received the most awards in assessments? Give me the worker name.",
        "question_pl": "Który pracownik otrzymał najwięcej nagród w ocenach? Podaj nazwisko pracownika.",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the name of the employee who got the highest one time bonus.",
        "question_original_pl": "Znajdź nazwisko pracownika, który otrzymał najwyższą jednorazową premię.",
        "question": "Find the name of the worker who got the highest one time premium.",
        "question_pl": "Znajdź nazwisko pracownika, który otrzymał najwyższą jednorazową premię.",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which employee received the biggest bonus? Give me the employee name.",
        "question_original_pl": "Który pracownik otrzymał największą premię? Podaj imię i nazwisko pracownika.",
        "question": "Which worker received the biggest extra prize? Give me the worker name.",
        "question_pl": "Który pracownik otrzymał największą nagrodę dodatkową? Podaj nazwisko pracownika.",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the names of employees who never won any award in the evaluation.",
        "question_original_pl": "Znajdź nazwiska pracowników, którzy nigdy nie zdobyli żadnej nagrody w ocenie.",
        "question": "Find the names of staffs who never won any award in the assessment.",
        "question_pl": "Znajdź nazwiska pracowników, którzy nigdy nie zdobyli żadnej nagrody w ocenie.",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "query_pl": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What are the names of the employees who never received any evaluation?",
        "question_original_pl": "Jakie są nazwiska pracowników, którzy nigdy nie otrzymali żadnej oceny?",
        "question": "What are the names of the staffs who never received any assessment?",
        "question_pl": "Jakie są nazwiska pracowników, którzy nigdy nie otrzymali żadnej oceny?",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "query_pl": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What is the name of the shop that is hiring the largest number of employees?",
        "question_original_pl": "Jak nazywa się sklep, który zatrudnia największą liczbę pracowników?",
        "question": "What is the name of the store that is hiring the largest number of workers?",
        "question_pl": "Jak nazywa się sklep, który zatrudnia największą liczbę pracowników?",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which shop has the most employees? Give me the shop name.",
        "question_original_pl": "Który sklep zatrudnia najwięcej pracowników? Podaj nazwę sklepu.",
        "question": "Which shop has the most workers? Give me the store name.",
        "question_pl": "Który sklep zatrudnia najwięcej pracowników? Podaj nazwę sklepu.",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the name of the shops that do not hire any employee.",
        "question_original_pl": "Znajdź nazwy sklepów, które nie zatrudniają żadnego pracownika.",
        "question": "Find the name of the stores that do not hire any people.",
        "question_pl": "Znajdź nazwy sklepów, które nie zatrudniają żadnych pracowników.",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "query_pl": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which shops run with no employees? Find the shop names",
        "question_original_pl": "Które sklepy działają bez pracowników? Znajdź nazwy sklepów",
        "question": "Which stores run with no workers? Find the store names",
        "question_pl": "Które sklepy działają bez pracowników? Znajdź nazwy sklepów",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "query_pl": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the number of employees hired in each shop; show the shop name as well.",
        "question_original_pl": "Znajdź liczbę pracowników zatrudnionych w każdym sklepie; podaj również nazwę sklepu.",
        "question": "Find the number of staffs hired in each store; show the store name as well.",
        "question_pl": "Znajdź liczbę pracowników zatrudnionych w każdym sklepie; podaj również nazwę sklepu.",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "query_pl": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "For each shop, return the number of employees working there and the name of the shop.",
        "question_original_pl": "Dla każdego sklepu podaj liczbę zatrudnionych w nim pracowników oraz nazwę sklepu.",
        "question": "For each store, return the number of people working there and the name of the store.",
        "question_pl": "Dla każdego sklepu podaj liczbę pracujących w nim osób oraz nazwę sklepu.",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "query_pl": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What is total bonus given in all evaluations?",
        "question_original_pl": "Jaka jest łączna premia przyznana we wszystkich ocenach?",
        "question": "What is total premium given in all assessments?",
        "question_pl": "Jaka jest łączna premia przyznana we wszystkich ocenach?",
        "query": "SELECT sum(bonus) FROM evaluation",
        "query_pl": "SELECT sum(bonus) FROM evaluation"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the total amount of bonus given in all the evaluations.",
        "question_original_pl": "Znajdź łączną kwotę premii przyznanych we wszystkich ocenach.",
        "question": "Find the total amount of extra prize given in all the assessments.",
        "question_pl": "Znajdź łączną kwotę dodatkowej nagrody przyznanej we wszystkich ocenach.",
        "query": "SELECT sum(bonus) FROM evaluation",
        "query_pl": "SELECT sum(bonus) FROM evaluation"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Give me all the information about hiring.",
        "question_original_pl": "Podaj mi wszystkie informacje o zatrudnieniu.",
        "question": "Give me all the information about hiring.",
        "question_pl": "Podaj mi wszystkie informacje o zatrudnieniu.",
        "query": "SELECT * FROM hiring",
        "query_pl": "SELECT * FROM hiring"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "What is all the information about hiring?",
        "question_original_pl": "Jakie są wszystkie informacje na temat zatrudniania?",
        "question": "What is all the information about hiring?",
        "question_pl": "Jakie są wszystkie informacje na temat zatrudniania?",
        "query": "SELECT * FROM hiring",
        "query_pl": "SELECT * FROM hiring"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "question_original_pl": "W której dzielnicy znajdują się zarówno sklepy z mniej niż 3000 produktów, jak i sklepy z ponad 10000 produktów?",
        "question": "Which district has both stores with less than 3000 goods and stores with more than 10000 goods?",
        "question_pl": "W której dzielnicy znajdują się zarówno sklepy z mniej niż 3000 towarów, jak i sklepy z ponad 10000 towarów?",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "query_pl": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "question_original_pl": "Znajdź dzielnice, w których znajdują się zarówno sklepy sprzedające mniej niż 3000 produktów, jak i sklepy sprzedające więcej niż 10000 produktów.",
        "question": "Find the districts in which there are both shops selling less than 3000 goods and markets selling more than 10000 goods.",
        "question_pl": "Znajdź dzielnice, w których znajdują się zarówno sklepy sprzedające mniej niż 3000 towarów, jak i rynki sprzedające więcej niż 10000 towarów.",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "query_pl": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "How many different store locations are there?",
        "question_original_pl": "Ile jest różnych lokalizacji sklepów?",
        "question": "How many different store city are there?",
        "question_pl": "Ile jest różnych miast, w których znajdują się sklepy?",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "query_pl": "SELECT count(DISTINCT LOCATION) FROM shop"
    },
    {
        "db_id": "employee_hire_evaluation",
        "question_original": "Count the number of distinct store locations.",
        "question_original_pl": "Policz liczbę odrębnych lokalizacji sklepów.",
        "question": "Count the number of distinct store city.",
        "question_pl": "Policz liczbę odrębnych sklepów w mieście.",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "query_pl": "SELECT count(DISTINCT LOCATION) FROM shop"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many documents do we have?",
        "question_original_pl": "Ile mamy dokumentów?",
        "question": "How many papers do we have?",
        "question_pl": "Ile mamy dokumentów?",
        "query": "SELECT count(*) FROM Documents",
        "query_pl": "SELECT count(*) FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of documents.",
        "question_original_pl": "Policz liczbę dokumentów.",
        "question": "Count the number of papers.",
        "question_pl": "Policz liczbę dokumentów.",
        "query": "SELECT count(*) FROM Documents",
        "query_pl": "SELECT count(*) FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "List document IDs, document names, and document descriptions for all documents.",
        "question_original_pl": "Wyświetl identyfikatory, nazwy i opisy wszystkich dokumentów.",
        "question": "List paper IDs, paper names, and paper descriptions for all papers.",
        "question_pl": "Wyświetl identyfikatory, nazwy i opisy wszystkich dokumentów.",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "query_pl": "SELECT document_id ,  document_name ,  document_description FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids, names, and descriptions for all documents?",
        "question_original_pl": "Jakie są identyfikatory, nazwy i opisy wszystkich dokumentów?",
        "question": "What are the ids, names, and descriptions for all papers?",
        "question_pl": "Jakie są identyfikatory, nazwy i opisy wszystkich dokumentów?",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "query_pl": "SELECT document_id ,  document_name ,  document_description FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the document name and template id for document with description with the letter 'w' in it?",
        "question_original_pl": "Jaka jest nazwa dokumentu i identyfikator szablonu dla dokumentu z opisem zawierającym literę \"w\"?",
        "question": "What is the document name and layout id for document with description with the letter 'w' in it?",
        "question_pl": "Jaka jest nazwa dokumentu i identyfikator układu dla dokumentu z opisem zawierającym literę \"w\"?",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "query_pl": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the names and template ids for documents that contain the letter w in their description.",
        "question_original_pl": "Zwróć nazwy i identyfikatory szablonów dla dokumentów zawierających literę w w opisie.",
        "question": "Return the names and layout ids for papers that contain the letter w in their describing content.",
        "question_pl": "Zwraca nazwy i identyfikatory układu dla dokumentów zawierających literę w w opisie treści.",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "query_pl": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "question_original_pl": "Jaki jest identyfikator dokumentu, identyfikator szablonu i opis dokumentu o nazwie \"Robbin CV\"?",
        "question": "What is the paper id, layout id and describing content for paper named \"Robbin CV\"?",
        "question_pl": "Jaki jest identyfikator dokumentu, identyfikator układu i opis treści dokumentu o nazwie \"Robbin CV\"?",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "query_pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "question_original_pl": "Zwróć identyfikator dokumentu, identyfikator szablonu i opis dokumentu o nazwie Robbin CV.",
        "question": "Return the paper id, layout id, and describing details for the paper with the name Robbin CV.",
        "question_pl": "Zwróć identyfikator artykułu, identyfikator układu i szczegóły opisu artykułu o nazwie Robbin CV.",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "query_pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many different templates do all document use?",
        "question_original_pl": "Z ilu różnych szablonów korzystają wszystkie dokumenty?",
        "question": "How many different layout do all document use?",
        "question_pl": "Ilu różnych układów używają wszystkie dokumenty?",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "query_pl": "SELECT count(DISTINCT template_id) FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of different templates used for documents.",
        "question_original_pl": "Policz liczbę różnych szablonów używanych dla dokumentów.",
        "question": "Count the number of different layout used for text files.",
        "question_pl": "Policz liczbę różnych układów używanych dla plików tekstowych.",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "query_pl": "SELECT count(DISTINCT template_id) FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many documents are using the template with type code 'PPT'?",
        "question_original_pl": "Ile dokumentów korzysta z szablonu o kodzie typu \"PPT\"?",
        "question": "How many text files are using the layout with type code 'PPT'?",
        "question_pl": "Ile plików tekstowych używa układu z kodem typu \"PPT\"?",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "query_pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  \"PPT\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of documents that use the PPT template type.",
        "question_original_pl": "Policz liczbę dokumentów korzystających z szablonu typu PPT.",
        "question": "Count the number of text files that use the PPT template type.",
        "question_pl": "Policz liczbę plików tekstowych korzystających z szablonu typu PPT.",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "query_pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  \"PPT\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template ids and number of documents using each template.",
        "question_original_pl": "Pokaż wszystkie identyfikatory szablonów i liczbę dokumentów korzystających z każdego szablonu.",
        "question": "Show all layout ids and number of text files using each layout.",
        "question_pl": "Pokaż wszystkie identyfikatory układów i liczbę plików tekstowych korzystających z każdego układu.",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "query_pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are all different template ids used for documents, and how many times were each of them used?",
        "question_original_pl": "Jakie są różne identyfikatory szablonów używane w dokumentach i ile razy użyto każdego z nich?",
        "question": "What are all different layout ids used for papers, and how many times were each of them used?",
        "question_pl": "Jakie są różne identyfikatory układu używane w dokumentach i ile razy użyto każdego z nich?",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "query_pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the id and type code for the template used by the most documents?",
        "question_original_pl": "Jaki jest identyfikator i kod typu szablonu używanego przez większość dokumentów?",
        "question": "What is the id and type for the layout used by the most papers?",
        "question_pl": "Jaki jest identyfikator i typ układu używanego przez większość gazet?",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the id and type code of the template that is used for the greatest number of documents.",
        "question_original_pl": "Zwróć identyfikator i kod typu szablonu, który jest używany w największej liczbie dokumentów.",
        "question": "Return the id and type of the layout that is used for the greatest number of papers.",
        "question_pl": "Zwróć identyfikator i typ układu, który jest używany dla największej liczby dokumentów.",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show ids for all templates that are used by more than one document.",
        "question_original_pl": "Pokaż identyfikatory wszystkich szablonów, które są używane przez więcej niż jeden dokument.",
        "question": "Show ids for all layouts that are used by more than one text file.",
        "question_pl": "Pokaż identyfikatory wszystkich układów, które są używane przez więcej niż jeden plik tekstowy.",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "query_pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the template ids of any templates used in more than a single document?",
        "question_original_pl": "Jakie są identyfikatory szablonów używanych w więcej niż jednym dokumencie?",
        "question": "What are the template ids of any templates used in more than a single paper?",
        "question_pl": "Jakie są identyfikatory szablonów używanych w więcej niż jednym dokumencie?",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "query_pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show ids for all templates not used by any document.",
        "question_original_pl": "Pokaż identyfikatory wszystkich szablonów nieużywanych przez żaden dokument.",
        "question": "Show ids for all templates not used by any text file.",
        "question_pl": "Pokaż identyfikatory wszystkich szablonów nieużywanych przez żaden plik tekstowy.",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "query_pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids for templates that are not used in any documents?",
        "question_original_pl": "Jakie są identyfikatory szablonów, które nie są używane w żadnych dokumentach?",
        "question": "What are the ids for layout that are not used in any papers?",
        "question_pl": "Jakie są identyfikatory układu, które nie są używane w żadnych dokumentach?",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "query_pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many templates do we have?",
        "question_original_pl": "Ile mamy szablonów?",
        "question": "How many layout do we have?",
        "question_pl": "Ile mamy układów?",
        "query": "SELECT count(*) FROM Templates",
        "query_pl": "SELECT count(*) FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of templates.",
        "question_original_pl": "Policz liczbę szablonów.",
        "question": "Count the number of layout.",
        "question_pl": "Policz liczbę układów.",
        "query": "SELECT count(*) FROM Templates",
        "query_pl": "SELECT count(*) FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show template ids, version numbers, and template type codes for all templates.",
        "question_original_pl": "Pokaż identyfikatory szablonów, numery wersji i kody typów szablonów dla wszystkich szablonów.",
        "question": "Show layout ids, version numbers, and layout type for all layout.",
        "question_pl": "Pokaż identyfikatory układu, numery wersji i typ układu dla wszystkich układów.",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "query_pl": "SELECT template_id ,  version_number ,  template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids, version numbers, and type codes for each template?",
        "question_original_pl": "Jakie są identyfikatory, numery wersji i kody typów dla każdego szablonu?",
        "question": "What are the ids, edition numbers, and type name for each layout?",
        "question_pl": "Jakie są identyfikatory, numery wydań i nazwy typów dla każdego układu?",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "query_pl": "SELECT template_id ,  version_number ,  template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all distinct template type codes for all templates.",
        "question_original_pl": "Pokaż wszystkie odrębne kody typów szablonów dla wszystkich szablonów.",
        "question": "Show all distinct layout type names for all layout.",
        "question_pl": "Pokaż wszystkie odrębne nazwy typów układu dla wszystkich układów.",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "query_pl": "SELECT DISTINCT template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the different template type codes?",
        "question_original_pl": "Jakie są różne kody typów szablonów?",
        "question": "What are the different layout type names?",
        "question_pl": "Jakie są różne nazwy typów układu?",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "query_pl": "SELECT DISTINCT template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids of templates with template type code PP or PPT?",
        "question_original_pl": "Jakie są identyfikatory szablonów z kodem typu szablonu PP lub PPT?",
        "question": "What are the ids of layout with layout type code PP or PPT?",
        "question_pl": "Jakie są identyfikatory układu z kodem typu układu PP lub PPT?",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "query_pl": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the ids of templates that have the code PP or PPT.",
        "question_original_pl": "Zwraca identyfikatory szablonów z kodem PP lub PPT.",
        "question": "Return the ids of layout that have the code PP or PPT.",
        "question_pl": "Zwraca identyfikatory layoutów z kodem PP lub PPT.",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "query_pl": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many templates have template type code CV?",
        "question_original_pl": "Ile szablonów ma kod CV typu szablonu?",
        "question": "How many layout have template type code CV?",
        "question_pl": "Ile układów ma kod szablonu CV?",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "query_pl": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of templates of the type CV.",
        "question_original_pl": "Policz liczbę szablonów typu CV.",
        "question": "Count the number of layout of the type CV.",
        "question_pl": "Policz liczbę układów typu CV.",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "query_pl": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the version number and template type code for the template with version number later than 5?",
        "question_original_pl": "Jaki jest numer wersji i kod typu szablonu dla szablonu z numerem wersji późniejszym niż 5?",
        "question": "What is the edition number and layout type for the layout with edition number later than 5?",
        "question_pl": "Jaki jest numer wydania i typ układu dla układu z numerem wydania późniejszym niż 5?",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "query_pl": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "question_original_pl": "Zwróć numery wersji i kody typów szablonów z numerem wersji większym niż 5.",
        "question": "Return the edition numbers and layout type names of layout with a edition number greater than 5.",
        "question_pl": "Zwróć numery edycji i nazwy typów układów z numerem edycji większym niż 5.",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "query_pl": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template type codes and number of templates for each.",
        "question_original_pl": "Pokaż wszystkie kody typów szablonów i liczbę szablonów dla każdego z nich.",
        "question": "Show all layout type codes and number of layout for each.",
        "question_pl": "Pokaż wszystkie kody typów układów i liczbę układów dla każdego z nich.",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "query_pl": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the different template type codes, and how many templates correspond to each?",
        "question_original_pl": "Jakie są różne kody typów szablonów i ile szablonów odpowiada każdemu z nich?",
        "question": "What are the different layout type, and how many layout correspond to each?",
        "question_pl": "Jakie są różne typy układów i ile układów odpowiada każdemu z nich?",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "query_pl": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Which template type code has most number of templates?",
        "question_original_pl": "Który kod typu szablonu ma największą liczbę szablonów?",
        "question": "Which layout type code has most number of layout?",
        "question_pl": "Który kod typu układu ma największą liczbę układów?",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the type code of the template type that the most templates belong to.",
        "question_original_pl": "Zwraca kod typu szablonu, do którego należy większość szablonów.",
        "question": "Return the type name of the layout type that the most layout belong to.",
        "question_pl": "Zwraca nazwę typu układu, do którego należy większość układów.",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template type codes with less than three templates.",
        "question_original_pl": "Pokaż wszystkie kody typów szablonów z mniej niż trzema szablonami.",
        "question": "Show all layout types with less than three layouts.",
        "question_pl": "Pokaż wszystkie typy układów z mniej niż trzema układami.",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the codes of template types that have fewer than 3 templates?",
        "question_original_pl": "Jakie są kody typów szablonów, które mają mniej niż 3 szablony?",
        "question": "What are the names of layout types that have fewer than 3 layouts?",
        "question_pl": "Jak nazywają się typy układów, które mają mniej niż 3 układy?",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "query_pl": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What the smallest version number and its template type code?",
        "question_original_pl": "Jaki jest najmniejszy numer wersji i kod typu szablonu?",
        "question": "What the smallest edition number and its layout type code?",
        "question_pl": "Jaki jest najmniejszy numer wydania i jego kod typu układu?",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "query_pl": "SELECT min(Version_Number) ,  template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the lowest version number, along with its corresponding template type code.",
        "question_original_pl": "Zwróć najniższy numer wersji wraz z odpowiadającym mu kodem typu szablonu.",
        "question": "Return the lowest edition number, along with its corresponding layout type code.",
        "question_pl": "Zwróć najniższy numer edycji wraz z odpowiadającym mu kodem typu układu.",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "query_pl": "SELECT min(Version_Number) ,  template_type_code FROM Templates"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the template type code of the template used by document with the name \"Data base\"?",
        "question_original_pl": "Jaki jest kod typu szablonu używanego przez dokument o nazwie \"Baza danych\"?",
        "question": "What is the layout type code of the layout used by layout with the name \"Data base\"?",
        "question_pl": "Jaki jest kod typu układu używanego przez układ o nazwie \"Baza danych\"?",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Baza danych\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the template type code of the template that is used by a document named Data base.",
        "question_original_pl": "Zwraca kod typu szablonu używanego przez dokument o nazwie Data base.",
        "question": "Return the layout type code of the layout that is used by a text file named Data base.",
        "question_pl": "Zwraca kod typu układu używanego przez plik tekstowy o nazwie Data base.",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Baza danych\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all document names using templates with template type code BK.",
        "question_original_pl": "Pokaż wszystkie nazwy dokumentów używające szablonów z kodem typu szablonu BK.",
        "question": "Show all text file names using layout with layout type code BK.",
        "question_pl": "Pokaż wszystkie nazwy plików tekstowych przy użyciu układu z kodem typu układu BK.",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "query_pl": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the names of documents that use templates with the code BK?",
        "question_original_pl": "Jakie są nazwy dokumentów, które używają szablonów z kodem BK?",
        "question": "What are the names of papers that use layouts with the code BK?",
        "question_pl": "Jak nazywają się papiery, które używają układów z kodem BK?",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "query_pl": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template type codes and the number of documents using each type.",
        "question_original_pl": "Pokaż wszystkie kody typów szablonów i liczbę dokumentów korzystających z każdego typu.",
        "question": "Show all layout type names and the number of papers using each type.",
        "question_pl": "Pokaż wszystkie nazwy typów układu i liczbę dokumentów korzystających z każdego typu.",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "query_pl": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the different template type codes, and how many documents use each type?",
        "question_original_pl": "Jakie są różne kody typów szablonów i ile dokumentów korzysta z każdego typu?",
        "question": "What are the different layout types, and how many papers use each type?",
        "question_pl": "Jakie są różne typy układów i ile dokumentów korzysta z każdego z nich?",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "query_pl": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Which template type code is used by most number of documents?",
        "question_original_pl": "Który kod typu szablonu jest używany przez największą liczbę dokumentów?",
        "question": "Which layout type is used by most number of text files?",
        "question_pl": "Który typ układu jest używany przez największą liczbę plików tekstowych?",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the code of the template type that is most commonly used in documents.",
        "question_original_pl": "Zwróć kod typu szablonu, który jest najczęściej używany w dokumentach.",
        "question": "Return the code of the layout type that is most commonly used in text files.",
        "question_pl": "Zwróć kod typu układu, który jest najczęściej używany w plikach tekstowych.",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template type codes that are not used by any document.",
        "question_original_pl": "Pokaż wszystkie kody typów szablonów, które nie są używane przez żaden dokument.",
        "question": "Show all layout types that are not used by any text file.",
        "question_pl": "Pokaż wszystkie typy układów, które nie są używane przez żaden plik tekstowy.",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "query_pl": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the codes of template types that are not used for any document?",
        "question_original_pl": "Jakie są kody typów szablonów, które nie są używane w żadnym dokumencie?",
        "question": "What are the names of layout types that are not used for any text file?",
        "question_pl": "Jakie są nazwy typów układu, które nie są używane dla żadnego pliku tekstowego?",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "query_pl": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all template type codes and descriptions.",
        "question_original_pl": "Pokaż wszystkie kody i opisy typów szablonów.",
        "question": "Show all layout type names and describing details.",
        "question_pl": "Pokaż wszystkie nazwy typów układów i szczegóły opisu.",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "query_pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the type codes and descriptions for all template types?",
        "question_original_pl": "Jakie są kody typów i opisy dla wszystkich typów szablonów?",
        "question": "What are the type names and describing details for all layout types?",
        "question_pl": "Jakie są nazwy typów i szczegóły opisujące wszystkie typy układów?",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "query_pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the template type descriptions for template type code \"AD\".",
        "question_original_pl": "Jaki jest opis typu szablonu dla kodu typu szablonu \"AD\".",
        "question": "What is the layout type describing content for layout type code \"AD\".",
        "question_pl": "Jaki jest typ układu opisujący zawartość dla kodu typu układu \"AD\".",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "query_pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the template type description of the template type with the code AD.",
        "question_original_pl": "Zwróć opis typu szablonu z kodem AD.",
        "question": "Return the layout type describing content of the layout type with the code AD.",
        "question_pl": "Zwróć typ układu opisujący zawartość typu układu z kodem AD.",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "query_pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the template type code for template type description \"Book\".",
        "question_original_pl": "Jaki jest kod typu szablonu dla opisu typu szablonu \"Książka\".",
        "question": "What is the layout type name for layout type description \"Book\".",
        "question_pl": "Jaka jest nazwa typu układu dla opisu typu układu \"Książka\".",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "query_pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Książka\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the type code of the template type with the description \"Book\".",
        "question_original_pl": "Zwróć kod typu szablonu z opisem \"Książka\".",
        "question": "Return the type of the layout type with the description \"Book\".",
        "question_pl": "Zwróć typ układu z opisem \"Książka\".",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "query_pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Książka\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the distinct template type descriptions for the templates ever used by any document?",
        "question_original_pl": "Jakie są odrębne opisy typów szablonów dla szablonów kiedykolwiek używanych w jakimkolwiek dokumencie?",
        "question": "What are the distinct layout type descriptions for the layouts ever used by any text file?",
        "question_pl": "Jakie są różne opisy typów układów dla układów kiedykolwiek używanych przez dowolny plik tekstowy?",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "query_pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the different descriptions for templates that have been used in a document.",
        "question_original_pl": "Zwróć różne opisy szablonów, które zostały użyte w dokumencie.",
        "question": "Return the different describing content for layouts that have been used in a text file.",
        "question_pl": "Zwróć różne treści opisujące układy, które zostały użyte w pliku tekstowym.",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "query_pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the template ids with template type description \"Presentation\".",
        "question_original_pl": "Jakie są identyfikatory szablonów z opisem typu szablonu \"Prezentacja\".",
        "question": "What are the layout ids with layout type describing content \"Presentation\".",
        "question_pl": "Jakie są identyfikatory układu z typem układu opisującym zawartość \"Prezentacja\".",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "query_pl": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Prezentacja\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the ids corresponding to templates with the description 'Presentation'.",
        "question_original_pl": "Zwróć identyfikatory odpowiadające szablonom z opisem \"Prezentacja\".",
        "question": "Return the ids corresponding to layouts with the describing content 'Presentation'.",
        "question_pl": "Zwróć identyfikatory odpowiadające layoutom z opisującą zawartością \"Prezentacja\".",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "query_pl": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Prezentacja\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many paragraphs in total?",
        "question_original_pl": "Ile masz w sumie akapitów?",
        "question": "How many paragraphs in total?",
        "question_pl": "Ile masz w sumie akapitów?",
        "query": "SELECT count(*) FROM Paragraphs",
        "query_pl": "SELECT count(*) FROM Paragraphs"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of paragraphs.",
        "question_original_pl": "Policz liczbę akapitów.",
        "question": "Count the number of paragraphs.",
        "question_pl": "Policz liczbę akapitów.",
        "query": "SELECT count(*) FROM Paragraphs",
        "query_pl": "SELECT count(*) FROM Paragraphs"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "How many paragraphs for the document with name 'Summer Show'?",
        "question_original_pl": "Ile akapitów zawiera dokument o nazwie \"Summer Show\"?",
        "question": "How many paragraphs for the text file with name 'Summer Show'?",
        "question_pl": "Ile akapitów zawiera plik tekstowy o nazwie \"Summer Show\"?",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "query_pl": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  \"Summer Show\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Count the number of paragraphs in the document named 'Summer Show'.",
        "question_original_pl": "Policz liczbę akapitów w dokumencie o nazwie \"Summer Show\".",
        "question": "Count the number of paragraphs in the text file named 'Summer Show'.",
        "question_pl": "Policz liczbę akapitów w pliku tekstowym o nazwie \"Summer Show\".",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "query_pl": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  \"Summer Show\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show paragraph details for paragraph with text 'Korea'.",
        "question_original_pl": "Pokaż szczegóły akapitu dla akapitu z tekstem \"Korea\".",
        "question": "Show paragraph details for paragraph with text 'Korea'.",
        "question_pl": "Pokaż szczegóły akapitu dla akapitu z tekstem \"Korea\".",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'",
        "query_pl": "select other_details from paragraphs where paragraph_text like 'korea'"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the details for the paragraph that includes the text 'Korea'?",
        "question_original_pl": "Jakie są szczegóły akapitu zawierającego tekst \"Korea\"?",
        "question": "What are the details for the paragraph that includes the text 'Korea'?",
        "question_pl": "Jakie są szczegóły akapitu zawierającego tekst \"Korea\"?",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'",
        "query_pl": "select other_details from paragraphs where paragraph_text like 'korea'"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "question_original_pl": "Pokaż wszystkie identyfikatory akapitów i teksty dla dokumentu o nazwie \"Witaj w Nowym Jorku\".",
        "question": "Show all paragraph ids and content for the text file with name 'Welcome to NY'.",
        "question_pl": "Wyświetl identyfikatory wszystkich akapitów i zawartość pliku tekstowego o nazwie \"Witaj w Nowym Jorku\".",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "query_pl": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  \"Witamy w Nowym Jorku\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "question_original_pl": "Jakie są identyfikatory i teksty akapitów w dokumencie zatytułowanym \"Witaj w Nowym Jorku\"?",
        "question": "What are the ids and content of paragraphs in the text file titled 'Welcome to NY'?",
        "question_pl": "Jakie są identyfikatory i zawartość akapitów w pliku tekstowym zatytułowanym \"Witaj w Nowym Jorku\"?",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "query_pl": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  \"Witamy w Nowym Jorku\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all paragraph texts for the document \"Customer reviews\".",
        "question_original_pl": "Pokaż wszystkie akapity dla dokumentu \"Opinie klientów\".",
        "question": "Show all paragraph content for the text file \"Customer reviews\".",
        "question_pl": "Pokaż całą zawartość akapitu dla pliku tekstowego \"Opinie klientów\".",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "query_pl": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Opinie klientów\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "question_original_pl": "Jakie są teksty akapitów dla dokumentu o nazwie \"Opinie klientów\"?",
        "question": "What are the paragraph content for the text file with the name 'Customer reviews'?",
        "question_pl": "Jaka jest zawartość akapitu w pliku tekstowym o nazwie \"Opinie klientów\"?",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "query_pl": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Opinie klientów\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "question_original_pl": "Pokaż wszystkie identyfikatory dokumentów i liczbę akapitów w każdym z nich. Uporządkuj według identyfikatora dokumentu.",
        "question": "Show all paper ids and the number of paragraphs in each text file. Order by paper id.",
        "question_pl": "Pokaż wszystkie identyfikatory artykułów i liczbę akapitów w każdym pliku tekstowym. Uporządkuj według identyfikatora artykułu.",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "query_pl": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "question_original_pl": "Zwróć różne identyfikatory dokumentów wraz z liczbą akapitów odpowiadających każdemu z nich, uporządkowane według identyfikatora.",
        "question": "Return the different paper ids along with the number of paragraphs corresponding to each, ordered by id.",
        "question_pl": "Zwróć różne identyfikatory artykułów wraz z liczbą paragrafów odpowiadających każdemu z nich, uporządkowane według identyfikatora.",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "query_pl": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show all document ids, names and the number of paragraphs in each document.",
        "question_original_pl": "Pokaż wszystkie identyfikatory dokumentów, nazwy i liczbę akapitów w każdym dokumencie.",
        "question": "Show all text file ids, names and the number of paragraphs in each paper.",
        "question_pl": "Pokaż wszystkie identyfikatory plików tekstowych, nazwy i liczbę akapitów w każdym dokumencie.",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "query_pl": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "question_original_pl": "Jakie są identyfikatory i nazwy każdego dokumentu, a także liczba akapitów w każdym z nich?",
        "question": "What are the ids and names of each paper, as well as the number of paragraphs in each?",
        "question_pl": "Jakie są identyfikatory i nazwy każdego artykułu, a także liczba akapitów w każdym z nich?",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "query_pl": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "List all document ids with at least two paragraphs.",
        "question_original_pl": "Wymień wszystkie identyfikatory dokumentów z co najmniej dwoma akapitami.",
        "question": "List all name ids with at least two paragraphs.",
        "question_pl": "Wymień wszystkie identyfikatory z co najmniej dwoma akapitami.",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids of documents that have 2 or more paragraphs?",
        "question_original_pl": "Jakie są identyfikatory dokumentów, które mają 2 lub więcej akapitów?",
        "question": "What are the ids of text files that have 2 or more paragraphs?",
        "question_pl": "Jakie są identyfikatory plików tekstowych, które mają 2 lub więcej akapitów?",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the document id and name with greatest number of paragraphs?",
        "question_original_pl": "Jaki jest identyfikator i nazwa dokumentu z największą liczbą akapitów?",
        "question": "What is the text file id and name with greatest number of paragraphs?",
        "question_pl": "Jaki jest identyfikator i nazwa pliku tekstowego z największą liczbą akapitów?",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the id and name of the document with the most paragraphs.",
        "question_original_pl": "Zwróć identyfikator i nazwę dokumentu z największą liczbą akapitów.",
        "question": "Return the id and name of the paper with the most paragraphs.",
        "question_pl": "Zwróć identyfikator i nazwę artykułu z największą liczbą akapitów.",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the document id with least number of paragraphs?",
        "question_original_pl": "Jaki jest identyfikator dokumentu z najmniejszą liczbą akapitów?",
        "question": "What is the paper id with least number of paragraphs?",
        "question_pl": "Jaki jest identyfikator artykułu z najmniejszą liczbą akapitów?",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Return the id of the document with the fewest paragraphs.",
        "question_original_pl": "Zwróć identyfikator dokumentu z najmniejszą liczbą akapitów.",
        "question": "Return the id of the paper with the fewest paragraphs.",
        "question_pl": "Zwróć identyfikator artykułu z najmniejszą liczbą akapitów.",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What is the document id with 1 to 2 paragraphs?",
        "question_original_pl": "Jaki jest identyfikator dokumentu zawierającego od 1 do 2 akapitów?",
        "question": "What is the paper id with 1 to 2 paragraphs?",
        "question_pl": "Jaki jest identyfikator artykułu z 1-2 akapitami?",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Give the ids of documents that have between one and two paragraphs.",
        "question_original_pl": "Podaj identyfikatory dokumentów zawierających od jednego do dwóch akapitów.",
        "question": "Give the ids of text files that have between one and two paragraphs.",
        "question_pl": "Podaj identyfikatory plików tekstowych zawierających od jednego do dwóch akapitów.",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_pl": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "question_original_pl": "Pokaż identyfikator dokumentu z tekstem akapitu \"Brazylia\" i \"Irlandia\".",
        "question": "Show the paper id with paragraph text 'Brazil' and 'Ireland'.",
        "question_pl": "Pokaż identyfikator dokumentu z tekstem akapitu \"Brazylia\" i \"Irlandia\".",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "query_pl": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Brazylia\" INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Irlandia\""
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "question_original": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "question_original_pl": "Jakie są identyfikatory dokumentów zawierających tekst akapitu \"Brazylia\" i \"Irlandia\"?",
        "question": "What are the ids of text files that contain the paragraph text 'Brazil' and 'Ireland'?",
        "question_pl": "Jakie są identyfikatory plików tekstowych zawierających tekst akapitu \"Brazylia\" i \"Irlandia\"?",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "query_pl": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Brazylia\" INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  \"Irlandia\""
    },
    {
        "db_id": "course_teach",
        "question_original": "How many teachers are there?",
        "question_original_pl": "Ilu jest nauczycieli?",
        "question": "How many instructors are there?",
        "question_pl": "Ilu jest instruktorów?",
        "query": "SELECT count(*) FROM teacher",
        "query_pl": "SELECT count(*) FROM teacher"
    },
    {
        "db_id": "course_teach",
        "question_original": "What is the total count of teachers?",
        "question_original_pl": "Jaka jest całkowita liczba nauczycieli?",
        "question": "What is the total count of faculties?",
        "question_pl": "Jaka jest całkowita liczba wydziałów?",
        "query": "SELECT count(*) FROM teacher",
        "query_pl": "SELECT count(*) FROM teacher"
    },
    {
        "db_id": "course_teach",
        "question_original": "List the names of teachers in ascending order of age.",
        "question_original_pl": "Wymień nazwiska nauczycieli w kolejności rosnącej według wieku.",
        "question": "List the names of faculties in ascending order of age.",
        "question_pl": "Wymień nazwy wydziałów w kolejności rosnącej według wieku.",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "query_pl": "SELECT Name FROM teacher ORDER BY Age ASC"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers ordered by ascending age?",
        "question_original_pl": "Jak nazywają się nauczyciele uporządkowani według rosnącego wieku?",
        "question": "What are the names of the faculties ordered by ascending age?",
        "question_pl": "Jak nazywają się wydziały uporządkowane według rosnącego wieku?",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "query_pl": "SELECT Name FROM teacher ORDER BY Age ASC"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the age and hometown of teachers?",
        "question_original_pl": "W jakim wieku i z jakiego miasta pochodzą nauczyciele?",
        "question": "What are the age and birthplace of instructors?",
        "question_pl": "Jaki jest wiek i miejsce urodzenia instruktorów?",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "query_pl": "SELECT Age ,  Hometown FROM teacher"
    },
    {
        "db_id": "course_teach",
        "question_original": "What is the age and hometown of every teacher?",
        "question_original_pl": "Jaki jest wiek i miejsce zamieszkania każdego nauczyciela?",
        "question": "What is the age and birthplace of every instructor?",
        "question_pl": "Jaki jest wiek i miejsce urodzenia każdego instruktora?",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "query_pl": "SELECT Age ,  Hometown FROM teacher"
    },
    {
        "db_id": "course_teach",
        "question_original": "List the name of teachers whose hometown is not \"Little Lever Urban District\".",
        "question_original_pl": "Wymień nazwiska nauczycieli, których rodzinnym miastem nie jest Little Lever Urban District.",
        "question": "List the name of faculties whose birthplace is not \"Little Lever Urban District\".",
        "question_pl": "Wymień nazwy wydziałów, których miejscem urodzenia nie jest \"Dzielnica miejska Little Lever\".",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban District\"",
        "query_pl": "select name from teacher where hometown != \"dzielnica miejska little lever\""
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?",
        "question_original_pl": "Jak nazywają się nauczyciele, których rodzinnym miastem nie jest Little Lever Urban District?",
        "question": "What are the names of the faculties whose birthplace is not \"Little Lever Urban District\"?",
        "question_pl": "Jak nazywają się wydziały, których miejscem urodzenia nie jest \"Dzielnica miejska Little Lever\"?",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban District\"",
        "query_pl": "select name from teacher where hometown != \"dzielnica miejska little lever\""
    },
    {
        "db_id": "course_teach",
        "question_original": "Show the name of teachers aged either 32 or 33?",
        "question_original_pl": "Pokaż nazwiska nauczycieli w wieku 32 lub 33 lat?",
        "question": "Show the name of faculties aged either 32 or 33?",
        "question_pl": "Pokaż nazwę wydziału w wieku 32 lub 33 lat?",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "query_pl": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers who are aged either 32 or 33?",
        "question_original_pl": "Jak nazywają się nauczyciele, którzy mają 32 lub 33 lata?",
        "question": "What are the names of the instructors who are aged either 32 or 33?",
        "question_pl": "Jak nazywają się instruktorzy, którzy mają 32 lub 33 lata?",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "query_pl": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33"
    },
    {
        "db_id": "course_teach",
        "question_original": "What is the hometown of the youngest teacher?",
        "question_original_pl": "Jakie jest rodzinne miasto najmłodszego nauczyciela?",
        "question": "What is the birthplace of the youngest instructor?",
        "question_pl": "Jakie jest miejsce urodzenia najmłodszego instruktora?",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "query_pl": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1"
    },
    {
        "db_id": "course_teach",
        "question_original": "Where is the youngest teacher from?",
        "question_original_pl": "Skąd pochodzi najmłodszy nauczyciel?",
        "question": "Where is the youngest instructor from?",
        "question_pl": "Skąd pochodzi najmłodszy instruktor?",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "query_pl": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show different hometown of teachers and the number of teachers from each hometown.",
        "question_original_pl": "Pokaż różne miasta rodzinne nauczycieli i liczbę nauczycieli z każdego miasta.",
        "question": "Show different birthplace of instructors and the number of instructors from each birthplace.",
        "question_pl": "Pokaż różne miejsca urodzenia instruktorów i liczbę instruktorów z każdego miejsca urodzenia.",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "query_pl": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown"
    },
    {
        "db_id": "course_teach",
        "question_original": "For each hometown, how many teachers are there?",
        "question_original_pl": "Ilu nauczycieli jest w każdym rodzinnym mieście?",
        "question": "For each birthplace, how many instructors are there?",
        "question_pl": "Ilu instruktorów przypada na każde miejsce urodzenia?",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "query_pl": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown"
    },
    {
        "db_id": "course_teach",
        "question_original": "List the most common hometown of teachers.",
        "question_original_pl": "Wymień najczęstsze miasta rodzinne nauczycieli.",
        "question": "List the most common birthplace of instructors.",
        "question_pl": "Wymień najczęstsze miejsca urodzenia instruktorów.",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "course_teach",
        "question_original": "What is the most commmon hometowns for teachers?",
        "question_original_pl": "Jakie są najczęstsze miasta rodzinne nauczycieli?",
        "question": "What is the most commmon birthplaces for faculties?",
        "question_pl": "Jakie jest najczęstsze miejsce narodzin wydziałów?",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show the hometowns shared by at least two teachers.",
        "question_original_pl": "Pokaż miasta rodzinne przynajmniej dwóch nauczycieli.",
        "question": "Show the birthplaces shared by at least two faculties.",
        "question_pl": "Wskaż miejsca urodzenia wspólne dla co najmniej dwóch wydziałów.",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the towns from which at least two teachers come from?",
        "question_original_pl": "Z jakich miast pochodzi co najmniej dwóch nauczycieli?",
        "question": "What are the towns from which at least two instructors come from?",
        "question_pl": "Z jakich miast pochodzi co najmniej dwóch instruktorów?",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show names of teachers and the courses they are arranged to teach.",
        "question_original_pl": "Pokaż nazwiska nauczycieli i kursy, które mają prowadzić.",
        "question": "Show names of instructors and the curriculums they are arranged to teach.",
        "question_pl": "Pokaż nazwiska instruktorów i programy nauczania, których nauczają.",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID"
    },
    {
        "db_id": "course_teach",
        "question_original": "What is the name of each teacher and what course they teach?",
        "question_original_pl": "Jak nazywa się każdy nauczyciel i jakiego przedmiotu uczy?",
        "question": "What is the name of each faculty and what curriculum they teach?",
        "question_pl": "Jak nazywa się każdy wydział i jakiego programu nauczania naucza?",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "question_original_pl": "Pokaż nazwiska nauczycieli i kursy, których uczą, w rosnącej kolejności alfabetycznej od nazwiska nauczyciela.",
        "question": "Show names of faculties and the curriculums they are arranged to teach in ascending alphabetical order of the faculty's name.",
        "question_pl": "Pokaż nazwy wydziałów i programy nauczania, których nauczają, w rosnącej kolejności alfabetycznej od nazwy wydziału.",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "question_original_pl": "Jak nazywają się nauczyciele i kursy, których uczą, w rosnącej kolejności alfabetycznej według nazwiska nauczyciela?",
        "question": "What are the names of the faculties and the curriculums they teach in ascending alphabetical order by the name of the faculty?",
        "question_pl": "Jak nazywają się wydziały i programy nauczania, których nauczają, w rosnącej kolejności alfabetycznej według nazwy wydziału?",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "query_pl": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show the name of the teacher for the math course.",
        "question_original_pl": "Pokaż imię i nazwisko nauczyciela przedmiotu matematyka.",
        "question": "Show the name of the faculty for the math curriculum.",
        "question_pl": "Pokaż nazwisko wykładowcy programu nauczania matematyki.",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "query_pl": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Matematyka\""
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the people who teach math courses?",
        "question_original_pl": "Jak nazywają się osoby prowadzące kursy matematyki?",
        "question": "What are the names of the people who teach math?",
        "question_pl": "Jak nazywają się ludzie, którzy uczą matematyki?",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "query_pl": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Matematyka\""
    },
    {
        "db_id": "course_teach",
        "question_original": "Show names of teachers and the number of courses they teach.",
        "question_original_pl": "Pokaż nazwiska nauczycieli i liczbę prowadzonych przez nich kursów.",
        "question": "Show names of faculties and the number of curriculums they teach.",
        "question_pl": "Pokaż nazwy wydziałów i liczbę programów nauczania, których nauczają.",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers and how many courses do they teach?",
        "question_original_pl": "Jak nazywają się nauczyciele i ile kursów prowadzą?",
        "question": "What are the names of the instructors and how many curriculums do they teach?",
        "question_pl": "Jak nazywają się instruktorzy i ile programów nauczania prowadzą?",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name"
    },
    {
        "db_id": "course_teach",
        "question_original": "Show names of teachers that teach at least two courses.",
        "question_original_pl": "Pokaż nazwiska nauczycieli, którzy prowadzą co najmniej dwa kursy.",
        "question": "Show names of instructors that teach at least two curriculums.",
        "question_pl": "Pokaż nazwiska instruktorów, którzy uczą co najmniej dwóch programów nauczania.",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers who teach at least two courses?",
        "question_original_pl": "Jak nazywają się nauczyciele, którzy prowadzą co najmniej dwa kursy?",
        "question": "What are the names of the faculties who teach at least two curriculums?",
        "question_pl": "Jak nazywają się wydziały, na których prowadzone są co najmniej dwa programy nauczania?",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "course_teach",
        "question_original": "List the names of teachers who have not been arranged to teach courses.",
        "question_original_pl": "Wymień nazwiska nauczycieli, którzy nie zostali wyznaczeni do prowadzenia kursów.",
        "question": "List the names of instructors who have not been arranged to teach curriculums.",
        "question_pl": "Wymień nazwiska instruktorów, którzy nie zostali wyznaczeni do prowadzenia programów nauczania.",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "query_pl": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)"
    },
    {
        "db_id": "course_teach",
        "question_original": "What are the names of the teachers whose courses have not been arranged?",
        "question_original_pl": "Jakie są nazwiska nauczycieli, których kursy nie zostały zorganizowane?",
        "question": "What are the names of the instructors whose curriculums have not been arranged?",
        "question_pl": "Jakie są nazwiska instruktorów, których programy nauczania nie zostały ułożone?",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "query_pl": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)"
    },
    {
        "db_id": "museum_visit",
        "question_original": "How many visitors below age 30 are there?",
        "question_original_pl": "Ilu jest odwiedzających w wieku poniżej 30 lat?",
        "question": "How many guests below age 30 are there?",
        "question_pl": "Ilu jest gości w wieku poniżej 30 lat?",
        "query": "SELECT count(*) FROM visitor WHERE age  <  30",
        "query_pl": "SELECT count(*) FROM visitor WHERE age  <  30"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "question_original_pl": "Znajdź nazwiska odwiedzających, których poziom członkostwa jest wyższy niż 4, i uporządkuj wyniki według poziomu od wysokiego do niskiego.",
        "question": "Find the names of the guests whose membership level is higher than 4, and order the results by the level from high to low.",
        "question_pl": "Znajdź nazwiska gości, których poziom członkostwa jest wyższy niż 4 i uporządkuj wyniki według poziomu od wysokiego do niskiego.",
        "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "query_pl": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What is the average age of the visitors whose membership level is not higher than 4?",
        "question_original_pl": "Jaki jest średni wiek odwiedzających, których poziom członkostwa nie jest wyższy niż 4?",
        "question": "What is the average age of the guests whose membership level is not higher than 4?",
        "question_pl": "Jaki jest średni wiek gości, których poziom członkostwa nie jest wyższy niż 4?",
        "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "query_pl": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "question_original_pl": "Znajdź nazwę i poziom członkostwa odwiedzających, których poziom członkostwa jest wyższy niż 4, i posortuj według ich wieku od starszych do młodszych.",
        "question": "Find the name and membership level of the guests whose membership level is higher than 4, and sort by their age from old to young.",
        "question_pl": "Znajdź imię i nazwisko oraz poziom członkostwa gości, których poziom członkostwa jest wyższy niż 4, a następnie posortuj ich według wieku od starszych do młodszych.",
        "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "query_pl": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the id and name of the museum that has the most staff members?",
        "question_original_pl": "Znajdź identyfikator i nazwę muzeum, które ma najwięcej pracowników?",
        "question": "Find the id and name of the museum that has the most workers?",
        "question_pl": "Znajdź identyfikator i nazwę muzeum, które zatrudnia najwięcej pracowników?",
        "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "query_pl": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the average number of staff working for the museums that were open before 2009.",
        "question_original_pl": "Znajdź średnią liczbę pracowników zatrudnionych w muzeach otwartych przed 2009 rokiem.",
        "question": "Find the average number of worker working for the museums that were open before 2009.",
        "question_pl": "Znajdź średnią liczbę pracowników zatrudnionych w muzeach otwartych przed 2009 rokiem.",
        "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "query_pl": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What are the opening year and staff number of the museum named Plaza Museum?",
        "question_original_pl": "Jaki jest rok otwarcia i liczba pracowników muzeum o nazwie Plaza Museum?",
        "question": "What are the opening year and worker number of the museum named Plaza Museum?",
        "question_pl": "Jaki jest rok otwarcia i numer pracownika muzeum o nazwie Plaza Museum?",
        "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "query_pl": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  \"Muzeum Plaza\""
    },
    {
        "db_id": "museum_visit",
        "question_original": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "question_original_pl": "znajdź nazwy muzeów, które zatrudniają więcej pracowników niż minimalna liczba pracowników wszystkich muzeów otwartych po 2010 roku.",
        "question": "find the names of museums which have more worker than the minimum worker number of all museums opened after 2010.",
        "question_pl": "znajdź nazwy muzeów, które mają więcej pracowników niż minimalna liczba pracowników wszystkich muzeów otwartych po 2010 roku.",
        "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "query_pl": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)"
    },
    {
        "db_id": "museum_visit",
        "question_original": "find the id, name and age for visitors who visited some museums more than once.",
        "question_original_pl": "Znajdź identyfikator, imię i nazwisko oraz wiek odwiedzających, którzy odwiedzili niektóre muzea więcej niż raz.",
        "question": "find the id, name and age for guests who visited some museums more than once.",
        "question_pl": "znajdź identyfikator, imię i nazwisko oraz wiek gości, którzy odwiedzili niektóre muzea więcej niż raz.",
        "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "query_pl": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "question_original_pl": "Jaki jest identyfikator, imię i nazwisko oraz poziom członkostwa odwiedzających, którzy wydali łącznie najwięcej pieniędzy na wszystkie bilety do muzeum?",
        "question": "What are the id, name and membership level of guests who have spent the largest amount of money in total in all museum tickets?",
        "question_pl": "Jaki jest identyfikator, imię i nazwisko oraz poziom członkostwa gości, którzy wydali łącznie najwięcej pieniędzy na wszystkie bilety do muzeum?",
        "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "query_pl": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What are the id and name of the museum visited most times?",
        "question_original_pl": "Jaki jest identyfikator i nazwa najczęściej odwiedzanego muzeum?",
        "question": "What are the id and name of the museum visited most times?",
        "question_pl": "Jaki jest identyfikator i nazwa najczęściej odwiedzanego muzeum?",
        "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What is the name of the museum that had no visitor yet?",
        "question_original_pl": "Jak nazywa się muzeum, które nie miało jeszcze zwiedzającego?",
        "question": "What is the name of the museum that had no tourist yet?",
        "question_pl": "Jak nazywa się muzeum, w którym nie było jeszcze turystów?",
        "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "query_pl": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the name and age of the visitor who bought the most tickets at once.",
        "question_original_pl": "Znajdź imię i nazwisko oraz wiek gościa, który kupił najwięcej biletów naraz.",
        "question": "Find the name and age of the tourist who bought the most tickets at once.",
        "question_pl": "Znajdź nazwisko i wiek turysty, który kupił najwięcej biletów na raz.",
        "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What are the average and maximum number of tickets bought in all visits?",
        "question_original_pl": "Jaka jest średnia i maksymalna liczba biletów zakupionych podczas wszystkich wizyt?",
        "question": "What are the average and maximum number of tickets bought in all guests?",
        "question_pl": "Jaka jest średnia i maksymalna liczba biletów zakupionych przez wszystkich gości?",
        "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "query_pl": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What is the total ticket expense of the visitors whose membership level is 1?",
        "question_original_pl": "Jaki jest całkowity koszt biletów dla odwiedzających, których poziom członkostwa wynosi 1?",
        "question": "What is the total ticket expense of the guests whose membership level is 1?",
        "question_pl": "Jaki jest łączny koszt biletów dla gości, których poziom członkostwa wynosi 1?",
        "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "query_pl": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1"
    },
    {
        "db_id": "museum_visit",
        "question_original": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "question_original_pl": "Jak nazywa się zwiedzający, który odwiedził zarówno muzeum otwarte przed 2009 r., jak i muzeum otwarte po 2011 r.?",
        "question": "What is the name of the tourist who visited both a museum opened before 2009 and a museum opened after 2011?",
        "question_pl": "Jak nazywa się turysta, który odwiedził zarówno muzeum otwarte przed 2009 rokiem, jak i muzeum otwarte po 2011 roku?",
        "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "query_pl": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011"
    },
    {
        "db_id": "museum_visit",
        "question_original": "Find the number of visitors who did not visit any museum opened after 2010.",
        "question_original_pl": "Znajdź liczbę odwiedzających, którzy nie odwiedzili żadnego muzeum otwartego po 2010 roku.",
        "question": "Find the number of guests who did not visit any museum opened after 2010.",
        "question_pl": "Znajdź liczbę gości, którzy nie odwiedzili żadnego muzeum otwartego po 2010 roku.",
        "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "query_pl": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)"
    },
    {
        "db_id": "museum_visit",
        "question_original": "How many museums were opened after 2013 or before 2008?",
        "question_original_pl": "Ile muzeów zostało otwartych po 2013 lub przed 2008 rokiem?",
        "question": "How many museums were opened after 2013 or before 2008?",
        "question_pl": "Ile muzeów zostało otwartych po 2013 lub przed 2008 rokiem?",
        "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "query_pl": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the total number of players.",
        "question_original_pl": "Znajdź całkowitą liczbę graczy.",
        "question": "Find the total number of participants.",
        "question_pl": "Znajdź całkowitą liczbę uczestników.",
        "query": "SELECT count(*) FROM players",
        "query_pl": "SELECT count(*) FROM players"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many players are there?",
        "question_original_pl": "Ilu jest graczy?",
        "question": "How many participants are there?",
        "question_pl": "Ilu jest uczestników?",
        "query": "SELECT count(*) FROM players",
        "query_pl": "SELECT count(*) FROM players"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the total number of matches.",
        "question_original_pl": "Znajdź całkowitą liczbę dopasowań.",
        "question": "Find the total number of competitions.",
        "question_pl": "Znajdź całkowitą liczbę konkursów.",
        "query": "SELECT count(*) FROM matches",
        "query_pl": "SELECT count(*) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "Count the number of matches.",
        "question_original_pl": "Policz liczbę dopasowań.",
        "question": "Count the number of competitions.",
        "question_pl": "Policz liczbę zawodów.",
        "query": "SELECT count(*) FROM matches",
        "query_pl": "SELECT count(*) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "List the first name and birth date of all players from the country with code USA.",
        "question_original_pl": "Wymień imię i datę urodzenia wszystkich graczy z kraju z kodem USA.",
        "question": "List the given name and birth date of all participants from the country with code USA.",
        "question_pl": "Wymień imię i nazwisko oraz datę urodzenia wszystkich uczestników z kraju z kodem USA.",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "query_pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  \"USA\""
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the first names and birth dates of players from the USA?",
        "question_original_pl": "Jakie są imiona i daty urodzenia zawodników z USA?",
        "question": "What are the given names and birth dates of participants from the USA?",
        "question_pl": "Jakie są imiona i daty urodzenia uczestników z USA?",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "query_pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  \"USA\""
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the average age of losers and winners of all matches.",
        "question_original_pl": "Znajdź średni wiek przegranych i zwycięzców wszystkich meczów.",
        "question": "Find the average age of losers and winners of all games.",
        "question_pl": "Znajdź średni wiek przegranych i zwycięzców wszystkich gier.",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "query_pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the average ages of losers and winners across matches?",
        "question_original_pl": "Jaki jest średni wiek przegranych i zwycięzców w poszczególnych meczach?",
        "question": "What are the average ages of losers and winners across games?",
        "question_pl": "Jaki jest średni wiek przegranych i zwycięzców w poszczególnych grach?",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "query_pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the average rank of winners in all matches.",
        "question_original_pl": "Znajdź średnią pozycję zwycięzców we wszystkich meczach.",
        "question": "Find the average rank of winners in all games.",
        "question_pl": "Znajdź średnią rangę zwycięzców we wszystkich grach.",
        "query": "SELECT avg(winner_rank) FROM matches",
        "query_pl": "SELECT avg(winner_rank) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the average rank for winners in all matches?",
        "question_original_pl": "Jaka jest średnia pozycja zwycięzców we wszystkich meczach?",
        "question": "What is the average rank for winners in all competitions?",
        "question_pl": "Jaka jest średnia pozycja zwycięzców we wszystkich konkursach?",
        "query": "SELECT avg(winner_rank) FROM matches",
        "query_pl": "SELECT avg(winner_rank) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the highest rank of losers in all matches.",
        "question_original_pl": "Znajdź najwyższy ranking przegranych we wszystkich meczach.",
        "question": "Find the highest rank of losers in all competitions.",
        "question_pl": "Znajdź najwyższy ranking przegranych we wszystkich zawodach.",
        "query": "SELECT min(loser_rank) FROM matches",
        "query_pl": "SELECT min(loser_rank) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the best rank of losers across all matches?",
        "question_original_pl": "Jaki jest najlepszy ranking przegranych we wszystkich meczach?",
        "question": "What is the best rank of losers across all contest?",
        "question_pl": "Jaka jest najlepsza ranga przegranych we wszystkich konkursach?",
        "query": "SELECT min(loser_rank) FROM matches",
        "query_pl": "SELECT min(loser_rank) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "find the number of distinct country codes of all players.",
        "question_original_pl": "znajdź liczbę różnych kodów krajów wszystkich graczy.",
        "question": "find the number of distinct State codes of all participants.",
        "question_pl": "znajdź liczbę różnych kodów stanu wszystkich uczestników.",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "query_pl": "SELECT count(DISTINCT country_code) FROM players"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many distinct countries do players come from?",
        "question_original_pl": "Z ilu różnych krajów pochodzą gracze?",
        "question": "How many distinct States do participants come from?",
        "question_pl": "Z ilu różnych państw pochodzą uczestnicy?",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "query_pl": "SELECT count(DISTINCT country_code) FROM players"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the number of distinct name of losers.",
        "question_original_pl": "Znajdź liczbę różnych nazw przegranych.",
        "question": "Find the number of distinct name of losers.",
        "question_pl": "Znajdź liczbę różnych nazw przegranych.",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "query_pl": "SELECT count(DISTINCT loser_name) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many different loser names are there?",
        "question_original_pl": "Ile jest różnych imion przegranych?",
        "question": "How many different loser names are there?",
        "question_pl": "Ile jest różnych imion przegranych?",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "query_pl": "SELECT count(DISTINCT loser_name) FROM matches"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the name of tourney that has more than 10 matches.",
        "question_original_pl": "Znajdź nazwę turnieju, w którym rozegrano więcej niż 10 meczów.",
        "question": "Find the names of tourney that has more than 10 competitions.",
        "question_pl": "Znajdź nazwy turniejów, które mają więcej niż 10 zawodów.",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "query_pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the names of tournaments that have more than 10 matches?",
        "question_original_pl": "Jak nazywają się turnieje, w których odbywa się więcej niż 10 meczów?",
        "question": "What are the names of tournaments that have more than 10 competitions?",
        "question_pl": "Jak nazywają się turnieje, które mają więcej niż 10 zawodów?",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "query_pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
    },
    {
        "db_id": "wta_1",
        "question_original": "List the names of all winners who played in both 2013 and 2016.",
        "question_original_pl": "Wymień nazwiska wszystkich zwycięzców, którzy grali zarówno w 2013, jak i 2016 roku.",
        "question": "List the names of all winners who played in both 2013 and 2016.",
        "question_pl": "Wymień nazwiska wszystkich zwycięzców, którzy grali zarówno w 2013, jak i 2016 roku.",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "query_pl": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the names of players who won in both 2013 and 2016?",
        "question_original_pl": "Jakie są nazwiska graczy, którzy wygrali zarówno w 2013, jak i 2016 roku?",
        "question": "What are the names of participants who won in both 2013 and 2016?",
        "question_pl": "Jakie są nazwiska uczestników, którzy wygrali zarówno w 2013, jak i 2016 roku?",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "query_pl": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016"
    },
    {
        "db_id": "wta_1",
        "question_original": "List the number of all matches who played in years of 2013 or 2016.",
        "question_original_pl": "Wymień liczbę wszystkich meczów rozegranych w latach 2013 lub 2016.",
        "question": "List the number of all competitions who played in years of 2013 or 2016.",
        "question_pl": "Wymień liczbę wszystkich zawodników, którzy grali w latach 2013 lub 2016.",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "query_pl": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many matches were played in 2013 or 2016?",
        "question_original_pl": "Ile meczów rozegrano w 2013 lub 2016 roku?",
        "question": "How many competitions were played in 2013 or 2016?",
        "question_pl": "Ile zawodów rozegrano w 2013 lub 2016 roku?",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "query_pl": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "question_original_pl": "Jaki jest kod kraju i imię zawodniczek, które wygrały w turniejach WTA Championships i Australian Open?",
        "question": "What are the nation code and given name of the participants who won in both tourney WTA Championships and Australian Open?",
        "question_pl": "Jaki jest kod kraju i imię uczestniczek, które wygrały w obu turniejach WTA Championships i Australian Open?",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  \"Mistrzostwa WTA\" INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  \"Australian Open\""
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "question_original_pl": "Jakie są imiona i kody krajów zawodniczek, które wygrały zarówno WTA Championships, jak i Australian Open?",
        "question": "What are the given names and State codes for participants who won both the WTA Championships and the Australian Open?",
        "question_pl": "Jakie są imiona i nazwiska oraz kody stanowe uczestniczek, które wygrały zarówno WTA Championships, jak i Australian Open?",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  \"Mistrzostwa WTA\" INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  \"Australian Open\""
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the first name and country code of the oldest player.",
        "question_original_pl": "Znajdź imię i kod kraju najstarszego gracza.",
        "question": "Find the given name and State abbreviation of the oldest participant.",
        "question_pl": "Znajdź imię i nazwisko oraz skrót nazwy stanu najstarszego uczestnika.",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "query_pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the first name and country code of the oldest player?",
        "question_original_pl": "Jakie jest imię i kod kraju najstarszego gracza?",
        "question": "What is the given name and nation abbreviation of the oldest participant?",
        "question_pl": "Jakie jest imię i skrót nazwy kraju najstarszego uczestnika?",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "query_pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "List the first and last name of all players in the order of birth date.",
        "question_original_pl": "Wymień imiona i nazwiska wszystkich graczy w kolejności od daty urodzenia.",
        "question": "List the given and family name of all participants in the order of birth date.",
        "question_pl": "Wymień imiona i nazwiska wszystkich uczestników w kolejności od daty urodzenia.",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "query_pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the full names of all players, sorted by birth date?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska wszystkich graczy, posortowane według daty urodzenia?",
        "question": "What are the full names of all participants, sorted by birth date?",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich uczestników, posortowane według daty urodzenia?",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "query_pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "question_original_pl": "Wymień imię i nazwisko wszystkich graczy, którzy są leworęczni / lewonożni w kolejności daty urodzenia.",
        "question": "List the given and family name of all participants who are left / L hand in the order of birth date.",
        "question_pl": "Wymień imiona i nazwiska wszystkich uczestników, którzy są leworęczni / leworęczni, w kolejności daty urodzenia.",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "query_pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  \"L\" ORDER BY birth_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the full names of all left handed players, in order of birth date?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska wszystkich leworęcznych graczy, w kolejności od daty urodzenia?",
        "question": "What are the full names of all left handed participants, in order of birth date?",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich leworęcznych uczestników, w kolejności od daty urodzenia?",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "query_pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  \"L\" ORDER BY birth_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the first name and country code of the player who did the most number of tours.",
        "question_original_pl": "Znajdź imię i nazwisko oraz kod kraju gracza, który odbył najwięcej tras koncertowych.",
        "question": "Find the given name and nation abbreviation of the participant who did the most number of tours.",
        "question_pl": "Znajdź imię i nazwisko oraz skrót nazwy kraju uczestnika, który odbył najwięcej podróży.",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the first name and country code of the player with the most tours?",
        "question_original_pl": "Jakie jest imię i kod kraju gracza z największą liczbą podróży?",
        "question": "What is the given name and State code of the participant with the most tours?",
        "question_pl": "Jakie jest imię i nazwisko oraz kod stanu uczestnika z największą liczbą wycieczek?",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "query_pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the year that has the most number of matches.",
        "question_original_pl": "Znajdź rok z największą liczbą dopasowań.",
        "question": "Find the year that has the most number of competitions.",
        "question_pl": "Znajdź rok, w którym odbyło się najwięcej zawodów.",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Which year had the most matches?",
        "question_original_pl": "W którym roku rozegrano najwięcej meczów?",
        "question": "Which year had the most competitions?",
        "question_pl": "Który rok miał najwięcej konkursów?",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the name and rank points of the winner who won the most times.",
        "question_original_pl": "Znajdź imię i nazwisko oraz punkty rankingowe zwycięzcy, który wygrał najwięcej razy.",
        "question": "Find the name and rank points of the winner who won the most times.",
        "question_pl": "Znajdź imię i nazwisko oraz punkty rankingowe zwycięzcy, który wygrał najwięcej razy.",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "question_original_pl": "Jak nazywa się zwycięzca, który wygrał najwięcej meczów i ile punktów rankingowych ma ten gracz?",
        "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "question_pl": "Jak nazywa się zwycięzca, który wygrał najwięcej meczów i ile punktów rankingowych ma ten gracz?",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "question_original_pl": "Znajdź nazwisko zwycięzcy, który ma najwięcej punktów rankingowych i brał udział w turnieju Australian Open.",
        "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "question_pl": "Znajdź nazwisko zwycięzcy, który ma najwięcej punktów rankingowych i brał udział w turnieju Australian Open.",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "query_pl": "SELECT winner_name FROM matches WHERE tourney_name  =  \"Australian Open\" ORDER BY winner_rank_points DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "question_original_pl": "Jak nazywa się zwycięzca z największą liczbą punktów rankingowych, który brał udział w turnieju Australian Open?",
        "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "question_pl": "Jak nazywa się zwycięzca z największą liczbą punktów rankingowych, który brał udział w turnieju Australian Open?",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "query_pl": "SELECT winner_name FROM matches WHERE tourney_name  =  \"Australian Open\" ORDER BY winner_rank_points DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "find the names of loser and winner who played in the match with greatest number of minutes.",
        "question_original_pl": "Znajdź nazwiska przegranego i zwycięzcy, którzy rozegrali w meczu największą liczbę minut.",
        "question": "find the names of loser and winner who played in the competition with greatest number of minutes.",
        "question_pl": "Znajdź nazwiska przegranego i zwycięzcy, którzy rozegrali w zawodach największą liczbę minut.",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "query_pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the names of the winner and loser who played in the longest match?",
        "question_original_pl": "Jak nazywają się zwycięzca i przegrany, którzy grali w najdłuższym meczu?",
        "question": "What are the names of the winner and loser who played in the longest competition?",
        "question_pl": "Jak nazywają się zwycięzca i przegrany, którzy grali w najdłuższych zawodach?",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "query_pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the average ranking for each player and their first name.",
        "question_original_pl": "Znajdź średni ranking dla każdego gracza i jego imienia.",
        "question": "Find the average ranking for each participant and their given name.",
        "question_pl": "Znajdź średni ranking dla każdego uczestnika i jego imienia.",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the first names of all players, and their average rankings?",
        "question_original_pl": "Jakie są imiona wszystkich graczy i ich średnie rankingi?",
        "question": "What are the given names of all participants, and their average rankings?",
        "question_pl": "Jakie są imiona wszystkich uczestników i ich średnie rankingi?",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the total ranking points for each player and their first name.",
        "question_original_pl": "Znajdź łączną liczbę punktów rankingowych dla każdego gracza i jego imię.",
        "question": "Find the total ranking points for each participant and their given name.",
        "question_pl": "Znajdź łączną liczbę punktów rankingowych dla każdego uczestnika i jego imienia.",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_pl": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the first names of all players, and their total ranking points?",
        "question_original_pl": "Jakie są imiona wszystkich graczy i ich łączna liczba punktów rankingowych?",
        "question": "What are the given names of all participants, and their total ranking points?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich uczestników oraz ich łączna liczba punktów rankingowych?",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_pl": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
    },
    {
        "db_id": "wta_1",
        "question_original": "find the number of players for each country.",
        "question_original_pl": "Znajdź liczbę graczy dla każdego kraju.",
        "question": "find the number of participants for each State.",
        "question_pl": "znajdź liczbę uczestników dla każdego stanu.",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "query_pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many players are from each country?",
        "question_original_pl": "Ilu graczy pochodzi z każdego kraju?",
        "question": "How many participants are from each State?",
        "question_pl": "Ilu uczestników pochodzi z każdego stanu?",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "query_pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
    },
    {
        "db_id": "wta_1",
        "question_original": "find the code of the country where has the greatest number of players.",
        "question_original_pl": "Znajdź kod kraju, w którym jest najwięcej graczy.",
        "question": "find the abbreviation of the State where has the greatest number of participants.",
        "question_pl": "Znajdź skrót nazwy stanu, w którym jest najwięcej uczestników.",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the code of the country with the most players?",
        "question_original_pl": "Jaki jest kod kraju z największą liczbą graczy?",
        "question": "What is the abbreviation of the nation with the most participants?",
        "question_pl": "Jaki jest skrót nazwy kraju z największą liczbą uczestników?",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the codes of countries that have more than 50 players.",
        "question_original_pl": "Znajdź kody krajów, które mają więcej niż 50 graczy.",
        "question": "Find the abbreviations of nations that have more than 50 participants.",
        "question_pl": "Znajdź skróty krajów, które mają więcej niż 50 uczestników.",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the codes of countries with more than 50 players?",
        "question_original_pl": "Jakie są kody krajów z ponad 50 graczami?",
        "question": "What are the abbreviations of nations with more than 50 participants?",
        "question_pl": "Jakie są skróty krajów z ponad 50 uczestnikami?",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "query_pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the total number of tours for each ranking date.",
        "question_original_pl": "Znajdź całkowitą liczbę podróży dla każdej daty rankingu.",
        "question": "Find the total number of trips for each ranking time.",
        "question_pl": "Znajdź całkowitą liczbę przejazdów dla każdego czasu rankingu.",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "query_pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many total tours were there for each ranking date?",
        "question_original_pl": "Ile było łącznie wycieczek dla każdej daty rankingu?",
        "question": "How many total travels were there for each ranking time?",
        "question_pl": "Ile było wszystkich podróży dla każdego czasu rankingu?",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "query_pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the number of matches happened in each year.",
        "question_original_pl": "Znajdź liczbę meczów rozegranych w każdym roku.",
        "question": "Find the number of games happened in each year.",
        "question_pl": "Znajdź liczbę meczów rozegranych w każdym roku.",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "query_pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many matches were played in each year?",
        "question_original_pl": "Ile meczów rozegrano w każdym roku?",
        "question": "How many games were played in each year?",
        "question_pl": "Ile meczów rozegrano w każdym roku?",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "query_pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the name and rank of the 3 youngest winners across all matches.",
        "question_original_pl": "Znajdź nazwisko i rangę 3 najmłodszych zwycięzców we wszystkich meczach.",
        "question": "Find the name and rank of the 3 youngest winners across all competitions.",
        "question_pl": "Znajdź nazwisko i rangę 3 najmłodszych zwycięzców we wszystkich konkursach.",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "query_pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
    },
    {
        "db_id": "wta_1",
        "question_original": "What are the names and ranks of the three youngest winners across all matches?",
        "question_original_pl": "Jakie są nazwiska i rangi trzech najmłodszych zwycięzców we wszystkich meczach?",
        "question": "What are the names and ranks of the three youngest winners across all games?",
        "question_pl": "Jakie są nazwiska i rangi trzech najmłodszych zwycięzców we wszystkich grach?",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "query_pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many different winners both participated in the WTA Championships and were left handed?",
        "question_original_pl": "Ilu różnych zwycięzców brało udział w Mistrzostwach WTA i było leworęcznych?",
        "question": "How many different winners both participated in the WTA Championships and were left handed?",
        "question_pl": "Ilu różnych zwycięzców brało udział w Mistrzostwach WTA i było leworęcznych?",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "query_pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  \"Mistrzostwa WTA\" AND winner_hand  =  \"L\""
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the number of left handed winners who participated in the WTA Championships.",
        "question_original_pl": "Znajdź liczbę leworęcznych zwycięzców, którzy wzięli udział w Mistrzostwach WTA.",
        "question": "Find the number of left handed winners who participated in the WTA Championships.",
        "question_pl": "Znajdź liczbę leworęcznych zwycięzców, którzy wzięli udział w Mistrzostwach WTA.",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "query_pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  \"Mistrzostwa WTA\" AND winner_hand  =  \"L\""
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "question_original_pl": "Znajdź imię, kod kraju i datę urodzenia zwycięzcy, który zdobył najwięcej punktów rankingowych we wszystkich meczach.",
        "question": "Find the given name, nation abbreviation and birth date of the winner who has the highest rank points in all games.",
        "question_pl": "Znajdź imię, skrót nazwy kraju i datę urodzenia zwycięzcy, który zdobył najwięcej punktów rankingowych we wszystkich grach.",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "query_pl": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "question_original_pl": "Jakie jest imię, kod kraju i data urodzenia gracza z największą liczbą punktów w rankingu zwycięzców we wszystkich meczach?",
        "question": "What is the given name, nation abbreviation, and birth date of the participant with the most winner rank points across all competitions?",
        "question_pl": "Jakie jest imię i nazwisko, skrót nazwy kraju i data urodzenia uczestnika z największą liczbą punktów rankingowych we wszystkich konkursach?",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "query_pl": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
    },
    {
        "db_id": "wta_1",
        "question_original": "Find the number of players for each hand type.",
        "question_original_pl": "Znajdź liczbę graczy dla każdego typu rozdania.",
        "question": "Find the number of participants for each hand type.",
        "question_pl": "Znajdź liczbę uczestników dla każdego typu ręki.",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "query_pl": "SELECT count(*) ,  hand FROM players GROUP BY hand"
    },
    {
        "db_id": "wta_1",
        "question_original": "How many players are there for each hand type?",
        "question_original_pl": "Ilu jest graczy dla każdego typu ręki?",
        "question": "How many participants are there for each hand type?",
        "question_pl": "Ilu jest uczestników dla każdego typu ręki?",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "query_pl": "SELECT count(*) ,  hand FROM players GROUP BY hand"
    },
    {
        "db_id": "battle_death",
        "question_original": "How many ships ended up being 'Captured'?",
        "question_original_pl": "Ile statków zostało ostatecznie \"przechwyconych\"?",
        "question": "How many vessels ended up being 'Captured'?",
        "question_pl": "Ile statków zostało ostatecznie \"przechwyconych\"?",
        "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
        "query_pl": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  \"Przechwycony\""
    },
    {
        "db_id": "battle_death",
        "question_original": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "question_original_pl": "Wymień nazwę i tonaż w kolejności alfaetycznej dla nazw.",
        "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "question_pl": "Wymień nazwę i tonaż w kolejności alfaetycznej dla nazw.",
        "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "query_pl": "SELECT name ,  tonnage FROM ship ORDER BY name DESC"
    },
    {
        "db_id": "battle_death",
        "question_original": "List the name, date and result of each battle.",
        "question_original_pl": "Wymień nazwę, datę i wynik każdej bitwy.",
        "question": "List the name, date and result of each battle.",
        "question_pl": "Wymień nazwę, datę i wynik każdej bitwy.",
        "query": "SELECT name ,  date FROM battle",
        "query_pl": "SELECT name ,  date FROM battle"
    },
    {
        "db_id": "battle_death",
        "question_original": "What is maximum and minimum death toll caused each time?",
        "question_original_pl": "Jaka jest maksymalna i minimalna liczba ofiar śmiertelnych za każdym razem?",
        "question": "What is maximum and minimum death toll caused each time?",
        "question_pl": "Jaka jest maksymalna i minimalna liczba ofiar śmiertelnych za każdym razem?",
        "query": "SELECT max(killed) ,  min(killed) FROM death",
        "query_pl": "SELECT max(killed) ,  min(killed) FROM death"
    },
    {
        "db_id": "battle_death",
        "question_original": "What is the average number of injuries caused each time?",
        "question_original_pl": "Jaka jest średnia liczba obrażeń odniesionych za każdym razem?",
        "question": "What is the average number of injuries caused each time?",
        "question_pl": "Jaka jest średnia liczba obrażeń odniesionych za każdym razem?",
        "query": "SELECT avg(injured) FROM death",
        "query_pl": "SELECT avg(injured) FROM death"
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "question_original_pl": "Jakie są sytuacje śmierci i obrażeń spowodowanych przez statek o tonażu \"t\"?",
        "question": "What are the death and hurt situations caused by the vessel with tonnage 't'?",
        "question_pl": "Jakie są sytuacje śmierci i obrażeń spowodowane przez statek o tonażu \"t\"?",
        "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "query_pl": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  \"t\""
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "question_original_pl": "Jak nazywają się i jakie są wyniki bitew, w których bułgarskim dowódcą nie jest \"Boril\"?",
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "question_pl": "Jak nazywają się i jakie są wyniki bitew, w których bułgarskim dowódcą nie jest \"Boril\"?",
        "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "query_pl": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != \"Boril\""
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "question_original_pl": "Jakie są różne identyfikatory i nazwy bitew, w których utracono okręty typu \"Brig\"?",
        "question": "What are the different ids and names of the combat that lost any 'Brig' type vessels?",
        "question_pl": "Jakie są różne identyfikatory i nazwy walk, w których utracono statki typu \"Brig\"?",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "query_pl": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  \"Brig\""
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "question_original_pl": "Jakie są identyfikatory i nazwy bitew, w których zginęło łącznie ponad 10 osób.",
        "question": "What are the ids and names of the combat that led to more than 10 people dead in total.",
        "question_pl": "Jakie są identyfikatory i nazwy walk, które doprowadziły do śmierci łącznie ponad 10 osób.",
        "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "query_pl": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10"
    },
    {
        "db_id": "battle_death",
        "question_original": "What is the ship id and name that caused most total injuries?",
        "question_original_pl": "Jaki jest identyfikator i nazwa statku, który spowodował najwięcej obrażeń?",
        "question": "What is the vessel id and name that caused most total injuries?",
        "question_pl": "Jaki jest identyfikator i nazwa statku, który spowodował najwięcej obrażeń?",
        "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "question_original_pl": "Jakie są różne nazwy bitew między bułgarskim dowódcą \"Kaloyanem\" a łacińskim dowódcą \"Baldwinem I\"?",
        "question": "What are the distinct combat names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "question_pl": "Jakie są różnice w nazwach bojowych między bułgarskim dowódcą \"Kaloyanem\" a łacińskim dowódcą \"Baldwinem I\"?",
        "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "query_pl": "SELECT name FROM battle WHERE bulgarian_commander  =  \"Kaloyan\" AND latin_commander  =  \"Baldwin I\""
    },
    {
        "db_id": "battle_death",
        "question_original": "How many different results are there for the battles?",
        "question_original_pl": "Ile jest różnych wyników bitew?",
        "question": "How many different results are there for the combats?",
        "question_pl": "Ile jest różnych wyników walki?",
        "query": "SELECT count(DISTINCT RESULT) FROM battle",
        "query_pl": "SELECT count(DISTINCT RESULT) FROM battle"
    },
    {
        "db_id": "battle_death",
        "question_original": "How many battles did not lose any ship with tonnage '225'?",
        "question_original_pl": "W ilu bitwach nie zginął żaden okręt o tonażu \"225\"?",
        "question": "How many combats did not lose any vessel with tonnage '225'?",
        "question_pl": "W ilu bitwach nie zginął żaden statek o tonażu \"225\"?",
        "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "query_pl": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  \"225\" );"
    },
    {
        "db_id": "battle_death",
        "question_original": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "question_original_pl": "Wymień nazwę i datę bitwy, w której zginął okręt o nazwie \"Lettice\" i okręt o nazwie \"HMS Atalanta\".",
        "question": "List the name and date the combat that has lost the vessel named 'Lettice' and the vessel named 'HMS Atalanta'",
        "question_pl": "Wymień nazwę i datę bitwy, w której utracono statek o nazwie \"Lettice\" i statek o nazwie \"HMS Atalanta\".",
        "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "query_pl": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  \"Lettice\" INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  \"HMS Atalanta\""
    },
    {
        "db_id": "battle_death",
        "question_original": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "question_original_pl": "Pokaż nazwy, wyniki i bułgarskich dowódców bitew, w których nie utracono żadnych okrętów w \"kanale La Manche\".",
        "question": "Show names, results and bulgarian commanders of the combats with no vessels lost in the 'English Channel'.",
        "question_pl": "Pokaż nazwy, wyniki i bułgarskich dowódców bitew, w których nie utracono żadnych statków w \"kanale La Manche\".",
        "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
        "query_pl": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  \"Kanał La Manche\""
    },
    {
        "db_id": "battle_death",
        "question_original": "What are the notes of the death events which has substring 'East'?",
        "question_original_pl": "Jakie są notatki ze zdarzeń śmierci, które mają podciąg \"Wschód\"?",
        "question": "What are the remark of the death events which has substring 'East'?",
        "question_pl": "Jakie są uwagi dotyczące zdarzeń śmierci, które mają podciąg \"Wschód\"?",
        "query": "SELECT note FROM death WHERE note LIKE '%East%'",
        "query_pl": "SELECT note FROM death WHERE note LIKE '%Wschód%'"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "what are all the addresses including line 1 and line 2?",
        "question_original_pl": "Jakie są wszystkie adresy, w tym linia 1 i linia 2?",
        "question": "what are all the addresses including line 1 and line 2?",
        "question_pl": "Jakie są wszystkie adresy, w tym linia 1 i linia 2?",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "query_pl": "SELECT line_1 ,  line_2 FROM addresses"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the first and second line for all addresses?",
        "question_original_pl": "Jaki jest pierwszy i drugi wiersz dla wszystkich adresów?",
        "question": "What is the first and second line for all addresses?",
        "question_pl": "Jaki jest pierwszy i drugi wiersz dla wszystkich adresów?",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "query_pl": "SELECT line_1 ,  line_2 FROM addresses"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many courses in total are listed?",
        "question_original_pl": "Ile kursów znajduje się na liście?",
        "question": "How many curriculums in total are listed?",
        "question_pl": "Ile programów nauczania znajduje się na liście?",
        "query": "SELECT count(*) FROM Courses",
        "query_pl": "SELECT count(*) FROM Courses"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many courses are there?",
        "question_original_pl": "Ile jest kursów?",
        "question": "How many curriculums are there?",
        "question_pl": "Ile jest programów nauczania?",
        "query": "SELECT count(*) FROM Courses",
        "query_pl": "SELECT count(*) FROM Courses"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How is the math course described?",
        "question_original_pl": "Jak opisany jest kurs matematyki?",
        "question": "How is the math curriculum described?",
        "question_pl": "Jak opisany jest program nauczania matematyki?",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "query_pl": "SELECT course_description FROM Courses WHERE course_name  =  \"matematyka\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the descriptions for all the math courses?",
        "question_original_pl": "Jakie są opisy wszystkich kursów matematycznych?",
        "question": "What are the describing content for all the math curriculums?",
        "question_pl": "Jakie treści opisują wszystkie programy nauczania matematyki?",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "query_pl": "SELECT course_description FROM Courses WHERE course_name  =  \"matematyka\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the zip code of the address in the city Port Chelsea?",
        "question_original_pl": "Jaki jest kod pocztowy adresu w mieście Port Chelsea?",
        "question": "What is the zip code of the position in the city Port Chelsea?",
        "question_pl": "Jaki jest kod pocztowy pozycji w mieście Port Chelsea?",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "query_pl": "SELECT zip_postcode FROM Addresses WHERE city  =  \"Port Chelsea\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the zip code for Port Chelsea?",
        "question_original_pl": "Jaki jest kod pocztowy dla Port Chelsea?",
        "question": "What is the zip code for Port Chelsea?",
        "question_pl": "Jaki jest kod pocztowy dla Port Chelsea?",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "query_pl": "SELECT zip_postcode FROM Addresses WHERE city  =  \"Port Chelsea\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Which department offers the most number of degrees? List department name and id.",
        "question_original_pl": "Który wydział oferuje najwięcej stopni naukowych? Wymień nazwę i identyfikator wydziału.",
        "question": "Which division offers the most number of degrees? List division name and id.",
        "question_pl": "Który wydział oferuje najwięcej stopni naukowych? Wymień nazwę i identyfikator wydziału.",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "For each department id, what is the name of the department with the most number of degrees?",
        "question_original_pl": "Jaka jest nazwa i identyfikator wydziału z największą liczbą stopni naukowych?",
        "question": "For each division id, what is the name of the division with the most number of degrees?",
        "question_pl": "Dla każdego identyfikatora dywizji, jak nazywa się dywizja z największą liczbą stopni?",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many departments offer any degree?",
        "question_original_pl": "Ile wydziałów oferuje jakikolwiek stopień naukowy?",
        "question": "How many departments offer any degree?",
        "question_pl": "Ile wydziałów oferuje jakikolwiek stopień naukowy?",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "query_pl": "SELECT count(DISTINCT department_id) FROM Degree_Programs"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many different departments offer degrees?",
        "question_original_pl": "Ile różnych wydziałów oferuje stopnie naukowe?",
        "question": "How many different departments offer degrees?",
        "question_pl": "Ile różnych wydziałów oferuje stopnie naukowe?",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "query_pl": "SELECT count(DISTINCT department_id) FROM Degree_Programs"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many different degree names are offered?",
        "question_original_pl": "Ile różnych nazw stopni jest oferowanych?",
        "question": "How many different degree names are offered?",
        "question_pl": "Ile różnych nazw stopni jest oferowanych?",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "query_pl": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many different degrees are offered?",
        "question_original_pl": "Ile różnych stopni naukowych jest oferowanych?",
        "question": "How many different degrees are offered?",
        "question_pl": "Ile różnych stopni naukowych jest oferowanych?",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "query_pl": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many degrees does the engineering department offer?",
        "question_original_pl": "Ile stopni naukowych oferuje wydział inżynierii?",
        "question": "How many degrees does the engineering division offer?",
        "question_pl": "Ile stopni oferuje wydział inżynierii?",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "query_pl": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  \"inżynier\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many degrees does the engineering department have?",
        "question_original_pl": "Ile stopni naukowych ma dział inżynierii?",
        "question": "How many degrees does the engineering department have?",
        "question_pl": "Ile stopni naukowych ma dział inżynierii?",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "query_pl": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  \"inżynier\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names and descriptions of all the sections?",
        "question_original_pl": "Jakie są nazwy i opisy wszystkich sekcji?",
        "question": "What are the names and describing contents of all the sections?",
        "question_pl": "Jakie są nazwy i opis zawartości wszystkich sekcji?",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "query_pl": "SELECT section_name ,  section_description FROM Sections"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names and descriptions for all the sections?",
        "question_original_pl": "Jakie są nazwy i opisy wszystkich sekcji?",
        "question": "What are the names and describing details for all the sections?",
        "question_pl": "Jakie są nazwy i szczegóły opisujące wszystkie sekcje?",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "query_pl": "SELECT section_name ,  section_description FROM Sections"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names and id of courses having at most 2 sections?",
        "question_original_pl": "Jakie są nazwy i identyfikatory kursów mających co najwyżej 2 sekcje?",
        "question": "What are the names and id of curriculums having at most 2 sections?",
        "question_pl": "Jakie są nazwy i identyfikatory programów nauczania mających co najwyżej 2 sekcje?",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "query_pl": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names and ids of every course with less than 2 sections?",
        "question_original_pl": "Jakie są nazwy i identyfikatory każdego kursu z mniej niż 2 sekcjami?",
        "question": "What are the names and ids of every curriculum with less than 2 sections?",
        "question_pl": "Jakie są nazwy i identyfikatory każdego programu nauczania z mniej niż 2 sekcjami?",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "query_pl": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "List the section_name in reversed lexicographical order.",
        "question_original_pl": "Wymień nazwę sekcji w odwróconym porządku leksykograficznym.",
        "question": "List the section_name in reversed lexicographical order.",
        "question_pl": "Wymień nazwę sekcji w odwróconym porządku leksykograficznym.",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "query_pl": "SELECT section_name FROM Sections ORDER BY section_name DESC"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names of the sections in reverse alphabetical order?",
        "question_original_pl": "Jak nazywają się sekcje w odwrotnej kolejności alfabetycznej?",
        "question": "What are the names of the sections in reverse alphabetical order?",
        "question_pl": "Jak nazywają się sekcje w odwrotnej kolejności alfabetycznej?",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "query_pl": "SELECT section_name FROM Sections ORDER BY section_name DESC"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the semester which most student registered in? Show both the name and the id.",
        "question_original_pl": "Na jaki semestr zarejestrowała się większość studentów? Pokaż zarówno nazwę, jak i identyfikator.",
        "question": "What is the academic session which most undergraduate registered in? Show both the name and the id.",
        "question_pl": "W jakiej sesji akademickiej zarejestrowała się większość studentów? Pokaż zarówno nazwę, jak i identyfikator.",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "For each semester, what is the name and id of the one with the most students registered?",
        "question_original_pl": "Dla każdego semestru, jaka jest nazwa i identyfikator semestru z największą liczbą zarejestrowanych studentów?",
        "question": "For each semester, what is the name and id of the one with the most undergraduate registered?",
        "question_pl": "Dla każdego semestru, jaka jest nazwa i identyfikator tego, w którym zarejestrowano najwięcej studentów?",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the description of the department whose name has the substring the computer?",
        "question_original_pl": "Jaki jest opis działu, którego nazwa zawiera podciąg komputer?",
        "question": "What is the describing details of the division whose name has the substring the computer?",
        "question_pl": "Jakie są szczegóły opisujące dział, którego nazwa ma podciąg komputer?",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "query_pl": "SELECT department_description FROM Departments WHERE department_name LIKE '%komputer%'"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the department description for the one whose name has the word computer?",
        "question_original_pl": "Jaki jest opis działu, którego nazwa zawiera słowo \"komputer\"?",
        "question": "What is the division describing details for the one whose name has the word computer?",
        "question_pl": "Jaki jest podział opisujący szczegóły dla tego, którego imię zawiera słowo komputer?",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "query_pl": "SELECT department_description FROM Departments WHERE department_name LIKE '%komputer%'"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "question_original_pl": "Kto jest zapisany na 2 programy studiów w jednym semestrze? Wymień imię, drugie imię i nazwisko oraz identyfikator.",
        "question": "Who are enrolled in 2 degree programs in one term? List the given name, middle name and family name and the id.",
        "question_pl": "Kto jest zapisany na 2 programy studiów w jednym semestrze? Wymień imię, drugie imię i nazwisko oraz identyfikator.",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "query_pl": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "question_original_pl": "Jakie są imiona, imiona średnie i nazwiska, wraz z identyfikatorami, wszystkich studentów, którzy zapisali się na 2 programy studiów w jednym semestrze?",
        "question": "What are the given, middle, and family names, along with the ids, of all undergraduates who enrolled in 2 degree programs in one term?",
        "question_pl": "Jakie są imiona, nazwiska i nazwiska rodowe, wraz z identyfikatorami, wszystkich studentów, którzy zapisali się na 2 programy studiów w jednym semestrze?",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "query_pl": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "question_original_pl": "Kto jest zapisany na studia licencjackie? Wymień imię, drugie imię, nazwisko.",
        "question": "Who is enrolled in a Bachelor degree program? List the given name, middle name, family name.",
        "question_pl": "Kto jest zapisany na studia licencjackie? Wymień imię, drugie imię, nazwisko.",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  \"Licencjat\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "question_original_pl": "Jakie są imiona, drugie imiona i nazwiska wszystkich osób zapisanych na studia licencjackie?",
        "question": "What are the given, middle, and family names for everybody enrolled in a Bachelors program?",
        "question_pl": "Jakie są imiona, nazwiska i nazwiska rodowe wszystkich osób zapisanych na studia licencjackie?",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  \"Licencjat\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Find the kind of program which most number of students are enrolled in?",
        "question_original_pl": "Znajdź rodzaj programu, na który zapisuje się najwięcej studentów?",
        "question": "Find the kind of program which most number of students are enrolled in?",
        "question_pl": "Znajdź rodzaj programu, na który zapisuje się najwięcej studentów?",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the degree summary name that has the most number of students enrolled?",
        "question_original_pl": "Jaka jest nazwa podsumowania stopnia, na który zapisało się najwięcej studentów?",
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "question_pl": "Jaka jest nazwa podsumowania stopnia, na który zapisało się najwięcej studentów?",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "question_original_pl": "Znajdź program, do którego zapisało się najwięcej studentów. Wymień zarówno identyfikator, jak i podsumowanie.",
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "question_pl": "Znajdź program, do którego zapisało się najwięcej studentów. Wymień zarówno identyfikator, jak i podsumowanie.",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the program id and the summary of the degree that has the most students enrolled?",
        "question_original_pl": "Jaki jest identyfikator programu i podsumowanie stopnia, na który zapisało się najwięcej studentów?",
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "question_pl": "Jaki jest identyfikator programu i podsumowanie stopnia, na który zapisało się najwięcej studentów?",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "question_original_pl": "Który student zapisał się najwięcej razy na dowolny program? Wymień identyfikator, imię, drugie imię, nazwisko, liczbę zapisów i identyfikator studenta.",
        "question": "Which student has enrolled for the most times in any program? List the id, given name, middle name, family name, the number of enrollments and undergraduate id.",
        "question_pl": "Który student zapisał się najwięcej razy na dowolny program? Wymień identyfikator, imię, drugie imię, nazwisko, liczbę zapisów i identyfikator licencjata.",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "question_original_pl": "Jakie jest imię, drugie imię i nazwisko, wraz z identyfikatorem i liczbą zapisów, studenta, który zapisał się najwięcej razy na dowolny program?",
        "question": "What is the given, middle, and family name, along with the id and number of enrollments, for the undergraduate who enrolled the most in any program?",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko, wraz z identyfikatorem i liczbą zapisów, studenta, który zapisał się najwięcej razy na dowolny program?",
        "query": "SELECT  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Which semesters do not have any student enrolled? List the semester name.",
        "question_original_pl": "Na które semestry nie zapisał się żaden student? Wymień nazwę semestru.",
        "question": "Which academic sessions do not have any student enrolled? List the academic session name.",
        "question_pl": "Na które sesje akademickie nie zapisał się żaden student? Wymień nazwę sesji akademickiej.",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "query_pl": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the name of the semester with no students enrolled?",
        "question_original_pl": "Jak nazywa się semestr, na który nie zapisał się żaden student?",
        "question": "What is the name of the academic session with no students enrolled?",
        "question_pl": "Jak nazywa się sesja akademicka, na którą nie zapisał się żaden student?",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "query_pl": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are all the course names of the courses which ever have students enrolled in?",
        "question_original_pl": "Jakie są nazwy wszystkich kursów, na które zapisani są studenci?",
        "question": "What are all the course names of the curriculums which ever have students enrolled in?",
        "question_pl": "Jakie są nazwy wszystkich kursów w programach nauczania, na które zapisani są studenci?",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "query_pl": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the names of all courses that have some students enrolled?",
        "question_original_pl": "Jakie są nazwy wszystkich kursów, na które zapisanych jest kilku studentów?",
        "question": "What are the names of all curriculums that have some students enrolled?",
        "question_pl": "Jak nazywają się wszystkie programy nauczania, w których uczestniczą niektórzy uczniowie?",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "query_pl": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What's the name of the course with most number of enrollments?",
        "question_original_pl": "Jak nazywa się kurs z największą liczbą zapisów?",
        "question": "What's the name of the curriculum with most number of enrollments?",
        "question_pl": "Jak nazywa się program nauczania z największą liczbą zapisów?",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the name of the course with the most students enrolled?",
        "question_original_pl": "Jak nazywa się kurs, na który zapisało się najwięcej studentów?",
        "question": "What is the name of the curriculum with the most students enrolled?",
        "question_pl": "Jak nazywa się program nauczania, w którym uczestniczy najwięcej uczniów?",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "question_original_pl": "Znajdź nazwiska studentów, którzy obecnie mieszkają w stanie Karolina Północna, ale nie zarejestrowali się na żaden program studiów.",
        "question": "Find the family name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "question_pl": "Znajdź nazwiska studentów, którzy obecnie mieszkają w stanie Karolina Północna, ale nie zarejestrowali się na żaden program studiów.",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "query_pl": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  \"Karolina Północna\" EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "question_original_pl": "Jak nazywają się studenci, którzy mieszkają w Karolinie Północnej, ale nie zarejestrowali się na żadne studia?",
        "question": "What are the family name of the students who live in North Carolina but have not registered in any degree programs?",
        "question_pl": "Jak nazywają się rodziny studentów, którzy mieszkają w Karolinie Północnej, ale nie zarejestrowali się na żadne studia?",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "query_pl": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  \"Karolina Północna\" EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Show the date and id of the transcript with at least 2 course results.",
        "question_original_pl": "Pokaż datę i identyfikator transkrypcji z co najmniej 2 wynikami kursów.",
        "question": "Show the date and id of the student record with at least 2 curriculum results.",
        "question_pl": "Pokaż datę i identyfikator rekordu studenta z co najmniej 2 wynikami programu nauczania.",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the date and id of the transcript with at least 2 courses listed?",
        "question_original_pl": "Jaka jest data i identyfikator transkryptu z wymienionymi co najmniej 2 kursami?",
        "question": "What is the date and id of the student record with at least 2 curriculums listed?",
        "question_pl": "Jaka jest data i identyfikator rekordu studenta z wymienionymi co najmniej 2 programami nauczania?",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "question_original_pl": "Jaki jest numer telefonu mężczyzny o imieniu Timmothy i nazwisku Ward?",
        "question": "What is the phone number of the man with the given name Timmothy and the family name Ward?",
        "question_pl": "Jaki jest numer telefonu mężczyzny o imieniu Timmothy i nazwisku Ward?",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "query_pl": "SELECT cell_mobile_number FROM Students WHERE first_name  =  \"Timmothy\" AND last_name  =  \"Oddział\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the mobile phone number of the student named Timothy Ward?",
        "question_original_pl": "Jaki jest numer telefonu komórkowego ucznia o imieniu Timmothy Ward?",
        "question": "What is the phone number of the student named Timothy Ward?",
        "question_pl": "Jaki jest numer telefonu ucznia o imieniu Timothy Ward?",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "query_pl": "select cell_mobile_number from students where first_name  =  \"timmothy\" and last_name  =  \"oddział\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Who is the first student to register? List the first name, middle name and last name.",
        "question_original_pl": "Kto zarejestrował się jako pierwszy? Wymień imię, drugie imię i nazwisko.",
        "question": "Who is the first student to register? List the given name, middle name and family name.",
        "question_pl": "Kto zarejestrował się jako pierwszy? Wymień imię, drugie imię i nazwisko.",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the first, middle, and last name of the first student to register?",
        "question_original_pl": "Jakie jest imię, drugie imię i nazwisko pierwszego zarejestrowanego ucznia?",
        "question": "What is the given, middle, and family name of the first student to register?",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko pierwszego zarejestrowanego ucznia?",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "question_original_pl": "Kto jest najwcześniejszym absolwentem szkoły? Wymień imię, drugie imię i nazwisko.",
        "question": "Who is the earliest graduate of the school? List the given name, middle name and family name.",
        "question_pl": "Kto jest najwcześniejszym absolwentem szkoły? Wymień imię, drugie imię i nazwisko.",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the first, middle, and last name of the earliest school graduate?",
        "question_original_pl": "Jakie jest imię, drugie imię i nazwisko najwcześniejszego absolwenta szkoły?",
        "question": "What is the given, middle, and family name of the earliest school graduate?",
        "question_pl": "Jakie jest imię, drugie imię i nazwisko najwcześniejszego absolwenta szkoły?",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "query_pl": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Whose permanent address is different from his or her current address? List his or her first name.",
        "question_original_pl": "Czyj stały adres różni się od obecnego adresu? Wymień imię tej osoby.",
        "question": "Whose permanent address is different from his or her current address? List his or her given name.",
        "question_pl": "Czyj stały adres różni się od obecnego adresu? Wymień imię i nazwisko tej osoby.",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "query_pl": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the first name of the student whose permanent address is different from his or her current one?",
        "question_original_pl": "Jakie jest imię ucznia, którego stały adres zamieszkania różni się od obecnego?",
        "question": "What is the given name of the student whose permanent address is different from his or her current one?",
        "question_pl": "Jakie jest imię i nazwisko ucznia, którego stały adres zamieszkania różni się od obecnego?",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "query_pl": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Which address holds the most number of students currently? List the address id and all lines.",
        "question_original_pl": "Pod którym adresem mieszka obecnie najwięcej studentów? Wymień identyfikator adresu i wszystkie linie.",
        "question": "Which place holds the most number of students currently? List the place id and all lines.",
        "question_pl": "Które miejsce ma obecnie największą liczbę studentów? Wymień identyfikator miejsca i wszystkie linie.",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the id, line 1, and line 2 of the address with the most students?",
        "question_original_pl": "Jaki jest identyfikator, linia 1 i linia 2 adresu z największą liczbą uczniów?",
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "question_pl": "Jaki jest identyfikator, linia 1 i linia 2 adresu z największą liczbą uczniów?",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "On average, when were the transcripts printed?",
        "question_original_pl": "Kiedy średnio wydrukowano transkrypcje?",
        "question": "On average, when were the student record printed?",
        "question_pl": "Kiedy średnio wydrukowano akta uczniów?",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "query_pl": "SELECT avg(transcript_date) FROM Transcripts"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the average transcript date?",
        "question_original_pl": "Jaka jest średnia data transkrypcji?",
        "question": "What is the average student record date?",
        "question_pl": "Jaka jest średnia data rejestracji ucznia?",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "query_pl": "SELECT avg(transcript_date) FROM Transcripts"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "When is the first transcript released? List the date and details.",
        "question_original_pl": "Kiedy zostanie opublikowana pierwsza transkrypcja? Podaj datę i szczegóły.",
        "question": "When is the first student record released? List the date and details.",
        "question_pl": "Kiedy wydano pierwszy rekord studenta? Podaj datę i szczegóły.",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "query_pl": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the earliest date of a transcript release, and what details can you tell me?",
        "question_original_pl": "Jaka jest najwcześniejsza data wydania transkrypcji i jakie szczegóły możesz mi podać?",
        "question": "What is the earliest date of a transcript release, and what particulars can you tell me?",
        "question_pl": "Jaka jest najwcześniejsza data wydania transkrypcji i jakie szczegóły możesz mi podać?",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "query_pl": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many transcripts are released?",
        "question_original_pl": "Ile transkrypcji zostało wydanych?",
        "question": "How many student record are released?",
        "question_pl": "Ile rekordów studentów zostało wydanych?",
        "query": "SELECT count(*) FROM Transcripts",
        "query_pl": "SELECT count(*) FROM Transcripts"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many transcripts are listed?",
        "question_original_pl": "Ile transkrypcji znajduje się na liście?",
        "question": "How many student records are listed?",
        "question_pl": "Ile rekordów studentów znajduje się na liście?",
        "query": "SELECT count(*) FROM Transcripts",
        "query_pl": "SELECT count(*) FROM Transcripts"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the last transcript release date?",
        "question_original_pl": "Jaka jest data wydania ostatniej transkrypcji?",
        "question": "What is the last student record release date?",
        "question_pl": "Jaka jest data wydania ostatniej płyty studenckiej?",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "query_pl": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "When was the last transcript released?",
        "question_original_pl": "Kiedy opublikowano ostatnią transkrypcję?",
        "question": "When was the last student record released?",
        "question_pl": "Kiedy została wydana ostatnia płyta studencka?",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "query_pl": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "question_original_pl": "Ile razy maksymalnie wynik zapisu na kurs może pojawić się w różnych transkrypcjach? Pokaż również identyfikator zapisu na kurs.",
        "question": "How many times at most can a curriculum enrollment result show in different student records? Also show the curriculum enrollment id.",
        "question_pl": "Ile razy maksymalnie wynik zapisu do programu nauczania może pojawić się w różnych rekordach uczniów? Pokaż również identyfikator zapisu do programu nauczania.",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "question_original_pl": "Jaka jest maksymalna liczba przypadków, w których kurs pojawia się w różnych transkrypcjach i jaki jest identyfikator zapisu na ten kurs?",
        "question": "What is the maximum number of times that a curriculum shows up in different student records and what is that curriculum's enrollment id?",
        "question_pl": "Jaka jest maksymalna liczba przypadków, w których program nauczania pojawia się w różnych rekordach studentów i jaki jest identyfikator rejestracji tego programu?",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Show the date of the transcript which shows the least number of results, also list the id.",
        "question_original_pl": "Pokaż datę transkrypcji, która pokazuje najmniejszą liczbę wyników, a także podaj identyfikator.",
        "question": "Show the date of the student record which shows the least number of results, also list the id.",
        "question_pl": "Pokaż datę rekordu studenta, który pokazuje najmniejszą liczbę wyników, a także podaj identyfikator.",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the date and id of the transcript with the least number of results?",
        "question_original_pl": "Jaka jest data i identyfikator transkrypcji z najmniejszą liczbą wyników?",
        "question": "What is the date and id of the student record with the least number of results?",
        "question_pl": "Jaka jest data i identyfikator rekordu ucznia z najmniejszą liczbą wyników?",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "question_original_pl": "Znajdź semestr, na który zapisali się zarówno studenci studiów magisterskich, jak i licencjackich.",
        "question": "Find the academic session when both Master students and Bachelor students got enrolled in.",
        "question_pl": "Znajdź sesję akademicką, w której zapisali się zarówno studenci studiów magisterskich, jak i licencjackich.",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "query_pl": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Mistrz\" INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Licencjat\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "question_original_pl": "Jaki jest numer semestru, na który zapisani byli zarówno studenci studiów magisterskich, jak i licencjackich?",
        "question": "What is the id of the academic session that had both Masters and Bachelors students enrolled?",
        "question_pl": "Jaki jest identyfikator sesji akademickiej, na którą zapisali się zarówno studenci studiów magisterskich, jak i licencjackich?",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "query_pl": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Mistrz\" INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  \"Licencjat\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "How many different addresses do the students currently live?",
        "question_original_pl": "Pod iloma różnymi adresami mieszkają obecnie uczniowie?",
        "question": "How many different places do the students currently live?",
        "question_pl": "W ilu różnych miejscach mieszkają obecnie uczniowie?",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "query_pl": "SELECT count(DISTINCT current_address_id) FROM Students"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the different addresses that have students living there?",
        "question_original_pl": "Jakie są różne adresy, pod którymi mieszkają studenci?",
        "question": "What are the different places that have students living there?",
        "question_pl": "Jakie są różne miejsca, w których mieszkają studenci?",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "query_pl": "SELECT count(DISTINCT current_address_id) FROM Students"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "List all the student details in reversed lexicographical order.",
        "question_original_pl": "Wymień wszystkie dane ucznia w odwróconym porządku leksykograficznym.",
        "question": "List all the student particulars in reversed lexicographical order.",
        "question_pl": "Wymień wszystkie dane ucznia w odwróconym porządku leksykograficznym.",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "query_pl": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What other details can you tell me about students in reverse alphabetical order?",
        "question_original_pl": "Jakie inne szczegóły możesz mi powiedzieć o uczniach w odwrotnej kolejności alfabetycznej?",
        "question": "What other particulars can you tell me about students in reverse alphabetical order?",
        "question_pl": "Jakie inne szczegóły możesz mi powiedzieć o uczniach w odwrotnej kolejności alfabetycznej?",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "query_pl": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC"
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Describe the section h.",
        "question_original_pl": "Opisz sekcję h.",
        "question": "Describe the section h.",
        "question_pl": "Opisz sekcję h.",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "query_pl": "SELECT section_description FROM Sections WHERE section_name  =  \"h\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What is the description for the section named h?",
        "question_original_pl": "Jaki jest opis sekcji o nazwie h?",
        "question": "What is the description for the section named h?",
        "question_pl": "Jaki jest opis sekcji o nazwie h?",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "query_pl": "SELECT section_description FROM Sections WHERE section_name  =  \"h\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "question_original_pl": "Znajdź imiona uczniów, którzy na stałe mieszkają w kraju Haiti lub mają numer telefonu komórkowego 09700166582 .",
        "question": "Find the given name of the students who permanently live in the country Haiti or have the phone number 09700166582.",
        "question_pl": "Znajdź imię i nazwisko uczniów, którzy na stałe mieszkają w kraju Haiti lub mają numer telefonu 09700166582.",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'",
        "query_pl": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  \"haiti\" or t1.cell_mobile_number  =  \"09700166582\""
    },
    {
        "db_id": "student_transcripts_tracking",
        "question_original": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "question_original_pl": "Jakie są imiona studentów, którzy mieszkają na Haiti na stałe lub mają numer telefonu komórkowego 09700166582 ?",
        "question": "What are the given names of the students who live in Haiti permanently or have the phone number 09700166582?",
        "question_pl": "Jakie są imiona i nazwiska studentów, którzy mieszkają na Haiti na stałe lub mają numer telefonu 09700166582?",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'",
        "query_pl": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  \"haiti\" or t1.cell_mobile_number  =  \"09700166582\""
    },
    {
        "db_id": "tvshow",
        "question_original": "List the title of all cartoons in alphabetical order.",
        "question_original_pl": "Wymień tytuły wszystkich kreskówek w kolejności alfabetycznej.",
        "question": "List the name of all animations in alphabetical order.",
        "question_pl": "Wyświetl nazwy wszystkich animacji w kolejności alfabetycznej.",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "query_pl": "SELECT Title FROM Cartoon ORDER BY title"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the titles of the cartoons sorted alphabetically?",
        "question_original_pl": "Jakie są tytuły kreskówek posortowanych alfabetycznie?",
        "question": "What are the names of the animations sorted alphabetically?",
        "question_pl": "Jak nazywają się animacje posortowane alfabetycznie?",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "query_pl": "SELECT Title FROM Cartoon ORDER BY title"
    },
    {
        "db_id": "tvshow",
        "question_original": "List all cartoon directed by \"Ben Jones\".",
        "question_original_pl": "Lista wszystkich kreskówek wyreżyserowanych przez \"Bena Jonesa\".",
        "question": "List all animation directed by \"Ben Jones\".",
        "question_pl": "Lista wszystkich animacji wyreżyserowanych przez \"Bena Jonesa\".",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the names of all cartoons directed by Ben Jones?",
        "question_original_pl": "Jak nazywają się wszystkie kreskówki wyreżyserowane przez Bena Jonesa?",
        "question": "What are the names of all animations directed by Ben Jones?",
        "question_pl": "Jak nazywają się wszystkie animacje wyreżyserowane przez Bena Jonesa?",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "How many cartoons were written by \"Joseph Kuhr\"?",
        "question_original_pl": "Ile komiksów zostało napisanych przez \"Josepha Kuhra\"?",
        "question": "How many animations were written by \"Joseph Kuhr\"?",
        "question_pl": "Ile animacji zostało napisanych przez \"Josepha Kuhra\"?",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "query_pl": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the number of cartoones written by Joseph Kuhr?",
        "question_original_pl": "Jaka jest liczba komiksów napisanych przez Josepha Kuhra?",
        "question": "What is the number of animations written by Joseph Kuhr?",
        "question_pl": "Jaka jest liczba animacji napisanych przez Josepha Kuhra?",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "query_pl": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "list all cartoon titles and their directors ordered by their air date",
        "question_original_pl": "lista wszystkich tytułów kreskówek i ich reżyserów uporządkowana według daty emisji",
        "question": "list all animation and their directors ordered by their airdate",
        "question_pl": "lista wszystkich animacji i ich reżyserów uporządkowana według daty emisji",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "query_pl": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the name and directors of all the cartoons that are ordered by air date?",
        "question_original_pl": "Jaka jest nazwa i reżyserzy wszystkich kreskówek, które są uporządkowane według daty emisji?",
        "question": "What is the name and directors of all the animation that are ordered by released date?",
        "question_pl": "Jaka jest nazwa i reżyserzy wszystkich animacji, które są uporządkowane według daty premiery?",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "query_pl": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "question_original_pl": "Wymień tytuły wszystkich kreskówek wyreżyserowanych przez \"Bena Jonesa\" lub \"Brandona Viettiego\".",
        "question": "List the name of all animation directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "question_pl": "Wymień nazwy wszystkich animacji wyreżyserowanych przez \"Bena Jonesa\" lub \"Brandona Viettiego\".",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "question_original_pl": "Jakie są tytuły wszystkich kreskówek wyreżyserowanych przez Bena Jonesa lub Brandona Viettiego?",
        "question": "What are the names of all animation directed by Ben Jones or Brandon Vietti?",
        "question_pl": "Jak nazywają się wszystkie animacje wyreżyserowane przez Bena Jonesa lub Brandona Viettiego?",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "query_pl": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "question_original_pl": "Który kraj ma najwięcej kanałów telewizyjnych? Wymień kraj i liczbę kanałów telewizyjnych, które posiada.",
        "question": "Which country has the most of TV Channels? List the country name and number of TV Channels it has.",
        "question_pl": "Który kraj ma najwięcej kanałów telewizyjnych? Wymień nazwę kraju i liczbę kanałów telewizyjnych.",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the country with the most number of TV Channels and how many does it have?",
        "question_original_pl": "Jaki jest kraj z największą liczbą kanałów telewizyjnych i ile ich ma?",
        "question": "What is the State with the most number of TV Channels and how many does it have?",
        "question_pl": "W którym państwie jest najwięcej kanałów telewizyjnych i ile ich jest?",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the number of different series names and contents in the TV Channel table.",
        "question_original_pl": "Wymień liczbę różnych nazw serii i treści w tabeli kanałów TV.",
        "question": "List the number of different serial names and contents in the TV Channel table.",
        "question_pl": "Wymień liczbę różnych nazw seriali i ich zawartość w tabeli kanałów TV.",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "query_pl": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"
    },
    {
        "db_id": "tvshow",
        "question_original": "How many different series and contents are listed in the TV Channel table?",
        "question_original_pl": "Ile różnych seriali i treści jest wymienionych w tabeli kanałów telewizyjnych?",
        "question": "How many different serial and contents are listed in the TV Channel table?",
        "question_pl": "Ile różnych seriali i treści jest wymienionych w tabeli kanałów telewizyjnych?",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "query_pl": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "question_original_pl": "Jaka jest zawartość kanału telewizyjnego o nazwie \"Sky Radio\"?",
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "question_pl": "Jaka jest zawartość kanału telewizyjnego o nazwie \"Sky Radio\"?",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_pl": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the content of the series Sky Radio?",
        "question_original_pl": "Jaka jest zawartość serialu Sky Radio?",
        "question": "What is the content of the series Sky Radio?",
        "question_pl": "Jaka jest zawartość serialu Sky Radio?",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_pl": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "question_original_pl": "Jaka jest opcja pakietu kanału telewizyjnego o nazwie \"Sky Radio\"?",
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "question_pl": "Jaka jest opcja pakietu kanału telewizyjnego o nazwie \"Sky Radio\"?",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_pl": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "question_original_pl": "Jakie są opcje pakietów kanałów telewizyjnych, których nazwy seriali to Sky Radio?",
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "question_pl": "Jakie są opcje pakietów kanałów telewizyjnych, których nazwy seriali to Sky Radio?",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_pl": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "How many TV Channel using language English?",
        "question_original_pl": "Ile kanałów telewizyjnych używa języka angielskiego?",
        "question": "How many TV Channel using language English?",
        "question_pl": "Ile kanałów telewizyjnych używa języka angielskiego?",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "query_pl": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Angielski\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "How many TV Channels use the English language?",
        "question_original_pl": "Ile kanałów telewizyjnych używa języka angielskiego?",
        "question": "How many TV Channels use the English language?",
        "question_pl": "Ile kanałów telewizyjnych używa języka angielskiego?",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "query_pl": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Angielski\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "question_original_pl": "Wymień język i najmniejszą liczbę kanałów telewizyjnych. Wymień język i liczbę kanałów telewizyjnych.",
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "question_pl": "Wymień język i najmniejszą liczbę kanałów telewizyjnych. Wymień język i liczbę kanałów telewizyjnych.",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "question_original_pl": "Jakie są języki używane przez najmniejszą liczbę kanałów telewizyjnych i ile kanałów ich używa?",
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "question_pl": "Jakie są języki używane przez najmniejszą liczbę kanałów telewizyjnych i ile kanałów ich używa?",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "tvshow",
        "question_original": "List each language and the number of TV Channels using it.",
        "question_original_pl": "Wymień każdy język i liczbę kanałów telewizyjnych, które go używają.",
        "question": "List each language and the number of TV Channels using it.",
        "question_pl": "Wymień każdy język i liczbę kanałów telewizyjnych, które go używają.",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
    },
    {
        "db_id": "tvshow",
        "question_original": "For each language, list the number of TV Channels that use it.",
        "question_original_pl": "Dla każdego języka podaj liczbę kanałów telewizyjnych, które go używają.",
        "question": "For each language, list the number of TV Channels that use it.",
        "question_pl": "Dla każdego języka podaj liczbę kanałów telewizyjnych, które go używają.",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "query_pl": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "question_original_pl": "Na jakim kanale telewizyjnym emitowana jest kreskówka \"The Rise of the Blue Beetle!\"? Wymień nazwę serii kanału telewizyjnego.",
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "question_pl": "Na jakim kanale telewizyjnym emitowana jest kreskówka \"The Rise of the Blue Beetle!\"? Wymień nazwę serii kanału telewizyjnego.",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Powstanie Niebieskiego Żuka!\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "question_original_pl": "Jak nazywa się kanał telewizyjny, na którym emitowana jest kreskówka \"Powstanie niebieskiego żuka\"?",
        "question": "What is the serial name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "question_pl": "Jak nazywa się kanał telewizyjny, na którym emitowana jest kreskówka \"Powstanie niebieskiego żuka\"?",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Powstanie Niebieskiego Żuka!\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "question_original_pl": "Wymień tytuły wszystkich kreskówek wyświetlanych na kanale telewizyjnym o nazwie \"Sky Radio\".",
        "question": "List the name of all  animations showed on TV Channel with series name \"Sky Radio\".",
        "question_pl": "Wymień nazwy wszystkich animacji wyświetlanych na kanale telewizyjnym o nazwie \"Sky Radio\".",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_pl": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "question_original_pl": "Jaki tytuł noszą wszystkie kreskówki emitowane na kanale telewizyjnym o nazwie \"Sky Radio\"?",
        "question": "What is the name of all the animations that are on the TV Channel with the series name \"Sky Radio\"?",
        "question_pl": "Jak nazywają się wszystkie animacje emitowane na kanale telewizyjnym o nazwie \"Sky Radio\"?",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_pl": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the  Episode of all TV series sorted by rating.",
        "question_original_pl": "Lista odcinków wszystkich seriali telewizyjnych posortowanych według oceny.",
        "question": "List the Episode of all TV series sorted by rating.",
        "question_pl": "Lista odcinków wszystkich seriali telewizyjnych posortowanych według oceny.",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "query_pl": "SELECT Episode FROM TV_series ORDER BY rating"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are all of the episodes ordered by ratings?",
        "question_original_pl": "Jakie są wszystkie odcinki uporządkowane według oglądalności?",
        "question": "What are all of the episodes ordered by ratings?",
        "question_pl": "Jakie są wszystkie odcinki uporządkowane według oglądalności?",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "query_pl": "SELECT Episode FROM TV_series ORDER BY rating"
    },
    {
        "db_id": "tvshow",
        "question_original": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
        "question_original_pl": "Lista 3 najwyżej ocenianych seriali telewizyjnych. Wymień odcinek i ocenę serialu telewizyjnego.",
        "question": "List top 3 highest score  TV series. List the TV series's Episode and score.",
        "question_pl": "Lista 3 najwyżej ocenianych seriali telewizyjnych. Wymień odcinek i wynik serialu telewizyjnego.",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "query_pl": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "question_original_pl": "Jakie są 3 najwyżej ocenione odcinki w tabeli seriali telewizyjnych i jakie były te oceny?",
        "question": "What are 3 most highly rated episodes in the TV series table and what were those scores?",
        "question_pl": "Jakie są 3 najwyżej ocenione odcinki w tabeli seriali telewizyjnych i jakie były te wyniki?",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "query_pl": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is minimum and maximum share of TV series?",
        "question_original_pl": "Jaki jest minimalny i maksymalny udział seriali telewizyjnych?",
        "question": "What is minimum and maximum share of TV series?",
        "question_pl": "Jaki jest minimalny i maksymalny udział seriali telewizyjnych?",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "query_pl": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the maximum and minimum share for the TV series?",
        "question_original_pl": "Jaki jest maksymalny i minimalny udział w serialu?",
        "question": "What is the maximum and minimum share for the TV series?",
        "question_pl": "Jaki jest maksymalny i minimalny udział w serialu?",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "query_pl": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "question_original_pl": "Jaka jest data emisji serialu z odcinkiem \"Miłość na całe życie\"?",
        "question": "What is the airdate of TV series with Episode \"A Love of a Lifetime\"?",
        "question_pl": "Jaka jest data emisji serialu z odcinkiem \"Miłość na całe życie\"?",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT Air_Date FROM TV_series WHERE Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "When did the episode \"A Love of a Lifetime\" air?",
        "question_original_pl": "Kiedy wyemitowano odcinek \"Miłość na całe życie\"?",
        "question": "When did the episode \"A Love of a Lifetime\" released?",
        "question_pl": "Kiedy ukazał się odcinek \"Miłość na całe życie\"?",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT Air_Date FROM TV_series WHERE Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "question_original_pl": "Jaka jest tygodniowa ranga serialu telewizyjnego z odcinkiem \"Miłość na całe życie\"?",
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "question_pl": "Jaka jest tygodniowa ranga serialu telewizyjnego z odcinkiem \"Miłość na całe życie\"?",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "question_original_pl": "Jaka jest tygodniowa ranga odcinka \"Miłość na całe życie\"?",
        "question": "What is the score per week for the episode \"A Love of a Lifetime\"?",
        "question_pl": "Jaki jest tygodniowy wynik odcinka \"Miłość na całe życie\"?",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "question_original_pl": "Jaki jest kanał telewizyjny serialu z odcinkiem \"Miłość na całe życie\"? Wymień nazwę serialu na kanale telewizyjnym.",
        "question": "What is the TV Channel of TV serial with Episode \"A Love of a Lifetime\"? List the TV Channel's serial name.",
        "question_pl": "Jaki jest kanał telewizyjny serialu telewizyjnego z odcinkiem \"Miłość na całe życie\"? Wymień nazwę serialu na kanale telewizyjnym.",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "question_original_pl": "Jak nazywa się serial z odcinkiem \"Miłość na całe życie\"?",
        "question": "What is the serial name that has the episode \"A Love of a Lifetime\"?",
        "question_pl": "Jak nazywa się serial z odcinkiem \"Miłość na całe życie\"?",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "query_pl": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"Miłość na całe życie\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
        "question_original_pl": "Lista odcinków wszystkich seriali telewizyjnych pokazywanych na kanale telewizyjnym o nazwie \"Sky Radio\".",
        "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
        "question_pl": "Lista odcinków wszystkich seriali telewizyjnych pokazywanych na kanale telewizyjnym o nazwie \"Sky Radio\".",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_pl": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the episode for the TV series named \"Sky Radio\"?",
        "question_original_pl": "Jaki jest odcinek serialu telewizyjnego o nazwie \"Sky Radio\"?",
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "question_pl": "Jaki jest odcinek serialu telewizyjnego o nazwie \"Sky Radio\"?",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_pl": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";"
    },
    {
        "db_id": "tvshow",
        "question_original": "Find the number of cartoons directed by each of the listed directors.",
        "question_original_pl": "Znajdź liczbę kreskówek wyreżyserowanych przez każdego z wymienionych reżyserów.",
        "question": "Find the number of animations directed by each of the listed directors.",
        "question_pl": "Znajdź liczbę animacji wyreżyserowanych przez każdego z wymienionych reżyserów.",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "query_pl": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by"
    },
    {
        "db_id": "tvshow",
        "question_original": "How many cartoons did each director create?",
        "question_original_pl": "Ile kreskówek stworzył każdy z reżyserów?",
        "question": "How many animations did each director create?",
        "question_pl": "Ile animacji stworzył każdy z reżyserów?",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "query_pl": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by"
    },
    {
        "db_id": "tvshow",
        "question_original": "Find the production code and channel of the most recently aired cartoon.",
        "question_original_pl": "Znajdź kod produkcji i kanał ostatnio emitowanej kreskówki.",
        "question": "Find the production number and channel of the most recently released cartoon.",
        "question_pl": "Znajdź numer produkcji i kanał ostatnio wydanej kreskówki.",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1",
        "query_pl": "select production_code ,  channel from cartoon order by original_air_date desc limit 1"
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the produdction code and channel of the most recent cartoon?",
        "question_original_pl": "Jaki jest kod produkcji i kanał najnowszej kreskówki?",
        "question": "What is the produdction number and channel of the most recent cartoon?",
        "question_pl": "Jaki jest numer produkcji i kanał najnowszej kreskówki?",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1",
        "query_pl": "select production_code ,  channel from cartoon order by original_air_date desc limit 1"
    },
    {
        "db_id": "tvshow",
        "question_original": "Find the package choice and series name of the TV channel that has high definition TV.",
        "question_original_pl": "Znajdź wybór pakietu i nazwę serii kanału telewizyjnego, który oferuje telewizję w wysokiej rozdzielczości.",
        "question": "Find the package choice and serial name of the TV channel that has HD TV.",
        "question_pl": "Znajdź wybór pakietu i nazwę seryjną kanału telewizyjnego, który ma telewizję HD.",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "query_pl": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"tak\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "question_original_pl": "Jakie są opcje pakietów i nazwy seriali dla kanału telewizyjnego obsługującego telewizję wysokiej rozdzielczości?",
        "question": "What are the package options and the name of the serial for the TV Channel that supports HD TV?",
        "question_pl": "Jakie są opcje pakietu i nazwa serialu dla kanału telewizyjnego obsługującego telewizję HD?",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "query_pl": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"tak\""
    },
    {
        "db_id": "tvshow",
        "question_original": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "question_original_pl": "Kanały telewizyjne w których krajach puszczają kreskówkę napisaną przez Todda Caseya?",
        "question": "which countries' tv channels are playing some animation written by Todd Casey?",
        "question_pl": "Kanały telewizyjne w których krajach puszczają animację napisaną przez Todda Caseya?",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_pl": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "question_original_pl": "W jakich krajach w telewizji emitowane są kreskówki, których autorem jest Todd Casey?",
        "question": "What are the State that have animations on TV that were written by Todd Casey?",
        "question_pl": "Jakie państwo ma animacje w telewizji, które zostały napisane przez Todda Caseya?",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_pl": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\""
    },
    {
        "db_id": "tvshow",
        "question_original": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "question_original_pl": "Kanały telewizyjne w których krajach nie puszczają żadnej kreskówki napisanej przez Todda Caseya?",
        "question": "which countries' tv channels are not playing any animation written by Todd Casey?",
        "question_pl": "Kanały telewizyjne w których krajach nie puszczają animacji napisanych przez Todda Caseya?",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_pl": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the countries that are not playing cartoons written by Todd Casey?",
        "question_original_pl": "Jakie kraje nie grają w kreskówki napisane przez Todda Caseya?",
        "question": "What are the States that are not playing animations written by Todd Casey?",
        "question_pl": "Jakie są Stany, w których nie odtwarzasz animacji napisanych przez Todda Caseya?",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_pl": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  \"Todd Casey\""
    },
    {
        "db_id": "tvshow",
        "question_original": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "question_original_pl": "Znajdź nazwę serii i kraj kanału telewizyjnego, który puszcza kreskówki wyreżyserowane przez Bena Jonesa i Michaela Changa?",
        "question": "Find the serial name and State of the tv channel that is playing some animation directed by Ben Jones and Michael Chang?",
        "question_pl": "Znajdź nazwę serialu i stan kanału telewizyjnego, który puszcza animację wyreżyserowaną przez Bena Jonesa i Michaela Changa?",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "query_pl": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Michael Chang\" INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Ben Jones\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "question_original_pl": "Jaka jest nazwa serii i kraj wszystkich kanałów telewizyjnych, które puszczają kreskówki wyreżyserowane przez Bena Jonesa i kreskówki wyreżyserowane przez Michaela Changa?",
        "question": "What is the serial name and nation of all TV channels that are playing animations directed by Ben Jones and animations directed by Michael Chang?",
        "question_pl": "Jaka jest nazwa serialu i kraj wszystkich kanałów telewizyjnych, które puszczają animacje wyreżyserowane przez Bena Jonesa i animacje wyreżyserowane przez Michaela Changa?",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "query_pl": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Michael Chang\" INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  \"Ben Jones\""
    },
    {
        "db_id": "tvshow",
        "question_original": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "question_original_pl": "znajdź proporcje pikseli i naród kanałów telewizyjnych, które nie używają języka angielskiego.",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "question_pl": "znajdź proporcje pikseli i naród kanałów telewizyjnych, które nie używają języka angielskiego.",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "query_pl": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != \"Angielski\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "question_original_pl": "Jaki jest współczynnik proporcji pikseli i kraj pochodzenia wszystkich kanałów telewizyjnych, które nie używają języka angielskiego?",
        "question": "What is the pixel aspect ratio and nation of origin for all TV channels that do not use English?",
        "question_pl": "Jaki jest współczynnik proporcji pikseli i kraj pochodzenia wszystkich kanałów telewizyjnych, które nie używają języka angielskiego?",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "query_pl": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != \"Angielski\""
    },
    {
        "db_id": "tvshow",
        "question_original": "find id of the tv channels that from the countries where have more than two tv channels.",
        "question_original_pl": "Znajdź identyfikatory kanałów telewizyjnych z krajów, w których są więcej niż dwa kanały telewizyjne.",
        "question": "find id of the tv channels that from the States where have more than two tv channels.",
        "question_pl": "Znajdź identyfikator kanałów telewizyjnych ze Stanów Zjednoczonych, które mają więcej niż dwa kanały telewizyjne.",
        "query": "SELECT id FROM tv_channel where country in(select country from tv_channel GROUP BY country HAVING count(*)  >  2)",
        "query_pl": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the ids of all tv channels that have more than 2 TV channels?",
        "question_original_pl": "Jakie są identyfikatory wszystkich kanałów telewizyjnych, które mają więcej niż 2 kanały telewizyjne?",
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "question_pl": "Jakie są identyfikatory wszystkich kanałów telewizyjnych, które mają więcej niż 2 kanały telewizyjne?",
        "query": "SELECT id FROM tv_channel where country in(select country from tv_channel GROUP BY country HAVING count(*)  >  2)",
        "query_pl": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2"
    },
    {
        "db_id": "tvshow",
        "question_original": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "question_original_pl": "Znajdź identyfikator kanałów telewizyjnych, które nie puszczają żadnej kreskówki wyreżyserowanej przez Bena Jonesa.",
        "question": "find the id of tv channels that do not play any animation directed by Ben Jones.",
        "question_pl": "Znajdź identyfikatory kanałów telewizyjnych, które nie puszczają żadnych animacji wyreżyserowanych przez Bena Jonesa.",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "query_pl": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\""
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "question_original_pl": "Jakie są identyfikatory kanałów telewizyjnych, które nie mają żadnych kreskówek wyreżyserowanych przez Bena Jonesa?",
        "question": "What are the ids of the TV channels that do not have any animations directed by Ben Jones?",
        "question_pl": "Jakie są identyfikatory kanałów telewizyjnych, które nie mają żadnych animacji wyreżyserowanych przez Bena Jonesa?",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "query_pl": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\""
    },
    {
        "db_id": "tvshow",
        "question_original": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "question_original_pl": "Znajdź opcję pakietu kanału telewizyjnego, który nie ma żadnej kreskówki wyreżyserowanej przez Bena Jonesa.",
        "question": "find the package option of the tv channel that do not have any animation directed by Ben Jones.",
        "question_pl": "Znajdź opcję pakietu kanału telewizyjnego, który nie ma żadnej animacji wyreżyserowanej przez Bena Jonesa.",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "query_pl": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\")"
    },
    {
        "db_id": "tvshow",
        "question_original": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "question_original_pl": "Jakie są opcje pakietów wszystkich kanałów telewizyjnych, które nie odtwarzają żadnych kreskówek wyreżyserowanych przez Bena Jonesa?",
        "question": "What are the package options of all tv channels that are not playing any animations directed by Ben Jones?",
        "question_pl": "Jakie są opcje pakietów wszystkich kanałów telewizyjnych, które nie odtwarzają żadnych animacji wyreżyserowanych przez Bena Jonesa?",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "query_pl": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  \"Ben Jones\")"
    },
    {
        "db_id": "poker_player",
        "question_original": "How many poker players are there?",
        "question_original_pl": "Ilu jest pokerzystów?",
        "question": "How many car gamers are there?",
        "question_pl": "Ilu jest graczy samochodowych?",
        "query": "SELECT count(*) FROM poker_player",
        "query_pl": "SELECT count(*) FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "Count the number of poker players.",
        "question_original_pl": "Policz liczbę pokerzystów.",
        "question": "Count the number of car gamers.",
        "question_pl": "Policz liczbę graczy samochodowych.",
        "query": "SELECT count(*) FROM poker_player",
        "query_pl": "SELECT count(*) FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "List the earnings of poker players in descending order.",
        "question_original_pl": "Wymień zarobki pokerzystów w kolejności malejącej.",
        "question": "List the earnings of poker players in descending order.",
        "question_pl": "Wymień zarobki pokerzystów w kolejności malejącej.",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "query_pl": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the earnings of poker players, ordered descending by value?",
        "question_original_pl": "Jakie są zarobki pokerzystów, uporządkowane malejąco według wartości?",
        "question": "What are the earnings of poker players, ordered descending by value?",
        "question_pl": "Jakie są zarobki pokerzystów, uporządkowane malejąco według wartości?",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "query_pl": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC"
    },
    {
        "db_id": "poker_player",
        "question_original": "List the final tables made and the best finishes of poker players.",
        "question_original_pl": "Wymień rozegrane stoły finałowe i najlepsze finisze pokerzystów.",
        "question": "List the final tables made and the best finishes of car gamers.",
        "question_pl": "Wymień stoły finałowe i najlepsze finisze graczy samochodowych.",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "query_pl": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the final tables made and best finishes for all poker players?",
        "question_original_pl": "Jak wyglądają stoły finałowe i najlepsze finisze wszystkich pokerzystów?",
        "question": "What are the final tables made and best finishes for all car gamers?",
        "question_pl": "Jak wyglądają stoły finałowe i najlepsze wyniki wszystkich graczy samochodowych?",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "query_pl": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the average earnings of poker players?",
        "question_original_pl": "Jakie są średnie zarobki pokerzystów?",
        "question": "What is the average revenues of car gamers?",
        "question_pl": "Jakie są średnie przychody graczy samochodowych?",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "query_pl": "SELECT avg(Earnings) FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the average earnings across all poker players.",
        "question_original_pl": "Zwróć średnie zarobki wszystkich pokerzystów.",
        "question": "Return the average incomes across all car gamers.",
        "question_pl": "Zwróć średnie dochody wszystkich graczy samochodowych.",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "query_pl": "SELECT avg(Earnings) FROM poker_player"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the money rank of the poker player with the highest earnings?",
        "question_original_pl": "Jaka jest ranga pieniężna pokerzysty z najwyższymi zarobkami?",
        "question": "What is the money rank of the car gamer with the highest incomes?",
        "question_pl": "Jaka jest ranga pieniężna gracza samochodowego o najwyższych dochodach?",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "query_pl": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the money rank of the player with the greatest earnings.",
        "question_original_pl": "Zwróć rangę pieniężną gracza z największymi zarobkami.",
        "question": "Return the money rank of the gamer with the greatest revenues.",
        "question_pl": "Zwróć rangę pieniężną gracza z największymi przychodami.",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "query_pl": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "question_original_pl": "Jaka jest maksymalna liczba stołów finałowych wśród pokerzystów z zarobkami poniżej 200000?",
        "question": "What is the maximum number of last tables made among car gamers with revenues less than 200000?",
        "question_pl": "Jaka jest maksymalna liczba ostatnich tabel wśród graczy samochodowych z przychodami poniżej 200000?",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "query_pl": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "question_original_pl": "Zwróć maksymalną liczbę stołów finałowych wykonanych przez wszystkich pokerzystów, którzy mają zarobki poniżej 200000.",
        "question": "Return the maximum final tables made across all car gamers who have revenues below 200000.",
        "question_pl": "Zwróć maksymalne stoły finałowe wszystkich graczy samochodowych, których przychody nie przekroczyły 200000.",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "query_pl": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of poker players?",
        "question_original_pl": "Jak nazywają się pokerzyści?",
        "question": "What are the names of car gamers?",
        "question_pl": "Jak nazywają się gracze samochodowi?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the names of all the poker players.",
        "question_original_pl": "Zwróć nazwiska wszystkich pokerzystów.",
        "question": "Return the names of all the car gamers.",
        "question_pl": "Zwróć nazwy wszystkich graczy samochodowych.",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of poker players whose earnings is higher than 300000?",
        "question_original_pl": "Jakie są nazwiska pokerzystów, których zarobki przekraczają 300000?",
        "question": "What are the names of car gamers whose incomes is higher than 300000?",
        "question_pl": "Jakie są nazwiska graczy samochodowych, których dochody przekraczają 300000?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000"
    },
    {
        "db_id": "poker_player",
        "question_original": "Give the names of poker players who have earnings above 300000.",
        "question_original_pl": "Podaj nazwiska pokerzystów, którzy mają zarobki powyżej 300000.",
        "question": "Give the names of car gamers who have revenues above 300000.",
        "question_pl": "Podaj nazwy graczy samochodowych, którzy mają przychody powyżej 300000.",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000"
    },
    {
        "db_id": "poker_player",
        "question_original": "List the names of poker players ordered by the final tables made in ascending order.",
        "question_original_pl": "Wymień nazwiska pokerzystów uporządkowane według stołów finałowych w kolejności rosnącej.",
        "question": "List the names of car gamers ordered by the final tables made in ascending order.",
        "question_pl": "Wymień nazwiska graczy samochodowych w kolejności rosnącej według stołów finałowych.",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "question_original_pl": "Jakie są nazwiska pokerzystów, uporządkowane rosnąco według liczby stołów finałowych, przy których zasiadali?",
        "question": "What are the names of car gamers, ordered ascending by the number of final tables they have made?",
        "question_pl": "Jak nazywają się gracze samochodowi, uporządkowani rosnąco według liczby stołów finałowych, które osiągnęli?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the birth date of the poker player with the lowest earnings?",
        "question_original_pl": "Jaka jest data urodzenia pokerzysty z najniższymi zarobkami?",
        "question": "What is the birth date of the car gamers with the lowest revenues?",
        "question_pl": "Jaka jest data urodzenia graczy samochodowych o najniższych przychodach?",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "query_pl": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the birth date of the poker player with the lowest earnings.",
        "question_original_pl": "Zwróć datę urodzenia pokerzysty z najniższymi zarobkami.",
        "question": "Return the birth date of the car gamers with the lowest revenues.",
        "question_pl": "Zwróć datę urodzenia gracza samochodowego z najniższymi przychodami.",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "query_pl": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the money rank of the tallest poker player?",
        "question_original_pl": "Jaka jest ranga pieniężna najwyższego pokerzysty?",
        "question": "What is the money rank of the tallest car gamer?",
        "question_pl": "Jaka jest ranga pieniężna najwyższego gracza samochodowego?",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_pl": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the money rank of the poker player with the greatest height.",
        "question_original_pl": "Zwróć rangę pieniężną pokerzysty z największą wysokością.",
        "question": "Return the money rank of the car gamer with the greatest height.",
        "question_pl": "Zwróć rangę pieniężną gracza samochodowego o największej wysokości.",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_pl": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the average earnings of poker players with height higher than 200?",
        "question_original_pl": "Jakie są średnie zarobki pokerzystów o wzroście powyżej 200?",
        "question": "What is the average revenues of car gamers with height higher than 200?",
        "question_pl": "Jakie są średnie przychody graczy samochodowych o wzroście powyżej 200?",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "query_pl": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200"
    },
    {
        "db_id": "poker_player",
        "question_original": "Give average earnings of poker players who are taller than 200.",
        "question_original_pl": "Podaj średnie zarobki pokerzystów, którzy są wyżsi niż 200.",
        "question": "Give average revenues of car gamers who are taller than 200.",
        "question_pl": "Podaj średnie przychody graczy samochodowych o wzroście powyżej 200.",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "query_pl": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of poker players in descending order of earnings?",
        "question_original_pl": "Jakie są nazwiska pokerzystów w kolejności malejących zarobków?",
        "question": "What are the names of car gamers in descending order of revenues?",
        "question_pl": "Jak nazywają się gracze samochodowi w kolejności malejących przychodów?",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the names of poker players sorted by their earnings descending.",
        "question_original_pl": "Zwróć nazwiska pokerzystów posortowane malejąco według ich zarobków.",
        "question": "Return the names of car gamers sorted by their revenues descending.",
        "question_pl": "Zwróć nazwy graczy posortowane malejąco według ich przychodów.",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "query_pl": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are different nationalities of people and the corresponding number of people from each nation?",
        "question_original_pl": "Jakie są różne narodowości ludzi i odpowiadająca im liczba osób z każdego narodu?",
        "question": "What are different country of people and the corresponding number of people from each country?",
        "question_pl": "Jakie są różne kraje ludzi i odpowiadająca im liczba osób z każdego kraju?",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality"
    },
    {
        "db_id": "poker_player",
        "question_original": "How many people are there of each nationality?",
        "question_original_pl": "Ile jest osób każdej narodowości?",
        "question": "How many people are there of each country?",
        "question_pl": "Ile osób liczy każdy kraj?",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality"
    },
    {
        "db_id": "poker_player",
        "question_original": "What is the most common nationality of people?",
        "question_original_pl": "Jaka jest najczęstsza narodowość ludzi?",
        "question": "What is the most common country of people?",
        "question_pl": "Jaki jest najczęstszy kraj ludzi?",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "Give the nationality that is most common across all people.",
        "question_original_pl": "Podaj narodowość, która jest najbardziej powszechna wśród wszystkich ludzi.",
        "question": "Give the country that is most common across all people.",
        "question_pl": "Podaj kraj, który jest najbardziej powszechny wśród wszystkich ludzi.",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the nationalities that are shared by at least two people?",
        "question_original_pl": "Jakie są narodowości, które są wspólne dla co najmniej dwóch osób?",
        "question": "What are the countries that are shared by at least two people?",
        "question_pl": "Jakie kraje są dzielone przez co najmniej dwie osoby?",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "poker_player",
        "question_original": "Return the nationalities for which there are two or more people.",
        "question_original_pl": "Zwróć narodowości, dla których istnieją dwie lub więcej osób.",
        "question": "Return the countries for which there are two or more people.",
        "question_pl": "Zwróć kraje, w których są co najmniej dwie osoby.",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "poker_player",
        "question_original": "List the names and birth dates of people in ascending alphabetical order of name.",
        "question_original_pl": "Wymień imiona i daty urodzenia osób w rosnącej kolejności alfabetycznej.",
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "question_pl": "Wymień imiona i daty urodzenia osób w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "query_pl": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "question_original_pl": "Jakie są imiona i daty urodzenia osób uporządkowanych alfabetycznie według ich imion?",
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "question_pl": "Jakie są imiona i daty urodzenia osób uporządkowanych alfabetycznie według ich imion?",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "query_pl": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC"
    },
    {
        "db_id": "poker_player",
        "question_original": "Show names of people whose nationality is not \"Russia\".",
        "question_original_pl": "Pokaż nazwiska osób, których narodowość nie jest \"rosyjska\".",
        "question": "Show names of people whose nationality is not \"Russia\".",
        "question_pl": "Pokaż nazwiska osób, których narodowość nie jest \"rosyjska\".",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "query_pl": "SELECT Name FROM people WHERE Nationality != \"Rosja\""
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of people who are not from Russia?",
        "question_original_pl": "Jak nazywają się ludzie, którzy nie pochodzą z Rosji?",
        "question": "What are the names of people who are not from Russia?",
        "question_pl": "Jak nazywają się ludzie, którzy nie pochodzą z Rosji?",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "query_pl": "SELECT Name FROM people WHERE Nationality != \"Rosja\""
    },
    {
        "db_id": "poker_player",
        "question_original": "List the names of people that are not poker players.",
        "question_original_pl": "Wymień nazwiska osób, które nie są pokerzystami.",
        "question": "List the names of people that are not car gamers.",
        "question_pl": "Wymień nazwiska osób, które nie są graczami samochodowymi.",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "query_pl": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)"
    },
    {
        "db_id": "poker_player",
        "question_original": "What are the names of people who do not play poker?",
        "question_original_pl": "Jak nazywają się ludzie, którzy nie grają w pokera?",
        "question": "What are the names of people who do not car gamer?",
        "question_pl": "Jak nazywają się ludzie, którzy nie są graczami samochodowymi?",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "query_pl": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)"
    },
    {
        "db_id": "poker_player",
        "question_original": "How many distinct nationalities are there?",
        "question_original_pl": "Ile jest różnych narodowości?",
        "question": "How many distinct countries are there?",
        "question_pl": "Ile jest różnych krajów?",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM people"
    },
    {
        "db_id": "poker_player",
        "question_original": "Count the number of different nationalities.",
        "question_original_pl": "Policz liczbę różnych narodowości.",
        "question": "Count the number of different countries.",
        "question_pl": "Policz liczbę różnych krajów.",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM people"
    },
    {
        "db_id": "voter_1",
        "question_original": "How many states are there?",
        "question_original_pl": "Ile jest stanów?",
        "question": "How many states are there?",
        "question_pl": "Ile jest stanów?",
        "query": "SELECT count(*) FROM area_code_state",
        "query_pl": "SELECT count(*) FROM area_code_state"
    },
    {
        "db_id": "voter_1",
        "question_original": "List the contestant numbers and names, ordered by contestant name descending.",
        "question_original_pl": "Wymień numery i nazwiska zawodników, uporządkowane malejąco według nazwiska zawodnika.",
        "question": "List the competitor numbers and names, ordered by competitor name descending.",
        "question_pl": "Wyświetl listę numerów i nazwisk zawodników, uporządkowaną malejąco według nazwy zawodnika.",
        "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "query_pl": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC"
    },
    {
        "db_id": "voter_1",
        "question_original": "List the vote ids, phone numbers and states of all votes.",
        "question_original_pl": "Wyświetl identyfikatory głosów, numery telefonów i stany wszystkich głosów.",
        "question": "List the vote ids, telephone numbers and states of all votes.",
        "question_pl": "Wyświetl identyfikatory głosów, numery telefonów i stany wszystkich głosów.",
        "query": "SELECT vote_id ,  phone_number ,  state FROM votes",
        "query_pl": "SELECT vote_id ,  phone_number ,  state FROM votes"
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the maximum and minimum values of area codes?",
        "question_original_pl": "Jakie są maksymalne i minimalne wartości numerów kierunkowych?",
        "question": "What are the maximum and minimum values of area codes?",
        "question_pl": "Jakie są maksymalne i minimalne wartości numerów kierunkowych?",
        "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "query_pl": "SELECT max(area_code) ,  min(area_code) FROM area_code_state"
    },
    {
        "db_id": "voter_1",
        "question_original": "What is last date created of votes from the state 'CA'?",
        "question_original_pl": "Jaka jest ostatnia data utworzenia głosów ze stanu \"CA\"?",
        "question": "What is last date created of votes from the state 'CA'?",
        "question_pl": "Jaka jest ostatnia data utworzenia głosów ze stanu \"CA\"?",
        "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "query_pl": "SELECT max(created) FROM votes WHERE state  =  \"CA\""
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "question_original_pl": "Jak nazywają się uczestnicy, których imiona nie brzmią \"Jessie Alloway\"?",
        "question": "What are the names of the participants whose names are not 'Jessie Alloway'",
        "question_pl": "Jak nazywają się uczestnicy, których nazwiska nie brzmią \"Jessie Alloway\"?",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "query_pl": "SELECT contestant_name FROM contestants WHERE contestant_name != \"Jessie Alloway\""
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the distinct states and create time of all votes?",
        "question_original_pl": "Jakie są poszczególne stany i czas utworzenia wszystkich głosów?",
        "question": "What are the distinct states and set up time of all votes?",
        "question_pl": "Jakie są poszczególne stany i czas ustawienia wszystkich głosów?",
        "query": "SELECT DISTINCT state ,  created FROM votes",
        "query_pl": "SELECT DISTINCT state ,  created FROM votes"
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "question_original_pl": "Jakie są numery i nazwiska uczestników, którzy oddali co najmniej dwa głosy?",
        "question": "What are the participant numbers and names of the participants who had at least two votes?",
        "question_pl": "Jakie są numery i nazwiska uczestników, którzy oddali co najmniej dwa głosy?",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2"
    },
    {
        "db_id": "voter_1",
        "question_original": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "question_original_pl": "Spośród wszystkich uczestników, którzy wzięli udział w głosowaniu, jaki jest numer i nazwisko uczestnika, który otrzymał najmniej głosów?",
        "question": "Of all the competitors who got voted, what is the competitor number and name of the competitor who got least votes?",
        "question_pl": "Spośród wszystkich zawodników, którzy otrzymali głosy, jaki jest numer i nazwisko zawodnika, który otrzymał najmniej głosów?",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the number of votes from state 'NY' or 'CA'?",
        "question_original_pl": "Jaka jest liczba głosów ze stanu \"NY\" lub \"CA\"?",
        "question": "What are the number of votes from nation 'NY' or 'CA'?",
        "question_pl": "Jaka jest liczba głosów z kraju \"NY\" lub \"CA\"?",
        "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "query_pl": "SELECT count(*) FROM votes WHERE state  =  \"NY\" OR state  =  \"CA\""
    },
    {
        "db_id": "voter_1",
        "question_original": "How many contestants did not get voted?",
        "question_original_pl": "Ilu uczestników nie otrzymało głosów?",
        "question": "How many competitors did not get voted?",
        "question_pl": "Ilu zawodników nie wzięło udziału w głosowaniu?",
        "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "query_pl": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )"
    },
    {
        "db_id": "voter_1",
        "question_original": "What is the area code in which the most voters voted?",
        "question_original_pl": "Jaki jest numer kierunkowy obszaru, na którym głosowało najwięcej wyborców?",
        "question": "What is the area number in which the most voters voted?",
        "question_pl": "Jaki jest numer obszaru, w którym głosowało najwięcej wyborców?",
        "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_1",
        "question_original": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "question_original_pl": "Jakie są daty utworzenia, stany i numery telefonów głosów oddanych na zawodniczkę o imieniu \"Tabatha Gehling\"?",
        "question": "What are the set up dates, states, and telephone numbers of the votes that were for the competitor named 'Tabatha Gehling'?",
        "question_pl": "Jakie są daty ustawienia, stany i numery telefonów głosów oddanych na zawodniczkę o imieniu \"Tabatha Gehling\"?",
        "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "query_pl": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  \"Tabatha Gehling\""
    },
    {
        "db_id": "voter_1",
        "question_original": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "question_original_pl": "Wymień numery kierunkowe, pod którymi głosujący oddali głosy zarówno na zawodniczkę \"Tabatha Gehling\", jak i na zawodniczkę \"Kelly Clauss\".",
        "question": "List the area codes in which voters voted both for the participant 'Tabatha Gehling' and the participant 'Kelly Clauss'.",
        "question_pl": "Wymień numery kierunkowe, pod którymi głosujący oddali głos zarówno na uczestnika \"Tabatha Gehling\", jak i na uczestnika \"Kelly Clauss\".",
        "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "query_pl": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  \"Tabatha Gehling\" INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  \"Kelly Clauss\""
    },
    {
        "db_id": "voter_1",
        "question_original": "Return the names the contestants whose names contain the substring 'Al'.",
        "question_original_pl": "Zwróć nazwiska zawodników, których nazwiska zawierają podciąg \"Al\".",
        "question": "Return the names the competitors whose names contain the substring 'Al'.",
        "question_pl": "Zwróć nazwy zawodników, których nazwy zawierają podciąg \"Al\".",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"",
        "query_pl": "select contestant_name from contestants where contestant_name like \"%al%\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of all the countries that became independent after 1950?",
        "question_original_pl": "Jak nazywają się wszystkie kraje, które uzyskały niepodległość po 1950 roku?",
        "question": "What are the names of all the States that became sovereign after 1950?",
        "question_pl": "Jak nazywają się wszystkie państwa, które uzyskały suwerenność po 1950 roku?",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "query_pl": "SELECT Name FROM country WHERE IndepYear  >  1950"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the names of the nations that were founded after 1950.",
        "question_original_pl": "Podaj nazwy państw, które powstały po 1950 roku.",
        "question": "Give the names of the nations that were founded after 1950.",
        "question_pl": "Podaj nazwy państw, które powstały po 1950 roku.",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "query_pl": "SELECT Name FROM country WHERE IndepYear  >  1950"
    },
    {
        "db_id": "world_1",
        "question_original": "How many countries have a republic as their form of government?",
        "question_original_pl": "W ilu krajach formą rządu jest republika?",
        "question": "How many nations have a republic as their form of government?",
        "question_pl": "W ilu krajach formą rządów jest republika?",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "query_pl": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republika\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many countries have governments that are republics?",
        "question_original_pl": "Ile krajów ma rządy, które są republikami?",
        "question": "How many nations have governments that are republics?",
        "question_pl": "Ile narodów ma rządy, które są republikami?",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "query_pl": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republika\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total surface area of the countries in the Caribbean region?",
        "question_original_pl": "Jaka jest łączna powierzchnia krajów w regionie Karaibów?",
        "question": "What is the total territory of the State in the Caribbean region?",
        "question_pl": "Jakie jest całkowite terytorium państwa w regionie Karaibów?",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Karaiby\""
    },
    {
        "db_id": "world_1",
        "question_original": "How much surface area do the countires in the Caribbean cover together?",
        "question_original_pl": "Jaką powierzchnię zajmują łącznie kraje Karaibów?",
        "question": "How much territory do the countires in the Caribbean cover together?",
        "question_pl": "Jak duży obszar zajmują łącznie kraje Karaibów?",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Karaiby\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which continent is Anguilla in?",
        "question_original_pl": "Na którym kontynencie leży Anguilla?",
        "question": "Which continent is Anguilla in?",
        "question_pl": "Na którym kontynencie leży Anguilla?",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "query_pl": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the continent name which Anguilla belongs to?",
        "question_original_pl": "Jak nazywa się kontynent, do którego należy Anguilla?",
        "question": "What is the continent name which Anguilla belongs to?",
        "question_pl": "Jak nazywa się kontynent, do którego należy Anguilla?",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "query_pl": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which region is the city Kabul located in?",
        "question_original_pl": "W którym regionie znajduje się miasto Kabul?",
        "question": "Which region is the city Kabul located in?",
        "question_pl": "W którym regionie znajduje się miasto Kabul?",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "query_pl": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\""
    },
    {
        "db_id": "world_1",
        "question_original": "What region is Kabul in?",
        "question_original_pl": "W jakim regionie znajduje się Kabul?",
        "question": "What region is Kabul in?",
        "question_pl": "W jakim regionie znajduje się Kabul?",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "query_pl": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which language is the most popular in Aruba?",
        "question_original_pl": "Jaki język jest najbardziej popularny na Arubie?",
        "question": "Which language is the most popular in Aruba?",
        "question_pl": "Jaki język jest najbardziej popularny na Arubie?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What language is predominantly spoken in Aruba?",
        "question_original_pl": "Jakim językiem najczęściej mówi się na Arubie?",
        "question": "What language is predominantly spoken in Aruba?",
        "question_pl": "Jakim językiem najczęściej mówi się na Arubie?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the population and life expectancies in Brazil?",
        "question_original_pl": "Jaka jest populacja i średnia długość życia w Brazylia?",
        "question": "What are the population and lifespan in Brazil?",
        "question_pl": "Jaka jest populacja i długość życia w Brazylia?",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "query_pl": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazylia\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give me Brazil's population and life expectancies.",
        "question_original_pl": "Podaj mi populację Brazylii i średnią długość życia.",
        "question": "Give me Brazil's population and lifespan.",
        "question_pl": "Podaj mi populację i długość życia Brazylii.",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "query_pl": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazylia\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the region and population of Angola?",
        "question_original_pl": "Jaki jest region i ludność Angola?",
        "question": "What are the region and number of people of Angola?",
        "question_pl": "Jaki jest region i liczba mieszkańców Angola?",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "query_pl": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\""
    },
    {
        "db_id": "world_1",
        "question_original": "What region does Angola belong to and what is its population?",
        "question_original_pl": "Do jakiego regionu należy Angola i jaka jest jego populacja?",
        "question": "What region does Angola belong to and what is its number of residents?",
        "question_pl": "Do jakiego regionu należy Angola i jaka jest jego liczba mieszkańców?",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "query_pl": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "question_original_pl": "Jaka jest średnia oczekiwana długość życia w krajach regionu Afryki Środkowej?",
        "question": "What is the average lifespan for countries in the region of Central Africa?",
        "question_pl": "Jaka jest średnia długość życia w krajach w regionie Afryka Środkowa?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Afryka Środkowa\""
    },
    {
        "db_id": "world_1",
        "question_original": "How long is the people’s average life expectancy in Central Africa?",
        "question_original_pl": "Jaka jest średnia długość życia mieszkańców Afryki Środkowej?",
        "question": "How long is the people’s average lifespan in Central Africa?",
        "question_pl": "Jaka jest średnia długość życia mieszkańców Afryki Środkowej?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Afryka Środkowa\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the name of country that has the shortest life expectancy in Asia?",
        "question_original_pl": "Jak nazywa się kraj, w którym średnia długość życia jest najkrótsza w Azji?",
        "question": "What is the name of nation that has the shortest lifespan in Asia?",
        "question_pl": "Jak nazywa się kraj, który ma najkrótszą długość życia w Azji?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\" ORDER BY LifeExpectancy LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the name of the country in Asia with the lowest life expectancy.",
        "question_original_pl": "Podaj nazwę kraju w Azji o najniższej średniej długości życia.",
        "question": "Give the name of the State in Asia with the lowest lifespan.",
        "question_pl": "Podaj nazwę państwa w Azji o najniższej długości życia.",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\" ORDER BY LifeExpectancy LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total population and maximum GNP in Asia?",
        "question_original_pl": "Jaka jest całkowita populacja i maksymalny PNB w Azja?",
        "question": "What is the total number of people and maximum GNP in Asia?",
        "question_pl": "Jaka jest łączna liczba ludności i maksymalny PKB w Azja?",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "query_pl": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many people live in Asia, and what is the largest GNP among them?",
        "question_original_pl": "Ile osób mieszka w Azji i jaki jest wśród nich największy PNB?",
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "question_pl": "Ile osób mieszka w Azji i jaki jest wśród nich największy PNB?",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "query_pl": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the average life expectancy in African countries that are republics?",
        "question_original_pl": "Jaka jest średnia długość życia w krajach afrykańskich, które są republikami?",
        "question": "What is the average lifespan in African nations that are republics?",
        "question_pl": "Jaka jest średnia długość życia w krajach afrykańskich będących republikami?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Afryka\" AND GovernmentForm  =  \"Republika\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the average life expectancy for countries in Africa which are republics?",
        "question_original_pl": "Podaj średnią długość życia w krajach Afryki, które są republikami?",
        "question": "Give the average lifespan for nations in Africa which are republics?",
        "question_pl": "Podaj średnią długość życia dla krajów w Afryce, które są republikami?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Afryka\" AND GovernmentForm  =  \"Republika\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total surface area of the continents Asia and Europe?",
        "question_original_pl": "Jaka jest łączna powierzchnia kontynentów Azji i Europy?",
        "question": "What is the total territory of the continents Asia and Europe?",
        "question_pl": "Jakie jest łączne terytorium kontynentów Azji i Europy?",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Azja\" OR Continent  =  \"Europa\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the total surface area covered by countries in Asia or Europe.",
        "question_original_pl": "Podaj całkowitą powierzchnię zajmowaną przez kraje Azji lub Europy.",
        "question": "Give the total territory covered by countries in Asia or Europe.",
        "question_pl": "Podaj całkowite terytorium zajmowane przez kraje w Azji lub Europie.",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "query_pl": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Azja\" OR Continent  =  \"Europa\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many people live in Gelderland district?",
        "question_original_pl": "Ile osób żyje w powiecie Gelderland?",
        "question": "How many people live in Gelderland district?",
        "question_pl": "Ile osób żyje w powiecie Gelderland?",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "query_pl": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total population of Gelderland district?",
        "question_original_pl": "Jaka jest całkowita populacja Gelderland district?",
        "question": "What is the total number of residents of Gelderland district?",
        "question_pl": "Jaka jest łączna liczba mieszkańców okręg Gelderland?",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "query_pl": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the average GNP and total population in all nations whose government is US territory?",
        "question_original_pl": "Jaki jest średni PNB i całkowita populacja we wszystkich krajach, których rządem jest terytorium USA?",
        "question": "What is the average GNP and total number of people in all States whose government is US territory?",
        "question_pl": "Jaki jest średni PNB i całkowita liczba ludności we wszystkich stanach, których rząd jest terytorium USA?",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "query_pl": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Terytorium USA\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the mean GNP and total population of nations which are considered US territory.",
        "question_original_pl": "Podaj średni PNB i całkowitą populację krajów, które są uważane za terytorium USA.",
        "question": "Give the mean GNP and total number of people of nations which are considered US territory.",
        "question_pl": "Podaj średni PNB i całkowitą liczbę ludności krajów, które są uważane za terytorium USA.",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "query_pl": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Terytorium USA\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many unique languages are spoken in the world?",
        "question_original_pl": "Ile unikalnych języków jest używanych na świecie?",
        "question": "How many unique languages are spoken in the world?",
        "question_pl": "Ile unikalnych języków jest używanych na świecie?",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "query_pl": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the number of distinct languages used around the world?",
        "question_original_pl": "Jaka jest liczba różnych języków używanych na całym świecie?",
        "question": "What is the number of distinct languages used around the world?",
        "question_pl": "Jaka jest liczba różnych języków używanych na całym świecie?",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "query_pl": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage"
    },
    {
        "db_id": "world_1",
        "question_original": "How many type of governments are in Africa?",
        "question_original_pl": "Ile rodzajów rządów jest w Afryce?",
        "question": "How many type of governments are in Africa?",
        "question_pl": "Ile rodzajów rządów jest w Afryce?",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "query_pl": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Afryka\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many different forms of governments are there in Africa?",
        "question_original_pl": "Ile różnych form rządów istnieje w Afryce?",
        "question": "How many different types of governments are there in Africa?",
        "question_pl": "Ile różnych rodzajów rządów istnieje w Afryce?",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "query_pl": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Afryka\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total number of languages used in Aruba?",
        "question_original_pl": "Jaka jest łączna liczba języków używanych w kraju Aruba?",
        "question": "What is the total number of languages used in Aruba?",
        "question_pl": "Jaka jest łączna liczba języków używanych w kraju Aruba?",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "query_pl": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many languages are spoken in Aruba?",
        "question_original_pl": "Ile języków jest używanych w kraju Aruba?",
        "question": "How many languages are spoken in Aruba?",
        "question_pl": "Ile języków jest używanych w kraju Aruba?",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "query_pl": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many official languages does Afghanistan have?",
        "question_original_pl": "Ile języków urzędowych ma Afganistan?",
        "question": "How many official languages does Afghanistan have?",
        "question_pl": "Ile języków urzędowych ma Afganistan?",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "query_pl": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afganistan\" AND IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many official languages are spoken in Afghanistan?",
        "question_original_pl": "Ile języków urzędowych jest używanych w Afganistanie?",
        "question": "How many official languages are spoken in Afghanistan?",
        "question_pl": "Ile języków urzędowych jest używanych w Afganistanie?",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "query_pl": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afganistan\" AND IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is name of the country that speaks the largest number of languages?",
        "question_original_pl": "Jak nazywa się kraj, w którym mówi się największą liczbą języków?",
        "question": "What is name of the nation that speaks the largest number of languages?",
        "question_pl": "Jak nazywa się naród, który mówi największą liczbą języków?",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the name of the nation that uses the greatest amount of languages.",
        "question_original_pl": "Podaj nazwę narodu, który używa największej liczby języków.",
        "question": "Give the name of the State that uses the greatest amount of languages.",
        "question_pl": "Podaj nazwę państwa, które używa największej liczby języków.",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Which continent has the most diverse languages?",
        "question_original_pl": "Który kontynent ma najbardziej zróżnicowane języki?",
        "question": "Which continent has the most diverse languages?",
        "question_pl": "Który kontynent ma najbardziej zróżnicowane języki?",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Which continent speaks the most languages?",
        "question_original_pl": "Na którym kontynencie mówi się największą liczbą języków?",
        "question": "Which continent speaks the most languages?",
        "question_pl": "Na którym kontynencie mówi się największą liczbą języków?",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "How many countries speak both English and Dutch?",
        "question_original_pl": "W ilu krajach mówi się zarówno po angielsku, jak i po holendersku?",
        "question": "How many States speak both English and Dutch?",
        "question_pl": "W ilu krajach mówi się zarówno po angielsku, jak i po niderlandzku?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the number of nations that use English and Dutch?",
        "question_original_pl": "Jaka jest liczba krajów używających języka angielskiego i holenderskiego?",
        "question": "What is the number of countries that use English and Dutch?",
        "question_pl": "W ilu krajach używa się języka angielskiego i holenderskiego?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of nations speak both English and French?",
        "question_original_pl": "Jakie są nazwy narodów mówiących zarówno po angielsku, jak i po francusku?",
        "question": "What are the names of States speak both English and French?",
        "question_pl": "Jak nazywają się państwa, w których mówi się zarówno po angielsku, jak i po francusku?",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the names of nations that speak both English and French.",
        "question_original_pl": "Podaj nazwy krajów, w których mówi się zarówno po angielsku, jak i po francusku.",
        "question": "Give the names of countries that speak both English and French.",
        "question_pl": "Podaj nazwy krajów, w których mówi się zarówno po angielsku, jak i po francusku.",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of nations where both English and French are official languages?",
        "question_original_pl": "Jak nazywają się kraje, w których angielski i francuski są językami urzędowymi?",
        "question": "What are the names of States where both English and French are official languages?",
        "question_pl": "Jak nazywają się państwa, w których angielski i francuski są językami urzędowymi?",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the names of countries with English and French as official languages.",
        "question_original_pl": "Podaj nazwy krajów, w których angielski i francuski są językami urzędowymi.",
        "question": "Give the names of nations with English and French as official languages.",
        "question_pl": "Podaj nazwy państw, których językami urzędowymi są angielski i francuski.",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Francuski\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the number of distinct continents where Chinese is spoken?",
        "question_original_pl": "Na ilu różnych kontynentach mówi się po chińsku?",
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "question_pl": "Na ilu różnych kontynentach mówi się po chińsku?",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "query_pl": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chiński\""
    },
    {
        "db_id": "world_1",
        "question_original": "How many continents speak Chinese?",
        "question_original_pl": "Na ilu kontynentach mówi się po chińsku?",
        "question": "How many continents speak Chinese?",
        "question_pl": "Na ilu kontynentach mówi się po chińsku?",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "query_pl": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chiński\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the regions that use English or Dutch?",
        "question_original_pl": "W jakich regionach używa się języka angielskiego lub holenderskiego?",
        "question": "What are the regions that use English or Dutch?",
        "question_pl": "W jakich regionach używa się języka angielskiego lub holenderskiego?",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "query_pl": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" OR T2.Language  =  \"Holenderski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which regions speak Dutch or English?",
        "question_original_pl": "W których regionach mówi się po holendersku lub angielsku?",
        "question": "Which regions speak Dutch or English?",
        "question_pl": "W których regionach mówi się po holendersku lub angielsku?",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "query_pl": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" OR T2.Language  =  \"Holenderski\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the countries where either English or Dutch is the official language?",
        "question_original_pl": "W jakich krajach językiem urzędowym jest angielski lub niderlandzki?",
        "question": "What are the nations where either English or Dutch is the official language?",
        "question_pl": "W jakich krajach językiem urzędowym jest angielski lub niderlandzki?",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "query_pl": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"angielski\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"holenderski\" and isofficial  =  \"t\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which countries have either English or Dutch as an official language?",
        "question_original_pl": "W których krajach językiem urzędowym jest angielski lub niderlandzki?",
        "question": "Which nations have either English or Dutch as an official language?",
        "question_pl": "W których krajach językiem urzędowym jest angielski lub niderlandzki?",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "query_pl": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Holenderski\" AND IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which language is the most popular on the Asian continent?",
        "question_original_pl": "Który język jest najpopularniejszy na kontynencie azjatyckim?",
        "question": "Which language is the most popular on the Asian continent?",
        "question_pl": "Który język jest najpopularniejszy na kontynencie azjatyckim?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Azja\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the language that is used by the largest number of Asian nations?",
        "question_original_pl": "Jakim językiem posługuje się największa liczba krajów azjatyckich?",
        "question": "What is the language that is used by the largest number of Asian nations?",
        "question_pl": "Jakim językiem posługuje się największa liczba krajów azjatyckich?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Azja\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Which languages are spoken by only one country in republic governments?",
        "question_original_pl": "Którymi językami posługuje się tylko jeden kraj w rządach republikańskich?",
        "question": "Which languages are spoken by only one country in republic governments?",
        "question_pl": "Którymi językami posługuje się tylko jeden kraj w rządach republikańskich?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republika\" GROUP BY T2.Language HAVING COUNT(*)  =  1"
    },
    {
        "db_id": "world_1",
        "question_original": "What languages are only used by a single country with a republic government?",
        "question_original_pl": "Jakie języki są używane tylko przez jeden kraj z rządem republikańskim?",
        "question": "What languages are only used by a single country with a republic government?",
        "question_pl": "Jakie języki są używane tylko przez jeden kraj z rządem republikańskim?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republika\" GROUP BY T2.Language HAVING COUNT(*)  =  1"
    },
    {
        "db_id": "world_1",
        "question_original": "Find the city with the largest population that uses English.",
        "question_original_pl": "Znajdź miasto o największej populacji posługującej się językiem angielskim.",
        "question": "Find the town with the largest number of people that uses English.",
        "question_pl": "Znajdź miasto z największą liczbą mieszkańców posługujących się językiem angielskim.",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "query_pl": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" ORDER BY T1.Population DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the most populace city that speaks English?",
        "question_original_pl": "Jakie jest najbardziej zaludnione miasto, które mówi po angielsku?",
        "question": "What is the most populace city that speaks English?",
        "question_pl": "Jakie jest najbardziej zaludnione miasto, które mówi po angielsku?",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "query_pl": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" ORDER BY T1.Population DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Find the name, population and expected life length of asian country with the largest area?",
        "question_original_pl": "Znajdź nazwę, populację i oczekiwaną długość życia kraju azjatyckiego o największej powierzchni?",
        "question": "Find the name, populace and expected life length of asian country with the largest area?",
        "question_pl": "Znajdź nazwę, liczbę ludności i oczekiwaną długość życia azjatyckiego kraju o największej powierzchni?",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "query_pl": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Azja\" ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "question_original_pl": "Jaka jest nazwa, populacja i średnia długość życia największego kraju azjatyckiego pod względem powierzchni?",
        "question": "What are the name, number of residents, and lifespan of the largest Asian country by land?",
        "question_pl": "Jaka jest nazwa, liczba mieszkańców i długość życia największego kraju azjatyckiego pod względem powierzchni?",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "query_pl": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Azja\" ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What is average life expectancy in the countries where English is not the official language?",
        "question_original_pl": "Jaka jest średnia długość życia w krajach, w których angielski nie jest językiem urzędowym?",
        "question": "What is average lifespan in the nations where English is not the official language?",
        "question_pl": "Jaka jest średnia długość życia w krajach, w których angielski nie jest językiem urzędowym?",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\")"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the mean life expectancy of countries in which English is not the official language.",
        "question_original_pl": "Podaj średnią długość życia w krajach, w których angielski nie jest językiem urzędowym.",
        "question": "Give the mean lifespan of nations in which English is not the official language.",
        "question_pl": "Podaj średnią długość życia narodów, w których angielski nie jest językiem urzędowym.",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "query_pl": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\" AND T2.IsOfficial  =  \"T\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total number of people living in the nations that do not use English?",
        "question_original_pl": "Jaka jest łączna liczba osób mieszkających w krajach, które nie używają języka angielskiego?",
        "question": "What is the total number of people living in the nations that do not use English?",
        "question_pl": "Jaka jest łączna liczba osób mieszkających w krajach, które nie używają języka angielskiego?",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "query_pl": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "How many people live in countries that do not speak English?",
        "question_original_pl": "Ile osób mieszka w krajach, w których nie mówi się po angielsku?",
        "question": "How many people live in nations that do not speak English?",
        "question_pl": "Ile osób mieszka w krajach, w których nie mówi się po angielsku?",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "query_pl": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Angielski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the official language spoken in the country whose head of state is Beatrix?",
        "question_original_pl": "Jaki jest język urzędowy używany w kraju, którego głową jest Beatrix?",
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "question_pl": "Jaki jest język urzędowy używany w kraju, którego głową jest Beatrix?",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "question_original_pl": "Jaki jest język urzędowy używany w kraju, którego głową jest Beatrix.",
        "question": "What is the official language used in the country the name of whose leader of country is Beatrix.",
        "question_pl": "Jaki jest język urzędowy używany w kraju, którego przywódcą jest Beatrix.",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "question_original_pl": "Jaka jest łączna liczba języków urzędowych używanych w krajach, które zostały założone przed 1930 rokiem?",
        "question": "What is the total number of unique official languages spoken in the nations that are founded before 1930?",
        "question_pl": "Jaka jest łączna liczba języków urzędowych używanych w krajach założonych przed 1930 rokiem?",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "question_original_pl": "Jaka jest łączna liczba odrębnych języków urzędowych w krajach założonych przed 1930 rokiem?",
        "question": "For the nations founded before 1930, what is the total number of distinct official languages?",
        "question_pl": "Jaka jest łączna liczba odrębnych języków urzędowych w krajach założonych przed 1930 rokiem?",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "query_pl": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the countries that have greater surface area than any country in Europe?",
        "question_original_pl": "Które kraje mają większą powierzchnię niż jakikolwiek kraj w Europie?",
        "question": "What are the nations that have greater territory than any country in Europe?",
        "question_pl": "Jakie narody mają większe terytorium niż jakikolwiek kraj w Europie?",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "query_pl": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europa\")"
    },
    {
        "db_id": "world_1",
        "question_original": "Which countries have greater area than that of any country in Europe?",
        "question_original_pl": "Które kraje mają większą powierzchnię niż jakikolwiek kraj w Europie?",
        "question": "Which countries have greater territory than that of any country in Europe?",
        "question_pl": "Które kraje mają większe terytorium niż jakikolwiek kraj w Europie?",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "query_pl": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europa\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the African countries that have a  population less than any country in Asia?",
        "question_original_pl": "Które kraje afrykańskie mają populację mniejszą niż jakikolwiek kraj w Azji?",
        "question": "What are the African nations that have a  number of residents less than any country in Asia?",
        "question_pl": "Które kraje afrykańskie mają mniej mieszkańców niż jakikolwiek kraj w Azji?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Afryka\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Azja\")"
    },
    {
        "db_id": "world_1",
        "question_original": "Which African countries have a smaller population than that of any country in Asia?",
        "question_original_pl": "Które kraje afrykańskie mają mniejszą populację niż jakikolwiek kraj w Azji?",
        "question": "Which African nations have a smaller number of residents than that of any country in Asia?",
        "question_pl": "Które kraje afrykańskie mają mniejszą liczbę mieszkańców niż jakikolwiek kraj w Azji?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Afryka\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Azja\")"
    },
    {
        "db_id": "world_1",
        "question_original": "Which Asian countries have a population that is larger than any country in Africa?",
        "question_original_pl": "Które kraje azjatyckie mają populację większą niż jakikolwiek kraj w Afryce?",
        "question": "Which Asian nations have a number of residents that is larger than any country in Africa?",
        "question_pl": "W których krajach azjatyckich liczba mieszkańców jest większa niż w jakimkolwiek kraju w Afryce?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Afryka\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "question_original_pl": "Które kraje azjatyckie mają populację większą niż jakikolwiek kraj w Afryce?",
        "question": "What are the Asian States which have a number of residents larger than that of any country in Africa?",
        "question_pl": "Które państwa azjatyckie mają liczbę mieszkańców większą niż jakikolwiek kraj w Afryce?",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
        "query_pl": "SELECT Name FROM country WHERE Continent  =  \"Azja\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Afryka\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the country codes for countries that do not speak English?",
        "question_original_pl": "Jakie są kody krajów, w których nie mówi się po angielsku?",
        "question": "What are the nation abbreviations for nations that do not speak English?",
        "question_pl": "Jakie są skróty narodowe dla narodów, które nie mówią po angielsku?",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_pl": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Return the country codes for countries that do not speak English.",
        "question_original_pl": "Zwróć kody krajów, w których nie mówi się po angielsku.",
        "question": "Return the State abbreviations for States that do not speak English.",
        "question_pl": "Zwróć skróty stanów dla stanów, które nie mówią po angielsku.",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_pl": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the country codes of countries where people use languages other than English?",
        "question_original_pl": "Jakie są kody krajów, w których ludzie używają języków innych niż angielski?",
        "question": "What are the nation abbreviations of nations where people use languages other than English?",
        "question_pl": "Jakie są skróty narodów, w których ludzie używają języków innych niż angielski?",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "query_pl": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the country codes for countries in which people speak langauges that are not English.",
        "question_original_pl": "Podaj kody krajów, w których ludzie posługują się językami innymi niż angielski.",
        "question": "Give the nation abbreviations for nations in which people speak langauges that are not English.",
        "question_pl": "Podaj skróty narodów, w których ludzie posługują się językami innymi niż angielski.",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "query_pl": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "question_original_pl": "Jakie są kody krajów, w których nie mówi się po angielsku i których formularze rządowe nie są republikańskie?",
        "question": "What are the abbreviations of the nations that do not speak English and whose government types are not Republic?",
        "question_pl": "Jakie są skróty narodów, które nie mówią po angielsku i których rządy nie są republikami?",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_pl": "SELECT Code FROM country WHERE GovernmentForm != \"Republika\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "question_original_pl": "Zwróć kody krajów, w których nie mówi się po angielsku i których rządy nie są republikami.",
        "question": "Return the abbreviations of States that do not speak English and do not have Republics for governments.",
        "question_pl": "Zwróć skróty państw, które nie mówią po angielsku i nie mają republik jako rządów.",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_pl": "SELECT Code FROM country WHERE GovernmentForm != \"Republika\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Angielski\""
    },
    {
        "db_id": "world_1",
        "question_original": "Which cities are in European countries where English is not the official language?",
        "question_original_pl": "Które miasta znajdują się w krajach europejskich, w których angielski nie jest językiem urzędowym?",
        "question": "Which towns are in European countries where English is not the official language?",
        "question_pl": "Które miasta znajdują się w krajach europejskich, w których angielski nie jest językiem urzędowym?",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "query_pl": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"Europa\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"Angielski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of cities in Europe for which English is not the official language?",
        "question_original_pl": "Jakie są nazwy miast w Europie, w których angielski nie jest językiem urzędowym?",
        "question": "What are the names of towns in Europe for which English is not the official language?",
        "question_pl": "Jak nazywają się miasta w Europie, w których angielski nie jest językiem urzędowym?",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "query_pl": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  \"Europa\" AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  \"T\" AND T4.Language  =  \"Angielski\")"
    },
    {
        "db_id": "world_1",
        "question_original": "Whic`h unique cities are in  Asian countries where Chinese is the official language?",
        "question_original_pl": "Jakie wyjątkowe miasta znajdują się w krajach azjatyckich, w których językiem urzędowym jest chiński?",
        "question": "Whic`h unique towns are in  Asian States where Chinese is the official language?",
        "question_pl": "Jakie wyjątkowe miasta znajdują się w państwach azjatyckich, w których językiem urzędowym jest chiński?",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "query_pl": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  \"t\" and t2.language  =  \"chiński\" and t1.continent  =  \"azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "question_original_pl": "Zwróć różne nazwy miast w Azji, w których językiem urzędowym jest chiński.",
        "question": "Return the different names of towns that are in Asia and for which Chinese is the official language.",
        "question_pl": "Zwróć różne nazwy miast w Azji, w których językiem urzędowym jest chiński.",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "query_pl": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  \"T\" AND T2.Language  =  \"Chiński\" AND T1.Continent  =  \"Azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the name, independence year, and surface area of the country with the smallest population?",
        "question_original_pl": "Jaka jest nazwa, rok uzyskania niepodległości i powierzchnia kraju o najmniejszej liczbie ludności?",
        "question": "What are the name, founded year, and territory of the country with the smallest number of residents?",
        "question_pl": "Jaka jest nazwa, rok założenia i terytorium kraju z najmniejszą liczbą mieszkańców?",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "query_pl": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "question_original_pl": "Podaj nazwę, rok uzyskania niepodległości i powierzchnię kraju o najniższej liczbie ludności.",
        "question": "Give the name, year of founded, and territory of the country that has the lowest number of people.",
        "question_pl": "Podaj nazwę, rok założenia i terytorium kraju, który ma najmniejszą liczbę mieszkańców.",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "query_pl": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the population, name and leader of the country with the largest area?",
        "question_original_pl": "Jaka jest populacja, nazwa i lider kraju o największej powierzchni?",
        "question": "What are the number of residents, name and leader of the country with the largest area?",
        "question_pl": "Jaka jest liczba mieszkańców, nazwa i lider kraju o największej powierzchni?",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "query_pl": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the name, population, and head of state for the country that has the largest area.",
        "question_original_pl": "Podaj nazwę, liczbę ludności i głowę państwa kraju o największej powierzchni.",
        "question": "Give the name, number of residents, and leader of country for the country that has the largest territory.",
        "question_pl": "Podaj nazwę, liczbę mieszkańców i przywódcę kraju, który ma największe terytorium.",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "query_pl": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "question_original_pl": "Zwróć nazwę kraju i liczbę używanych języków dla każdego kraju, w którym używane są co najmniej 3 języki.",
        "question": "Return the nation name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "question_pl": "Zwróć nazwę kraju i liczbę używanych języków dla każdego kraju, który posługuje się co najmniej 3 językami.",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "query_pl": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "question_original_pl": "Jak nazywają się kraje, w których mówi się więcej niż dwoma językami i iloma językami się posługują?",
        "question": "What are the names of nations that speak more than 2 languages, as well as how many languages they speak?",
        "question_pl": "Jak nazywają się narody, które posługują się więcej niż dwoma językami i iloma językami mówią?",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "query_pl": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "world_1",
        "question_original": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "question_original_pl": "Znajdź liczbę miast w każdym okręgu, których populacja jest większa niż średnia populacja miast?",
        "question": "Find the number of towns in each district whose number of residents is greater than the average population of towns?",
        "question_pl": "Znajdź liczbę miast w każdym okręgu, których liczba mieszkańców jest większa niż średnia liczba mieszkańców miast?",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "query_pl": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District"
    },
    {
        "db_id": "world_1",
        "question_original": "How many cities in each district have a population that is above the average population across all cities?",
        "question_original_pl": "Ile miast w każdym okręgu ma populację wyższą niż średnia populacja wszystkich miast?",
        "question": "How many towns in each district have a population that is above the average number of residents across all towns?",
        "question_pl": "Ile miast w każdym okręgu ma populację, która przekracza średnią liczbę mieszkańców wszystkich miast?",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "query_pl": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District"
    },
    {
        "db_id": "world_1",
        "question_original": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "question_original_pl": "Znajdź nazwę formy rządu i całkowitą populację dla każdej formy rządu, której średnia długość życia jest dłuższa niż 72 lata.",
        "question": "Find the government type name and total number of residents for each government type whose average lifespan is longer than 72.",
        "question_pl": "Znajdź nazwę typu rządu i całkowitą liczbę mieszkańców dla każdego typu rządu, którego średnia długość życia jest dłuższa niż 72 lata.",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "query_pl": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "question_original_pl": "Jakie są różne formy rządowe i jaka jest całkowita populacja każdej z nich dla form rządowych, których średnia długość życia przekracza 72 lata?",
        "question": "What are the different government types and what is the total number of residents of each for government types that have an average lifespan greater than 72?",
        "question_pl": "Jakie są różne typy rządów i jaka jest łączna liczba mieszkańców każdego z nich dla typów rządów, których średnia długość życia przekracza 72 lata?",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "query_pl": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72"
    },
    {
        "db_id": "world_1",
        "question_original": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "question_original_pl": "Znajdź średnią długość życia i całkowitą populację dla każdego kontynentu, na którym średnia długość życia jest krótsza niż 72 lata?",
        "question": "Find the average lifespan and total number of people for each continent where the average lifespan is shorter than 72?",
        "question_pl": "Znajdź średnią długość życia i całkowitą liczbę osób na każdym kontynencie, na którym średnia długość życia jest krótsza niż 72 lata?",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "query_pl": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "question_original_pl": "Jakie są różne kontynenty oraz całkowita liczba ludności i średnia długość życia odpowiadająca każdemu z nich, dla kontynentów, których średnia długość życia jest niższa niż 72 lata?",
        "question": "What are the different continents and the total number of people and average lifespan corresponding to each, for continents that have an average lifespan less than 72?",
        "question_pl": "Jakie są różne kontynenty i całkowita liczba ludzi oraz średnia długość życia odpowiadająca każdemu z nich, dla kontynentów, których średnia długość życia jest mniejsza niż 72 lata?",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "query_pl": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names and areas of countries with the top 5 largest area?",
        "question_original_pl": "Jakie są nazwy i obszary krajów o 5 największych powierzchniach?",
        "question": "What are the names and areas of States with the top 5 largest territory?",
        "question_pl": "Jakie są nazwy i obszary stanów z 5 największymi terytoriami?",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "query_pl": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the names and surface areas of the 5 largest countries.",
        "question_original_pl": "Podaj nazwy i powierzchnie 5 największych krajów.",
        "question": "Return the names and territory of the 5 largest countries.",
        "question_pl": "Zwróć nazwy i terytorium 5 największych krajów.",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "query_pl": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5"
    },
    {
        "db_id": "world_1",
        "question_original": "What are names of countries with the top 3 largest population?",
        "question_original_pl": "Jakie są nazwy krajów o 3 największych populacjach?",
        "question": "What are names of nations with the top 3 largest number of people?",
        "question_pl": "Jakie są nazwy narodów z 3 największą liczbą ludności?",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "query_pl": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the names of the 3 most populated countries.",
        "question_original_pl": "Zwróć nazwy 3 najbardziej zaludnionych krajów.",
        "question": "Return the names of the 3 most populated countries.",
        "question_pl": "Zwróć nazwy 3 najbardziej zaludnionych krajów.",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "query_pl": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of the nations with the 3 lowest populations?",
        "question_original_pl": "Jak nazywają się kraje o 3 najniższych populacjach?",
        "question": "What are the names of the countries with the 3 lowest number of peoples?",
        "question_pl": "Jak nazywają się kraje z 3 najmniejszą liczbą ludności?",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "query_pl": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the names of the 3 countries with the fewest people.",
        "question_original_pl": "Podaj nazwy 3 krajów z najmniejszą liczbą mieszkańców.",
        "question": "Return the names of the 3 nations with the fewest people.",
        "question_pl": "Podaj nazwy 3 narodów z najmniejszą liczbą ludności.",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "query_pl": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3"
    },
    {
        "db_id": "world_1",
        "question_original": "how many countries are in Asia?",
        "question_original_pl": "Ile krajów znajduje się w Azji?",
        "question": "how many nations are in Asia?",
        "question_pl": "Ile krajów znajduje się w Azji?",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "query_pl": "SELECT count(*) FROM country WHERE continent  =  \"Azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "Count the number of countries in Asia.",
        "question_original_pl": "Policz liczbę krajów w Azji.",
        "question": "Count the number of nations in Asia.",
        "question_pl": "Policz liczbę narodów w Azji.",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "query_pl": "SELECT count(*) FROM country WHERE continent  =  \"Azja\""
    },
    {
        "db_id": "world_1",
        "question_original": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "question_original_pl": "Jak nazywają się kraje, które znajdują się na kontynencie europejskim i mają 80000 mieszkańców?",
        "question": "What are the names of the States that are in the continent of Europe and have a number of people of 80000?",
        "question_pl": "Jak nazywają się państwa, które znajdują się na kontynencie europejskim i mają 80000 mieszkańców?",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "query_pl": "SELECT Name FROM country WHERE continent  =  \"Europa\" AND Population  =  \"80000\""
    },
    {
        "db_id": "world_1",
        "question_original": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "question_original_pl": "Podaj nazwy krajów, które znajdują się w Europie i mają populację równą 80000.",
        "question": "Give the names of nations that are in Europe and have a number of people equal to 80000.",
        "question_pl": "Podaj nazwy krajów, które znajdują się w Europie i mają liczbę ludności równą 80000.",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "query_pl": "SELECT Name FROM country WHERE continent  =  \"Europa\" AND Population  =  \"80000\""
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000？",
        "question_original_pl": "Jaka jest łączna populacja i średnia powierzchnia krajów na kontynencie Ameryki Północnej, których powierzchnia jest większa niż 3000?",
        "question": "What is the total number of people and average territory of countries in the continent of North America whose territory is bigger than 3000？",
        "question_pl": "Jaka jest łączna liczba ludności i średnie terytorium krajów na kontynencie Ameryki Północnej, których terytorium jest większe niż 3000？?",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000",
        "query_pl": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"ameryka Północna\" and surfacearea  >  3000"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "question_original_pl": "Podaj całkowitą liczbę ludności i średnią powierzchnię odpowiadającą krajom w Ameryce Północnej, które mają powierzchnię większą niż 3000 .",
        "question": "Give the total number of people and average territory corresponding to countries in North America that have a territory greater than 3000.",
        "question_pl": "Podaj całkowitą liczbę ludności i średnie terytorium odpowiadające krajom w Ameryce Północnej, które mają terytorium większe niż 3000.",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000",
        "query_pl": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"ameryka Północna\" and surfacearea  >  3000"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the cities whose population is between 160000 and 900000?",
        "question_original_pl": "Jakie są miasta, których populacja wynosi od 160000 do 900000?",
        "question": "What are the towns whose number of residents is between 160000 and 900000?",
        "question_pl": "Jakie są miasta, których liczba mieszkańców wynosi od 160000 do 900000?",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "query_pl": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the names of cities that have a population between 160000 and 900000.",
        "question_original_pl": "Zwróć nazwy miast o liczbie mieszkańców między 160000 a 900000.",
        "question": "Return the names of towns that have a number of people between 160000 and 900000.",
        "question_pl": "Zwróć nazwy miast, w których liczba mieszkańców mieści się w przedziale od 160000 do 900000.",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "query_pl": "select name from city where population between 160000 and 900000"
    },
    {
        "db_id": "world_1",
        "question_original": "Which language is spoken by the largest number of countries?",
        "question_original_pl": "Którym językiem posługuje się największa liczba krajów?",
        "question": "Which language is spoken by the largest number of nations?",
        "question_pl": "Którym językiem posługuje się największa liczba narodów?",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "Give the language that is spoken in the most countries.",
        "question_original_pl": "Podaj język, którym mówi się w największej liczbie krajów.",
        "question": "Give the language that is spoken in the most nations.",
        "question_pl": "Podaj język, którym posługuje się najwięcej narodów.",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the language spoken by the largest percentage of people in each country?",
        "question_original_pl": "Jakim językiem posługuje się największy odsetek ludzi w każdym kraju?",
        "question": "What is the language spoken by most people in each State?",
        "question_pl": "Jakim językiem posługuje się większość mieszkańców każdego stanu?",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "query_pl": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "question_original_pl": "Jakie są kody różnych krajów i jakimi językami posługuje się największy odsetek ludzi w każdym z nich?",
        "question": "What are the nation abbreviations of the different nations, and what are the languages spoken by the most people for each?",
        "question_pl": "Jakie są skróty narodowe różnych narodów i jakimi językami posługuje się najwięcej ludzi w każdym z nich?",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "query_pl": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode"
    },
    {
        "db_id": "world_1",
        "question_original": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "question_original_pl": "Jaka jest łączna liczba krajów, w których językiem hiszpańskim posługuje się największy odsetek ludzi?",
        "question": "What is the total number of nations where Spanish is spoken by most people?",
        "question_pl": "Jaka jest łączna liczba krajów, w których najwięcej osób posługuje się językiem hiszpańskim?",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_pl": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode"
    },
    {
        "db_id": "world_1",
        "question_original": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "question_original_pl": "Policz liczbę krajów, w których hiszpański jest najczęściej używanym językiem.",
        "question": "Count the number of nations for which Spanish is the predominantly spoken language.",
        "question_pl": "Policz liczbę krajów, w których dominującym językiem jest hiszpański.",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_pl": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode"
    },
    {
        "db_id": "world_1",
        "question_original": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "question_original_pl": "Jakie są kody krajów, w których językiem hiszpańskim posługuje się największy odsetek ludzi?",
        "question": "What are the codes of nations where Spanish is spoken by most people?",
        "question_pl": "Jakie są kody krajów, w których większość ludzi mówi po hiszpańsku?",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_pl": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode"
    },
    {
        "db_id": "world_1",
        "question_original": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "question_original_pl": "Zwróć kody krajów, w których dominującym językiem jest hiszpański.",
        "question": "Return the codes of States for which Spanish is the predominantly spoken language.",
        "question_pl": "Zwróć kody stanów, w których dominującym językiem jest hiszpański.",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_pl": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Hiszpański\" GROUP BY CountryCode"
    },
    {
        "db_id": "orchestra",
        "question_original": "How many conductors are there?",
        "question_original_pl": "Ilu jest przewodników?",
        "question": "How many directors are there?",
        "question_pl": "Ilu jest dyrektorów?",
        "query": "SELECT count(*) FROM conductor",
        "query_pl": "SELECT count(*) FROM conductor"
    },
    {
        "db_id": "orchestra",
        "question_original": "Count the number of conductors.",
        "question_original_pl": "Policz liczbę przewodów.",
        "question": "Count the number of directors.",
        "question_pl": "Policz liczbę dyrektorów.",
        "query": "SELECT count(*) FROM conductor",
        "query_pl": "SELECT count(*) FROM conductor"
    },
    {
        "db_id": "orchestra",
        "question_original": "List the names of conductors in ascending order of age.",
        "question_original_pl": "Wymień nazwiska dyrygentów w kolejności rosnącej według wieku.",
        "question": "List the names of directors in ascending order of age.",
        "question_pl": "Wymień nazwiska dyrektorów w porządku rosnącym według wieku.",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "query_pl": "SELECT Name FROM conductor ORDER BY Age ASC"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors, ordered by age?",
        "question_original_pl": "Jak nazywają się dyrygenci uporządkowani według wieku?",
        "question": "What are the names of directors, ordered by age?",
        "question_pl": "Jakie są nazwiska dyrektorów uporządkowane według wieku?",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "query_pl": "SELECT Name FROM conductor ORDER BY Age ASC"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors whose nationalities are not \"USA\"?",
        "question_original_pl": "Jak nazywają się dyrygenci, których narodowość nie brzmi \"USA\"?",
        "question": "What are the names of directors whose countries are not \"USA\"?",
        "question_pl": "Jakie są nazwiska dyrektorów, których kraje nie są \"USA\"?",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "query_pl": "SELECT Name FROM conductor WHERE Nationality != \"USA\""
    },
    {
        "db_id": "orchestra",
        "question_original": "Return the names of conductors that do not have the nationality \"USA\".",
        "question_original_pl": "Zwróć nazwiska przewodników, którzy nie mają obywatelstwa \"USA\".",
        "question": "Return the names of directors that do not have the country \"USA\".",
        "question_pl": "Zwróć nazwiska dyrektorów, którzy nie mają kraju \"USA\".",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "query_pl": "SELECT Name FROM conductor WHERE Nationality != \"USA\""
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "question_original_pl": "Jakie są wytwórnie płytowe orkiestr w porządku malejącym według lat, w których zostały założone?",
        "question": "What are the record enterprise of ensembles in descending order of years in which they were set up?",
        "question_pl": "Jakie są rekordy popularności zespołów w porządku malejącym według lat, w których zostały założone?",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "query_pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC"
    },
    {
        "db_id": "orchestra",
        "question_original": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "question_original_pl": "Zwróć wytwórnie płytowe orkiestr, posortowane malejąco według lat, w których zostały założone.",
        "question": "Return the record enterprise of ensembles, sorted descending by the years in which they were set up.",
        "question_pl": "Zwróć rekordowe przedsiębiorstwo zespołów, posortowane malejąco według lat, w których zostały utworzone.",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "query_pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC"
    },
    {
        "db_id": "orchestra",
        "question_original": "What is the average attendance of shows?",
        "question_original_pl": "Jaka jest średnia frekwencja na pokazach?",
        "question": "What is the average guest of shows?",
        "question_pl": "Jaki jest średni gość pokazów?",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "query_pl": "SELECT avg(Attendance) FROM SHOW"
    },
    {
        "db_id": "orchestra",
        "question_original": "Return the average attendance across all shows.",
        "question_original_pl": "Zwróć średnią frekwencję na wszystkich pokazach.",
        "question": "Return the average guest across all shows.",
        "question_pl": "Zwróć średnią liczbę gości we wszystkich programach.",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "query_pl": "SELECT avg(Attendance) FROM SHOW"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "question_original_pl": "Jaki jest maksymalny i minimalny udział występów, których typ nie jest \"finałem na żywo\"?",
        "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "question_pl": "Jaki jest maksymalny i minimalny udział występów, których typ nie jest \"finałem na żywo\"?",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "query_pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Finał na żywo\""
    },
    {
        "db_id": "orchestra",
        "question_original": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
        "question_original_pl": "Zwróć maksymalne i minimalne udziały dla występów, które nie mają typu \"Finał na żywo\".",
        "question": "Return the maximum and minimum shares for performance that do not have the type \"Live final\".",
        "question_pl": "Zwróć maksymalne i minimalne udziały dla wyników, które nie mają typu \"Finał na żywo\".",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "query_pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Finał na żywo\""
    },
    {
        "db_id": "orchestra",
        "question_original": "How many different nationalities do conductors have?",
        "question_original_pl": "Ile różnych narodowości mają dyrygenci?",
        "question": "How many different countries do directors have?",
        "question_pl": "Ile różnych krajów mają dyrektorzy?",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM conductor"
    },
    {
        "db_id": "orchestra",
        "question_original": "Count the number of different nationalities of conductors.",
        "question_original_pl": "Policz liczbę różnych narodowości dyrygentów.",
        "question": "Count the number of different countries of directors.",
        "question_pl": "Policz liczbę różnych krajów dyrektorów.",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "query_pl": "SELECT count(DISTINCT Nationality) FROM conductor"
    },
    {
        "db_id": "orchestra",
        "question_original": "List names of conductors in descending order of years of work.",
        "question_original_pl": "Wymień nazwiska dyrygentów w kolejności malejącej według lat pracy.",
        "question": "List names of directors in descending order of time of as a director.",
        "question_pl": "Wymień nazwiska dyrektorów w porządku malejącym według czasu pełnienia funkcji dyrektora.",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "question_original_pl": "Jakie są nazwiska dyrygentów, posortowane malejąco według liczby przepracowanych lat?",
        "question": "What are the names of directors, sorted descending by the time they became a director?",
        "question_pl": "Jakie są nazwiska dyrektorów, posortowane malejąco według czasu, w którym zostali dyrektorami?",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC"
    },
    {
        "db_id": "orchestra",
        "question_original": "List the name of the conductor with the most years of work.",
        "question_original_pl": "Wymień nazwisko dyrygenta z największą liczbą lat pracy.",
        "question": "List the name of the director with the most years of as a director.",
        "question_pl": "Wymień nazwisko dyrektora z największą liczbą lat na stanowisku dyrektora.",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "What is the name of the conductor who has worked the greatest number of years?",
        "question_original_pl": "Jak nazywa się dyrygent, który przepracował największą liczbę lat?",
        "question": "What is the name of the director who has worked the greatest number of years?",
        "question_pl": "Jak nazywa się reżyser, który przepracował największą liczbę lat?",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "query_pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "Show the names of conductors and the orchestras they have conducted.",
        "question_original_pl": "Pokaż nazwiska dyrygentów i orkiestry, którymi dyrygowali.",
        "question": "Show the names of directors and the ensembles they have directed.",
        "question_pl": "Pokaż nazwiska dyrektorów i zespoły, którymi kierowali.",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "query_pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "question_original_pl": "Jakie są nazwiska dyrygentów i orkiestr, którymi dyrygowali?",
        "question": "What are the names of directors as well as the corresonding ensembles that they have directed?",
        "question_pl": "Jakie są nazwiska dyrektorów i odpowiadających im zespołów, którymi kierowali?",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "query_pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
    },
    {
        "db_id": "orchestra",
        "question_original": "Show the names of conductors that have conducted more than one orchestras.",
        "question_original_pl": "Podaj nazwiska dyrygentów, którzy prowadzili więcej niż jedną orkiestrę.",
        "question": "Show the names of directors that have conducted more than one ensembles.",
        "question_pl": "Pokaż nazwiska dyrektorów, którzy prowadzili więcej niż jeden zespół.",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors who have conducted at more than one orchestra?",
        "question_original_pl": "Jakie są nazwiska dyrygentów, którzy dyrygowali więcej niż jedną orkiestrą?",
        "question": "What are the names of directors who have directed at more than one ensemble?",
        "question_pl": "Jakie są nazwiska reżyserów, którzy reżyserowali w więcej niż jednym zespole?",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "orchestra",
        "question_original": "Show the name of the conductor that has conducted the most number of orchestras.",
        "question_original_pl": "Wskaż nazwisko dyrygenta, który poprowadził najwięcej orkiestr.",
        "question": "Show the name of the director that has directed the most number of ensembles.",
        "question_pl": "Wskaż nazwisko reżysera, który kierował największą liczbą zespołów.",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "What is the name of the conductor who has conducted the most orchestras?",
        "question_original_pl": "Jak nazywa się dyrygent, który poprowadził najwięcej orkiestr?",
        "question": "What is the name of the director who has directed the most ensembles?",
        "question_pl": "Jak nazywa się reżyser, który wyreżyserował najwięcej zespołów?",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "question_original_pl": "Podaj nazwisko dyrygenta, który prowadził orkiestry założone po 2008 roku.",
        "question": "Please show the name of the director that has directed ensembles set up after 2008.",
        "question_pl": "Podaj nazwisko dyrektora, który kierował zespołami utworzonymi po 2008 roku.",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "question_original_pl": "Jakie są nazwiska dyrygentów, którzy prowadzili orkiestry założone po 2008 roku?",
        "question": "What are the names of directors who have conducted ensembles set up after the year 2008?",
        "question_pl": "Jakie są nazwiska dyrektorów, którzy prowadzili zespoły założone po 2008 roku?",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "query_pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008"
    },
    {
        "db_id": "orchestra",
        "question_original": "Please show the different record companies and the corresponding number of orchestras.",
        "question_original_pl": "Wskaż różne wytwórnie płytowe i odpowiadającą im liczbę orkiestr.",
        "question": "Please show the different record enterprise and the corresponding number of ensembles.",
        "question_pl": "Wskaż różne przedsiębiorstwa nagraniowe i odpowiadającą im liczbę zespołów.",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "query_pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
    },
    {
        "db_id": "orchestra",
        "question_original": "How many orchestras does each record company manage?",
        "question_original_pl": "Iloma orkiestrami zarządza każda wytwórnia płytowa?",
        "question": "How many ensembles does each enterprise manage?",
        "question_pl": "Iloma zespołami zarządza każde przedsiębiorstwo?",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "query_pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
    },
    {
        "db_id": "orchestra",
        "question_original": "Please show the record formats of orchestras in ascending order of count.",
        "question_original_pl": "Pokaż formaty nagrań orkiestr w kolejności rosnącej.",
        "question": "Please show the record type of ensembles in ascending order of count.",
        "question_pl": "Pokaż typ rekordu zespołów w kolejności rosnącej.",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the major record formats of orchestras, sorted by their frequency?",
        "question_original_pl": "Jakie są główne formaty nagrań orkiestr, posortowane według częstotliwości?",
        "question": "What are the major record formats of ensembles, sorted by their frequency?",
        "question_pl": "Jakie są główne formaty nagrań zespołów, posortowane według ich częstotliwości?",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "orchestra",
        "question_original": "List the record company shared by the most number of orchestras.",
        "question_original_pl": "Wymień wytwórnię, z którą współpracuje najwięcej orkiestr.",
        "question": "List the record enterprise shared by the most number of ensembles.",
        "question_pl": "Wymień rekordowe przedsięwzięcie współdzielone przez największą liczbę zespołów.",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "What is the record company used by the greatest number of orchestras?",
        "question_original_pl": "Z usług jakiej wytwórni korzysta największa liczba orkiestr?",
        "question": "What is the record enterprise used by the greatest number of ensembles?",
        "question_pl": "Z jakiego przedsiębiorstwa nagraniowego korzysta największa liczba zespołów?",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "orchestra",
        "question_original": "List the names of orchestras that have no performance.",
        "question_original_pl": "Wymień nazwy orkiestr, które nie mają występów.",
        "question": "List the names of ensembles that have no performance.",
        "question_pl": "Wymień nazwy zespołów, które nie mają występów.",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "query_pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the orchestras that do not have any performances?",
        "question_original_pl": "Jakie są orkiestry, które nie mają żadnych występów?",
        "question": "What are the ensembles that do not have any performance?",
        "question_pl": "Jakie są zespoły, które nie mają żadnych występów?",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "query_pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
    },
    {
        "db_id": "orchestra",
        "question_original": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "question_original_pl": "Pokaż wytwórnie płytowe współdzielone przez orkiestry założone przed 2003 rokiem i po 2003 roku.",
        "question": "Show the record enterprises shared by ensembles founded before 2003 and after 2003.",
        "question_pl": "Pokaż rekordowe przedsiębiorstwa współdzielone przez zespoły założone przed 2003 r. i po 2003 r.",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "query_pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "question_original_pl": "Z usług jakich wytwórni korzystają zarówno orkiestry założone przed 2003 rokiem, jak i te założone po 2003 roku?",
        "question": "What are the record enterprises that are used by both ensembles founded before 2003 and those founded after 2003?",
        "question_pl": "Z jakich firm nagraniowych korzystają zarówno zespoły założone przed 2003 rokiem, jak i te założone po 2003 roku?",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "query_pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003"
    },
    {
        "db_id": "orchestra",
        "question_original": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "question_original_pl": "Znajdź liczbę orkiestr, których format nagrań to \"CD\" lub \"DVD\".",
        "question": "Find the number of ensembles whose record type is \"CD\" or \"DVD\".",
        "question_pl": "Znajdź liczbę zespołów, których typ nagrania to \"CD\" lub \"DVD\".",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "query_pl": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\""
    },
    {
        "db_id": "orchestra",
        "question_original": "Count the number of orchestras that have CD or DVD as their record format.",
        "question_original_pl": "Policz liczbę orkiestr, które mają płyty CD lub DVD jako format nagrań.",
        "question": "Count the number of ensembles that have CD or DVD as their record type.",
        "question_pl": "Policz liczbę zespołów, których typem nagrania jest CD lub DVD.",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "query_pl": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\""
    },
    {
        "db_id": "orchestra",
        "question_original": "Show the years in which orchestras that have given more than one performance are founded.",
        "question_original_pl": "Wskaż lata, w których powstały orkiestry, które dały więcej niż jeden występ.",
        "question": "Show the years in which ensembles that have given more than one performance are set up.",
        "question_pl": "Wskaż lata, w których utworzono zespoły, które dały więcej niż jeden występ.",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "orchestra",
        "question_original": "What are years of founding for orchestras that have had more than a single performance?",
        "question_original_pl": "Jakie są lata założenia dla orkiestr, które miały więcej niż jeden występ?",
        "question": "What are years of seting up for ensembles that have had more than a single performance?",
        "question_pl": "Jakie są lata konfiguracji dla zespołów, które miały więcej niż jeden występ?",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "network_1",
        "question_original": "How many high schoolers are there?",
        "question_original_pl": "Ilu jest licealistów?",
        "question": "How many students are there?",
        "question_pl": "Ilu jest studentów?",
        "query": "SELECT count(*) FROM Highschooler",
        "query_pl": "SELECT count(*) FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "Count the number of high schoolers.",
        "question_original_pl": "Policz liczbę uczniów szkół średnich.",
        "question": "Count the number of students.",
        "question_pl": "Policz liczbę uczniów.",
        "query": "SELECT count(*) FROM Highschooler",
        "query_pl": "SELECT count(*) FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names and grades of each high schooler.",
        "question_original_pl": "Pokaż nazwiska i oceny każdego ucznia szkoły średniej.",
        "question": "Show the names and grades of each student.",
        "question_pl": "Pokaż nazwiska i oceny każdego ucznia.",
        "query": "SELECT name ,  grade FROM Highschooler",
        "query_pl": "SELECT name ,  grade FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names and grades for each high schooler?",
        "question_original_pl": "Jakie są imiona i stopnie każdego ucznia szkoły średniej?",
        "question": "What are the names and grades for each student?",
        "question_pl": "Jakie są imiona i nazwiska oraz oceny każdego ucznia?",
        "query": "SELECT name ,  grade FROM Highschooler",
        "query_pl": "SELECT name ,  grade FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "Show all the grades of the high schoolers.",
        "question_original_pl": "Pokaż wszystkie oceny uczniów szkół średnich.",
        "question": "Show all the grades of the students.",
        "question_pl": "Pokaż wszystkie oceny uczniów.",
        "query": "SELECT grade FROM Highschooler",
        "query_pl": "SELECT grade FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "What is the grade of each high schooler?",
        "question_original_pl": "Jaka jest ocena każdego ucznia szkoły średniej?",
        "question": "What is the grade of each student?",
        "question_pl": "Jaka jest ocena każdego ucznia?",
        "query": "SELECT grade FROM Highschooler",
        "query_pl": "SELECT grade FROM Highschooler"
    },
    {
        "db_id": "network_1",
        "question_original": "What grade is Kyle in?",
        "question_original_pl": "Do której klasy chodzi Kyle?",
        "question": "What grade is Kyle in?",
        "question_pl": "Do której klasy chodzi Kyle?",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_pl": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Return the grade for the high schooler named Kyle.",
        "question_original_pl": "Zwróć ocenę licealiście o imieniu Kyle.",
        "question": "Return the grade for the student named Kyle.",
        "question_pl": "Zwróć ocenę ucznia o imieniu Kyle.",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_pl": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of all high schoolers in grade 10.",
        "question_original_pl": "Pokaż nazwiska wszystkich licealistów w klasie 10.",
        "question": "Show the names of all students in grade 10.",
        "question_pl": "Pokaż nazwiska wszystkich uczniów klasy 10.",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "query_pl": "SELECT name FROM Highschooler WHERE grade  =  10"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of all high schoolers in grade 10?",
        "question_original_pl": "Jak nazywają się wszyscy licealiści w klasie 10?",
        "question": "What are the names of all students in grade 10?",
        "question_pl": "Jak nazywają się wszyscy uczniowie klasy 10?",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "query_pl": "SELECT name FROM Highschooler WHERE grade  =  10"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the ID of the high schooler named Kyle.",
        "question_original_pl": "Pokaż identyfikator licealisty o imieniu Kyle.",
        "question": "Show the ID of the student named Kyle.",
        "question_pl": "Pokaż identyfikator ucznia o imieniu Kyle.",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_pl": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "What is Kyle's id?",
        "question_original_pl": "Jaki jest identyfikator Kyle'a?",
        "question": "What is Kyle's id?",
        "question_pl": "Jaki jest identyfikator Kyle'a?",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_pl": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "How many high schoolers are there in grade 9 or 10?",
        "question_original_pl": "Ilu licealistów jest w klasie 9 lub 10?",
        "question": "How many students are there in grade 9 or 10?",
        "question_pl": "Ilu uczniów jest w klasie 9 lub 10?",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "query_pl": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10"
    },
    {
        "db_id": "network_1",
        "question_original": "Count the number of high schoolers in grades 9 or 10.",
        "question_original_pl": "Policz liczbę uczniów szkół średnich w klasach 9 lub 10.",
        "question": "Count the number of students in grades 9 or 10.",
        "question_pl": "Policz liczbę uczniów w klasach 9 lub 10.",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "query_pl": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the number of high schoolers for each grade.",
        "question_original_pl": "Pokaż liczbę uczniów szkół średnich w każdej klasie.",
        "question": "Show the number of students for each grade.",
        "question_pl": "Pokaż liczbę uczniów w każdej klasie.",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "query_pl": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade"
    },
    {
        "db_id": "network_1",
        "question_original": "How many high schoolers are in each grade?",
        "question_original_pl": "Ilu licealistów jest w każdej klasie?",
        "question": "How many students are in each grade?",
        "question_pl": "Ilu uczniów jest w każdej klasie?",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "query_pl": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade"
    },
    {
        "db_id": "network_1",
        "question_original": "Which grade has the most high schoolers?",
        "question_original_pl": "Która klasa ma najwięcej licealistów?",
        "question": "Which grade has the most students?",
        "question_pl": "Która klasa ma najwięcej uczniów?",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Return the grade that has the greatest number of high schoolers.",
        "question_original_pl": "Zwróć klasę, w której jest najwięcej licealistów.",
        "question": "Return the grade that has the greatest number of students.",
        "question_pl": "Zwróć klasę z największą liczbą uczniów.",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Show me all grades that have at least 4 students.",
        "question_original_pl": "Pokaż mi wszystkie klasy, które mają co najmniej 4 uczniów.",
        "question": "Show me all grades that have at least 4 students.",
        "question_pl": "Pokaż mi wszystkie klasy, które mają co najmniej 4 uczniów.",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4"
    },
    {
        "db_id": "network_1",
        "question_original": "Which grades have 4 or more high schoolers?",
        "question_original_pl": "Które klasy mają 4 lub więcej licealistów?",
        "question": "Which grades have 4 or more students?",
        "question_pl": "Które klasy mają 4 lub więcej uczniów?",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "query_pl": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the student IDs and numbers of friends corresponding to each.",
        "question_original_pl": "Pokaż identyfikatory uczniów i numery znajomych odpowiadające każdemu z nich.",
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "question_pl": "Pokaż identyfikatory uczniów i numery znajomych odpowiadające każdemu z nich.",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "query_pl": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "How many friends does each student have?",
        "question_original_pl": "Ilu przyjaciół ma każdy uczeń?",
        "question": "How many friends does each student have?",
        "question_pl": "Ilu przyjaciół ma każdy uczeń?",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "query_pl": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of high school students and their corresponding number of friends.",
        "question_original_pl": "Pokaż nazwiska licealistów i odpowiadającą im liczbę znajomych.",
        "question": "Show the names of students and their corresponding number of friends.",
        "question_pl": "Pokaż imiona uczniów i odpowiadającą im liczbę znajomych.",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of the high schoolers and how many friends does each have?",
        "question_original_pl": "Jak nazywają się licealiści i ilu przyjaciół ma każdy z nich?",
        "question": "What are the names of the students and how many friends does each have?",
        "question_pl": "Jak nazywają się uczniowie i ilu przyjaciół ma każdy z nich?",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "What is the name of the high schooler who has the greatest number of friends?",
        "question_original_pl": "Jak nazywa się licealista, który ma największą liczbę przyjaciół?",
        "question": "What is the name of the student who has the greatest number of friends?",
        "question_pl": "Jak nazywa się uczeń, który ma najwięcej przyjaciół?",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Return the name of the high school student with the most friends.",
        "question_original_pl": "Podaj imię i nazwisko licealisty z największą liczbą przyjaciół.",
        "question": "Return the name of the student with the most friends.",
        "question_pl": "Zwróć imię ucznia z największą liczbą znajomych.",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of high schoolers who have at least 3 friends.",
        "question_original_pl": "Pokaż nazwiska licealistów, którzy mają co najmniej 3 przyjaciół.",
        "question": "Show the names of students who have at least 3 friends.",
        "question_pl": "Pokaż imiona uczniów, którzy mają co najmniej 3 przyjaciół.",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of high schoolers who have 3 or more friends?",
        "question_original_pl": "Jak nazywają się licealiści, którzy mają 3 lub więcej przyjaciół?",
        "question": "What are the names of students who have 3 or more friends?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają 3 lub więcej przyjaciół?",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of all of the high schooler Kyle's friends.",
        "question_original_pl": "Pokaż imiona wszystkich przyjaciół licealisty Kyle'a.",
        "question": "Show the names of all of the student Kyle's friends.",
        "question_pl": "Pokaż imiona wszystkich przyjaciół ucznia Kyle'a.",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Return the names of friends of the high school student Kyle.",
        "question_original_pl": "Podaj nazwiska przyjaciół licealisty Kyle'a.",
        "question": "Return the names of friends of the student Kyle.",
        "question_pl": "Zwróć nazwiska znajomych studenta Kyle'a.",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "How many friends does the high school student Kyle have?",
        "question_original_pl": "Ilu przyjaciół ma licealista Kyle?",
        "question": "How many friends does the student Kyle have?",
        "question_pl": "Ilu przyjaciół ma uczeń Kyle?",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Count the number of friends Kyle has.",
        "question_original_pl": "Policz, ilu przyjaciół ma Kyle.",
        "question": "Count the number of friends Kyle has.",
        "question_pl": "Policz, ilu przyjaciół ma Kyle.",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Show ids of all students who do not have any friends.",
        "question_original_pl": "Pokaż identyfikatory wszystkich uczniów, którzy nie mają żadnych znajomych.",
        "question": "Show ids of all students who do not have any friends.",
        "question_pl": "Pokaż identyfikatory wszystkich uczniów, którzy nie mają żadnych znajomych.",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "query_pl": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the ids of high school students who do not have friends?",
        "question_original_pl": "Jakie są identyfikatory licealistów, którzy nie mają przyjaciół?",
        "question": "What are the ids of students who do not have friends?",
        "question_pl": "Jakie są identyfikatory uczniów, którzy nie mają znajomych?",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "query_pl": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend"
    },
    {
        "db_id": "network_1",
        "question_original": "Show names of all high school students who do not have any friends.",
        "question_original_pl": "Pokaż nazwiska wszystkich licealistów, którzy nie mają przyjaciół.",
        "question": "Show names of all students who do not have any friends.",
        "question_pl": "Pokaż nazwiska wszystkich uczniów, którzy nie mają przyjaciół.",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "query_pl": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of students who have no friends?",
        "question_original_pl": "Jak nazywają się uczniowie, którzy nie mają przyjaciół?",
        "question": "What are the names of students who have no friends?",
        "question_pl": "Jak nazywają się uczniowie, którzy nie mają przyjaciół?",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "query_pl": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "question_original_pl": "Pokaż identyfikatory licealistów, którzy mają przyjaciół i są lubiani przez kogoś innego.",
        "question": "Show the ids of students who have friends and are also liked by someone else.",
        "question_pl": "Pokaż identyfikatory uczniów, którzy mają znajomych i są lubiani przez kogoś innego.",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "query_pl": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the ids of students who both have friends and are liked?",
        "question_original_pl": "Jakie są identyfikatory uczniów, którzy mają przyjaciół i są lubiani?",
        "question": "What are the ids of students who both have friends and are liked?",
        "question_pl": "Jakie są identyfikatory uczniów, którzy mają przyjaciół i są lubiani?",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "query_pl": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes"
    },
    {
        "db_id": "network_1",
        "question_original": "Show name of all students who have some friends and also are liked by someone else.",
        "question_original_pl": "Pokaż nazwiska wszystkich uczniów, którzy mają przyjaciół i są lubiani przez kogoś innego.",
        "question": "Show name of all students who have some friends and also are liked by someone else.",
        "question_pl": "Pokaż nazwiska wszystkich uczniów, którzy mają przyjaciół i są lubiani przez kogoś innego.",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of high schoolers who both have friends and are liked?",
        "question_original_pl": "Jak nazywają się licealiści, którzy mają przyjaciół i są lubiani?",
        "question": "What are the names of students who both have friends and are liked?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają przyjaciół i są lubiani?",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
    },
    {
        "db_id": "network_1",
        "question_original": "Count the number of likes for each student id.",
        "question_original_pl": "Policz liczbę polubień dla każdego identyfikatora ucznia.",
        "question": "Count the number of likes for each student id.",
        "question_pl": "Policz liczbę polubień dla każdego identyfikatora ucznia.",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "query_pl": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "How many likes correspond to each student id?",
        "question_original_pl": "Ile polubień odpowiada każdemu identyfikatorowi ucznia?",
        "question": "How many likes correspond to each student id?",
        "question_pl": "Ile polubień odpowiada każdemu identyfikatorowi ucznia?",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "query_pl": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "question_original_pl": "Pokaż nazwiska licealistów, którzy mają polubienia, oraz liczbę polubień każdego z nich.",
        "question": "Show the names of students who have likes, and numbers of likes for each.",
        "question_pl": "Pokaż imiona uczniów, którzy mają polubienia, oraz liczbę polubień każdego z nich.",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "question_original_pl": "Jak nazywają się licealiści, którzy mają polubienia i ile polubień ma każdy z nich?",
        "question": "What are the names of students who have likes, and how many likes does each have?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają polubienia i ile polubień ma każdy z nich?",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
    },
    {
        "db_id": "network_1",
        "question_original": "What is the name of the high schooler who has the greatest number of likes?",
        "question_original_pl": "Jak nazywa się licealista, który ma najwięcej polubień?",
        "question": "What is the name of the student who has the greatest number of likes?",
        "question_pl": "Jak nazywa się uczeń, który ma najwięcej polubień?",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Give the name of the student with the most likes.",
        "question_original_pl": "Podaj imię ucznia z największą liczbą polubień.",
        "question": "Give the name of the student with the most likes.",
        "question_pl": "Podaj imię ucznia z największą liczbą polubień.",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of students who have at least 2 likes.",
        "question_original_pl": "Pokaż imiona uczniów, którzy mają co najmniej 2 polubienia.",
        "question": "Show the names of students who have at least 2 likes.",
        "question_pl": "Pokaż imiona uczniów, którzy mają co najmniej 2 polubienia.",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of students who have 2 or more likes?",
        "question_original_pl": "Jak nazywają się uczniowie, którzy mają 2 lub więcej polubień?",
        "question": "What are the names of students who have 2 or more interests?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają 2 lub więcej zainteresowań?",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "network_1",
        "question_original": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "question_original_pl": "Pokaż nazwiska uczniów, którzy mają ocenę wyższą niż 5 i co najmniej 2 przyjaciół.",
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "question_pl": "Pokaż nazwiska uczniów, którzy mają ocenę wyższą niż 5 i co najmniej 2 przyjaciół.",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "network_1",
        "question_original": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "question_original_pl": "Jak nazywają się licealiści, którzy mają ocenę powyżej 5 i mają 2 lub więcej przyjaciół?",
        "question": "What are the names of students who have a grade of over 5 and have 2 or more friends?",
        "question_pl": "Jak nazywają się uczniowie, którzy mają ocenę powyżej 5 i mają 2 lub więcej przyjaciół?",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "network_1",
        "question_original": "How many likes does Kyle have?",
        "question_original_pl": "Ile polubień ma Kyle?",
        "question": "How many interests does Kyle have?",
        "question_pl": "Jak wiele zainteresowań ma Kyle?",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Return the number of likes that the high schooler named Kyle has.",
        "question_original_pl": "Zwróć liczbę polubień licealisty o imieniu Kyle.",
        "question": "Return the number of interests that the student named Kyle has.",
        "question_pl": "Zwróć liczbę zainteresowań ucznia o imieniu Kyle.",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_pl": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\""
    },
    {
        "db_id": "network_1",
        "question_original": "Find the average grade of all students who have some friends.",
        "question_original_pl": "Znajdź średnią ocen wszystkich uczniów, którzy mają znajomych.",
        "question": "Find the average grade of all students who have some friends.",
        "question_pl": "Znajdź średnią ocen wszystkich uczniów, którzy mają znajomych.",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_pl": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "db_id": "network_1",
        "question_original": "What is the average grade of students who have friends?",
        "question_original_pl": "Jaka jest średnia ocen uczniów, którzy mają przyjaciół?",
        "question": "What is the average grade of students who have friends?",
        "question_pl": "Jaka jest średnia ocen uczniów, którzy mają przyjaciół?",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_pl": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "db_id": "network_1",
        "question_original": "Find the minimum grade of students who have no friends.",
        "question_original_pl": "Znajdź minimalną liczbę uczniów, którzy nie mają przyjaciół.",
        "question": "Find the minimum grade of students who have no friends.",
        "question_pl": "Znajdź minimalną liczbę uczniów, którzy nie mają przyjaciół.",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_pl": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "db_id": "network_1",
        "question_original": "What is the lowest grade of students who do not have any friends?",
        "question_original_pl": "Jaka jest najniższa ocena uczniów, którzy nie mają żadnych przyjaciół?",
        "question": "What is the lowest grade of students who do not have any friends?",
        "question_pl": "Jaka jest najniższa ocena uczniów, którzy nie mają żadnych przyjaciół?",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_pl": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which states have both owners and professionals living there?",
        "question_original_pl": "W których stanach mieszkają zarówno właściciele, jak i profesjonaliści?",
        "question": "Which states have both guardians and veterinarians living there?",
        "question_pl": "W których stanach mieszkają zarówno opiekunowie, jak i weterynarze?",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "query_pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the states where both owners and professionals live.",
        "question_original_pl": "Znajdź stany, w których mieszkają zarówno właściciele, jak i profesjonaliści.",
        "question": "Find the states where both guardians and veterinarians live.",
        "question_pl": "Znajdź stany, w których mieszkają zarówno opiekunowie, jak i weterynarze.",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "query_pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the average age of the dogs who have gone through any treatments?",
        "question_original_pl": "Jaki jest średni wiek psów, które przeszły jakiekolwiek leczenie?",
        "question": "What is the average age of the dogs who have gone through any medical care?",
        "question_pl": "Jaki jest średni wiek psów, które przeszły jakąkolwiek opiekę medyczną?",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "query_pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the average age of the dogs who went through treatments.",
        "question_original_pl": "Znajdź średni wiek psów, które przeszły leczenie.",
        "question": "Find the average age of the dogs who went through health care.",
        "question_pl": "Znajdź średni wiek psów, które przeszły przez opiekę zdrowotną.",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "query_pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "question_original_pl": "Którzy specjaliści mieszkają w stanie Indiana lub przeprowadzili więcej niż 2 zabiegi? Wymień jego imię, nazwisko i telefon komórkowy.",
        "question": "Which veterinarians live in the state of Indiana or have done more than 2 medical cares? List his or her id, family name and cell phone.",
        "question_pl": "Którzy weterynarze mieszkają w stanie Indiana lub wykonali więcej niż 2 zabiegi medyczne? Wymień jego nazwisko, imię i telefon komórkowy.",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "query_pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  \"Indiana\" UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "question_original_pl": "Znajdź identyfikator, nazwisko i telefon komórkowy specjalistów, którzy mieszkają w stanie Indiana lub wykonali więcej niż dwa zabiegi.",
        "question": "Find the id, last name and cell phone of the veterinarians who live in the state of Indiana or have performed more than two health-cares.",
        "question_pl": "Znajdź identyfikator, nazwisko i telefon komórkowy weterynarzy, którzy mieszkają w stanie Indiana lub wykonali więcej niż dwa zabiegi medyczne.",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "query_pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  \"Indiana\" UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
        "question_original_pl": "Które psy nie kosztowały swojego właściciela więcej niż 1000 za leczenie? Wymień imiona psów.",
        "question": "Which dogs have not cost their guardian more than 1000 for health-care? List the dog names.",
        "question_pl": "Które psy nie kosztowały swojego opiekuna więcej niż 1000 złotych na opiekę zdrowotną? Wymień imiona psów.",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
        "query_pl": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the names of the dogs for which the owner spent more than 1000 for treatment?",
        "question_original_pl": "Jak nazywają się psy, na których leczenie właściciel nie wydał więcej niż 1000 zł?",
        "question": "What are the names of the dogs for which the guardian spent more than 1000 for health-care?",
        "question_pl": "Jak nazywają się psy, na których opiekę zdrowotną opiekun wydał ponad 1000 zł?",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
        "query_pl": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which first names are used for professionals or owners but are not used as dog names?",
        "question_original_pl": "Które imiona są używane przez profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów?",
        "question": "Which first names are used for veterinarians or guardians but are not used as dog names?",
        "question_pl": "Które imiona są używane przez weterynarzy lub opiekunów, ale nie są używane jako imiona dla psów?",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "query_pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the first names that are used for professionals or owners but are not used as dog names.",
        "question_original_pl": "Znajdź imiona, które są używane dla profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów.",
        "question": "Find the first names that are used for veterinarians or guardians but are not used as dog names.",
        "question_pl": "Znajdź imiona, które są używane przez weterynarzy lub opiekunów, ale nie są używane jako imiona dla psów.",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "query_pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "question_original_pl": "Który specjalista nie wykonywał żadnych zabiegów na psach? Podaj identyfikator, rolę i adres e-mail specjalisty.",
        "question": "Which veterinarian did not operate any medical care on dogs? List the veterinarian's id, role and email.",
        "question_pl": "Który weterynarz nie prowadził żadnej opieki medycznej nad psami? Podaj identyfikator, stanowisko i adres e-mail weterynarza.",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_pl": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "question_original_pl": "Podaj mi identyfikator, rolę i adres e-mail specjalistów, którzy nie wykonywali żadnych zabiegów na psach.",
        "question": "Give me the id, role and email of the veterinarians who did not perform any health-care on dogs.",
        "question_pl": "Podaj mi identyfikator, rolę i adres e-mail weterynarzy, którzy nie wykonywali żadnych czynności medycznych na psach.",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_pl": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which owner owns the most dogs? List the owner id, first name and last name.",
        "question_original_pl": "Który właściciel ma najwięcej psów? Wymień identyfikator właściciela, imię i nazwisko.",
        "question": "Which people owns the most dogs? List the people id, given name and family name.",
        "question_pl": "Którzy ludzie posiadają najwięcej psów? Wymień identyfikator, imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Return the owner id, first name and last name of the owner who has the most dogs.",
        "question_original_pl": "Zwróć identyfikator, imię i nazwisko właściciela, który ma najwięcej psów.",
        "question": "Return the people id, given name and family name of the guardian who has the most dogs.",
        "question_pl": "Zwróć identyfikator, imię i nazwisko opiekuna, który ma najwięcej psów.",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "question_original_pl": "Którzy specjaliści wykonali co najmniej dwa zabiegi? Wymień identyfikator, rolę i imię specjalisty.",
        "question": "Which veterinarians have done at least two medical cares? List the veterinarian's id, role, and given name.",
        "question_pl": "Którzy lekarze weterynarii wykonali co najmniej dwa zabiegi medyczne? Wymień identyfikator, rolę i imię weterynarza.",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "question_original_pl": "Jaki jest identyfikator, rola i imię specjalistów, którzy wykonali dwa lub więcej zabiegów?",
        "question": "What are the id, role, and given name of the veterinarians who have performed two or more health-cares?",
        "question_pl": "Jaki jest identyfikator, rola i nazwisko lekarza weterynarii, który wykonał dwie lub więcej czynności medycznych?",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the name of the breed with the most dogs?",
        "question_original_pl": "Jak nazywa się rasa z największą liczbą psów?",
        "question": "What is the name of the breed with the most puppies?",
        "question_pl": "Jak nazywa się rasa z największą liczbą szczeniąt?",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which breed do the most dogs have? Give me the breed name.",
        "question_original_pl": "Jakiej rasy jest najwięcej psów? Podaj nazwę rasy.",
        "question": "Which breed do the most puppies have? Give me the breed name.",
        "question_pl": "Jakiej rasy jest najwięcej szczeniąt? Podaj nazwę rasy.",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "question_original_pl": "Który właściciel zapłacił za najwięcej zabiegów na swoich psach? Wymień identyfikator i nazwisko właściciela.",
        "question": "Which guardian has paid for the most health cares on his or her dogs? List the guardian id and family name.",
        "question_pl": "Który z opiekunów zapłacił najwięcej za opiekę zdrowotną swoich psów? Wymień identyfikator opiekuna i nazwisko rodziny.",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "question_original_pl": "Podaj mi identyfikator i nazwisko właściciela, który wydał najwięcej na leczenie swoich psów.",
        "question": "Tell me the guardian id and family name of the guardian who spent the most on treatments of his or her puppies.",
        "question_pl": "Podaj mi identyfikator opiekuna i nazwisko rodziny opiekuna, który wydał najwięcej na leczenie swoich szczeniąt.",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the description of the treatment type that costs the least money in total?",
        "question_original_pl": "Jaki jest opis rodzaju leczenia, które kosztuje łącznie najmniej pieniędzy?",
        "question": "What is the describing details of the health-care type that costs the least money in total?",
        "question_pl": "Jakie są szczegóły opisujące rodzaj opieki zdrowotnej, która kosztuje łącznie najmniej pieniędzy?",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "query_pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Give me the description of the treatment type whose total cost is the lowest.",
        "question_original_pl": "Podaj opis rodzaju leczenia, którego całkowity koszt jest najniższy.",
        "question": "Give me the describing details of the health-care whose total cost is the lowest.",
        "question_pl": "Podaj mi szczegóły opisujące opiekę zdrowotną, której całkowity koszt jest najniższy.",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "query_pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "question_original_pl": "Który właściciel zapłacił łącznie największą kwotę za swoje psy? Pokaż identyfikator i kod pocztowy właściciela.",
        "question": "Which guardian has paid the largest amount of money in total for their puppies? Show the guardian id and zip code.",
        "question_pl": "Który opiekun zapłacił łącznie najwięcej pieniędzy za swoje szczenięta? Pokaż identyfikator opiekuna i kod pocztowy.",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "question_original_pl": "Znajdź identyfikator i kod pocztowy właściciela, który wydał łącznie najwięcej pieniędzy na swoje psy.",
        "question": "Find the guardian id and zip code of the guardian who spent the most money in total for his or her puppies.",
        "question_pl": "Znajdź identyfikator i kod pocztowy opiekuna, który wydał łącznie najwięcej pieniędzy na swoje szczenięta.",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "query_pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "question_original_pl": "Którzy specjaliści wykonali co najmniej dwa rodzaje zabiegów? Wymień identyfikator i telefon komórkowy specjalisty.",
        "question": "Which veterinarians have done at least two types of health-care? List the veterinarian id and cell phone.",
        "question_pl": "Którzy weterynarze wykonali co najmniej dwa rodzaje opieki zdrowotnej? Wymień identyfikator i telefon komórkowy weterynarza.",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "question_original_pl": "Znajdź identyfikator i telefon komórkowy specjalistów, którzy wykonują dwa lub więcej rodzajów zabiegów.",
        "question": "Find the id and cell phone of the veterinarians who operate two or more types of health-care.",
        "question_pl": "Znajdź identyfikator i telefon komórkowy weterynarzy, którzy prowadzą dwa lub więcej rodzajów opieki zdrowotnej.",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "question_original_pl": "Jakie są imiona i nazwiska specjalistów, którzy przeprowadzili leczenie przy kosztach poniżej średniej?",
        "question": "What are the first name and family name of the veterinarians who have done medical care with cost below average?",
        "question_pl": "Jakie są imiona i nazwiska lekarzy weterynarii, którzy zapewnili opiekę medyczną poniżej średniej?",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN  Treatments AS T2 on T2.professional_id = T1.professional_id WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "question_original_pl": "Którzy specjaliści przeprowadzili zabieg kosztujący mniej niż średnia? Podaj ich imiona i nazwiska.",
        "question": "Which veterinarians have operated a medical care that costs less than the average? Give me theor given names and family names.",
        "question_pl": "Którzy weterynarze prowadzili opiekę medyczną, która kosztuje mniej niż średnia? Podaj ich imiona i nazwiska.",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 on T2.professional_id = T1.professional_id WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the date of each treatment, together with the first name of the professional who operated it.",
        "question_original_pl": "Wymień datę każdego zabiegu wraz z imieniem i nazwiskiem specjalisty, który go przeprowadził.",
        "question": "List the date of each medical care, together with the given name of the veterinarian who operated it.",
        "question_pl": "Wymień datę każdej opieki medycznej wraz z nazwiskiem lekarza weterynarii, który ją przeprowadził.",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_pl": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the date and the operating professional's first name of each treatment?",
        "question_original_pl": "Jaka jest data i imię specjalisty wykonującego każdy zabieg?",
        "question": "What are the date and the operating veterinarian's given name of each medical care?",
        "question_pl": "Jaka jest data i nazwisko lekarza weterynarii prowadzącego w przypadku każdej opieki medycznej?",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_pl": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the cost of each treatment and the corresponding treatment type description.",
        "question_original_pl": "Wymień koszt każdego zabiegu i odpowiadający mu opis rodzaju zabiegu.",
        "question": "List the cost of each health-care and the corresponding health-care type describing details.",
        "question_pl": "Wymień koszt każdej opieki zdrowotnej i odpowiadającego jej typu, opisując szczegóły.",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "query_pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the cost and treatment type description of each treatment?",
        "question_original_pl": "Jaki jest koszt i opis każdego rodzaju leczenia?",
        "question": "What are the cost and health-care type describing content of each health-care?",
        "question_pl": "Jaki jest koszt i rodzaj opieki zdrowotnej opisujący zawartość każdej opieki zdrowotnej?",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "query_pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List each owner's first name, last name, and the size of his for her dog.",
        "question_original_pl": "Wymień imię, nazwisko i wielkość psa każdego właściciela.",
        "question": "List each guardian's first name, last name, and the size of his for her dog.",
        "question_pl": "Wymień imię, nazwisko i wielkość psa każdego opiekuna.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are each owner's first name, last name, and the size of their dog?",
        "question_original_pl": "Jakie jest imię, nazwisko i wielkość psa każdego z właścicieli?",
        "question": "What are each guardians's first name, last name, and the size of their dog?",
        "question_pl": "Jakie jest imię, nazwisko i wielkość psa każdego z opiekunów?",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List pairs of the owner's first name and the dogs's name.",
        "question_original_pl": "Wymień pary imion właściciela i psów.",
        "question": "List pairs of the guardians's given name and the puppies's name.",
        "question_pl": "Wymień pary imion opiekunów i szczeniąt.",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are each owner's first name and their dogs's name?",
        "question_original_pl": "Jakie jest imię każdego właściciela i imię jego psa?",
        "question": "What are each guardians's given name and their puppies's name?",
        "question_pl": "Jakie są imiona opiekunów i ich szczeniąt?",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "question_original_pl": "Wymień nazwy psów najrzadszych ras i daty ich leczenia.",
        "question": "List the names of the puppies of the rarest breed and the health care dates of them.",
        "question_pl": "Wymień imiona szczeniąt najrzadszej rasy i daty ich opieki zdrowotnej.",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "question_original_pl": "Które psy należą do najrzadszych ras? Podaj ich imiona i daty leczenia.",
        "question": "Which dogs are of the rarest breed? Show their names and medical care dates.",
        "question_pl": "Które psy należą do najrzadszych ras? Podaj ich imiona i daty opieki medycznej.",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "question_original_pl": "Które psy są własnością kogoś, kto mieszka w Wirginii? Wymień imię właściciela i imię psa.",
        "question": "Which dogs are owned by someone who lives in Virginia? List the guardian's first name and the dog's name.",
        "question_pl": "Które psy są własnością osoby mieszkającej w Wirginii? Wymień imię opiekuna i imię psa.",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"Wirginia\""
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the first names of owners living in Virginia and the names of dogs they own.",
        "question_original_pl": "Znajdź imiona właścicieli mieszkających w Wirginii i imiona psów, które posiadają.",
        "question": "Find the given names of guardians living in Virginia and the names of dogs they own.",
        "question_pl": "Znajdź imiona opiekunów mieszkających w Wirginii i imiona psów, których są właścicielami.",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "query_pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  \"Wirginia\""
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "question_original_pl": "Jaka jest data przybycia i data odejścia psów, które przeszły leczenie?",
        "question": "What are the arriving and leaving date of the puppies who have gone through a medical care?",
        "question_pl": "Jakie są daty przyjazdu i wyjazdu szczeniąt, które przeszły opiekę medyczną?",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "query_pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "question_original_pl": "Znajdź datę przybycia i datę odejścia psów, które zostały poddane leczeniu.",
        "question": "Find the arriving and leaving date of the puppies that received a health care.",
        "question_pl": "Znajdź datę przybycia i odejścia szczeniąt, które otrzymały opiekę zdrowotną.",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "query_pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the last name of the owner owning the youngest dog.",
        "question_original_pl": "Podaj nazwisko właściciela najmłodszego psa.",
        "question": "List the family name of the guardian owning the youngest puppy.",
        "question_pl": "Podaj nazwisko rodziny opiekuna najmłodszego szczeniaka.",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "query_pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Who owns the youngest dog? Give me his or her last name.",
        "question_original_pl": "Kto jest właścicielem najmłodszego psa? Podaj jego lub jej nazwisko.",
        "question": "Who owns the youngest puppy? Give me his or her last name.",
        "question_pl": "Kto jest właścicielem najmłodszego szczeniaka? Podaj jego lub jej nazwisko.",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "query_pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "question_original_pl": "Wymień adresy e-mail specjalistów, którzy mieszkają na Hawajach lub w stanie Wisconsin.",
        "question": "List the emails of the veterinarians who live in the state of Hawaii or the state of Wisconsin.",
        "question_pl": "Podaj adresy e-mail lekarzy weterynarii mieszkających na Hawajach lub w stanie Wisconsin.",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "query_pl": "SELECT email_address FROM Professionals WHERE state  =  \"Hawaje\" OR state  =  \"Wisconsin\""
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "question_original_pl": "Jakie są e-maile profesjonalistów mieszkających na Hawajach lub w stanie Wisconsin?",
        "question": "What are the emails of the veterinarians living in either the state of Hawaii or the state of Wisconsin?",
        "question_pl": "Jakie są e-maile weterynarzy mieszkających na Hawajach lub w stanie Wisconsin?",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "query_pl": "SELECT email_address FROM Professionals WHERE state  =  \"Hawaje\" OR state  =  \"Wisconsin\""
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the arriving date and the departing date of all the dogs?",
        "question_original_pl": "Jaka jest data przyjazdu i wyjazdu wszystkich psów?",
        "question": "What are the arriving and leaving date of all the puppies?",
        "question_pl": "Jakie są daty przyjazdu i wyjazdu wszystkich szczeniąt?",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "query_pl": "SELECT date_arrived ,  date_departed FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the arrival date and the departure date for all the dogs.",
        "question_original_pl": "Podaj datę przyjazdu i wyjazdu wszystkich psów.",
        "question": "List the arriving and leaving date for all the puppies.",
        "question_pl": "Podaj datę przyjazdu i wyjazdu wszystkich szczeniąt.",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "query_pl": "SELECT date_arrived ,  date_departed FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many dogs went through any treatments?",
        "question_original_pl": "Ile psów przeszło jakiekolwiek leczenie?",
        "question": "How many puppies went through any health cares?",
        "question_pl": "Ile szczeniąt przeszło jakąkolwiek opiekę zdrowotną?",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "query_pl": "SELECT count(DISTINCT dog_id) FROM Treatments"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Count the number of dogs that went through a treatment.",
        "question_original_pl": "Policz liczbę psów, które przeszły leczenie.",
        "question": "Count the number of puppies that went through a health care.",
        "question_pl": "Policz liczbę szczeniąt, które przeszły opiekę zdrowotną.",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "query_pl": "SELECT count(DISTINCT dog_id) FROM Treatments"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many professionals have performed any treatment to dogs?",
        "question_original_pl": "Ilu specjalistów wykonywało jakiekolwiek zabiegi na psach?",
        "question": "How many veterinarians have performed any health care to puppies?",
        "question_pl": "Ilu weterynarzy sprawowało opiekę zdrowotną nad szczeniętami?",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "query_pl": "SELECT count(DISTINCT professional_id) FROM Treatments"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the number of professionals who have ever treated dogs.",
        "question_original_pl": "Znajdź liczbę specjalistów, którzy kiedykolwiek leczyli psy.",
        "question": "Find the number of veterinarians who have ever treated puppies.",
        "question_pl": "Znajdź liczbę weterynarzy, którzy kiedykolwiek leczyli szczenięta.",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "query_pl": "SELECT count(DISTINCT professional_id) FROM Treatments"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "question_original_pl": "Którzy specjaliści mieszkają w mieście zawierającym podciąg \"Zachód\"? Wymień jego/jej stanowisko, ulicę, miasto i stan.",
        "question": "Which veterinarians live in a city containing the substring 'West'? List his or her role, street, town and state.",
        "question_pl": "Którzy weterynarze mieszkają w mieście zawierającym podciąg \"Zachód\"? Wymień jego/jej zawód, ulicę, miasto i stan.",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "query_pl": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%Zachód%'"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "question_original_pl": "Znajdź rolę, ulicę, miasto i stan specjalistów mieszkających w mieście zawierającym podciąg \"Zachód\".",
        "question": "Find the role, street, town and state of the veterinarians living in a town that contains the substring 'West'.",
        "question_pl": "Znajdź rolę, ulicę, miasto i stan weterynarzy mieszkających w mieście zawierającym podciąg \"Zachód\".",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "query_pl": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%Zachód%'"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "question_original_pl": "Którzy właściciele mieszkają w stanie, którego nazwa zawiera podciąg \"Północ\"? Wymień jego imię, nazwisko i adres e-mail.",
        "question": "Which guardians live in the state whose name contains the substring 'North'? List his given name, family name and email.",
        "question_pl": "Którzy opiekunowie mieszkają w stanie, którego nazwa zawiera podciąg \"Północ\"? Wymień jego imię, nazwisko i adres e-mail.",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "query_pl": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%Północ%'"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "question_original_pl": "Zwróć imię, nazwisko i adres e-mail właścicieli mieszkających w stanie, którego nazwa zawiera podciąg \"Północ\".",
        "question": "Return the given name, family name and email of the guardians living in a state whose name contains the substring 'North'.",
        "question_pl": "Zwróć imię, nazwisko i adres e-mail opiekunów mieszkających w stanie, którego nazwa zawiera podciąg \"Północ\".",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "query_pl": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%Północ%'"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many dogs have an age below the average?",
        "question_original_pl": "Ile psów ma wiek poniżej średniej?",
        "question": "How many puppies have an age below the average?",
        "question_pl": "Ile szczeniąt ma wiek poniżej średniej?",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "query_pl": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Count the number of dogs of an age below the average.",
        "question_original_pl": "Policz liczbę psów w wieku poniżej średniej.",
        "question": "Count the number of puppies of an age below the average.",
        "question_pl": "Policz liczbę szczeniąt w wieku poniżej średniej.",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "query_pl": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How much does the most recent treatment cost?",
        "question_original_pl": "Ile kosztuje ostatnie leczenie?",
        "question": "How much does the most recent health-care cost?",
        "question_pl": "Ile kosztuje najnowsza opieka zdrowotna?",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "query_pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Show me the cost of the most recently performed treatment.",
        "question_original_pl": "Pokaż koszt ostatnio wykonanego zabiegu.",
        "question": "Show me the cost of the most recently performed medical care.",
        "question_pl": "Pokaż mi koszt ostatnio wykonanej opieki medycznej.",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "query_pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many dogs have not gone through any treatment?",
        "question_original_pl": "Ile psów nie przeszło żadnego leczenia?",
        "question": "How many puppies have not gone through any medical care?",
        "question_pl": "Ile szczeniąt nie przeszło żadnej opieki medycznej?",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "query_pl": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Tell me the number of dogs that have received any treatment.",
        "question_original_pl": "Podaj liczbę psów, które nie zostały poddane żadnemu leczeniu.",
        "question": "Tell me the number of puppies that have received any health-care.",
        "question_pl": "Podaj liczbę szczeniąt, które otrzymały jakąkolwiek opiekę zdrowotną.",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "query_pl": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many owners temporarily do not have any dogs?",
        "question_original_pl": "Ilu właścicieli tymczasowo nie posiada psów?",
        "question": "How many guardians temporarily do not have any puppies?",
        "question_pl": "Ilu opiekunów tymczasowo nie ma szczeniąt?",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "query_pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the number of owners who do not own any dogs at this moment.",
        "question_original_pl": "Znajdź liczbę właścicieli, którzy nie posiadają obecnie żadnych psów.",
        "question": "Find the number of guardians who do not own any puppies at this moment.",
        "question_pl": "Znajdź liczbę opiekunów, którzy nie posiadają obecnie żadnych szczeniąt.",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "query_pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How many professionals did not operate any treatment on dogs?",
        "question_original_pl": "Ilu specjalistów nie przeprowadziło żadnego zabiegu na psach?",
        "question": "How many veterinarians did not operate any treatment on puppies?",
        "question_pl": "Ilu weterynarzy nie przeprowadziło żadnego zabiegu na szczeniętach?",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "query_pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the number of professionals who have not treated any dogs.",
        "question_original_pl": "Znajdź liczbę specjalistów, którzy nie leczyli żadnego psa.",
        "question": "Find the number of veterinarians who have not treated any puppies.",
        "question_pl": "Znajdź liczbę weterynarzy, którzy nie leczyli żadnych szczeniąt.",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "query_pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "question_original_pl": "Wymień imię, wiek i wagę psów, które zostały porzucone? 1 oznacza tak, a 0 oznacza nie.",
        "question": "List the puppy name, age and weight of the puppies who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "question_pl": "Wymień imię, wiek i wagę szczeniąt, które zostały porzucone? 1 oznacza tak, a 0 oznacza nie.",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "query_pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "question_original_pl": "Jakie są imiona, wiek i waga psów, które zostały porzucone? Zwróć uwagę, że 1 oznacza \"tak\", a 0 oznacza \"nie\" w tabelach.",
        "question": "What are the puppy name, age and weight of the puppies that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "question_pl": "Jakie są imiona, wiek i waga porzuconych szczeniąt? Zwróć uwagę, że 1 oznacza \"tak\", a 0 oznacza \"nie\" w tabelach.",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "query_pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the average age of all the dogs?",
        "question_original_pl": "Jaki jest średni wiek wszystkich psów?",
        "question": "What is the average age of all the puppies?",
        "question_pl": "Jaki jest średni wiek wszystkich szczeniąt?",
        "query": "SELECT avg(age) FROM Dogs",
        "query_pl": "SELECT avg(age) FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Compute the average age of all the dogs.",
        "question_original_pl": "Oblicz średni wiek wszystkich psów.",
        "question": "Compute the average age of all the puppies.",
        "question_pl": "Oblicz średni wiek wszystkich szczeniąt.",
        "query": "SELECT avg(age) FROM Dogs",
        "query_pl": "SELECT avg(age) FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the age of the oldest dog?",
        "question_original_pl": "Jaki jest wiek najstarszego psa?",
        "question": "What is the age of the oldest puppy?",
        "question_pl": "Jaki jest wiek najstarszego szczeniaka?",
        "query": "SELECT max(age) FROM Dogs",
        "query_pl": "SELECT max(age) FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Tell me the age of the oldest dog.",
        "question_original_pl": "Podaj wiek najstarszego psa.",
        "question": "Tell me the age of the oldest puppy.",
        "question_pl": "Podaj mi wiek najstarszego szczeniaka.",
        "query": "SELECT max(age) FROM Dogs",
        "query_pl": "SELECT max(age) FROM Dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How much does each charge type costs? List both charge type and amount.",
        "question_original_pl": "Ile kosztuje każdy rodzaj opłaty? Wymień zarówno rodzaj opłaty, jak i kwotę.",
        "question": "How much does each charge type costs? List both charge type and amount.",
        "question_pl": "Ile kosztuje każdy rodzaj opłaty? Wymień zarówno rodzaj opłaty, jak i kwotę.",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "query_pl": "SELECT charge_type ,  charge_amount FROM Charges"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List each charge type and its amount.",
        "question_original_pl": "Wymień każdy rodzaj opłaty i jej kwotę.",
        "question": "List each charge type and its amount.",
        "question_pl": "Wymień każdy rodzaj opłaty i jej kwotę.",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "query_pl": "SELECT charge_type ,  charge_amount FROM Charges"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "How much does the most expensive charge type costs?",
        "question_original_pl": "Ile kosztuje najdroższy typ doładowania?",
        "question": "How much does the most expensive charge type costs?",
        "question_pl": "Ile kosztuje najdroższy typ doładowania?",
        "query": "SELECT max(charge_amount) FROM Charges",
        "query_pl": "SELECT max(charge_amount) FROM Charges"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What is the charge amount of the most expensive charge type?",
        "question_original_pl": "Jaka jest kwota doładowania najdroższego typu doładowania?",
        "question": "What is the charge amount of the most expensive charge type?",
        "question_pl": "Jaka jest kwota doładowania najdroższego typu doładowania?",
        "query": "SELECT max(charge_amount) FROM Charges",
        "query_pl": "SELECT max(charge_amount) FROM Charges"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the email, cell phone and home phone of all the professionals.",
        "question_original_pl": "Podaj adres e-mail, telefon komórkowy i telefon domowy wszystkich specjalistów.",
        "question": "List the email, cell phone and home phone of all the veterinarians.",
        "question_pl": "Podaj adres e-mail, telefon komórkowy i telefon domowy wszystkich lekarzy weterynarii.",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "query_pl": "SELECT email_address ,  cell_number ,  home_phone FROM professionals"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are the email, cell phone and home phone of each professional?",
        "question_original_pl": "Jaki jest adres e-mail, telefon komórkowy i telefon domowy każdego specjalisty?",
        "question": "What are the email, cell phone and home phone of each veterinarian?",
        "question_pl": "Jaki jest adres e-mail, telefon komórkowy i telefon domowy każdego lekarza weterynarii?",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "query_pl": "SELECT email_address ,  cell_number ,  home_phone FROM professionals"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are all the possible breed type and size type combinations?",
        "question_original_pl": "Jakie są wszystkie możliwe kombinacje typu rasy i rozmiaru?",
        "question": "What are all the possible breed type and size type combinations?",
        "question_pl": "Jakie są wszystkie możliwe kombinacje typu rasy i rozmiaru?",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "query_pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "Find the distinct breed type and size type combinations for dogs.",
        "question_original_pl": "Znajdź różne kombinacje typu rasy i rozmiaru dla psów.",
        "question": "Find the distinct breed type and size type combinations for puppies.",
        "question_pl": "Znajdź różne kombinacje typu rasy i rozmiaru dla szczeniąt.",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "query_pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "List the first name of all the professionals along with the description of the treatment they have done.",
        "question_original_pl": "Wymień imiona i nazwiska wszystkich specjalistów wraz z opisem przeprowadzonego przez nich leczenia.",
        "question": "List the given name of all the veterinarians along with the description of the medical care they have done.",
        "question_pl": "Wymień nazwiska wszystkich lekarzy weterynarii wraz z opisem opieki medycznej, którą sprawowali.",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
    },
    {
        "db_id": "dog_kennels",
        "question_original": "What are each professional's first name and description of the treatment they have performed?",
        "question_original_pl": "Podaj imię i nazwisko każdego specjalisty oraz opis zabiegu, który wykonał?",
        "question": "What are each veterinarian's first name and describing details of the health-care they have performed?",
        "question_pl": "Podaj imię i nazwisko każdego lekarza weterynarii oraz szczegóły dotyczące opieki zdrowotnej, którą sprawował?",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "query_pl": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
    },
    {
        "db_id": "singer",
        "question_original": "How many singers are there?",
        "question_original_pl": "Ilu jest piosenkarzy?",
        "question": "How many vocalists are there?",
        "question_pl": "Ilu jest wokalistów?",
        "query": "SELECT count(*) FROM singer",
        "query_pl": "SELECT count(*) FROM singer"
    },
    {
        "db_id": "singer",
        "question_original": "What is the count of singers?",
        "question_original_pl": "Jaka jest liczba piosenkarzy?",
        "question": "What is the count of  musicians?",
        "question_pl": "Jaka jest liczba muzyków?",
        "query": "SELECT count(*) FROM singer",
        "query_pl": "SELECT count(*) FROM singer"
    },
    {
        "db_id": "singer",
        "question_original": "List the name of singers in ascending order of net worth.",
        "question_original_pl": "Wymień nazwiska piosenkarzy w kolejności rosnącej według wartości netto.",
        "question": "List the name of vocalists in ascending order of net worth.",
        "question_pl": "Wymień nazwiska wokalistów w kolejności rosnącej według wartości netto.",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC"
    },
    {
        "db_id": "singer",
        "question_original": "What are the names of singers ordered by ascending net worth?",
        "question_original_pl": "Jakie są nazwiska piosenkarzy uporządkowane według rosnącej wartości netto?",
        "question": "What are the names of  musicians ordered by ascending net worth?",
        "question_pl": "Jakie są nazwiska muzyków uporządkowane według rosnącej wartości netto?",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC"
    },
    {
        "db_id": "singer",
        "question_original": "What are the birth year and citizenship of singers?",
        "question_original_pl": "Jaki jest rok urodzenia i obywatelstwo piosenkarzy?",
        "question": "What are the birth year and country of vocalists?",
        "question_pl": "Jaki jest rok urodzenia i kraj wokalistów?",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "query_pl": "SELECT Birth_Year ,  Citizenship FROM singer"
    },
    {
        "db_id": "singer",
        "question_original": "What are the birth years and citizenships of the singers?",
        "question_original_pl": "Jakie są lata urodzenia i obywatelstwa piosenkarzy?",
        "question": "What are the birth years and country of the musicians?",
        "question_pl": "Jakie są lata urodzenia i kraj muzyków?",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "query_pl": "SELECT Birth_Year ,  Citizenship FROM singer"
    },
    {
        "db_id": "singer",
        "question_original": "List the name of singers whose citizenship is not \"France\".",
        "question_original_pl": "Wymień nazwiska piosenkarzy, których obywatelstwo nie brzmi \"Francja\".",
        "question": "List the name of vocalists whose citizenship is not \"France\".",
        "question_pl": "Wymień nazwiska wokalistów, których obywatelstwo nie brzmi \"Francja\".",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "query_pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\""
    },
    {
        "db_id": "singer",
        "question_original": "What are the names of the singers who are not French citizens?",
        "question_original_pl": "Jak nazywają się piosenkarze, którzy nie są obywatelami Francji?",
        "question": "What are the names of the musicians who are not French citizens?",
        "question_pl": "Jak nazywają się muzycy, którzy nie są obywatelami Francji?",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "query_pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\""
    },
    {
        "db_id": "singer",
        "question_original": "Show the name of singers whose birth year is either 1948 or 1949?",
        "question_original_pl": "Pokaż nazwiska piosenkarzy, których rok urodzenia to 1948 lub 1949?",
        "question": "Show the name of vocalists whose birth year is either 1948 or 1949?",
        "question_pl": "Podaj nazwiska wokalistów, których rok urodzenia to 1948 lub 1949?",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "query_pl": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949"
    },
    {
        "db_id": "singer",
        "question_original": "What are the names of the singers whose birth years are either 1948 or 1949?",
        "question_original_pl": "Jak nazywają się piosenkarze, których rok urodzenia to 1948 lub 1949?",
        "question": "What are the names of the musicians whose birth years are either 1948 or 1949?",
        "question_pl": "Jak nazywają się muzycy, których rok urodzenia to 1948 lub 1949?",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "query_pl": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949"
    },
    {
        "db_id": "singer",
        "question_original": "What is the name of the singer with the largest net worth?",
        "question_original_pl": "Jak nazywa się piosenkarz o największej wartości netto?",
        "question": "What is the name of the vocalist with the largest net worth?",
        "question_pl": "Jak nazywa się wokalista o największej wartości netto?",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1"
    },
    {
        "db_id": "singer",
        "question_original": "What is the name of the singer who is worth the most?",
        "question_original_pl": "Jak nazywa się piosenkarz, który jest wart najwięcej?",
        "question": "What is the name of the vocalist who is worth the most?",
        "question_pl": "Jak nazywa się wokalista, który jest wart najwięcej?",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "query_pl": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1"
    },
    {
        "db_id": "singer",
        "question_original": "Show different citizenship of singers and the number of singers of each citizenship.",
        "question_original_pl": "Pokaż różne obywatelstwa piosenkarzy i liczbę piosenkarzy każdego obywatelstwa.",
        "question": "Show different citizenship of vocalists and the number of vocalists of each country.",
        "question_pl": "Pokaż różne obywatelstwa wokalistów i liczbę wokalistów z każdego kraju.",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "query_pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
    },
    {
        "db_id": "singer",
        "question_original": "For each citizenship, how many singers are from that country?",
        "question_original_pl": "Dla każdego obywatelstwa, ilu piosenkarzy pochodzi z tego kraju?",
        "question": "For each country, how many musicians are from that country?",
        "question_pl": "Dla każdego kraju, ilu muzyków pochodzi z tego kraju?",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "query_pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
    },
    {
        "db_id": "singer",
        "question_original": "Please show the most common citizenship of singers.",
        "question_original_pl": "Wskaż najpopularniejsze obywatelstwo piosenkarzy.",
        "question": "Please show the most common country of vocalists.",
        "question_pl": "Wskaż najbardziej popularny kraj wokalistów.",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "singer",
        "question_original": "What is the msot common singer citizenship?",
        "question_original_pl": "Jakie jest najpopularniejsze obywatelstwo piosenkarza?",
        "question": "What is the msot common vocalist country?",
        "question_pl": "Jaki jest najpopularniejszy kraj wśród wokalistów?",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "select citizenship from singer group by citizenship order by count(*) desc limit 1"
    },
    {
        "db_id": "singer",
        "question_original": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "question_original_pl": "Pokaż różne obywatelstwa i maksymalną wartość netto piosenkarzy każdego obywatelstwa.",
        "question": "Show different country and the maximum net worth of musicians of each country.",
        "question_pl": "Pokaż różne kraje i maksymalną wartość netto muzyków z każdego kraju.",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "query_pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
    },
    {
        "db_id": "singer",
        "question_original": "For each citizenship, what is the maximum net worth?",
        "question_original_pl": "Jaka jest maksymalna wartość netto dla każdego obywatelstwa?",
        "question": "For each country, what is the maximum net worth?",
        "question_pl": "Jaka jest maksymalna wartość netto dla każdego kraju?",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "query_pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
    },
    {
        "db_id": "singer",
        "question_original": "Show titles of songs and names of singers.",
        "question_original_pl": "Pokaż tytuły piosenek i nazwiska piosenkarzy.",
        "question": "Show names of songs and names of musicians.",
        "question_pl": "Pokaż nazwy utworów i nazwiska muzyków.",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "query_pl": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID"
    },
    {
        "db_id": "singer",
        "question_original": "What are the song titles and singer names?",
        "question_original_pl": "Jakie są tytuły piosenek i imiona wokalistów?",
        "question": "What are the song names and vocalist names?",
        "question_pl": "Jakie są nazwy utworów i nazwiska wokalistów?",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "query_pl": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID"
    },
    {
        "db_id": "singer",
        "question_original": "Show distinct names of singers that have songs with sales more than 300000.",
        "question_original_pl": "Pokaż różne nazwiska piosenkarzy, którzy mają utwory ze sprzedażą powyżej 300000.",
        "question": "Show distinct names of musicians that have songs with sales more than 300000.",
        "question_pl": "Pokaż różne nazwiska muzyków, którzy mają utwory ze sprzedażą powyżej 300000.",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "query_pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
    },
    {
        "db_id": "singer",
        "question_original": "what are the different names of the singers that have sales more than 300000?",
        "question_original_pl": "Jakie są różne nazwiska piosenkarzy, których sprzedaż przekroczyła 300000?",
        "question": "what are the different names of the vocalists that have sales more than 300000?",
        "question_pl": "Jakie są różne nazwiska wokalistów, których sprzedaż przekroczyła 300000?",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "query_pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
    },
    {
        "db_id": "singer",
        "question_original": "Show the names of singers that have more than one song.",
        "question_original_pl": "Pokaż nazwiska piosenkarzy, którzy mają więcej niż jedną piosenkę.",
        "question": "Show the names of musicians that have more than one song.",
        "question_pl": "Pokaż nazwiska muzyków, którzy mają więcej niż jedną piosenkę.",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "singer",
        "question_original": "What are the names of the singers that have more than one songs?",
        "question_original_pl": "Jak nazywają się piosenkarze, którzy mają więcej niż jedną piosenkę?",
        "question": "What are the names of the vocalists that have more than one songs?",
        "question_pl": "Jak nazywają się wokaliści, którzy mają więcej niż jedną piosenkę?",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "singer",
        "question_original": "Show the names of singers and the total sales of their songs.",
        "question_original_pl": "Pokaż nazwiska piosenkarzy i łączną sprzedaż ich utworów.",
        "question": "Show the names of musicians and the total sales of their songs.",
        "question_pl": "Pokaż nazwiska muzyków i łączną sprzedaż ich utworów.",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "query_pl": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
    },
    {
        "db_id": "singer",
        "question_original": "For each singer name, what is the total sales for their songs?",
        "question_original_pl": "Jaka jest łączna sprzedaż utworów każdego z wymienionych piosenkarzy?",
        "question": "For each vocalist name, what is the total sales for their songs?",
        "question_pl": "Jaka jest łączna sprzedaż utworów każdego z wymienionych wokalistów?",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "query_pl": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
    },
    {
        "db_id": "singer",
        "question_original": "List the name of singers that do not have any song.",
        "question_original_pl": "Wymień nazwiska piosenkarzy, którzy nie mają żadnej piosenki.",
        "question": "List the name of musicians that do not have any song.",
        "question_pl": "Wymień nazwiska muzyków, którzy nie mają żadnego utworu.",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "query_pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
    },
    {
        "db_id": "singer",
        "question_original": "What is the name of every sing that does not have any song?",
        "question_original_pl": "Jak nazywa się każda piosenka, która nie ma żadnego utworu?",
        "question": "What is the name of every vocalist that does not have any song?",
        "question_pl": "Jak nazywa się każdy wokalista, który nie ma żadnej piosenki?",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "query_pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
    },
    {
        "db_id": "singer",
        "question_original": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "question_original_pl": "Pokaż obywatelstwo wspólne dla piosenkarzy urodzonych przed 1945 r. i po 1955 r.",
        "question": "Show the citizenship shared by musicians with birth year before 1945 and after 1955.",
        "question_pl": "Pokaż obywatelstwo wspólne dla muzyków urodzonych przed 1945 i po 1955 rokiem.",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "query_pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955"
    },
    {
        "db_id": "singer",
        "question_original": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "question_original_pl": "Jakie obywatelstwo posiadają piosenkarze urodzeni przed 1945 i po 1955 rokiem?",
        "question": "What are the country that are shared by musicians with a birth year before 1945 and after 1955?",
        "question_pl": "Jaki kraj jest wspólny dla muzyków urodzonych przed 1945 i po 1955 rokiem?",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "query_pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955"
    },
    {
        "db_id": "real_estate_properties",
        "question_original": "How many available features are there in total?",
        "question_original_pl": "Ile jest łącznie dostępnych funkcji?",
        "question": "How many available characteristic are there in total?",
        "question_pl": "Ile jest łącznie dostępnych cech?",
        "query": "SELECT count(*) FROM Other_Available_Features",
        "query_pl": "SELECT count(*) FROM Other_Available_Features"
    },
    {
        "db_id": "real_estate_properties",
        "question_original": "What is the feature type name of feature AirCon?",
        "question_original_pl": "Jaka jest nazwa typu funkcji AirCon?",
        "question": "What is the characteristic type of feature AirCon?",
        "question_pl": "Jaki jest charakterystyczny typ funkcji AirCon?",
        "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "query_pl": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\""
    },
    {
        "db_id": "real_estate_properties",
        "question_original": "Show the property type descriptions of properties belonging to that code.",
        "question_original_pl": "Pokaż opisy typów właściwości należących do tego kodu.",
        "question": "Show the property type descriptions of properties belonging to that code.",
        "question_pl": "Pokaż opisy typów właściwości należących do tego kodu.",
        "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "query_pl": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code"
    },
    {
        "db_id": "real_estate_properties",
        "question_original": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "question_original_pl": "Jak nazywają się nieruchomości, które są domami lub mieszkaniami z więcej niż 1 pokojem?",
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "question_pl": "Jak nazywają się nieruchomości, które są domami lub mieszkaniami z więcej niż 1 pokojem?",
        "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
        "query_pl": "SELECT property_name FROM Properties WHERE property_type_code  =  \"Dom\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartament\" AND room_count  >  1"
    }
]