[
    {
        "db_id": "department_management",
        "question_original": "How many heads of the departments are older than 56 ?",
        "question_original_pl": "Ilu szefów działów ma więcej niż 56 lat?",
        "question": "How many leaders of the divisions are older than 56 ?",
        "question_pl": "Ilu liderów dywizji ma więcej niż 56 lat?",
        "query": "SELECT count(*) FROM head WHERE age  >  56",
        "query_pl": "SELECT count(*) FROM head WHERE age  >  56"
    },
    {
        "db_id": "department_management",
        "question_original": "List the name, born state and age of the heads of departments ordered by age.",
        "question_original_pl": "Wymień nazwiska, stan urodzenia i wiek szefów departamentów uporządkowanych według wieku.",
        "question": "List the name, born state and age of the leaders of departments ordered by age.",
        "question_pl": "Wymień imiona i nazwiska, stan urodzenia i wiek liderów działów uporządkowanych według wieku.",
        "query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "query_pl": "SELECT name ,  born_state ,  age FROM head ORDER BY age"
    },
    {
        "db_id": "department_management",
        "question_original": "List the creation year, name and budget of each department.",
        "question_original_pl": "Wymień rok utworzenia, nazwę i budżet każdego działu.",
        "question": "List the establishment year, name and budget of each division.",
        "question_pl": "Wymień rok założenia, nazwę i budżet każdego działu.",
        "query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "query_pl": "SELECT creation ,  name ,  budget_in_billions FROM department"
    },
    {
        "db_id": "department_management",
        "question_original": "What are the maximum and minimum budget of the departments?",
        "question_original_pl": "Jaki jest maksymalny i minimalny budżet działów?",
        "question": "What are the maximum and minimum budget of the divisions?",
        "question_pl": "Jaki jest maksymalny i minimalny budżet dywizji?",
        "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
        "query_pl": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department"
    },
    {
        "db_id": "department_management",
        "question_original": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "question_original_pl": "Jaka jest średnia liczba pracowników działów o randze od 10 do 15?",
        "question": "What is the average number of staffs of the divisions whose rank is between 10 and 15?",
        "question_pl": "Jaka jest średnia liczba pracowników dywizji, których ranga wynosi od 10 do 15?",
        "query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15",
        "query_pl": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15"
    },
    {
        "db_id": "department_management",
        "question_original": "What are the names of the heads who are born outside the California state?",
        "question_original_pl": "Jak nazywają się głowy, które urodziły się poza stanem Kalifornia?",
        "question": "What are the names of the leaders who are born outside the California state?",
        "question_pl": "Jak nazywają się liderzy, którzy urodzili się poza stanem Kalifornia?",
        "query": "SELECT name FROM head WHERE born_state != 'California'",
        "query_pl": "SELECT name FROM head WHERE born_state != 'Kalifornia'"
    },
    {
        "db_id": "department_management",
        "question_original": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "question_original_pl": "Jakie są poszczególne lata utworzenia działów zarządzanych przez sekretarza urodzonego w stanie \"Alabama\"?",
        "question": "What are the different establishment years of the divisions managed by a secretary born in state 'Alabama'?",
        "question_pl": "Jakie są różne lata założenia oddziałów zarządzanych przez sekretarza urodzonego w stanie \"Alabama\"?",
        "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'",
        "query_pl": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'"
    },
    {
        "db_id": "department_management",
        "question_original": "What are the names of the states where at least 3 heads were born?",
        "question_original_pl": "Jak nazywają się stany, w których urodziły się co najmniej 3 głowy?",
        "question": "What are the names of the states where at least 3 leaders were born?",
        "question_pl": "Jak nazywają się stany, w których urodziło się co najmniej 3 przywódców?",
        "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
        "query_pl": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3"
    },
    {
        "db_id": "department_management",
        "question_original": "In which year were most departments established?",
        "question_original_pl": "W którym roku utworzono większość działów?",
        "question": "In which year were most divisions established?",
        "question_pl": "W którym roku powstało najwięcej oddziałów?",
        "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_management",
        "question_original": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "question_original_pl": "Pokaż nazwę i liczbę pracowników w działach zarządzanych przez kierowników, których wartość tymczasowego działania wynosi \"Tak\"?",
        "question": "Show the name and number of staffs for the divisions managed by heads whose temporary acting value is 'Yes'?",
        "question_pl": "Pokaż nazwę i liczbę pracowników w działach zarządzanych przez dyrektorów, których wartość tymczasowego działania wynosi \"Tak\"?",
        "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",
        "query_pl": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Tak'"
    },
    {
        "db_id": "department_management",
        "question_original": "How many departments are led by heads who are not mentioned?",
        "question_original_pl": "Ile działów jest kierowanych przez szefów, którzy nie są wymienieni?",
        "question": "How many divisions are led by leaders who are not mentioned?",
        "question_pl": "Ile oddziałów jest prowadzonych przez liderów, którzy nie są wymienieni?",
        "query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "query_pl": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);"
    },
    {
        "db_id": "department_management",
        "question_original": "What are the distinct ages of the heads who are acting?",
        "question_original_pl": "W jakim wieku są działające osoby?",
        "question": "What are the different ages of the leaders who are acting?",
        "question_pl": "W jakim wieku są działający liderzy?",
        "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'",
        "query_pl": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Tak'"
    },
    {
        "db_id": "department_management",
        "question_original": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "question_original_pl": "Który dział ma więcej niż 1 kierownika jednocześnie? Wymień identyfikator, nazwę i liczbę kierowników.",
        "question": "Which division has more than 1 leader at a time? List the id,name and the number of leaders.",
        "question_pl": "Która dywizja ma więcej niż 1 lidera jednocześnie? Wymień identyfikator, nazwę i liczbę liderów.",
        "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"
    },
    {
        "db_id": "department_management",
        "question_original": "Which head's name has the substring 'Ha'? List the id and name.",
        "question_original_pl": "Która nazwa głowy ma podciąg \"Ha\"? Wymień identyfikator i nazwę.",
        "question": "Which leader's name has the substring 'Ha'? List the id and name.",
        "question_pl": "Nazwa którego lidera zawiera podciąg \"Ha\"? Wymień identyfikator i nazwę.",
        "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "query_pl": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'"
    },
    {
        "db_id": "farm",
        "question_original": "Return the hosts of competitions for which the theme is not Aliens?",
        "question_original_pl": "Przywrócić gospodarzy konkursów, których tematem nie są Obcy?",
        "question": "Return the hosts of contests for which the topic is not Aliens?",
        "question_pl": "Przywróć gospodarzy konkursów, w których tematem nie są kosmici?",
        "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
        "query_pl": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Obcy'"
    },
    {
        "db_id": "farm",
        "question_original": "List official names of cities in descending order of population.",
        "question_original_pl": "Wymień oficjalne nazwy miast w kolejności malejącej liczby ludności.",
        "question": "List official names of towns in descending order by the number of people.",
        "question_pl": "Wymień oficjalne nazwy miast w porządku malejącym według liczby mieszkańców.",
        "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
        "query_pl": "SELECT Official_Name FROM city ORDER BY Population DESC"
    },
    {
        "db_id": "farm",
        "question_original": "What are the official names of cities, ordered descending by population?",
        "question_original_pl": "Jakie są oficjalne nazwy miast, uporządkowane malejąco według liczby ludności?",
        "question": "What are the formal names of towns, ordered descending by residents?",
        "question_pl": "Jakie są formalne nazwy miast, uporządkowane malejąco według mieszkańców?",
        "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
        "query_pl": "SELECT Official_Name FROM city ORDER BY Population DESC"
    },
    {
        "db_id": "farm",
        "question_original": "List the official name and status of the city with the largest population.",
        "question_original_pl": "Wymień oficjalną nazwę i status miasta o największej populacji.",
        "question": "List the formal name and status of the city with the largest populace.",
        "question_pl": "Wymień formalną nazwę i status miasta o największej populacji.",
        "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1",
        "query_pl": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"
    },
    {
        "db_id": "farm",
        "question_original": "Give the years and official names of the cities of each competition.",
        "question_original_pl": "Podaj lata i oficjalne nazwy miast, w których odbywały się zawody.",
        "question": "Give the years and formal names of the towns of each contest.",
        "question_pl": "Podaj lata i oficjalne nazwy miast każdego z konkursów.",
        "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID",
        "query_pl": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"
    },
    {
        "db_id": "farm",
        "question_original": "Show the official names of the cities that have hosted more than one competition.",
        "question_original_pl": "Pokaż oficjalne nazwy miast, które gościły więcej niż jedne zawody.",
        "question": "Show the formal names of the towns that have held more than one contest.",
        "question_pl": "Pokaż oficjalne nazwy miast, które zorganizowały więcej niż jeden konkurs.",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "farm",
        "question_original": "What are the official names of cities that have hosted more than one competition?",
        "question_original_pl": "Jakie są oficjalne nazwy miast, które gościły więcej niż jeden konkurs?",
        "question": "What are the formal names of towns that have hosted more than one competition?",
        "question_pl": "Jakie są oficjalne nazwy miast, które gościły więcej niż jedne zawody?",
        "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "farm",
        "question_original": "Show the status of the city that has hosted the greatest number of competitions.",
        "question_original_pl": "Pokaż status miasta, które gościło największą liczbę zawodów.",
        "question": "Show the status of the town that has hosted the greatest number of contests.",
        "question_pl": "Pokaż status miasta, w którym odbyło się najwięcej konkursów.",
        "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "farm",
        "question_original": "What is the status of the city that has hosted the most competitions?",
        "question_original_pl": "Jaki jest status miasta, w którym odbyło się najwięcej zawodów?",
        "question": "What is the status of the town that has hosted the most contests?",
        "question_pl": "Jaki jest status miasta, w którym odbyło się najwięcej konkursów?",
        "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "farm",
        "question_original": "Please show the themes of competitions with host cities having populations larger than 1000.",
        "question_original_pl": "Wskaż tematy zawodów, których gospodarzami są miasta o liczbie mieszkańców przekraczającej 1000.",
        "question": "Please show the topics of contests with host cities having populations larger than 1000.",
        "question_pl": "Pokaż tematy konkursów z miastami gospodarzami o populacji większej niż 1000.",
        "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000",
        "query_pl": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
    },
    {
        "db_id": "farm",
        "question_original": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?",
        "question_original_pl": "Jakie są motywy przewodnie konkursów, których gospodarzami są miasta liczące ponad 1000 mieszkańców?",
        "question": "What are the topics of contests that have corresponding host cities with more than 1000 residents?",
        "question_pl": "Jakie są tematy konkursów, których gospodarzami są miasta liczące ponad 1000 mieszkańców?",
        "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000",
        "query_pl": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
    },
    {
        "db_id": "farm",
        "question_original": "Show the status shared by cities with population bigger than 1500 and smaller than 500.",
        "question_original_pl": "Pokaż status wspólny dla miast o populacji większej niż 1500 i mniejszej niż 500.",
        "question": "Show the status shared by towns with number of people bigger than 1500 and smaller than 500.",
        "question_pl": "Pokaż status wspólny dla miast o liczbie mieszkańców większej niż 1500 i mniejszej niż 500.",
        "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500",
        "query_pl": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
    },
    {
        "db_id": "farm",
        "question_original": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?",
        "question_original_pl": "Które statusy odpowiadają zarówno miastom o populacji powyżej 1500 mieszkańców, jak i miastom o populacji poniżej 500 mieszkańców?",
        "question": "Which statuses correspond to both towns that have a population over 1500 and towns that have a population lower than 500?",
        "question_pl": "Które statusy odpowiadają zarówno miastom o liczbie ludności powyżej 1500, jak i miastom o liczbie ludności poniżej 500?",
        "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500",
        "query_pl": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
    },
    {
        "db_id": "farm",
        "question_original": "Find the official names of cities with population bigger than 1500 or smaller than 500.",
        "question_original_pl": "Znajdź oficjalne nazwy miast o liczbie mieszkańców większej niż 1500 lub mniejszej niż 500.",
        "question": "Find the formal names of towns with number of people bigger than 1500 or smaller than 500.",
        "question_pl": "Znajdź formalne nazwy miast o liczbie mieszkańców większej niż 1500 lub mniejszej niż 500.",
        "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500",
        "query_pl": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
    },
    {
        "db_id": "farm",
        "question_original": "What are the official names of cities that have population over 1500 or less than 500?",
        "question_original_pl": "Jakie są oficjalne nazwy miast, które mają ponad 1500 lub mniej niż 500 mieszkańców?",
        "question": "What are the formal names of towns that have number of people over 1500 or less than 500?",
        "question_pl": "Jakie są formalne nazwy miast, które mają ponad 1500 lub mniej niż 500 mieszkańców?",
        "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500",
        "query_pl": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
    },
    {
        "db_id": "farm",
        "question_original": "Show the census ranking of cities whose status are not \"Village\".",
        "question_original_pl": "Pokaż ranking miast, których status nie jest \"wioską\".",
        "question": "Show the count of population ranking of towns whose status are not \"Village\".",
        "question_pl": "Pokaż liczbę rankingów populacji miast, których status nie jest \"Wieś\".",
        "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
        "query_pl": "SELECT Census_Ranking FROM city WHERE Status !=  \"Wioska\""
    },
    {
        "db_id": "farm",
        "question_original": "What are the census rankings of cities that do not have the status \"Village\"?",
        "question_original_pl": "Jakie są rankingi miast, które nie mają statusu \"wioski\"?",
        "question": "What are the count of population rankings of towns that do not have the status \"Village\"?",
        "question_pl": "Jaka jest liczba rankingów populacji miast, które nie mają statusu \"wieś\"?",
        "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
        "query_pl": "SELECT Census_Ranking FROM city WHERE Status !=  \"Wioska\""
    },
    {
        "db_id": "student_assessment",
        "question_original": "which course has most number of registered students?",
        "question_original_pl": "Który kurs ma największą liczbę zarejestrowanych studentów?",
        "question": "which curriculum has most number of registered students?",
        "question_pl": "Który program nauczania ma największą liczbę zarejestrowanych studentów?",
        "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What is the name of the course with the most registered students?",
        "question_original_pl": "Jak nazywa się kurs z największą liczbą zarejestrowanych studentów?",
        "question": "What is the name of the curriculum with the most registered students?",
        "question_pl": "Jak nazywa się program nauczania z największą liczbą zarejestrowanych studentów?",
        "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "what is id of students who registered some courses but the least number of courses in these students?",
        "question_original_pl": "Jaki jest identyfikator studentów, którzy zarejestrowali kilka kursów, ale najmniejszą liczbę kursów u tych studentów?",
        "question": "what is id of students who registered some curriculums but the least number of curriculums in these students?",
        "question_pl": "Jaki jest identyfikator uczniów, którzy zarejestrowali niektóre programy nauczania, ale najmniejszą liczbę programów nauczania u tych uczniów?",
        "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the first and last names of all the candidates?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich kandydatów?",
        "question": "What are the full names of all the candidates?",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich kandydatów?",
        "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the id of students who never attends courses?",
        "question_original_pl": "Wymień identyfikatory studentów, którzy nigdy nie uczęszczają na kursy?",
        "question": "List the id of students who never attends curriculum?",
        "question_pl": "Wymień identyfikatory uczniów, którzy nigdy nie uczęszczają na zajęcia?",
        "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
        "query_pl": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the  ids of every student who has never attended a course?",
        "question_original_pl": "Jakie są identyfikatory każdego ucznia, który nigdy nie uczestniczył w kursie?",
        "question": "What are the  ids of every student who has never attended a curriculum?",
        "question_pl": "Jakie są identyfikatory każdego ucznia, który nigdy nie uczestniczył w programie nauczania?",
        "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
        "query_pl": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the id of students who attended some courses?",
        "question_original_pl": "Wymień identyfikatory studentów, którzy uczestniczyli w niektórych kursach?",
        "question": "List the id of students who attended some curriculums?",
        "question_pl": "Wymień identyfikatory uczniów, którzy uczestniczyli w niektórych programach nauczania?",
        "query": "SELECT student_id FROM student_course_attendance",
        "query_pl": "SELECT student_id FROM student_course_attendance"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of all students who have attended at least one course?",
        "question_original_pl": "Jakie są identyfikatory wszystkich studentów, którzy uczestniczyli w co najmniej jednym kursie?",
        "question": "What are the ids of all students who have attended at least one curriculum?",
        "question_pl": "Jakie są identyfikatory wszystkich uczniów, którzy uczestniczyli w co najmniej jednym programie nauczania?",
        "query": "SELECT student_id FROM student_course_attendance",
        "query_pl": "SELECT student_id FROM student_course_attendance"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of all students for courses and what are the names of those courses?",
        "question_original_pl": "Jakie są identyfikatory wszystkich studentów kursów i jakie są nazwy tych kursów?",
        "question": "What are the ids of all students for curriculums and what are the names of those curriculums?",
        "question_pl": "Jakie są identyfikatory wszystkich uczniów w programach nauczania i jakie są nazwy tych programów?",
        "query": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
        "query_pl": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What is detail of the student who most recently registered course?",
        "question_original_pl": "Jakie są dane studenta, który ostatnio zarejestrował kurs?",
        "question": "What is detail of the student who most recently registered curriculum?",
        "question_pl": "Jakie są dane studenta, który ostatnio zarejestrował program nauczania?",
        "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1",
        "query_pl": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "How many students attend course English?",
        "question_original_pl": "Ilu uczniów uczęszcza na kurs języka angielskiego?",
        "question": "How many students attend curriculum English?",
        "question_pl": "Ilu uczniów uczęszcza na angielski?",
        "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"",
        "query_pl": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Angielski\""
    },
    {
        "db_id": "student_assessment",
        "question_original": "How many students are attending English courses?",
        "question_original_pl": "Ilu uczniów uczęszcza na kursy języka angielskiego?",
        "question": "How many students are attending English curriculum?",
        "question_pl": "Ilu uczniów uczęszcza na zajęcia z języka angielskiego?",
        "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"",
        "query_pl": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Angielski\""
    },
    {
        "db_id": "student_assessment",
        "question_original": "How many courses do the student whose id is 171 attend?",
        "question_original_pl": "W ilu kursach uczestniczy uczeń o identyfikatorze 171?",
        "question": "How many curriculums do the student whose id is 171 attend?",
        "question_pl": "Do ilu programów nauczania uczęszcza uczeń o identyfikatorze 171?",
        "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
        "query_pl": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
    },
    {
        "db_id": "student_assessment",
        "question_original": "How many courses does the student with id 171 actually attend?",
        "question_original_pl": "W ilu kursach faktycznie uczestniczy uczeń z identyfikatorem 171?",
        "question": "How many curriculums does the student with id 171 actually attend?",
        "question_pl": "W ilu programach nauczania faktycznie uczestniczy uczeń z identyfikatorem 171?",
        "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
        "query_pl": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
    },
    {
        "db_id": "student_assessment",
        "question_original": "Find id of the candidate who most recently accessed the course?",
        "question_original_pl": "Znajdź identyfikator kandydata, który ostatnio uzyskał dostęp do kursu?",
        "question": "Find id of the candidate who most recently accessed the curriculum?",
        "question_pl": "Znajdź identyfikator kandydata, który ostatnio korzystał z programu nauczania?",
        "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
        "query_pl": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What is the id of the candidate who most recently accessed the course?",
        "question_original_pl": "Jaki jest identyfikator kandydata, który ostatnio uzyskał dostęp do kursu?",
        "question": "What is the id of the candidate who most recently accessed the curriculum?",
        "question_pl": "Jaki jest identyfikator kandydata, który ostatnio uzyskał dostęp do programu nauczania?",
        "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
        "query_pl": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the id of students who registered some courses and the number of their registered courses?",
        "question_original_pl": "Wymień identyfikatory studentów, którzy zarejestrowali niektóre kursy i liczbę zarejestrowanych przez nich kursów?",
        "question": "List the id of students who registered some curriculums and the number of their registered curriculums?",
        "question_pl": "Wymień identyfikatory studentów, którzy zarejestrowali niektóre programy nauczania i liczbę zarejestrowanych przez nich programów nauczania?",
        "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
        "query_pl": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "For every student who is registered for some course, how many courses are they registered for?",
        "question_original_pl": "Dla każdego studenta zarejestrowanego na jakiś kurs, na ile kursów jest on zarejestrowany?",
        "question": "For every student who is registered for some curriculum, how many curriculums are they registered for?",
        "question_pl": "Dla każdego ucznia zarejestrowanego na jakiś program nauczania, na ile programów jest on zarejestrowany?",
        "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
        "query_pl": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "How many registed students do each course have? List course name and the number of their registered students?",
        "question_original_pl": "Ilu zarejestrowanych studentów ma każdy kurs? Wymień nazwę kursu i liczbę zarejestrowanych studentów?",
        "question": "How many registed students do each curriculum have? List curriculum name and the number of their registered students?",
        "question_pl": "Ilu zarejestrowanych studentów ma każdy program nauczania? Wymień nazwę programu nauczania i liczbę zarejestrowanych studentów?",
        "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
        "query_pl": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "For each course id, how many students are registered and what are the course names?",
        "question_original_pl": "Dla każdego identyfikatora kursu, ilu studentów jest zarejestrowanych i jakie są nazwy kursów?",
        "question": "For each curriculum id, how many students are registered and what are the curriculum names?",
        "question_pl": "Dla każdego identyfikatora programu nauczania, ilu uczniów jest zarejestrowanych i jakie są nazwy programów nauczania?",
        "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
        "query_pl": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "Find distinct cities of addresses of people?",
        "question_original_pl": "Znajdź różne miasta adresów osób?",
        "question": "Find different towns of locations of people?",
        "question_pl": "Znajdujesz różne miasta i lokalizacje ludzi?",
        "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id",
        "query_pl": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "Find distinct cities of address of students?",
        "question_original_pl": "Znajdź różne miasta, w których mieszkają studenci?",
        "question": "Find different towns of location of students?",
        "question_pl": "Znajdź różne miasta, w których znajdują się studenci?",
        "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id",
        "query_pl": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the names of courses in alphabetical order?",
        "question_original_pl": "Wymień nazwy kursów w kolejności alfabetycznej?",
        "question": "List the names of curriculums in alphabetical order?",
        "question_pl": "Wymień nazwy programów nauczania w kolejności alfabetycznej?",
        "query": "SELECT course_name FROM courses ORDER BY course_name",
        "query_pl": "SELECT course_name FROM courses ORDER BY course_name"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the names of the courses in alphabetical order?",
        "question_original_pl": "Jakie są nazwy kursów w kolejności alfabetycznej?",
        "question": "What are the names of the curriculums in alphabetical order?",
        "question_pl": "Jak nazywają się programy nauczania w kolejności alfabetycznej?",
        "query": "SELECT course_name FROM courses ORDER BY course_name",
        "query_pl": "SELECT course_name FROM courses ORDER BY course_name"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the first names of people in alphabetical order?",
        "question_original_pl": "Wymień imiona osób w kolejności alfabetycznej?",
        "question": "List the forenames of people in alphabetical order?",
        "question_pl": "Wymień imiona ludzi w kolejności alfabetycznej?",
        "query": "SELECT first_name FROM people ORDER BY first_name",
        "query_pl": "SELECT first_name FROM people ORDER BY first_name"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the id of students who registered courses or attended courses?",
        "question_original_pl": "Jaka jest liczba studentów, którzy zarejestrowali kursy lub w nich uczestniczyli?",
        "question": "What are the id of students who registered curriculums or attended curriculums?",
        "question_pl": "Jaka jest liczba studentów, którzy zarejestrowali programy nauczania lub uczestniczyli w nich?",
        "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
        "query_pl": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of the students who either registered or attended a course?",
        "question_original_pl": "Jakie są identyfikatory studentów, którzy zarejestrowali się lub uczestniczyli w kursie?",
        "question": "What are the ids of the students who either registered or attended a curriculum?",
        "question_pl": "Jakie są identyfikatory studentów, którzy zarejestrowali się lub uczestniczyli w programie nauczania?",
        "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
        "query_pl": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
    },
    {
        "db_id": "student_assessment",
        "question_original": "Find the id of courses which are registered or attended by student whose id is 121?",
        "question_original_pl": "Znajdź identyfikatory kursów zarejestrowanych lub uczęszczanych przez studenta o identyfikatorze 121?",
        "question": "Find the id of curriculums which are registered or attended by student whose id is 121?",
        "question_pl": "Znajdź identyfikatory programów nauczania zarejestrowanych lub uczęszczanych przez ucznia o identyfikatorze 121?",
        "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121",
        "query_pl": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of the courses that are registered or attended by the student whose id is 121?",
        "question_original_pl": "Jakie są identyfikatory kursów zarejestrowanych lub uczęszczanych przez studenta o identyfikatorze 121?",
        "question": "What are the ids of the curriculums that are registered or attended by the student whose id is 121?",
        "question_pl": "Jakie są identyfikatory programów nauczania zarejestrowanych lub uczęszczanych przez ucznia o identyfikatorze 121?",
        "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121",
        "query_pl": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are all info of students who registered courses but not attended courses?",
        "question_original_pl": "Jakie są wszystkie informacje o studentach, którzy zarejestrowali kursy, ale w nich nie uczestniczyli?",
        "question": "What are all info of students who registered curriculums but not attended curriculums?",
        "question_pl": "Jakie są wszystkie informacje o uczniach, którzy zarejestrowali programy nauczania, ale w nich nie uczestniczyli?",
        "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
        "query_pl": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are all details of the students who registered but did not attend any course?",
        "question_original_pl": "Jakie są wszystkie szczegóły dotyczące studentów, którzy zarejestrowali się, ale nie uczestniczyli w żadnym kursie?",
        "question": "What are all details of the students who registered but did not attend any curriculum?",
        "question_pl": "Jakie są wszystkie szczegóły dotyczące studentów, którzy zarejestrowali się, ale nie uczestniczyli w żadnym programie nauczania?",
        "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
        "query_pl": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the id of students who registered course statistics in the order of registration date.",
        "question_original_pl": "Wyświetl identyfikatory studentów, którzy zarejestrowali statystyki kursu w kolejności daty rejestracji.",
        "question": "List the id of students who registered curriculum statistics in the order of registration date.",
        "question_pl": "Wymień identyfikatory studentów, którzy zarejestrowali statystyki programu nauczania w kolejności daty rejestracji.",
        "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date",
        "query_pl": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statystyki\" ORDER BY T2.registration_date"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of the students who registered course statistics by order of registration date?",
        "question_original_pl": "Jakie są identyfikatory studentów, którzy zarejestrowali statystyki kursu według kolejności daty rejestracji?",
        "question": "What are the ids of the students who registered curriculum statistics by order of registration date?",
        "question_pl": "Jakie są identyfikatory studentów, którzy zarejestrowali statystyki programu nauczania według kolejności daty rejestracji?",
        "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date",
        "query_pl": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statystyki\" ORDER BY T2.registration_date"
    },
    {
        "db_id": "student_assessment",
        "question_original": "List the id of students who attended  statistics courses in the order of attendance date.",
        "question_original_pl": "Wymień identyfikatory studentów, którzy uczestniczyli w kursach statystycznych w kolejności od daty uczestnictwa.",
        "question": "List the id of students who attended  statistics curriculums in the order of attendance date.",
        "question_pl": "Wymień identyfikatory uczniów, którzy uczestniczyli w programach nauczania statystyk, w kolejności według daty uczestnictwa.",
        "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance",
        "query_pl": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statystyki\" ORDER BY T2.date_of_attendance"
    },
    {
        "db_id": "student_assessment",
        "question_original": "What are the ids of the students who attended courses in the statistics department in order of attendance date.",
        "question_original_pl": "Jakie są identyfikatory studentów, którzy uczestniczyli w kursach w dziale statystyki w kolejności od daty uczestnictwa.",
        "question": "What are the ids of the students who attended curriculums in the statistics department in order of attendance date.",
        "question_pl": "Jakie są identyfikatory studentów, którzy uczestniczyli w programach nauczania w dziale statystyki w kolejności od daty uczestnictwa.",
        "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance",
        "query_pl": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statystyki\" ORDER BY T2.date_of_attendance"
    },
    {
        "db_id": "bike_1",
        "question_original": "Give me the dates when the max temperature was higher than 85.",
        "question_original_pl": "Podaj mi daty, kiedy maksymalna temperatura była wyższa niż 85.",
        "question": "Give me the day when the max temperature was higher than 85.",
        "question_pl": "Podaj mi dzień, w którym maksymalna temperatura była wyższa niż 85.",
        "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
        "query_pl": "SELECT date FROM weather WHERE max_temperature_f  >  85"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the dates with a maximum temperature higher than 85?",
        "question_original_pl": "Jakie są daty z maksymalną temperaturą wyższą niż 85?",
        "question": "What are the day with a maximum temperature higher than 85?",
        "question_pl": "Jakie są dni z maksymalną temperaturą wyższą niż 85 stopni?",
        "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
        "query_pl": "SELECT date FROM weather WHERE max_temperature_f  >  85"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names of stations that have latitude lower than 37.5?",
        "question_original_pl": "Jak nazywają się stacje o szerokości geograficznej niższej niż 37,5?",
        "question": "What are the names of terminals that have latitude lower than 37.5?",
        "question_pl": "Jak nazywają się terminale o szerokości geograficznej niższej niż 37,5?",
        "query": "SELECT name FROM station WHERE lat  <  37.5",
        "query_pl": "SELECT name FROM station WHERE lat  <  37.5"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names of all stations with a latitude smaller than 37.5?",
        "question_original_pl": "Jak nazywają się wszystkie stacje o szerokości geograficznej mniejszej niż 37,5?",
        "question": "What are the names of all terminals with a latitude smaller than 37.5?",
        "question_pl": "Jak nazywają się wszystkie terminale o szerokości geograficznej mniejszej niż 37,5?",
        "query": "SELECT name FROM station WHERE lat  <  37.5",
        "query_pl": "SELECT name FROM station WHERE lat  <  37.5"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each city, return the highest latitude among its stations.",
        "question_original_pl": "Dla każdego miasta zwróć najwyższą szerokość geograficzną spośród jego stacji.",
        "question": "For each city, return the highest latitude among its terminals.",
        "question_pl": "Dla każdego miasta zwróć najwyższą szerokość geograficzną spośród jego terminali.",
        "query": "SELECT city ,  max(lat) FROM station GROUP BY city",
        "query_pl": "SELECT city ,  max(lat) FROM station GROUP BY city"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each city, what is the highest latitude for its stations?",
        "question_original_pl": "Jaka jest najwyższa szerokość geograficzna dla stacji w każdym mieście?",
        "question": "For each city, what is the highest latitude for its terminals?",
        "question_pl": "Dla każdego miasta, jaka jest najwyższa szerokość geograficzna dla jego terminali?",
        "query": "SELECT city ,  max(lat) FROM station GROUP BY city",
        "query_pl": "SELECT city ,  max(lat) FROM station GROUP BY city"
    },
    {
        "db_id": "bike_1",
        "question_original": "Give me the start station and end station for the trips with the three oldest id.",
        "question_original_pl": "Podaj mi stację początkową i końcową dla podróży z trzema najstarszymi identyfikatorami.",
        "question": "Give me the start terminal and end terminal for the tours with the three oldest id.",
        "question_pl": "Podaj terminal początkowy i terminal końcowy dla tras z trzema najstarszymi identyfikatorami.",
        "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3",
        "query_pl": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the station station and end station for the trips with the three smallest ids?",
        "question_original_pl": "Jaka jest stacja początkowa i końcowa dla podróży z trzema najmniejszymi identyfikatorami?",
        "question": "What is the station station and end terminal for the tours with the three smallest ids?",
        "question_pl": "Jaka jest stacja i terminal końcowy dla tras z trzema najmniejszymi identyfikatorami?",
        "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3",
        "query_pl": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the average latitude and longitude of stations located in San Jose city?",
        "question_original_pl": "Jaka jest średnia szerokość i długość geograficzna stacji zlokalizowanych w mieście San Jose?",
        "question": "What is the average latitude and longitude of terminals located in San Jose city?",
        "question_pl": "Jaka jest średnia szerokość i długość geograficzna terminali znajdujących się w mieście San Jose?",
        "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"",
        "query_pl": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the id of the trip that has the shortest duration?",
        "question_original_pl": "Jaki jest identyfikator podróży, która trwa najkrócej?",
        "question": "What is the id of the tour that has the shortest duration?",
        "question_pl": "Jaki jest identyfikator trasy, która trwa najkrócej?",
        "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
        "query_pl": "SELECT id FROM trip ORDER BY duration LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the id of the shortest trip?",
        "question_original_pl": "Jaki jest identyfikator najkrótszej podróży?",
        "question": "What is the id of the shortest tour?",
        "question_pl": "Jaki jest identyfikator najkrótszej trasy?",
        "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
        "query_pl": "SELECT id FROM trip ORDER BY duration LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the total and maximum duration of trips with bike id 636?",
        "question_original_pl": "Jaki jest całkowity i maksymalny czas trwania podróży z identyfikatorem roweru 636?",
        "question": "What is the total and maximum length of tours with bike id 636?",
        "question_pl": "Jaka jest całkowita i maksymalna długość wycieczek z identyfikatorem roweru 636?",
        "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636",
        "query_pl": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the total and maximum duration for all trips with the bike id 636?",
        "question_original_pl": "Jaki jest całkowity i maksymalny czas trwania wszystkich podróży z identyfikatorem roweru 636?",
        "question": "What is the total and maximum length for all tours with the bike id 636?",
        "question_pl": "Jaka jest całkowita i maksymalna długość wszystkich wycieczek z identyfikatorem roweru 636?",
        "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636",
        "query_pl": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each zip code, return the average mean temperature of August there.",
        "question_original_pl": "Dla każdego kodu pocztowego zwróć średnią temperaturę w sierpniu.",
        "question": "For each postal code, return the average mean temperature of August there.",
        "question_pl": "Dla każdego kodu pocztowego podaj średnią temperaturę w sierpniu.",
        "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code",
        "query_pl": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"
    },
    {
        "db_id": "bike_1",
        "question_original": "From the trip record, find the number of unique bikes.",
        "question_original_pl": "Na podstawie zapisu podróży znajdź liczbę unikalnych rowerów.",
        "question": "From the tour record, find the number of unique bicycles.",
        "question_pl": "Na podstawie zapisu trasy znajdź liczbę unikatowych rowerów.",
        "query": "SELECT count(DISTINCT bike_id) FROM trip",
        "query_pl": "SELECT count(DISTINCT bike_id) FROM trip"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the number of distinct cities the stations are located at?",
        "question_original_pl": "Jaka jest liczba różnych miast, w których znajdują się stacje?",
        "question": "What is the number of different cities the terminals are located at?",
        "question_pl": "W ilu różnych miastach znajdują się terminale?",
        "query": "SELECT count(DISTINCT city) FROM station",
        "query_pl": "SELECT count(DISTINCT city) FROM station"
    },
    {
        "db_id": "bike_1",
        "question_original": "How many different cities have these stations?",
        "question_original_pl": "W ilu różnych miastach znajdują się te stacje?",
        "question": "How many different cities have these terminals?",
        "question_pl": "W ilu różnych miastach znajdują się te terminale?",
        "query": "SELECT count(DISTINCT city) FROM station",
        "query_pl": "SELECT count(DISTINCT city) FROM station"
    },
    {
        "db_id": "bike_1",
        "question_original": "How many stations does Mountain View city has?",
        "question_original_pl": "Ile stacji ma miasto Mountain View?",
        "question": "How many terminals does Mountain View city has?",
        "question_pl": "Ile terminali ma miasto Mountain View?",
        "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
        "query_pl": "SELECT COUNT(*) FROM station WHERE city  =  \"Widok z góry\""
    },
    {
        "db_id": "bike_1",
        "question_original": "How many stations are in Mountain View?",
        "question_original_pl": "Ile stacji znajduje się w Mountain View?",
        "question": "How many terminals are in Mountain View?",
        "question_pl": "Ile terminali znajduje się w Mountain View?",
        "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
        "query_pl": "SELECT COUNT(*) FROM station WHERE city  =  \"Widok z góry\""
    },
    {
        "db_id": "bike_1",
        "question_original": "Return the unique name for stations that have ever had 7 bikes available.",
        "question_original_pl": "Zwróć unikatową nazwę dla stacji, na których kiedykolwiek dostępnych było 7 rowerów.",
        "question": "Return the unique name for terminals that have ever had 7 bicycles available.",
        "question_pl": "Zwróć unikatową nazwę dla terminali, w których kiedykolwiek dostępnych było 7 rowerów.",
        "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7",
        "query_pl": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the different names for each station that has ever had 7 bikes available?",
        "question_original_pl": "Jakie są różne nazwy każdej stacji, na której kiedykolwiek dostępnych było 7 rowerów?",
        "question": "What are the different names for each terminal that has ever had 7 bikes available?",
        "question_pl": "Jak nazywają się poszczególne terminale, w których kiedykolwiek dostępnych było 7 rowerów?",
        "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7",
        "query_pl": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
    },
    {
        "db_id": "bike_1",
        "question_original": "Which start station had the most trips starting from August? Give me the name and id of the station.",
        "question_original_pl": "Która stacja początkowa miała najwięcej podróży rozpoczynających się w sierpniu? Podaj nazwę i identyfikator stacji.",
        "question": "Which start terminal had the most tours starting from August? Give me the name and id of the terminal.",
        "question_pl": "Który terminal startowy miał najwięcej wycieczek od sierpnia? Podaj mi nazwę i identyfikator terminalu.",
        "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the start station's name and id for the one that had the most start trips in August?",
        "question_original_pl": "Jaka jest nazwa i identyfikator stacji startowej, która w sierpniu miała najwięcej startów?",
        "question": "What are the start terminal's name and id for the one that had the most start tours in August?",
        "question_pl": "Jaka jest nazwa i identyfikator terminalu startowego, który miał najwięcej startów w sierpniu?",
        "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the id of the bike that traveled the most in 94002?",
        "question_original_pl": "Jaki jest identyfikator roweru, który przejechał najwięcej w 94002?",
        "question": "What is the id of the bicycle that traveled the most in 94002?",
        "question_pl": "Jaki jest identyfikator roweru, który przejechał najwięcej kilometrów w 94002?",
        "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the latitude, longitude, city of the station from which the shortest trip started?",
        "question_original_pl": "Jaka jest szerokość i długość geograficzna oraz miasto stacji, z której rozpoczęła się najkrótsza podróż?",
        "question": "What is the latitude, longitude, city of the terminal from which the shortest tour started?",
        "question_pl": "Jaka jest szerokość i długość geograficzna oraz miasto terminalu, z którego rozpoczęła się najkrótsza trasa?",
        "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1",
        "query_pl": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?",
        "question_original_pl": "Jaka jest szerokość geograficzna, długość geograficzna i miasto stacji, z której rozpoczęła się podróż o najmniejszym czasie trwania?",
        "question": "What is the latitude, longitude, and city of the terminal from which the trip with smallest duration started?",
        "question_pl": "Jaka jest szerokość i długość geograficzna oraz miasto terminalu, z którego rozpoczęła się podróż o najmniejszym czasie trwania?",
        "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1",
        "query_pl": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of stations that are located in San Francisco and have average bike availability above 10.",
        "question_original_pl": "Jakie są numery stacji w San Francisco, które mają średnią dostępność rowerów powyżej 10.",
        "question": "What are the ids of terminals that are located in San Francisco and have average bike availability above 10.",
        "question_pl": "Jakie są numery terminali znajdujących się w San Francisco i mających średnią dostępność rowerów powyżej 10.",
        "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10",
        "query_pl": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of the stations in San Francisco that normally have more than 10 bikes available?",
        "question_original_pl": "Jakie są numery stacji w San Francisco, na których zazwyczaj dostępnych jest więcej niż 10 rowerów?",
        "question": "What are the ids of the terminals in San Francisco that normally have more than 10 bikes available?",
        "question_pl": "Jakie są numery terminali w San Francisco, w których zazwyczaj dostępnych jest więcej niż 10 rowerów?",
        "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10",
        "query_pl": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?",
        "question_original_pl": "Jakie są nazwy i identyfikatory stacji, które miały średnio więcej niż 14 dostępnych rowerów lub zostały zainstalowane w grudniu?",
        "question": "What are the names and ids of terminals that had more than 14 bicycles available on average or were installed in December?",
        "question_pl": "Jakie są nazwy i identyfikatory terminali, które miały średnio więcej niż 14 dostępnych rowerów lub zostały zainstalowane w grudniu?",
        "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"",
        "query_pl": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?",
        "question_original_pl": "Jakie są nazwy i identyfikatory wszystkich stacji, na których dostępnych jest średnio ponad 14 rowerów lub na których zainstalowano rowery w grudniu?",
        "question": "What are the names and ids of all terminals that have more than 14 bikes available on average or had bikes installed in December?",
        "question_pl": "Jakie są nazwy i identyfikatory wszystkich terminali, na których dostępnych jest średnio ponad 14 rowerów lub na których zainstalowano rowery w grudniu?",
        "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"",
        "query_pl": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the average longitude of stations that never had bike availability more than 10?",
        "question_original_pl": "Jaka jest średnia długość geograficzna stacji, które nigdy nie miały dostępności rowerów większej niż 10?",
        "question": "What is the average longitude of terminals that never had bike availability more than 10?",
        "question_pl": "Jaka jest średnia długość geograficzna terminali, które nigdy nie miały dostępności rowerów większej niż 10?",
        "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)",
        "query_pl": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the mean longitude for all stations that have never had more than 10 bikes available?",
        "question_original_pl": "Jaka jest średnia długość geograficzna dla wszystkich stacji, na których nigdy nie było dostępnych więcej niż 10 rowerów?",
        "question": "What is the mean longitude for all terminals that have never had more than 10 bikes available?",
        "question_pl": "Jaka jest średnia długość geograficzna dla wszystkich terminali, na których nigdy nie było dostępnych więcej niż 10 rowerów?",
        "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)",
        "query_pl": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
    },
    {
        "db_id": "bike_1",
        "question_original": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.",
        "question_original_pl": "Podaj mi identyfikatory wszystkich podróży, które miały miejsce w obszarze kodu pocztowego ze średnią temperaturą powyżej 60.",
        "question": "Give me ids for all the tour that took place in a zip code area with average mean temperature above 60.",
        "question_pl": "Podaj mi identyfikatory wszystkich wycieczek, które odbyły się w obszarze kodu pocztowego ze średnią temperaturą powyżej 60.",
        "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60",
        "query_pl": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each zip code, find the ids of all trips that have a higher average mean temperature above 60?",
        "question_original_pl": "Dla każdego kodu pocztowego znajdź identyfikatory wszystkich podróży, które mają wyższą średnią temperaturę powyżej 60?",
        "question": "For each postal code, find the ids of all tours that have a higher average mean temperature above 60?",
        "question_pl": "Dla każdego kodu pocztowego znajdź identyfikatory wszystkich tras, które mają wyższą średnią temperaturę powyżej 60?",
        "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60",
        "query_pl": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
    },
    {
        "db_id": "bike_1",
        "question_original": "Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?",
        "question_original_pl": "Które dni miały minimalny punkt rosy niższy niż jakikolwiek dzień w kodzie pocztowym 94107 i w których kodach pocztowych dokonano tych pomiarów?",
        "question": "Which days had a minimum dew point smaller than any day in postal code 94107, and in which postal codes were those measurements taken?",
        "question_pl": "W których dniach minimalny punkt rosy był niższy niż w jakimkolwiek dniu w kodzie pocztowym 94107 i w których kodach pocztowych dokonano tych pomiarów?",
        "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)",
        "query_pl": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each trip, return its ending station's installation date.",
        "question_original_pl": "Dla każdej podróży zwróć datę instalacji stacji końcowej.",
        "question": "For each tour, return its ending station's installation date.",
        "question_pl": "Dla każdej trasy zwróć datę instalacji stacji końcowej.",
        "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id",
        "query_pl": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
    },
    {
        "db_id": "bike_1",
        "question_original": "Which trip started from the station with the largest dock count? Give me the trip id.",
        "question_original_pl": "Która podróż rozpoczęła się od stacji z największą liczbą doków? Podaj identyfikator podróży.",
        "question": "Which tour started from the station with the largest dock count? Give me the tour id.",
        "question_pl": "Która trasa rozpoczęła się na stacji z największą liczbą doków? Podaj mi identyfikator trasy.",
        "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1",
        "query_pl": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the id of the trip that started from the station with the highest dock count?",
        "question_original_pl": "Jaki jest identyfikator podróży, która rozpoczęła się ze stacji o największej liczbie doków?",
        "question": "What is the id of the tour that started from the station with the highest dock count?",
        "question_pl": "Jaki jest identyfikator trasy, która rozpoczęła się od stacji z największą liczbą doków?",
        "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1",
        "query_pl": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "Count the number of trips that did not end in San Francisco city.",
        "question_original_pl": "Policz liczbę podróży, które nie zakończyły się w mieście San Francisco.",
        "question": "Count the number of tours that did not end in San Francisco city.",
        "question_pl": "Policz liczbę wycieczek, które nie zakończyły się w San Francisco.",
        "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\"",
        "query_pl": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\""
    },
    {
        "db_id": "bike_1",
        "question_original": "How many trips did not end in San Francisco?",
        "question_original_pl": "Ile podróży nie zakończyło się w San Francisco?",
        "question": "How many tours did not end in San Francisco?",
        "question_pl": "Ile tras nie zakończyło się w San Francisco?",
        "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"San Francisco\"",
        "query_pl": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"San Francisco\""
    },
    {
        "db_id": "bike_1",
        "question_original": "In zip code 94107, on which day neither Fog nor Rain was not observed?",
        "question_original_pl": "W kodzie pocztowym 94107, którego dnia nie zaobserwowano mgły ani deszczu?",
        "question": "In postal code 94107, on which day neither Fog nor Rain was not observed?",
        "question_pl": "Którego dnia w kodzie pocztowym 94107 nie zaobserwowano mgły ani deszczu?",
        "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"",
        "query_pl": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Mgła\" AND EVENTS != \"Deszcz\""
    },
    {
        "db_id": "bike_1",
        "question_original": "On which day has it neither been foggy nor rained in the zip code of 94107?",
        "question_original_pl": "Którego dnia w miejscu o kodzie pocztowym 94107 nie było mgły ani deszczu?",
        "question": "On which day has it neither been foggy nor rained in the postal code of 94107?",
        "question_pl": "Którego dnia nie było mgły ani deszczu w miejscu o kodzie pocztowym 94107?",
        "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"",
        "query_pl": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Mgła\" AND EVENTS != \"Deszcz\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?",
        "question_original_pl": "Jakie są identyfikatory stacji, które mają szerokość geograficzną powyżej 37,4 i nigdy nie miały dostępności rowerów poniżej 7?",
        "question": "What are the ids of terminals that have latitude above 37.4 and never had bike availability below 7?",
        "question_pl": "Jakie są identyfikatory terminali, które mają szerokość geograficzną powyżej 37,4 i nigdy nie miały dostępności rowerów poniżej 7?",
        "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7",
        "query_pl": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?",
        "question_original_pl": "Jakie są identyfikatory wszystkich stacji, które mają szerokość geograficzną powyżej 37,4 i nigdy nie miały mniej niż 7 dostępnych rowerów?",
        "question": "What are the ids of all terminals that have a latitude above 37.4 and have never had less than 7 bikes available?",
        "question_pl": "Jakie są identyfikatory wszystkich terminali, które mają szerokość geograficzną powyżej 37,4 i nigdy nie miały mniej niż 7 dostępnych rowerów?",
        "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7",
        "query_pl": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?",
        "question_original_pl": "Jakie są nazwy stacji, które mają średnią dostępność rowerów powyżej 10 i nie znajdują się w mieście San Jose?",
        "question": "What are names of terminals that have average bicycle availability above 10 and are not located in San Jose city?",
        "question_pl": "Jakie są nazwy terminali, które mają średnią dostępność rowerów powyżej 10 i nie znajdują się w mieście San Jose?",
        "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"",
        "query_pl": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names of all stations that have more than 10 bikes available and are not located in San Jose?",
        "question_original_pl": "Jak nazywają się wszystkie stacje, na których dostępnych jest więcej niż 10 rowerów i które nie znajdują się w San Jose?",
        "question": "What are the names of all terminals that have more than 10 bikes available and are not located in San Jose?",
        "question_pl": "Jak nazywają się wszystkie terminale, które mają więcej niż 10 dostępnych rowerów i nie znajdują się w San Jose?",
        "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"",
        "query_pl": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the name, latitude, and city of the station with the lowest latitude?",
        "question_original_pl": "Jaka jest nazwa, szerokość geograficzna i miasto stacji o najniższej szerokości geograficznej?",
        "question": "What are the name, latitude, and city of the terminal with the lowest latitude?",
        "question_pl": "Jaka jest nazwa, szerokość geograficzna i miasto terminalu o najniższej szerokości geograficznej?",
        "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1",
        "query_pl": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the name, latitude, and city of the station that is located the furthest South?",
        "question_original_pl": "Podaj nazwę, szerokość geograficzną i miasto stacji, która znajduje się najdalej na południe?",
        "question": "What is the name, latitude, and city of the terminal that is located the furthest South?",
        "question_pl": "Podaj nazwę, szerokość geograficzną i miasto terminalu, który znajduje się najdalej na południe?",
        "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1",
        "query_pl": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
        "question_original_pl": "Jaka jest data, średnia temperatura i średnia wilgotność dla 3 dni z największymi maksymalnymi prędkościami podmuchów?",
        "question": "What are the day, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?",
        "question_pl": "Jaki jest dzień, średnia temperatura i średnia wilgotność dla 3 najlepszych dni z największymi maksymalnymi prędkościami podmuchów?",
        "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
        "query_pl": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
        "question_original_pl": "Jaka jest data, średnia temperatura i średnia wilgotność dla dni z 3 największymi maksymalnymi prędkościami podmuchów?",
        "question": "What is the day, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?",
        "question_pl": "Jaki jest dzień, średnia temperatura i średnia wilgotność dla dni z 3 największymi maksymalnymi prędkościami podmuchów?",
        "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
        "query_pl": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "List the name and the number of stations for all the cities that have at least 15 stations.",
        "question_original_pl": "Wymień nazwy i liczbę stacji dla wszystkich miast, które mają co najmniej 15 stacji.",
        "question": "List the name and the number of terminals for all the cities that have at least 15 terminals.",
        "question_pl": "Wymień nazwę i liczbę terminali dla wszystkich miast, które mają co najmniej 15 terminali.",
        "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15",
        "query_pl": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the name of every city that has at least 15 stations and how many stations does it have?",
        "question_original_pl": "Jak nazywa się każde miasto, które ma co najmniej 15 stacji i ile stacji ma to miasto?",
        "question": "What is the name of every city that has at least 15 terminals and how many terminals does it have?",
        "question_pl": "Jak nazywa się każde miasto, które ma co najmniej 15 terminali i ile ma terminali?",
        "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15",
        "query_pl": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
    },
    {
        "db_id": "bike_1",
        "question_original": "Find the ids and names of stations from which at least 200 trips started.",
        "question_original_pl": "Znajdź identyfikatory i nazwy stacji, z których rozpoczęto co najmniej 200 przejazdów.",
        "question": "Find the ids and names of terminals from which at least 200 tours started.",
        "question_pl": "Znajdź identyfikatory i nazwy terminali, z których rozpoczęto co najmniej 200 podróży.",
        "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200",
        "query_pl": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids and names of all start stations that were the beginning of at least 200 trips?",
        "question_original_pl": "Jakie są identyfikatory i nazwy wszystkich stacji początkowych, które były początkiem co najmniej 200 podróży?",
        "question": "What are the ids and names of all start terminals that were the beginning of at least 200 tours?",
        "question_pl": "Jakie są identyfikatory i nazwy wszystkich terminali startowych, które były początkiem co najmniej 200 tras?",
        "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200",
        "query_pl": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
    },
    {
        "db_id": "bike_1",
        "question_original": "List all the cities in a decreasing order of each city's stations' highest latitude.",
        "question_original_pl": "Wymień wszystkie miasta w kolejności malejącej według największej szerokości geograficznej stacji każdego z nich.",
        "question": "List all the cities in a decreasing order of each city's terminals' highest latitude.",
        "question_pl": "Wymień wszystkie miasta w kolejności malejącej według największej szerokości geograficznej, na której znajdują się terminale.",
        "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC",
        "query_pl": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each city, list their names in decreasing order by their highest station latitude.",
        "question_original_pl": "Dla każdego miasta wymień ich nazwy w porządku malejącym według największej szerokości geograficznej.",
        "question": "For each city, list their names in decreasing order by their highest terminal latitude.",
        "question_pl": "Dla każdego miasta wymień ich nazwy w porządku malejącym według najwyższej szerokości geograficznej.",
        "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC",
        "query_pl": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.",
        "question_original_pl": "Jakie są daty, w których odnotowano 5 najwyższych wskaźników zachmurzenia? Podaj również wskaźnik zachmurzenia.",
        "question": "What are the day that had the top 5 cloud cover rates? Also tell me the cloud cover rate.",
        "question_pl": "Które dni miały 5 najwyższych wskaźników zachmurzenia? Podaj również wskaźnik zachmurzenia.",
        "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
        "query_pl": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the dates that have the 5 highest cloud cover rates and what are the rates?",
        "question_original_pl": "Jakie są daty, w których występuje 5 najwyższych wskaźników zachmurzenia i jakie są te wskaźniki?",
        "question": "What are the day that have the 5 highest cloud cover rates and what are the rates?",
        "question_pl": "Które dni mają 5 najwyższych wskaźników zachmurzenia i jakie są te wskaźniki?",
        "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",
        "query_pl": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids and durations of the trips with the top 3 durations?",
        "question_original_pl": "Jakie są identyfikatory i czasy trwania podróży z 3 najlepszymi czasami trwania?",
        "question": "What are the ids and durations of the tours with the top 3 durations?",
        "question_pl": "Jakie są identyfikatory i czasy trwania tras z 3 najlepszymi czasami trwania?",
        "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3",
        "query_pl": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of the trips that lasted the longest and how long did they last?",
        "question_original_pl": "Jakie są identyfikatory podróży, które trwały najdłużej i jak długo trwały?",
        "question": "What are the ids of the tours that lasted the longest and how long did they last?",
        "question_pl": "Jakie są identyfikatory tras, które trwały najdłużej i jak długo trwały?",
        "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3",
        "query_pl": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each station, return its longitude and the average duration of trips that started from the station.",
        "question_original_pl": "Dla każdej stacji zwróć jej długość geograficzną i średni czas trwania podróży rozpoczętych z tej stacji.",
        "question": "For each terminal, return its longitude and the average duration of trips that started from the terminal.",
        "question_pl": "Dla każdego terminalu zwróć jego długość geograficzną i średni czas trwania podróży, które rozpoczęły się z tego terminalu.",
        "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id",
        "query_pl": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each start station id, what is its name, longitude and average duration of trips started there?",
        "question_original_pl": "Dla każdego identyfikatora stacji początkowej, jaka jest jej nazwa, długość geograficzna i średni czas trwania rozpoczętych tam podróży?",
        "question": "For each start terminal id, what is its name, longitude and average length of tours started there?",
        "question_pl": "Dla każdego identyfikatora terminalu startowego, jaka jest jego nazwa, długość geograficzna i średnia długość rozpoczętych tam podróży?",
        "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id",
        "query_pl": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each station, find its latitude and the minimum duration of trips that ended at the station.",
        "question_original_pl": "Dla każdej stacji znajdź jej szerokość geograficzną i minimalny czas trwania podróży, które zakończyły się na tej stacji.",
        "question": "For each terminal, find its latitude and the minimum length of tours that ended at the terminal.",
        "question_pl": "Dla każdego terminalu znajdź jego szerokość geograficzną i minimalną długość tras, które kończyły się w tym terminalu.",
        "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id",
        "query_pl": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
    },
    {
        "db_id": "bike_1",
        "question_original": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?",
        "question_original_pl": "Dla każdego identyfikatora stacji końcowej, jaka jest jej nazwa, szerokość geograficzna i minimalny czas trwania zakończonych tam podróży?",
        "question": "For each end terminal id, what is its name, latitude, and minimum length of the tours ended there?",
        "question_pl": "Dla każdego identyfikatora terminala końcowego, jaka jest jego nazwa, szerokość geograficzna i minimalna długość zakończonych tam tras?",
        "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id",
        "query_pl": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
    },
    {
        "db_id": "bike_1",
        "question_original": "List all the distinct stations from which a trip of duration below 100 started.",
        "question_original_pl": "Wymień wszystkie różne stacje, z których rozpoczęła się podróż o czasie trwania poniżej 100.",
        "question": "List all the different terminals from which a tour of duration below 100 started.",
        "question_pl": "Wymień wszystkie różne terminale, z których rozpoczęła się trasa o czasie trwania poniżej 100.",
        "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100",
        "query_pl": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are all the different start station names for a trip that lasted less than 100?",
        "question_original_pl": "Jakie są różne nazwy stacji początkowych dla podróży, która trwała mniej niż 100?",
        "question": "What are all the different start terminal names for a trip that lasted less than 100?",
        "question_pl": "Jakie są różne nazwy terminali startowych dla podróży, która trwała mniej niż 100?",
        "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100",
        "query_pl": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
    },
    {
        "db_id": "bike_1",
        "question_original": "Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.",
        "question_original_pl": "Znajdź identyfikator podróży, które trwały co najmniej tak długo, jak średni czas trwania podróży w kodzie pocztowym 94103.",
        "question": "Find the id for the tours that lasted at least as long as the average duration of trips in zip code 94103.",
        "question_pl": "Znajdź identyfikator wycieczek trwających co najmniej tak długo, jak średni czas trwania wycieczek w kodzie pocztowym 94103.",
        "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
        "query_pl": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?",
        "question_original_pl": "Jakie są identyfikatory wszystkich podróży, których czas trwania był tak długi, jak średni czas trwania podróży w kodzie pocztowym 94103?",
        "question": "What are the ids of all tours that had a duration as long as the average trip duration in the zip code 94103?",
        "question_pl": "Jakie są identyfikatory wszystkich wycieczek o czasie trwania równym średniemu czasowi trwania wycieczki w kodzie pocztowym 94103?",
        "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
        "query_pl": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the dates in which the mean sea level pressure was between 30.3 and 31?",
        "question_original_pl": "Jakie są daty, w których średnie ciśnienie na poziomie morza wynosiło od 30,3 do 31?",
        "question": "What are the days in which the mean sea level pressure was between 30.3 and 31?",
        "question_pl": "W jakich dniach średnie ciśnienie na poziomie morza wynosiło od 30,3 do 31?",
        "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
        "query_pl": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the dates that have an average sea level pressure between 30.3 and 31?",
        "question_original_pl": "Jakie są daty, w których średnie ciśnienie na poziomie morza wynosi od 30,3 do 31?",
        "question": "What are the days that have an average sea level pressure between 30.3 and 31?",
        "question_pl": "W jakich dniach średnie ciśnienie na poziomie morza wynosi od 30,3 do 31?",
        "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
        "query_pl": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the id and name of the stations that have ever had more than 12 bikes available?",
        "question_original_pl": "Jaki jest identyfikator i nazwa stacji, na których kiedykolwiek dostępnych było więcej niż 12 rowerów?",
        "question": "What are the id and name of the terminals that have ever had more than 12 bikes available?",
        "question_pl": "Jakie są identyfikatory i nazwy terminali, w których kiedykolwiek dostępnych było więcej niż 12 rowerów?",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12",
        "query_pl": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the different ids and names of the stations that have had more than 12 bikes available?",
        "question_original_pl": "Jakie są różne identyfikatory i nazwy stacji, na których dostępnych jest więcej niż 12 rowerów?",
        "question": "What are the different ids and names of the terminals that have had more than 12 bicycles available?",
        "question_pl": "Jakie są różne identyfikatory i nazwy terminali, w których dostępnych jest więcej niż 12 rowerów?",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12",
        "query_pl": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?",
        "question_original_pl": "Jakie są kody pocztowe, które mają średnią wilgotność poniżej 70 i przez które przeszło co najmniej 100 podróży?",
        "question": "What are the postal codes that have an average mean humidity below 70 and had at least 100 trips come through there?",
        "question_pl": "Jakie są kody pocztowe, które mają średnią wilgotność poniżej 70 i przeszło przez nie co najmniej 100 podróży?",
        "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100",
        "query_pl": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?",
        "question_original_pl": "Jak nazywają się stacje, które znajdują się w mieście Palo Alto, ale nigdy nie były punktem końcowym podróży więcej niż 100 razy?",
        "question": "What are the names of terminals that are located in Palo Alto city but have never been the ending point of trips more than 100 times?",
        "question_pl": "Jak nazywają się terminale, które znajdują się w mieście Palo Alto, ale nigdy nie były punktem końcowym podróży więcej niż 100 razy?",
        "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100",
        "query_pl": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
    },
    {
        "db_id": "bike_1",
        "question_original": "What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips",
        "question_original_pl": "Jak nazywają się stacje, które znajdują się w Palo Alto, ale nigdy nie były punktem końcowym podróży?",
        "question": "What are the names of the terminals that are located in Palo Alto but have never been the ending point of the trips",
        "question_pl": "Jak nazywają się terminale, które znajdują się w Palo Alto, ale nigdy nie były punktem końcowym podróży?",
        "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100",
        "query_pl": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
    },
    {
        "db_id": "bike_1",
        "question_original": "How many trips started from Mountain View city and ended at Palo Alto city?",
        "question_original_pl": "Ile podróży rozpoczęło się w mieście Mountain View i zakończyło w mieście Palo Alto?",
        "question": "How many tours started from Mountain View city and ended at Palo Alto city?",
        "question_pl": "Ile wycieczek rozpoczęło się w mieście Mountain View i zakończyło w mieście Palo Alto?",
        "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"",
        "query_pl": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Widok z góry\" AND T3.city  =  \"Palo Alto\""
    },
    {
        "db_id": "bike_1",
        "question_original": "How many trips stated from  a station in Mountain View and ended at one in Palo Alto?",
        "question_original_pl": "Ile podróży rozpoczęło się na stacji w Mountain View i zakończyło na stacji w Palo Alto?",
        "question": "How many tours stated from  a terminal in Mountain View and ended at one in Palo Alto?",
        "question_pl": "Ile wycieczek rozpoczęło się z terminalu w Mountain View, a zakończyło w Palo Alto?",
        "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"",
        "query_pl": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Widok z góry\" AND T3.city  =  \"Palo Alto\""
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the average latitude and longitude of the starting points of all trips?",
        "question_original_pl": "Jaka jest średnia szerokość i długość geograficzna punktów początkowych wszystkich podróży?",
        "question": "What is the average latitude and longitude of the starting points of all tours?",
        "question_pl": "Jaka jest średnia szerokość i długość geograficzna punktów początkowych wszystkich wycieczek?",
        "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id",
        "query_pl": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
    },
    {
        "db_id": "bike_1",
        "question_original": "What is the average latitude and longitude of all starting stations for the trips?",
        "question_original_pl": "Jaka jest średnia szerokość i długość geograficzna wszystkich stacji początkowych dla podróży?",
        "question": "What is the average latitude and longitude of all starting terminals for the tours?",
        "question_pl": "Jaka jest średnia szerokość i długość geograficzna wszystkich terminali początkowych dla wycieczek?",
        "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id",
        "query_pl": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
    },
    {
        "db_id": "book_2",
        "question_original": "List the titles of the books in ascending order of issues.",
        "question_original_pl": "Wymień tytuły książek w kolejności rosnącej.",
        "question": "List the names of the books in ascending order of issues.",
        "question_pl": "Wymień nazwy książek w kolejności rosnącej.",
        "query": "SELECT Title FROM book ORDER BY Issues ASC",
        "query_pl": "SELECT Title FROM book ORDER BY Issues ASC"
    },
    {
        "db_id": "book_2",
        "question_original": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
        "question_original_pl": "Jakie są tytuły książek, których autorką nie jest \"Elaine Lee\"?",
        "question": "What are the names of the books whose author is not \"Elaine Lee\"?",
        "question_pl": "Jak nazywają się książki, których autorką nie jest \"Elaine Lee\"?",
        "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"",
        "query_pl": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\""
    },
    {
        "db_id": "book_2",
        "question_original": "What are the title and issues of the books?",
        "question_original_pl": "Jakie są tytuły i wydania książek?",
        "question": "What are the name and issues of the books?",
        "question_pl": "Jakie są nazwy i wydania książek?",
        "query": "SELECT Title ,  Issues FROM book",
        "query_pl": "SELECT Title ,  Issues FROM book"
    },
    {
        "db_id": "book_2",
        "question_original": "What are the dates of publications in descending order of price?",
        "question_original_pl": "Jakie są daty publikacji w kolejności malejącej według ceny?",
        "question": "What are the days of publications in descending order of price?",
        "question_pl": "Jakie są dni publikacji w kolejności malejącej według ceny?",
        "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC",
        "query_pl": "SELECT Publication_Date FROM publication ORDER BY Price DESC"
    },
    {
        "db_id": "book_2",
        "question_original": "What are the distinct publishers of publications with price higher than 5000000?",
        "question_original_pl": "Jacy są wydawcy publikacji o cenie wyższej niż 5000000?",
        "question": "What are the different publishers of publications with price higher than 5000000?",
        "question_pl": "Jacy są różni wydawcy publikacji o cenie wyższej niż 5000000?",
        "query": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000",
        "query_pl": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"
    },
    {
        "db_id": "book_2",
        "question_original": "List the publication dates of publications with 3 lowest prices.",
        "question_original_pl": "Wymień daty publikacji publikacji z 3 najniższymi cenami.",
        "question": "List the publication days of publications with 3 lowest prices.",
        "question_pl": "Wymień dni publikacji publikacji z 3 najniższymi cenami.",
        "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
        "query_pl": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"
    },
    {
        "db_id": "book_2",
        "question_original": "Show the title and publication dates of books.",
        "question_original_pl": "Pokaż tytuły i daty publikacji książek.",
        "question": "Show the name and publication dates of books.",
        "question_pl": "Pokaż nazwy i daty publikacji książek.",
        "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID",
        "query_pl": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID"
    },
    {
        "db_id": "book_2",
        "question_original": "Show writers who have published a book with price more than 4000000.",
        "question_original_pl": "Pokaż pisarzy, którzy opublikowali książkę o cenie przekraczającej 4000000.",
        "question": "Show authors who have published a book with price more than 4000000.",
        "question_pl": "Pokaż autorów, którzy opublikowali książkę o cenie przekraczającej 4000000.",
        "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000",
        "query_pl": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000"
    },
    {
        "db_id": "book_2",
        "question_original": "Show the titles of books in descending order of publication price.",
        "question_original_pl": "Pokaż tytuły książek w kolejności malejącej według ceny publikacji.",
        "question": "Show the names of books in descending order of publication price.",
        "question_pl": "Pokaż nazwy książek w kolejności malejącej według ceny publikacji.",
        "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC",
        "query_pl": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC"
    },
    {
        "db_id": "book_2",
        "question_original": "Please show the most common publication date.",
        "question_original_pl": "Wskaż najbardziej popularną datę publikacji.",
        "question": "Please show the most common publication day.",
        "question_pl": "Wskaż najbardziej popularny dzień publikacji.",
        "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "book_2",
        "question_original": "List the writers who have written more than one book.",
        "question_original_pl": "Wymień pisarzy, którzy napisali więcej niż jedną książkę.",
        "question": "List the authors who have written more than one book.",
        "question_pl": "Wymień autorów, którzy napisali więcej niż jedną książkę.",
        "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "book_2",
        "question_original": "List the titles of books that are not published.",
        "question_original_pl": "Wymień tytuły książek, które nie zostały opublikowane.",
        "question": "List the names of books that are not published.",
        "question_pl": "Wymień nazwy książek, które nie zostały opublikowane.",
        "query": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)",
        "query_pl": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)"
    },
    {
        "db_id": "book_2",
        "question_original": "What is the number of distinct publication dates?",
        "question_original_pl": "Jaka jest liczba różnych dat publikacji?",
        "question": "What is the number of different publication days?",
        "question_pl": "Jaka jest liczba różnych dni publikacji?",
        "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
        "query_pl": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
    },
    {
        "db_id": "book_2",
        "question_original": "How many distinct publication dates are there in our record?",
        "question_original_pl": "Ile różnych dat publikacji znajduje się w naszym rejestrze?",
        "question": "How many different publication days are there in our record?",
        "question_pl": "Ile różnych dni publikacji znajduje się w naszym rejestrze?",
        "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
        "query_pl": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
    },
    {
        "db_id": "book_2",
        "question_original": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"",
        "question_original_pl": "Pokaż ceny publikacji, których wydawcą jest \"Osoba\" lub \"Wiley\".",
        "question": "How much those publications whose publisher is either \"Person\" or \"Wiley\"",
        "question_pl": "Ile kosztują publikacje, których wydawcą jest \"Osoba\" lub \"Wiley\"?",
        "query": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\"",
        "query_pl": "SELECT Price FROM publication WHERE Publisher  =  \"Osoba\" OR Publisher  =  \"Wiley\""
    },
    {
        "db_id": "musical",
        "question_original": "How many actors are there?",
        "question_original_pl": "Ilu jest aktorów?",
        "question": "How many performers are there?",
        "question_pl": "Ilu jest wykonawców?",
        "query": "SELECT count(*) FROM actor",
        "query_pl": "SELECT count(*) FROM actor"
    },
    {
        "db_id": "musical",
        "question_original": "Count the number of actors.",
        "question_original_pl": "Policz liczbę aktorów.",
        "question": "Count the number of performers.",
        "question_pl": "Policz liczbę wykonawców.",
        "query": "SELECT count(*) FROM actor",
        "query_pl": "SELECT count(*) FROM actor"
    },
    {
        "db_id": "musical",
        "question_original": "List the name of actors in ascending alphabetical order.",
        "question_original_pl": "Wymień nazwiska aktorów w rosnącej kolejności alfabetycznej.",
        "question": "List the name of performers in ascending alphabetical order.",
        "question_pl": "Wymień nazwiska wykonawców w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Name FROM actor ORDER BY Name ASC",
        "query_pl": "SELECT Name FROM actor ORDER BY Name ASC"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of actors, ordered alphabetically?",
        "question_original_pl": "Jakie są nazwiska aktorów, uporządkowane alfabetycznie?",
        "question": "What are the names of performers, ordered alphabetically?",
        "question_pl": "Jakie są nazwiska wykonawców, uporządkowane alfabetycznie?",
        "query": "SELECT Name FROM actor ORDER BY Name ASC",
        "query_pl": "SELECT Name FROM actor ORDER BY Name ASC"
    },
    {
        "db_id": "musical",
        "question_original": "List the name of actors whose age is not 20.",
        "question_original_pl": "Wymień nazwiska aktorów, których wiek nie przekracza 20 lat.",
        "question": "List the name of performers whose age is not 20.",
        "question_pl": "Wymień nazwiska wykonawców, których wiek nie przekracza 20 lat.",
        "query": "SELECT Name FROM actor WHERE Age != 20",
        "query_pl": "SELECT Name FROM actor WHERE Age != 20"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of actors who are not 20 years old?",
        "question_original_pl": "Jakie są nazwiska aktorów, którzy nie mają 20 lat?",
        "question": "What are the names of performers who are not 20 years old?",
        "question_pl": "Jakie są nazwiska wykonawców, którzy nie mają 20 lat?",
        "query": "SELECT Name FROM actor WHERE Age != 20",
        "query_pl": "SELECT Name FROM actor WHERE Age != 20"
    },
    {
        "db_id": "musical",
        "question_original": "Return the duration of the actor with the greatest age.",
        "question_original_pl": "Zwróć czas trwania aktora o największym wieku.",
        "question": "Return the duration of the performer with the greatest age.",
        "question_pl": "Zwróć czas trwania wykonawcy o największym wieku.",
        "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of musicals with nominee \"Bob Fosse\"?",
        "question_original_pl": "Jak nazywają się musicale z nominacją \"Bob Fosse\"?",
        "question": "What are the names of music dramas with nominee \"Bob Fosse\"?",
        "question_pl": "Jak nazywają się dramaty muzyczne z nominowanym \"Bobem Fosse\"?",
        "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
        "query_pl": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
    },
    {
        "db_id": "musical",
        "question_original": "Return the names of musicals who have the nominee Bob Fosse.",
        "question_original_pl": "Zwróć nazwy musicali, w których występuje nominowany Bob Fosse.",
        "question": "Return the names of music dramas who have the nominee Bob Fosse.",
        "question_pl": "Podaj nazwy dramatów muzycznych, w których występuje nominowany Bob Fosse.",
        "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
        "query_pl": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
    },
    {
        "db_id": "musical",
        "question_original": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?",
        "question_original_pl": "Jakie są odrębne nominacje musicali z nagrodą, która nie jest \"Nagroda Tony\"?",
        "question": "What are the different nominees of the musicals with the award that is not \"Tony Award\"?",
        "question_pl": "Jakie są różne nominacje musicali z nagrodą, która nie jest \"Nagroda Tony\"?",
        "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
        "query_pl": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Nagroda Tony\""
    },
    {
        "db_id": "musical",
        "question_original": "Show names of actors and names of musicals they are in.",
        "question_original_pl": "Pokaż nazwiska aktorów i nazwy musicali, w których występują.",
        "question": "Show names of performers and names of musicals they are in.",
        "question_pl": "Pokaż nazwiska wykonawców i nazwy musicali, w których występują.",
        "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID",
        "query_pl": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of actors and the musicals that they are in?",
        "question_original_pl": "Jak nazywają się aktorzy i w jakich musicalach występują?",
        "question": "What are the names of performers and the musicals that they are in?",
        "question_pl": "Jak nazywają się wykonawcy i w jakich musicalach występują?",
        "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID",
        "query_pl": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
    },
    {
        "db_id": "musical",
        "question_original": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
        "question_original_pl": "Pokaż nazwiska aktorów, którzy wystąpili w musicalu \"Upiór w operze\".",
        "question": "Show names of performers that have appeared in musical with name \"The Phantom of the Opera\".",
        "question_pl": "Pokaż nazwiska wykonawców, którzy wystąpili w musicalu o nazwie \"Upiór w operze\".",
        "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "query_pl": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"Upiór w operze\""
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
        "question_original_pl": "Jak nazywają się aktorzy, którzy wystąpili w musicalu Upiór w operze?",
        "question": "What are the names of performers who have been in the musical titled The Phantom of the Opera?",
        "question_pl": "Jakie są nazwiska wykonawców, którzy wystąpili w musicalu Upiór w operze?",
        "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "query_pl": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"Upiór w operze\""
    },
    {
        "db_id": "musical",
        "question_original": "Show names of actors in descending order of the year their musical is awarded.",
        "question_original_pl": "Pokaż nazwiska aktorów w kolejności malejącej według roku, w którym ich musical został nagrodzony.",
        "question": "Show names of performers in descending order of the year their musical is awarded.",
        "question_pl": "Pokaż nazwiska wykonawców w kolejności malejącej według roku, w którym ich musical został nagrodzony.",
        "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC",
        "query_pl": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of actors ordered descending by the year in which their musical was awarded?",
        "question_original_pl": "Jakie są nazwiska aktorów uporządkowane malejąco według roku, w którym ich musical został nagrodzony?",
        "question": "What are the names of performers ordered descending by the year in which their musical was awarded?",
        "question_pl": "Jakie są nazwiska wykonawców uporządkowane malejąco według roku, w którym ich musical został nagrodzony?",
        "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC",
        "query_pl": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
    },
    {
        "db_id": "musical",
        "question_original": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "question_original_pl": "Pokaż nazwy musicali i liczbę aktorów, którzy w nich wystąpili.",
        "question": "Show names of music dramas and the number of actors who have appeared in the music dramas.",
        "question_pl": "Pokaż nazwy dramatów muzycznych i liczbę aktorów, którzy w nich wystąpili.",
        "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
    },
    {
        "db_id": "musical",
        "question_original": "How many actors have appeared in each musical?",
        "question_original_pl": "Ilu aktorów wystąpiło w każdym musicalu?",
        "question": "How many performers have appeared in each music drama?",
        "question_pl": "Ilu wykonawców wystąpiło w każdym dramacie muzycznym?",
        "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "query_pl": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
    },
    {
        "db_id": "musical",
        "question_original": "Show names of musicals which have at least three actors.",
        "question_original_pl": "Pokaż nazwy musicali, w których występuje co najmniej trzech aktorów.",
        "question": "Show names of musicals which have at least three performers.",
        "question_pl": "Pokaż nazwy musicali, w których występuje co najmniej trzech wykonawców.",
        "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
        "query_pl": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of musicals who have at 3 or more actors?",
        "question_original_pl": "Jakie są nazwy musicali, w których występuje 3 lub więcej aktorów?",
        "question": "What are the names of music dramas who have at 3 or more performers?",
        "question_pl": "Jakie są nazwy dramatów muzycznych, które mają co najmniej 3 wykonawców?",
        "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
        "query_pl": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
    },
    {
        "db_id": "musical",
        "question_original": "Show different nominees and the number of musicals they have been nominated.",
        "question_original_pl": "Pokaż różnych nominowanych i liczbę nominowanych musicali.",
        "question": "Show different nominees and the number of music dramas they have been nominated.",
        "question_pl": "Pokaż różnych nominowanych i liczbę nominowanych dram muzycznych.",
        "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "query_pl": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
    },
    {
        "db_id": "musical",
        "question_original": "How many musicals has each nominee been nominated for?",
        "question_original_pl": "Za ile musicali nominowani byli poszczególni nominowani?",
        "question": "How many music dramas has each nominee been nominated for?",
        "question_pl": "Za ile dramatów muzycznych nominowano każdego z nominowanych?",
        "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "query_pl": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
    },
    {
        "db_id": "musical",
        "question_original": "Who is the nominee who has been nominated for the most musicals?",
        "question_original_pl": "Kto jest nominowany w największej liczbie musicali?",
        "question": "Who is the nominee who has been nominated for the most music dramas?",
        "question_pl": "Kto jest nominowany do największej liczby nominacji za dramaty muzyczne?",
        "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "musical",
        "question_original": "List the most common result of the musicals.",
        "question_original_pl": "Wymień najczęstsze skutki musicali.",
        "question": "List the most common outcome of the music dramas.",
        "question_pl": "Wymień najczęstsze skutki dramatów muzycznych.",
        "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "musical",
        "question_original": "Return the most frequent result across all musicals.",
        "question_original_pl": "Zwróć najczęstszy wynik we wszystkich musicalach.",
        "question": "Return the most frequent outcome across all music dramas.",
        "question_pl": "Zwróć najczęstszy wynik we wszystkich dramach muzycznych.",
        "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "musical",
        "question_original": "List the nominees that have been nominated more than two musicals.",
        "question_original_pl": "Wymień nominacje, które otrzymały więcej niż dwa musicale.",
        "question": "List the nominees that have been nominated more than two music dramas.",
        "question_pl": "Wymień nominowanych, którzy otrzymali więcej niż dwie nominacje do dramatów muzycznych.",
        "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
        "query_pl": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "musical",
        "question_original": "List the name of musicals that do not have actors.",
        "question_original_pl": "Wymień nazwy musicali, w których nie występują aktorzy.",
        "question": "List the name of music dramas that do not have actors.",
        "question_pl": "Wymień nazwy dramatów muzycznych, w których nie występują aktorzy.",
        "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "query_pl": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
    },
    {
        "db_id": "musical",
        "question_original": "What are the names of musicals who have no actors?",
        "question_original_pl": "Jak nazywają się musicale, w których nie ma aktorów?",
        "question": "What are the names of music dramas who have no performers?",
        "question_pl": "Jakie są nazwy dramatów muzycznych, które nie mają wykonawców?",
        "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "query_pl": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
    },
    {
        "db_id": "musical",
        "question_original": "Show the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\".",
        "question_original_pl": "Pokaż nominowanych, którzy nominowali musicale zarówno do \"Nagroda Tony\", jak i \"Drama Desk Award\".",
        "question": "Show the nominees that have nominated music dramas for both \"Tony Award\" and \"Drama Desk Award\".",
        "question_pl": "Pokaż nominowanych, którzy nominowali dramaty muzyczne zarówno do \"Nagroda Tony\", jak i \"Drama Desk Award\".",
        "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"",
        "query_pl": "SELECT Nominee FROM musical WHERE Award  =  \"Nagroda Tony\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Nagroda Drama Desk\""
    },
    {
        "db_id": "musical",
        "question_original": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
        "question_original_pl": "Pokaż nominację muzyczną z nagrodą \"Bob Fosse\" lub \"Cleavant Derricks\".",
        "question": "Show the music drama nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
        "question_pl": "Pokaż dramat muzyczny nominowany do nagrody \"Bob Fosse\" lub \"Cleavant Derricks\".",
        "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
        "query_pl": "SELECT Nominee FROM musical WHERE Award  =  \"Nagroda Tony\" OR Award  =  \"Cleavant Derricks\""
    },
    {
        "db_id": "twitter_1",
        "question_original": "Return the text of tweets about the topic 'intern'.",
        "question_original_pl": "Zwróć tekst tweetów dotyczących tematu \"stażysta\".",
        "question": "Return the content of tweets about the topic 'intern'.",
        "question_pl": "Zwróć zawartość tweetów dotyczących tematu \"stażysta\".",
        "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'",
        "query_pl": "SELECT text FROM tweets WHERE text LIKE '%stażysta%'"
    },
    {
        "db_id": "twitter_1",
        "question_original": "List the text of all tweets in the order of date.",
        "question_original_pl": "Wyświetl tekst wszystkich tweetów w kolejności według daty.",
        "question": "List the content of all tweets in the order of date.",
        "question_pl": "Wyświetlaj zawartość wszystkich tweetów w kolejności według daty.",
        "query": "SELECT text FROM tweets ORDER BY createdate",
        "query_pl": "SELECT text FROM tweets ORDER BY createdate"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What are all the catalog entry names?",
        "question_original_pl": "Jakie są wszystkie nazwy wpisów w katalogu?",
        "question": "What are all the catalogue entry names?",
        "question_pl": "Jakie są nazwy wszystkich wpisów w katalogu?",
        "query": "SELECT distinct catalog_entry_name FROM catalog_contents",
        "query_pl": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the list of attribute data types possessed by more than 3 attribute definitions.",
        "question_original_pl": "Znajdź listę typów danych atrybutów posiadających więcej niż 3 definicje atrybutów.",
        "question": "Find the list of feature data categories possessed by more than 3 feature definitions.",
        "question_pl": "Znajdź listę kategorii danych funkcji posiadanych przez więcej niż 3 definicje funkcji.",
        "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
        "query_pl": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What are the attribute data types with more than 3 attribute definitions?",
        "question_original_pl": "Jakie są typy danych atrybutów z więcej niż 3 definicjami atrybutów?",
        "question": "What are the feature data categories with more than 3 feature definitions?",
        "question_pl": "Jakie są kategorie danych funkcji z więcej niż 3 definicjami funkcji?",
        "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
        "query_pl": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What is the attribute data type of the attribute with name \"Green\"?",
        "question_original_pl": "Jaki jest typ danych atrybutu o nazwie \"Zielony\"?",
        "question": "What is the feature data category of the feature with name \"Green\"?",
        "question_pl": "Jaka jest kategoria danych elementu o nazwie \"Zielony\"?",
        "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
        "query_pl": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Zielony\""
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the attribute data type for the attribute named \"Green\".",
        "question_original_pl": "Znajdź typ danych atrybutu dla atrybutu o nazwie \"Zielony\".",
        "question": "Find the feature data category for the feature named \"Green\".",
        "question_pl": "Znajdź kategorię danych funkcji dla funkcji o nazwie \"Zielony\".",
        "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
        "query_pl": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Zielony\""
    },
    {
        "db_id": "product_catalog",
        "question_original": "What are the name and level of catalog structure with level number between 5 and 10",
        "question_original_pl": "Jaka jest nazwa i poziom struktury katalogów o numerach poziomów od 5 do 10?",
        "question": "What are the name and level of catalogue structure with level number between 5 and 10",
        "question_pl": "Jaka jest nazwa i poziom struktury katalogu o numerze poziomu od 5 do 10?",
        "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
        "query_pl": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find all the catalog publishers whose name contains \"Murray\"",
        "question_original_pl": "Znajdź wszystkich wydawców katalogów, których nazwa zawiera słowo \"Murray\"",
        "question": "Find all the catalogue publishers whose name contains \"Murray\"",
        "question_pl": "Znajdź wszystkich wydawców katalogów, których nazwa zawiera \"Murray\"",
        "query": "SELECT distinct catalog_publisher FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
        "query_pl": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
    },
    {
        "db_id": "product_catalog",
        "question_original": "Which catalog publisher has published the most catalogs?",
        "question_original_pl": "Który wydawca katalogów opublikował ich najwięcej?",
        "question": "Which catalogue publisher has published the most catalogues?",
        "question_pl": "Który wydawca opublikował najwięcej katalogów?",
        "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the catalog publisher that has the most catalogs.",
        "question_original_pl": "Znajdź wydawcę katalogów, który ma ich najwięcej.",
        "question": "Find the catalogue publisher that has the most catalogues.",
        "question_pl": "Znajdź wydawcę katalogu, który ma najwięcej katalogów.",
        "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.",
        "question_original_pl": "Znajdź nazwy i daty publikacji wszystkich katalogów, które mają numer poziomu katalogu większy niż 5.",
        "question": "Find the names and publication days of all catalogues that have catalogue level number greater than 5.",
        "question_pl": "Znajdź nazwy i dni publikacji wszystkich katalogów, które mają numer poziomu katalogu większy niż 5.",
        "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5",
        "query_pl": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What are the name and publication date of the catalogs with catalog level number above 5?",
        "question_original_pl": "Jakie są nazwy i daty publikacji katalogów z numerem poziomu katalogowego powyżej 5?",
        "question": "What are the name and publication day of the catalogues with catalogue level number above 5?",
        "question_pl": "Jaka jest nazwa i dzień publikacji katalogów z numerem poziomu katalogowego powyżej 5?",
        "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5",
        "query_pl": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What is the entry name of the most expensive catalog (in USD)?",
        "question_original_pl": "Jaka jest nazwa wejściowa najdroższego katalogu (w USD)?",
        "question": "What is the entry name of the most expensive catalogue (in USD)?",
        "question_pl": "Jaka jest nazwa najdroższego katalogu (w USD)?",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the entry name of the catalog with the highest price (in USD).",
        "question_original_pl": "Znajdź nazwę wpisu katalogu z najwyższą ceną (w USD).",
        "question": "Find the entry name of the catalogue with the highest price (in USD).",
        "question_pl": "Znajdź nazwę wpisu w katalogu z najwyższą ceną (w USD).",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "What is the product with the highest height? Give me the catalog entry name.",
        "question_original_pl": "Jaki produkt ma największą wysokość? Podaj nazwę pozycji katalogowej.",
        "question": "What is the products with the highest height? Give me the catalogue entry name.",
        "question_pl": "Jakie produkty mają największą wysokość? Podaj mi nazwę pozycji katalogowej.",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Which catalog content has the smallest capacity? Return the catalog entry name.",
        "question_original_pl": "Która zawartość katalogu ma najmniejszą pojemność? Zwróć nazwę wpisu katalogu.",
        "question": "Which catalogue content has the smallest capacity? Return the catalogue entry name.",
        "question_pl": "Która zawartość katalogu ma najmniejszą pojemność? Zwróć nazwę wpisu w katalogu.",
        "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.",
        "question_original_pl": "Która zawartość katalogu ma numer magazynowy produktu zaczynający się od \"2\"? Pokaż nazwy pozycji katalogu.",
        "question": "Which catalogue contents have a product stock number that starts from \"2\"? Show the catalogue entry names.",
        "question_pl": "Która zawartość katalogu ma numer magazynowy produktu zaczynający się od \"2\"? Pokaż nazwy pozycji katalogowych.",
        "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"",
        "query_pl": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the name and attribute ID of the attribute definitions with attribute value 0.",
        "question_original_pl": "Znajdź nazwę i identyfikator atrybutu definicji atrybutu z wartością atrybutu 0.",
        "question": "Find the name and feature ID of the feature definitions with feature value 0.",
        "question_pl": "Znajdź nazwę i identyfikator funkcji definicji funkcji z wartością funkcji 0.",
        "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0",
        "query_pl": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.",
        "question_original_pl": "Które definicje atrybutów mają wartość 0? Podaj nazwę i identyfikator atrybutu.",
        "question": "Which feature definitions have feature value 0? Give me the feature name and feature ID.",
        "question_pl": "Które definicje funkcji mają wartość 0? Podaj nazwę i identyfikator funkcji.",
        "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0",
        "query_pl": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
    },
    {
        "db_id": "product_catalog",
        "question_original": "Find the dates on which more than one revisions were made.",
        "question_original_pl": "Znajdź daty, w których wprowadzono więcej niż jedną poprawkę.",
        "question": "Find the days on which more than one revisions were made.",
        "question_pl": "Znajdź dni, w których dokonano więcej niż jednej korekty.",
        "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1",
        "query_pl": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
    },
    {
        "db_id": "product_catalog",
        "question_original": "How many products are there in the records?",
        "question_original_pl": "Ile produktów znajduje się w rejestrach?",
        "question": "How many goods are there in the records?",
        "question_pl": "Ile towarów znajduje się w ewidencji?",
        "query": "SELECT count(*) FROM catalog_contents",
        "query_pl": "SELECT count(*) FROM catalog_contents"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show name and distance for all aircrafts.",
        "question_original_pl": "Pokaż nazwę i odległość dla wszystkich samolotów.",
        "question": "Show name and flight length for all airplanes.",
        "question_pl": "Pokaż nazwę i długość lotu dla wszystkich samolotów.",
        "query": "SELECT name ,  distance FROM Aircraft",
        "query_pl": "SELECT name ,  distance FROM Aircraft"
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names and distances for all airplanes?",
        "question_original_pl": "Jakie są nazwy i odległości dla wszystkich samolotów?",
        "question": "What are the names and flight length for all airplanes?",
        "question_pl": "Jakie są nazwy i długość lotu wszystkich samolotów?",
        "query": "SELECT name ,  distance FROM Aircraft",
        "query_pl": "SELECT name ,  distance FROM Aircraft"
    },
    {
        "db_id": "flight_1",
        "question_original": "How many aircrafts have distance between 1000 and 5000?",
        "question_original_pl": "Ile samolotów ma odległość między 1000 a 5000?",
        "question": "How many airplanes have flight length between 1000 and 5000?",
        "question_pl": "Ile samolotów ma długość lotu między 1000 a 5000?",
        "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000",
        "query_pl": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the name and distance for aircraft with id 12?",
        "question_original_pl": "Jaka jest nazwa i odległość samolotu o identyfikatorze 12?",
        "question": "What is the name and flight length for plane with id 12?",
        "question_pl": "Jaka jest nazwa i długość lotu samolotu o identyfikatorze 12?",
        "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12",
        "query_pl": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the name and distance for the aircraft that has an id of 12?",
        "question_original_pl": "Jaka jest nazwa i odległość samolotu o identyfikatorze 12?",
        "question": "What is the name and flight length for the plane that has an id of 12?",
        "question_pl": "Jaka jest nazwa i długość lotu samolotu o identyfikatorze 12?",
        "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12",
        "query_pl": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the minimum, average, and maximum distance of all aircrafts.",
        "question_original_pl": "Jaka jest minimalna, średnia i maksymalna odległość wszystkich samolotów.",
        "question": "What is the minimum, average, and maximum flight length of all airplanes.",
        "question_pl": "Jaka jest minimalna, średnia i maksymalna długość lotu wszystkich samolotów.",
        "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft",
        "query_pl": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
    },
    {
        "db_id": "flight_1",
        "question_original": "Return the minimum, average and maximum distances traveled across all aircrafts.",
        "question_original_pl": "Zwróć minimalną, średnią i maksymalną odległość przebytą przez wszystkie samoloty.",
        "question": "Return the minimum, average and maximum flight length traveled across all airplanes.",
        "question_pl": "Zwróć minimalną, średnią i maksymalną długość lotu dla wszystkich samolotów.",
        "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft",
        "query_pl": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the aircrafts with top 3 shortest lengthes? List their names.",
        "question_original_pl": "Jakie są samoloty o 3 najkrótszych długościach? Wymień ich nazwy.",
        "question": "What are the airplanes with top 3 shortest lengthes? List their names.",
        "question_pl": "Jakie są samoloty z 3 najkrótszymi długościami? Wymień ich nazwy.",
        "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
        "query_pl": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names of all aircrafts that can cover more distances than average?",
        "question_original_pl": "Jak nazywają się wszystkie samoloty, które mogą pokonywać większe odległości niż przeciętnie?",
        "question": "What are the names of all planes that can cover more distances than average?",
        "question_pl": "Jak nazywają się wszystkie samoloty, które mogą pokonywać większe odległości niż średnia?",
        "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)",
        "query_pl": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show name and salary for all employees sorted by salary.",
        "question_original_pl": "Pokaż imię i nazwisko oraz wynagrodzenie wszystkich pracowników posortowane według wynagrodzenia.",
        "question": "Show name and wage for all employees sorted by wage.",
        "question_pl": "Pokaż nazwisko i wynagrodzenie wszystkich pracowników posortowane według wynagrodzenia.",
        "query": "SELECT name ,  salary FROM Employee ORDER BY salary",
        "query_pl": "SELECT name ,  salary FROM Employee ORDER BY salary"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the name and salary of all employees in order of salary?",
        "question_original_pl": "Jak nazywają się i ile zarabiają wszyscy pracownicy uszeregowani według wynagrodzenia?",
        "question": "What is the name and wage of all staffs in order of wage?",
        "question_pl": "Jak nazywają się i ile zarabiają wszyscy pracownicy w kolejności?",
        "query": "SELECT name ,  salary FROM Employee ORDER BY salary",
        "query_pl": "SELECT name ,  salary FROM Employee ORDER BY salary"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the id of every employee who has at least a salary of  100000?",
        "question_original_pl": "Jaki jest identyfikator każdego pracownika, którego pensja wynosi co najmniej 100000?",
        "question": "What is the id of every staff who has at least a salary of  100000?",
        "question_pl": "Jaki jest identyfikator każdego pracownika, który ma co najmniej 100000 pensji?",
        "query": "SELECT eid FROM Employee WHERE salary  >  100000",
        "query_pl": "SELECT eid FROM Employee WHERE salary  >  100000"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the name and salary for employee with id 242518965?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz wynagrodzenie pracownika o identyfikatorze 242518965?",
        "question": "What is the name and wage for employee with id 242518965?",
        "question_pl": "Jaka jest nazwa i wynagrodzenie pracownika o identyfikatorze 242518965?",
        "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965",
        "query_pl": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show the id and name of the employee with maximum salary.",
        "question_original_pl": "Pokaż identyfikator i imię pracownika z maksymalnym wynagrodzeniem.",
        "question": "Show the id and name of the staff with maximum wage .",
        "question_pl": "Pokaż identyfikator i nazwisko pracownika z maksymalnym wynagrodzeniem.",
        "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1",
        "query_pl": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show the name of employees with three lowest salaries.",
        "question_original_pl": "Pokaż nazwiska pracowników z trzema najniższymi pensjami.",
        "question": "Show the name of staffs with three lowest salaries.",
        "question_pl": "Wskaż pracowników z trzema najniższymi pensjami.",
        "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
        "query_pl": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names of all employees who have a salary higher than average?",
        "question_original_pl": "Podaj nazwiska wszystkich pracowników, których wynagrodzenie jest wyższe od średniej?",
        "question": "What are the names of all staffs who have a salary higher than average?",
        "question_pl": "Podaj nazwiska wszystkich pracowników, których wynagrodzenie jest wyższe niż średnia?",
        "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)",
        "query_pl": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the id and salary of the employee named Mark Young?",
        "question_original_pl": "Jaki jest identyfikator i wynagrodzenie pracownika o imieniu Mark Young?",
        "question": "What is the id and wage of the employee named Mark Young?",
        "question_pl": "Jaki jest identyfikator i wynagrodzenie pracownika o nazwisku Mark Young?",
        "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'",
        "query_pl": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.",
        "question_original_pl": "Pokaż numer lotu, miejsce wylotu, miejsce docelowe wszystkich lotów w kolejności alfabetycznej miast wylotu.",
        "question": "Show flight number, starting point, destination of all flights in the alphabetical order of the departure cities.",
        "question_pl": "Pokaż numer lotu, punkt początkowy, miejsce docelowe wszystkich lotów w kolejności alfabetycznej miast wylotu.",
        "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin",
        "query_pl": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?",
        "question_original_pl": "Jaki jest numer lotu, miejsce wylotu i miejsce docelowe dla wszystkich lotów w kolejności alfabetycznej według miast wylotu?",
        "question": "What is the flight number, starting point, and destination for all flights in alphabetical order by departure cities?",
        "question_pl": "Jaki jest numer lotu, punkt początkowy i miejsce docelowe dla wszystkich lotów w kolejności alfabetycznej według miast wylotu?",
        "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin",
        "query_pl": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show origins of all flights with destination Honolulu.",
        "question_original_pl": "Pokaż początki wszystkich lotów z miejscem docelowym Honolulu.",
        "question": "Show starting point of all flights with terminal Honolulu.",
        "question_pl": "Pokaż miejsce rozpoczęcia wszystkich lotów z terminalem Honolulu.",
        "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
        "query_pl": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the origins of all flights that are headed to Honolulu?",
        "question_original_pl": "Jakie są początki wszystkich lotów do Honolulu?",
        "question": "What are the starting point of all flights that are headed to Honolulu?",
        "question_pl": "Jaki jest punkt początkowy wszystkich lotów do Honolulu?",
        "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
        "query_pl": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
    },
    {
        "db_id": "flight_1",
        "question_original": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.",
        "question_original_pl": "Wyświetl datę wylotu i przylotu dla wszystkich lotów z Los Angeles do Honolulu.",
        "question": "Show me the leaving day and arriving day for all flights from Los Angeles to Honolulu.",
        "question_pl": "Pokaż mi dzień wylotu i przylotu dla wszystkich lotów z Los Angeles do Honolulu.",
        "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
        "query_pl": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the departure and arrival dates of all flights from LA to Honolulu?",
        "question_original_pl": "Jakie są daty wylotu i przylotu wszystkich lotów z LA do Honolulu?",
        "question": "What are the leaving and arriving days of all flights from LA to Honolulu?",
        "question_pl": "Jakie są dni wylotu i przylotu dla wszystkich lotów z LA do Honolulu?",
        "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
        "query_pl": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
    },
    {
        "db_id": "flight_1",
        "question_original": "Show origin and destination for flights with price higher than 300.",
        "question_original_pl": "Pokaż miejsce pochodzenia i miejsce docelowe dla lotów z ceną wyższą niż 300.",
        "question": "Show starting point and destination for flights with price higher than 300.",
        "question_pl": "Pokaż punkt początkowy i docelowy dla lotów z ceną wyższą niż 300.",
        "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300",
        "query_pl": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the origin and destination for all flights whose price is higher than 300?",
        "question_original_pl": "Jakie jest miejsce pochodzenia i miejsce docelowe wszystkich lotów, których cena jest wyższa niż 300?",
        "question": "What is the starting point and terminal for all flights whose price is higher than 300?",
        "question_pl": "Jaki jest punkt początkowy i terminal dla wszystkich lotów, których cena jest wyższa niż 300?",
        "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300",
        "query_pl": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show the flight number and distance of the flight with maximum price.",
        "question_original_pl": "Pokaż numer lotu i odległość lotu z maksymalną ceną.",
        "question": "Show the flight number and flight length of the flight with maximum price.",
        "question_pl": "Pokaż numer lotu i długość lotu z maksymalną ceną.",
        "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1",
        "query_pl": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the flight number and its distance for the one with the maximum price?",
        "question_original_pl": "Jaki jest numer lotu i odległość dla lotu z maksymalną ceną?",
        "question": "What is the flight number and its flight length for the one with the maximum price?",
        "question_pl": "Jaki jest numer lotu i jego długość w przypadku lotu z maksymalną ceną?",
        "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1",
        "query_pl": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show the flight number of flights with three lowest distances.",
        "question_original_pl": "Pokaż liczbę lotów z trzema najniższymi odległościami.",
        "question": "Show the flight number of flights with three lowest flight length.",
        "question_pl": "Pokaż liczbę lotów z trzema najniższymi długościami lotu.",
        "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
        "query_pl": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the average distance and average price for flights from Los Angeles.",
        "question_original_pl": "Jaka jest średnia odległość i średnia cena dla lotów z Los Angeles.",
        "question": "What is the average flight length and average price for flights from Los Angeles.",
        "question_pl": "Jaka jest średnia długość lotu i średnia cena dla lotów z Los Angeles.",
        "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"",
        "query_pl": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the average distance and price for all flights from LA?",
        "question_original_pl": "Jaka jest średnia odległość i cena dla wszystkich lotów z LA?",
        "question": "What is the average flight length and price for all flights from LA?",
        "question_pl": "Jaka jest średnia długość lotu i cena dla wszystkich lotów z LA?",
        "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"",
        "query_pl": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""
    },
    {
        "db_id": "flight_1",
        "question_original": "Show all origins and the number of flights from each origin.",
        "question_original_pl": "Pokaż wszystkie miejsca pochodzenia i liczbę lotów z każdego miejsca pochodzenia.",
        "question": "Show all starting point and the number of flights from each starting point.",
        "question_pl": "Pokaż wszystkie punkty początkowe i liczbę lotów z każdego punktu początkowego.",
        "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin",
        "query_pl": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
    },
    {
        "db_id": "flight_1",
        "question_original": "For each origin, how many flights came from there?",
        "question_original_pl": "Ile lotów odbyło się z każdego miejsca pochodzenia?",
        "question": "For each starting point, how many flights came from there?",
        "question_pl": "Ile lotów odbyło się z każdego punktu początkowego?",
        "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin",
        "query_pl": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show all destinations and the number of flights to each destination.",
        "question_original_pl": "Pokaż wszystkie miejsca docelowe i liczbę lotów do każdego z nich.",
        "question": "Show all destinations and the number of flights to each terminal.",
        "question_pl": "Pokaż wszystkie miejsca docelowe i liczbę lotów do każdego terminalu.",
        "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination",
        "query_pl": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"
    },
    {
        "db_id": "flight_1",
        "question_original": "Which origin has most number of flights?",
        "question_original_pl": "Które miejsce pochodzenia ma największą liczbę lotów?",
        "question": "Which starting point has most number of flights?",
        "question_pl": "Który punkt startowy ma najwięcej lotów?",
        "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "Which destination has least number of flights?",
        "question_original_pl": "Które miejsce docelowe ma najmniejszą liczbę lotów?",
        "question": "Which terminal has least number of flights?",
        "question_pl": "Który terminal obsługuje najmniej lotów?",
        "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the count of distinct employees with certificates?",
        "question_original_pl": "Jaka jest liczba poszczególnych pracowników z certyfikatami?",
        "question": "What is the count of different staffs with certificates?",
        "question_pl": "Jaka jest liczba różnych pracowników z certyfikatami?",
        "query": "SELECT count(DISTINCT eid) FROM Certificate",
        "query_pl": "SELECT count(DISTINCT eid) FROM Certificate"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show names for all aircrafts of which John Williams has certificates.",
        "question_original_pl": "Pokaż nazwy wszystkich samolotów, których certyfikaty posiada John Williams.",
        "question": "Show names for all aircrafts of which John Williams has credentials.",
        "question_pl": "Pokaż nazwy wszystkich samolotów, których dane uwierzytelniające posiada John Williams.",
        "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"",
        "query_pl": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names of all employees who have a certificate to fly Boeing 737-800?",
        "question_original_pl": "Podaj nazwiska wszystkich pracowników, którzy posiadają certyfikat uprawniający do latania Boeingiem 737-800?",
        "question": "What are the names of all staffs who have a certificate to fly Boeing 737-800?",
        "question_pl": "Jakie są nazwiska wszystkich pracowników, którzy posiadają certyfikat uprawniający do latania Boeingiem 737-800?",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"",
        "query_pl": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
    },
    {
        "db_id": "flight_1",
        "question_original": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.",
        "question_original_pl": "Pokaż nazwiska wszystkich pracowników, którzy posiadają certyfikaty na Boeinga 737-800 i Airbusa A340-300.",
        "question": "Show names for all staffs who have credentials on both Boeing 737-800 and Airbus A340-300.",
        "question_pl": "Pokaż nazwiska wszystkich pracowników, którzy posiadają uprawnienia na Boeinga 737-800 i Airbusa A340-300.",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"",
        "query_pl": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\""
    },
    {
        "db_id": "flight_1",
        "question_original": "Show names for all employees who do not have certificate of Boeing 737-800.",
        "question_original_pl": "Pokaż nazwiska wszystkich pracowników, którzy nie posiadają certyfikatu Boeinga 737-800.",
        "question": "Show names for all staffs who do not have certificate of Boeing 737-800.",
        "question_pl": "Pokaż nazwiska wszystkich pracowników, którzy nie mają certyfikatu Boeinga 737-800.",
        "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"",
        "query_pl": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names of all employees who are not certified to fly Boeing 737-800s?",
        "question_original_pl": "Jak nazywają się wszyscy pracownicy, którzy nie są certyfikowani do latania Boeingami 737-800?",
        "question": "What are the names of all staffs who are not certified to fly Boeing 737-800s?",
        "question_pl": "Jakie są nazwiska wszystkich pracowników, którzy nie posiadają certyfikatu uprawniającego do latania Boeingami 737-800?",
        "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"",
        "query_pl": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
    },
    {
        "db_id": "flight_1",
        "question_original": "What are the names of the aircraft that the least people are certified to fly?",
        "question_original_pl": "Jak nazywają się samoloty, do pilotowania których certyfikowanych jest najmniej osób?",
        "question": "What are the names of the plane that the least people are certified to fly?",
        "question_pl": "Jak nazywają się samoloty, do pilotowania których uprawnionych jest najmniej osób?",
        "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.",
        "question_original_pl": "Pokaż nazwę i dystans samolotów o dystansie większym niż 5000 i których certyfikat posiada co najmniej 5 osób.",
        "question": "Show the name and flight length of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.",
        "question_pl": "Pokaż nazwę i długość lotu samolotu o zasięgu ponad 5000 km, którego certyfikat posiada co najmniej 5 osób.",
        "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5",
        "query_pl": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?",
        "question_original_pl": "Jaka jest nazwa i odległość każdego samolotu, który może pokonać dystans większy niż 5000 i którym może latać co najmniej 5 osób?",
        "question": "What is the name and flight length of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?",
        "question_pl": "Jaka jest nazwa i długość lotu każdego samolotu, który może pokonać dystans większy niż 5000 km i którym może latać co najmniej 5 osób?",
        "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5",
        "query_pl": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
    },
    {
        "db_id": "flight_1",
        "question_original": "what is the salary and name of the employee who has the most number of aircraft certificates?",
        "question_original_pl": "Jaka jest pensja i nazwisko pracownika, który ma najwięcej certyfikatów lotniczych?",
        "question": "what is the wage and name of the employee who has the most number of aircraft certificates?",
        "question_pl": "Jakie jest wynagrodzenie i nazwisko pracownika, który posiada najwięcej certyfikatów lotniczych?",
        "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the salaray and name of the employee that is certified to fly the most planes?",
        "question_original_pl": "Jakie jest wynagrodzenie i nazwisko pracownika, który posiada certyfikat uprawniający do pilotowania największej liczby samolotów?",
        "question": "What is the wage and name of the employee that is certified to fly the most planes?",
        "question_pl": "Jaka jest pensja i nazwisko pracownika, który posiada certyfikat uprawniający do pilotowania największej liczby samolotów?",
        "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_1",
        "question_original": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?",
        "question_original_pl": "Jaka jest pensja i nazwisko pracownika, który ma najwięcej certyfikatów na samolotach o zasięgu powyżej 5000?",
        "question": "What is the wage and name of the staff who has the most number of certificates on aircrafts with distance more than 5000?",
        "question_pl": "Jakie jest wynagrodzenie i nazwisko pracownika, który ma najwięcej certyfikatów na samolotach o zasięgu powyżej 5000?",
        "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many allergies are there?",
        "question_original_pl": "Ile jest alergii?",
        "question": "How many hypersensitivities are there?",
        "question_pl": "Ile jest nadwrażliwości?",
        "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
        "query_pl": "SELECT count(DISTINCT allergy) FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many allergy entries are there?",
        "question_original_pl": "Ile jest wpisów dotyczących alergii?",
        "question": "How many hypersensitivity entries are there?",
        "question_pl": "Ile jest wpisów dotyczących nadwrażliwości?",
        "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
        "query_pl": "SELECT count(DISTINCT allergy) FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many different allergy types exist?",
        "question_original_pl": "Ile jest różnych typów alergii?",
        "question": "How many different hypersensitivity categories exist?",
        "question_pl": "Ile istnieje różnych kategorii nadwrażliwości?",
        "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
        "query_pl": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many distinct allergies are there?",
        "question_original_pl": "Ile jest różnych alergii?",
        "question": "How many different hypersensitivities are there?",
        "question_pl": "Ile jest różnych nadwrażliwości?",
        "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
        "query_pl": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergy types.",
        "question_original_pl": "Pokaż wszystkie typy alergii.",
        "question": "Show all hypersensitivity categories.",
        "question_pl": "Pokaż wszystkie kategorie nadwrażliwości.",
        "query": "SELECT DISTINCT allergytype FROM Allergy_type",
        "query_pl": "SELECT DISTINCT allergytype FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the different allergy types?",
        "question_original_pl": "Jakie są różne rodzaje alergii?",
        "question": "What are the different hypersensitivity categories?",
        "question_pl": "Jakie są różne kategorie nadwrażliwości?",
        "query": "SELECT DISTINCT allergytype FROM Allergy_type",
        "query_pl": "SELECT DISTINCT allergytype FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergies and their types.",
        "question_original_pl": "Pokaż wszystkie alergie i ich rodzaje.",
        "question": "Show all hypersensitivities and their categories.",
        "question_pl": "Pokaż wszystkie nadwrażliwości i ich kategorie.",
        "query": "SELECT allergy ,  allergytype FROM Allergy_type",
        "query_pl": "SELECT allergy ,  allergytype FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the allergies and their types?",
        "question_original_pl": "Jakie są alergie i ich rodzaje?",
        "question": "What are the hypersensitivities and their categories?",
        "question_pl": "Jakie są nadwrażliwości i ich kategorie?",
        "query": "SELECT allergy ,  allergytype FROM Allergy_type",
        "query_pl": "SELECT allergy ,  allergytype FROM Allergy_type"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergies with type food.",
        "question_original_pl": "Pokaż wszystkie alergie z typem żywności.",
        "question": "Show all hypersensitivities with type food.",
        "question_pl": "Pokaż wszystkie nadwrażliwości z typem żywności.",
        "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"",
        "query_pl": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"jedzenie\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are all the different food allergies?",
        "question_original_pl": "Jakie są rodzaje alergii pokarmowych?",
        "question": "What are all the different food hypersensitivities?",
        "question_pl": "Jakie są różne nadwrażliwości pokarmowe?",
        "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"",
        "query_pl": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"jedzenie\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "What is the type of allergy Cat?",
        "question_original_pl": "Jaki jest rodzaj alergii Cat?",
        "question": "What is the category of allergy Cat?",
        "question_pl": "Jaka jest kategoria alergii Cat?",
        "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
        "query_pl": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Kot\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "What is allergy type of a cat allergy?",
        "question_original_pl": "Jaki jest rodzaj alergii na kota?",
        "question": "What is allergy category of a cat allergy?",
        "question_pl": "Jaka jest kategoria alergii na kota?",
        "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
        "query_pl": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Kot\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many allergies have type animal?",
        "question_original_pl": "Ile alergii ma zwierzę typu?",
        "question": "How many hypersensitivities have type animal?",
        "question_pl": "Ile nadwrażliwości ma zwierzę typu?",
        "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
        "query_pl": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"zwierzę\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many animal type allergies exist?",
        "question_original_pl": "Ile jest alergii na zwierzęta?",
        "question": "How many animal category allergies exist?",
        "question_pl": "Ile istnieje kategorii alergii na zwierzęta?",
        "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
        "query_pl": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"zwierzę\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergy types and the number of allergies in each type.",
        "question_original_pl": "Pokaż wszystkie typy alergii i liczbę alergii w każdym typie.",
        "question": "Show all hypersensitivity categories and the number of hypersensitivities in each category.",
        "question_pl": "Pokaż wszystkie kategorie nadwrażliwości i liczbę nadwrażliwości w każdej kategorii.",
        "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype",
        "query_pl": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the allergy types and how many allergies correspond to each one?",
        "question_original_pl": "Jakie są rodzaje alergii i ile alergii odpowiada każdemu z nich?",
        "question": "What are the hypersensitivity categories and how many hypersensitivities correspond to each one?",
        "question_pl": "Jakie są kategorie nadwrażliwości i ile nadwrażliwości odpowiada każdej z nich?",
        "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype",
        "query_pl": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy type has most number of allergies?",
        "question_original_pl": "Który typ alergii ma największą liczbę alergii?",
        "question": "Which hypersensitivity category has most number of hypersensitivities?",
        "question_pl": "Która kategoria nadwrażliwości ma największą liczbę nadwrażliwości?",
        "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy type is most common?",
        "question_original_pl": "Który typ alergii występuje najczęściej?",
        "question": "Which hypersensitivity category is most common?",
        "question_pl": "Która kategoria nadwrażliwości występuje najczęściej?",
        "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy type has least number of allergies?",
        "question_original_pl": "Który typ alergii ma najmniejszą liczbę alergii?",
        "question": "Which hypersensitivity category has least number of hypersensitivities?",
        "question_pl": "Która kategoria nadwrażliwości ma najmniejszą liczbę nadwrażliwości?",
        "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy type is the least common?",
        "question_original_pl": "Który typ alergii występuje najrzadziej?",
        "question": "Which hypersensitivity category is the least common?",
        "question_pl": "Która kategoria nadwrażliwości występuje najrzadziej?",
        "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all majors.",
        "question_original_pl": "Pokaż wszystkie kierunki.",
        "question": "Show all discipline.",
        "question_pl": "Pokaż wszystkie dyscypliny.",
        "query": "SELECT DISTINCT Major FROM Student",
        "query_pl": "SELECT DISTINCT Major FROM Student"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the different majors?",
        "question_original_pl": "Jakie są różne kierunki studiów?",
        "question": "What are the different discipline?",
        "question_pl": "Jakie są różne dyscypliny?",
        "query": "SELECT DISTINCT Major FROM Student",
        "query_pl": "SELECT DISTINCT Major FROM Student"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show first name, last name, age for all female students. Their sex is F.",
        "question_original_pl": "Pokaż imię, nazwisko i wiek wszystkich uczennic. Ich płeć to F.",
        "question": "Show forename, family name, age for all female students. Their sex is F.",
        "question_pl": "Pokaż imię, nazwisko, wiek wszystkich uczennic. Ich płeć to F.",
        "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'",
        "query_pl": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Who is the advisor of student with ID 1004?",
        "question_original_pl": "Kto jest doradcą ucznia z ID 1004?",
        "question": "Who is the adviser of student with ID 1004?",
        "question_pl": "Kto jest doradcą ucznia o ID 1004?",
        "query": "SELECT Advisor FROM Student WHERE StuID  =  1004",
        "query_pl": "SELECT Advisor FROM Student WHERE StuID  =  1004"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all majors and corresponding number of students.",
        "question_original_pl": "Pokaż wszystkie kierunki studiów i odpowiadającą im liczbę studentów.",
        "question": "Show all discipline and corresponding number of students.",
        "question_pl": "Pokaż wszystkie dyscypliny i odpowiadającą im liczbę uczniów.",
        "query": "SELECT major ,  count(*) FROM Student GROUP BY major",
        "query_pl": "SELECT major ,  count(*) FROM Student GROUP BY major"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many students are there for each major?",
        "question_original_pl": "Ilu jest studentów na każdym kierunku?",
        "question": "How many students are there for each discipline?",
        "question_pl": "Ilu jest uczniów w każdej dyscyplinie?",
        "query": "SELECT major ,  count(*) FROM Student GROUP BY major",
        "query_pl": "SELECT major ,  count(*) FROM Student GROUP BY major"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which major has most number of students?",
        "question_original_pl": "Który kierunek ma najwięcej studentów?",
        "question": "Which discipline has most number of students?",
        "question_pl": "Która dyscyplina ma najwięcej studentów?",
        "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What is the largest major?",
        "question_original_pl": "Jaki jest największy kierunek?",
        "question": "What is the largest discipline?",
        "question_pl": "Jaka jest największa dyscyplina?",
        "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show the average age for male and female students.",
        "question_original_pl": "Pokaż średni wiek uczniów płci męskiej i żeńskiej.",
        "question": "Show the average age for schoolboy and schoolgirl .",
        "question_pl": "Pokaż średni wiek ucznia i uczennicy.",
        "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex",
        "query_pl": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the average ages for male and female students?",
        "question_original_pl": "Jaki jest średni wiek uczniów płci męskiej i żeńskiej?",
        "question": "What are the average ages for schoolboy and schoolgirl?",
        "question_pl": "Jaki jest średni wiek ucznia i uczennicy?",
        "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex",
        "query_pl": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many students live in each city?",
        "question_original_pl": "Ilu studentów mieszka w każdym mieście?",
        "question": "How many students live in each town?",
        "question_pl": "Ilu uczniów mieszka w każdym mieście?",
        "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code",
        "query_pl": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy has most number of students affected?",
        "question_original_pl": "Która alergia dotyczy największej liczby uczniów?",
        "question": "Which hypersensitivity has most number of students affected?",
        "question_pl": "Która nadwrażliwość dotyczy największej liczby uczniów?",
        "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Which allergy is the most common?",
        "question_original_pl": "Która alergia jest najczęstsza?",
        "question": "Which hypersensitivity is the most common?",
        "question_pl": "Która nadwrażliwość występuje najczęściej?",
        "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergies with number of students affected.",
        "question_original_pl": "Pokaż wszystkie alergie wraz z liczbą dotkniętych nimi uczniów.",
        "question": "Show all hypersensitivities with number of students affected.",
        "question_pl": "Pokaż wszystkie nadwrażliwości wraz z liczbą dotkniętych nimi uczniów.",
        "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy",
        "query_pl": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many students have each different allergy?",
        "question_original_pl": "Ilu uczniów ma różne alergie?",
        "question": "How many students have each different hypersensitivity?",
        "question_pl": "Ilu uczniów ma różne nadwrażliwości?",
        "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy",
        "query_pl": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Show all allergy type with number of students affected.",
        "question_original_pl": "Pokaż wszystkie typy alergii wraz z liczbą dotkniętych nimi uczniów.",
        "question": "Show all hypersensitivity category with number of students affected.",
        "question_pl": "Pokaż wszystkie kategorie nadwrażliwości wraz z liczbą dotkniętych nimi uczniów.",
        "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype",
        "query_pl": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many students are affected by each allergy type?",
        "question_original_pl": "Ilu uczniów cierpi na poszczególne rodzaje alergii?",
        "question": "How many students are affected by each hypersensitivity category?",
        "question_pl": "Ilu uczniów jest dotkniętych każdą kategorią nadwrażliwości?",
        "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype",
        "query_pl": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.",
        "question_original_pl": "Jakie alergie i ich rodzaje ma uczeń o imieniu Lisa? Uporządkuj wyniki według nazw alergii.",
        "question": "What are the hypersensitivities and their categories that the student with forename Lisa has? And order the result by name of hypersensitivities.",
        "question_pl": "Jakie nadwrażliwości i ich kategorie ma uczeń o imieniu Lisa? Uporządkuj wyniki według nazw nadwrażliwości.",
        "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy",
        "query_pl": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.",
        "question_original_pl": "Jakie alergie ma dziewczynka o imieniu Lisa? Jakie są ich rodzaje? Uporządkuj wyniki według nazw alergii.",
        "question": "What are the hypersensitivities the girl named Lisa has? And what are the categories of them? Order the result by hypersensitivity names.",
        "question_pl": "Jakie nadwrażliwości ma dziewczynka o imieniu Lisa? Jakie są ich kategorie? Uporządkuj wyniki według nazw nadwrażliwości.",
        "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy",
        "query_pl": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the first name and gender of the students who have allergy to milk but can put up with cats?",
        "question_original_pl": "Jakie są imiona i płeć uczniów, którzy mają alergię na mleko, ale mogą znosić koty?",
        "question": "What are the forename and gender of the students who have allergy to milk but can put up with cats?",
        "question_pl": "Jakie są imiona i płeć uczniów, którzy mają alergię na mleko, ale znoszą koty?",
        "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
        "query_pl": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Mleko\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Kot\")"
    },
    {
        "db_id": "allergy_1",
        "question_original": "List the first and last name of the students who do not have any food type allergy.",
        "question_original_pl": "Wymień imię i nazwisko uczniów, którzy nie mają alergii pokarmowej.",
        "question": "List the forename and surname of the students who do not have any food type allergy.",
        "question_pl": "Wymień imiona i nazwiska uczniów, którzy nie mają alergii pokarmowej.",
        "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
        "query_pl": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"jedzenie\")"
    },
    {
        "db_id": "allergy_1",
        "question_original": "Find the number of male (sex is 'M') students who have some food type allery.",
        "question_original_pl": "Znajdź liczbę uczniów płci męskiej (płeć to \"M\"), którzy mają alergię na niektóre rodzaje żywności.",
        "question": "Find the number of schoolboy (sex is 'M')  who have some food type allery.",
        "question_pl": "Znajdź liczbę uczniów (płeć to \"M\"), którzy mają alergię pokarmową.",
        "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
        "query_pl": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"jedzenie\")"
    },
    {
        "db_id": "allergy_1",
        "question_original": "How many male students (sex is 'M') are allergic to any type of food?",
        "question_original_pl": "Ilu uczniów płci męskiej (płeć to \"M\") jest uczulonych na jakikolwiek rodzaj żywności?",
        "question": "How many schoolboy (sex is 'M') are allergic to any type of food?",
        "question_pl": "Ilu uczniów (płeć to \"M\") jest uczulonych na jakikolwiek rodzaj żywności?",
        "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
        "query_pl": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"jedzenie\")"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?",
        "question_original_pl": "Jakie są imiona i miasta uczniów, którzy mają alergię na mleko lub kota?",
        "question": "What are the different forenames and cities of the students who have allergy either to milk or to cat?",
        "question_pl": "Jakie są różne imiona i miasta uczniów, którzy mają alergię na mleko lub kota?",
        "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"",
        "query_pl": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Mleko\" OR T2.Allergy  =  \"Kot\""
    },
    {
        "db_id": "allergy_1",
        "question_original": "Find the first name and major of the students who are not allegry to soy.",
        "question_original_pl": "Znajdź imię i kierunek studiów studentów, którzy nie są związani z soy.",
        "question": "Find the forename and discipline of the students who are not allegry to soy.",
        "question_pl": "Znajdź imiona i nazwiska oraz dyscypliny uczniów, którzy nie są związani z soy.",
        "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")",
        "query_pl": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soja\")"
    },
    {
        "db_id": "allergy_1",
        "question_original": "What are the first name and major of the students who are able to consume soy?",
        "question_original_pl": "Jakie jest imię i kierunek studiów studentów, którzy mogą spożywać soję?",
        "question": "What are the forename and discipline of the students who are able to consume soy?",
        "question_pl": "Jakie są imiona i dyscypliny uczniów, którzy mogą spożywać soję?",
        "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")",
        "query_pl": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soja\")"
    },
    {
        "db_id": "store_1",
        "question_original": "A list of the top 5 countries by number of invoices. List country name and number of invoices.",
        "question_original_pl": "Zwróć listę 5 najlepszych krajów pod względem liczby faktur. Wymień nazwę kraju i liczbę faktur.",
        "question": "A list of the top 5 nationalities by number of invoices. List nationality name and number of invoices.",
        "question_pl": "Zwróć listę 5 najlepszych narodowości pod względem liczby faktur. Wymień nazwę narodowości i liczbę faktur.",
        "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",
        "query_pl": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the top 5 countries by number of invoices and how many do they have?",
        "question_original_pl": "Jakie jest 5 największych krajów pod względem liczby faktur i ile ich mają?",
        "question": "What are the top 5 nationalities by number of invoices and how many do they have?",
        "question_pl": "Jakie jest 5 najważniejszych narodowości pod względem liczby faktur i ile ich jest?",
        "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",
        "query_pl": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
    },
    {
        "db_id": "store_1",
        "question_original": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.",
        "question_original_pl": "Zwróć listę 8 najlepszych krajów pod względem wielkości faktury brutto/łącznej. Wymień nazwę kraju i wielkość faktury brutto.",
        "question": "A list of the top 8 nationalities by gross/total invoice size. List nationality name and gross invoice size.",
        "question_pl": "Zwróć listę 8 największych narodowości według wielkości faktury brutto/łącznej. Wymień nazwę narodowości i wielkość faktury brutto.",
        "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",
        "query_pl": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the names of the top 8 countries by total invoice size and what are those sizes?",
        "question_original_pl": "Jakie są nazwy 8 największych krajów pod względem łącznej wielkości faktur i jakie są te wielkości?",
        "question": "What are the names of the top 8 nationalities by gross invoice size and what are those sizes?",
        "question_pl": "Jakie są nazwy 8 największych narodowości pod względem wielkości faktur brutto i jakie są te wielkości?",
        "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",
        "query_pl": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
    },
    {
        "db_id": "store_1",
        "question_original": "A list of the top 10 countries by average invoice size. List country name and average invoice size.",
        "question_original_pl": "Zwróć listę 10 największych krajów pod względem średniej wielkości faktury. Wymień nazwę kraju i średnią wielkość faktury.",
        "question": "A list of the top 10 nationalities by average invoice size. List nationality name and average invoice size.",
        "question_pl": "Zwróć listę 10 największych narodowości według średniej wielkości faktury. Wymień nazwę narodowości i średnią wielkość faktury.",
        "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
        "query_pl": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the names of the countries and average invoice size of the top countries by size?",
        "question_original_pl": "Jak nazywają się kraje i jaka jest średnia wielkość faktury w krajach o największej wielkości?",
        "question": "What are the names of the nations and average invoice size of the top nations by size?",
        "question_pl": "Jak nazywają się kraje i jaka jest średnia wielkość faktur dla największych krajów pod względem wielkości?",
        "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
        "query_pl": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?",
        "question_original_pl": "Jakie są imiona i nazwiska 10 największych klientów według łącznej liczby zamówień i ile zamówień złożyli?",
        "question": "What are the top 10 customers' forename and family name by total number of orders and how many orders did they make?",
        "question_pl": "Jakie są imiona i nazwiska 10 najlepszych klientów pod względem łącznej liczby zamówień i ile zamówień złożyli?",
        "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"
    },
    {
        "db_id": "store_1",
        "question_original": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
        "question_original_pl": "Wymień 10 największych klientów według całkowitej sprzedaży brutto. Wymień imiona i nazwiska klientów oraz łączną sprzedaż brutto.",
        "question": "List the top 10 customers by total gross sales. List customers' forename and family name and total gross sales.",
        "question_pl": "Wymień 10 największych klientów według całkowitej sprzedaży brutto. Wymień imiona i nazwiska klientów oraz całkowitą sprzedaż brutto.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"
    },
    {
        "db_id": "store_1",
        "question_original": "List every album's title.",
        "question_original_pl": "Wymień tytuł każdego albumu.",
        "question": "List every album's name.",
        "question_pl": "Wymień nazwę każdego albumu.",
        "query": "SELECT title FROM albums;",
        "query_pl": "SELECT title FROM albums;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the titles of all the albums?",
        "question_original_pl": "Jakie są tytuły wszystkich albumów?",
        "question": "What are the names of all the albums?",
        "question_pl": "Jakie są nazwy wszystkich albumów?",
        "query": "SELECT title FROM albums;",
        "query_pl": "SELECT title FROM albums;"
    },
    {
        "db_id": "store_1",
        "question_original": "List every album ordered by album title in ascending order.",
        "question_original_pl": "Wyświetl listę wszystkich albumów uporządkowanych rosnąco według tytułu albumu.",
        "question": "List every album ordered by album name in ascending order.",
        "question_pl": "Wyświetl listę wszystkich albumów uporządkowanych rosnąco według nazwy albumu.",
        "query": "SELECT title FROM albums ORDER BY title;",
        "query_pl": "SELECT title FROM albums ORDER BY title;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the titles of all the albums alphabetically ascending?",
        "question_original_pl": "Jakie są tytuły wszystkich albumów w kolejności alfabetycznej?",
        "question": "What are the names of all the albums alphabetically ascending?",
        "question_pl": "Jakie są nazwy wszystkich albumów alfabetycznie rosnąco?",
        "query": "SELECT title FROM albums ORDER BY title;",
        "query_pl": "SELECT title FROM albums ORDER BY title;"
    },
    {
        "db_id": "store_1",
        "question_original": "List every album whose title starts with A in alphabetical order.",
        "question_original_pl": "Wymień w kolejności alfabetycznej każdy album, którego tytuł zaczyna się na literę A.",
        "question": "List every album whose name starts with A in alphabetical order.",
        "question_pl": "Wymień każdy album, którego nazwa zaczyna się na literę A w kolejności alfabetycznej.",
        "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;",
        "query_pl": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the titles of all albums that start with A in alphabetical order?",
        "question_original_pl": "Jakie są tytuły wszystkich albumów zaczynających się na literę A w kolejności alfabetycznej?",
        "question": "What are the names of all albums that start with A in alphabetical order?",
        "question_pl": "Jakie są nazwy wszystkich albumów zaczynających się na literę A w kolejności alfabetycznej?",
        "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;",
        "query_pl": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
    },
    {
        "db_id": "store_1",
        "question_original": "List total amount of  invoice from Chicago, IL.",
        "question_original_pl": "Wymień całkowitą kwotę faktury z Chicago, IL.",
        "question": "List gross amount of  invoice from Chicago, IL.",
        "question_pl": "Wymień kwotę brutto faktury z Chicago, IL.",
        "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
        "query_pl": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the total amount of money in the invoices billed from Chicago, Illinois?",
        "question_original_pl": "Na jaką łączną kwotę opiewają faktury wystawione w Chicago, Illinois?",
        "question": "What are the gross amount of money in the invoices billed from Chicago, Illinois?",
        "question_pl": "Na jaką kwotę brutto opiewają faktury wystawione w Chicago, Illinois?",
        "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
        "query_pl": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
    },
    {
        "db_id": "store_1",
        "question_original": "List the number of invoices and the invoice total from California.",
        "question_original_pl": "Wymień liczbę faktur i łączną kwotę faktur z Kalifornii.",
        "question": "List the number of invoices and the invoice gross from California.",
        "question_pl": "Wymień liczbę faktur i fakturę brutto z Kalifornii.",
        "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";",
        "query_pl": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the number of invoices and total money billed in them from CA?",
        "question_original_pl": "Jaka jest liczba faktur i łączna kwota, na którą wystawiono faktury z CA?",
        "question": "What is the number of invoices and the number of money billed in them from CA?",
        "question_pl": "Jaka jest liczba faktur i liczba pieniędzy naliczonych w nich z CA?",
        "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";",
        "query_pl": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What are the titles of all the Aerosmith albums?",
        "question_original_pl": "Jakie są tytuły wszystkich albumów Aerosmith?",
        "question": "What are the names of all the Aerosmith albums?",
        "question_pl": "Jak nazywają się wszystkie albumy Aerosmith?",
        "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";",
        "query_pl": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";"
    },
    {
        "db_id": "store_1",
        "question_original": "Eduardo Martins is a customer at which company?",
        "question_original_pl": "Eduardo Martins jest klientem której firmy?",
        "question": "Eduardo Martins is a customer at which enterprise?",
        "question_pl": "Eduardo Martins jest klientem którego przedsiębiorstwa?",
        "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
        "query_pl": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the company where Eduardo Martins is a customer?",
        "question_original_pl": "Jaka jest firma, której klientem jest Eduardo Martins?",
        "question": "What is the enterprise where Eduardo Martins is a customer?",
        "question_pl": "Jakie jest przedsiębiorstwo, którego klientem jest Eduardo Martins?",
        "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
        "query_pl": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is Astrid Gruber's email and phone number?",
        "question_original_pl": "Jaki jest adres e-mail i numer telefonu Astrid Gruber?",
        "question": "What is Astrid Gruber's email and mobile number?",
        "question_pl": "Jaki jest adres e-mail i numer telefonu komórkowego Astrid Gruber?",
        "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";",
        "query_pl": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the email and phone number of Astrid Gruber the customer?",
        "question_original_pl": "Jaki jest adres e-mail i numer telefonu klienta Astrid Gruber?",
        "question": "What is the email and mobile number of Astrid Gruber the customer?",
        "question_pl": "Jaki jest adres e-mail i numer telefonu komórkowego klienta Astrid Gruber?",
        "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";",
        "query_pl": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"
    },
    {
        "db_id": "store_1",
        "question_original": "How many customers live in Prague city?",
        "question_original_pl": "Ilu klientów mieszka w mieście Praga?",
        "question": "How many clients live in Prague city?",
        "question_pl": "Ilu klientów mieszka w Pradze?",
        "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
        "query_pl": "SELECT count(*) FROM customers WHERE city = \"Praga\";"
    },
    {
        "db_id": "store_1",
        "question_original": "How many customers in state of CA?",
        "question_original_pl": "Ilu klientów jest w stanie Kalifornia?",
        "question": "How many clients in state of CA?",
        "question_pl": "Ilu masz klientów w stanie Kalifornia?",
        "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
        "query_pl": "SELECT count(*) FROM customers WHERE state = \"CA\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?",
        "question_original_pl": "Jaki tytuł nosi album wydany przez artystę, którego nazwisko zawiera frazę \"Led\"?",
        "question": "What is the name of the album that was released by the artist whose name has the phrase 'Led'?",
        "question_pl": "Jak nazywa się album wydany przez artystę, którego nazwisko zawiera frazę \"Led\"?",
        "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'",
        "query_pl": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the title, phone and hire date of Nancy Edwards?",
        "question_original_pl": "Jaki jest tytuł, telefon i data zatrudnienia Nancy Edwards?",
        "question": "What is the name, mobile and hire date of Nancy Edwards?",
        "question_pl": "Jakie jest imię, nazwisko, telefon komórkowy i data zatrudnienia Nancy Edwards?",
        "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
        "query_pl": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the title, phone number and hire date for the employee named Nancy Edwards?",
        "question_original_pl": "Jaki jest tytuł, numer telefonu i data zatrudnienia pracownika o nazwisku Nancy Edwards?",
        "question": "What is the name, mobile number and hire date for the employee named Nancy Edwards?",
        "question_pl": "Jakie jest imię i nazwisko, numer telefonu komórkowego i data zatrudnienia pracownika o imieniu Nancy Edwards?",
        "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
        "query_pl": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
    },
    {
        "db_id": "store_1",
        "question_original": "find the full name of employees who report to Nancy Edwards?",
        "question_original_pl": "Znajdź pełne imiona i nazwiska pracowników, którzy podlegają Nancy Edwards?",
        "question": "find the full name of staffs who report to Nancy Edwards?",
        "question_pl": "Znajdź pełne nazwiska pracowników, którzy podlegają Nancy Edwards?",
        "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";",
        "query_pl": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the address of employee Nancy Edwards?",
        "question_original_pl": "Jaki jest adres pracownika Nancy Edwards?",
        "question": "What is the location of employee Nancy Edwards?",
        "question_pl": "Jaka jest lokalizacja pracownika Nancy Edwards?",
        "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
        "query_pl": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is Nancy Edwards's address?",
        "question_original_pl": "Jaki jest adres Nancy Edwards?",
        "question": "What is Nancy Edwards's location?",
        "question_pl": "Gdzie znajduje się Nancy Edwards?",
        "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
        "query_pl": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
    },
    {
        "db_id": "store_1",
        "question_original": "Who is the youngest employee in the company? List employee's first and last name.",
        "question_original_pl": "Kto jest najmłodszym pracownikiem w firmie? Wymień imię i nazwisko pracownika.",
        "question": "Who is the youngest employee in the company? List employee's full name.",
        "question_pl": "Kto jest najmłodszym pracownikiem w firmie? Wymień pełne imię i nazwisko pracownika.",
        "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;",
        "query_pl": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
    },
    {
        "db_id": "store_1",
        "question_original": "What si the youngest employee's first and last name?",
        "question_original_pl": "Jakie jest imię i nazwisko najmłodszego pracownika?",
        "question": "What si the youngest employee's full name?",
        "question_pl": "Jakie jest pełne imię i nazwisko najmłodszego pracownika?",
        "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;",
        "query_pl": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
    },
    {
        "db_id": "store_1",
        "question_original": "Find the number of employees whose title is IT Staff from each city?",
        "question_original_pl": "Znajdź liczbę pracowników z tytułem IT w każdym mieście?",
        "question": "Find the number of staffs whose title is IT Staff from each city?",
        "question_pl": "Znajdź liczbę pracowników z tytułem IT z każdego miasta?",
        "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city",
        "query_pl": "SELECT count(*) ,  city FROM employees WHERE title  =  'Personel IT' GROUP BY city"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the total amount of money spent by Lucas Mancini?",
        "question_original_pl": "Jaka jest łączna kwota pieniędzy wydanych przez Lucasa Manciniego?",
        "question": "What is the number of money spent by Lucas Mancini?",
        "question_pl": "Ile pieniędzy wydał Lucas Mancini?",
        "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";",
        "query_pl": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
    },
    {
        "db_id": "store_1",
        "question_original": "Who is the composer of track Fast As a Shark?",
        "question_original_pl": "Kto jest kompozytorem utworu Fast As a Shark?",
        "question": "Who is the songwriter of track Fast As a Shark?",
        "question_pl": "Kto jest autorem utworu Fast As a Shark?",
        "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";",
        "query_pl": "SELECT composer FROM tracks WHERE name = \"Szybki jak rekin\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is the composer who created the track \"Fast As a Shark\"?",
        "question_original_pl": "Jaki jest kompozytor, który stworzył utwór \"Szybki jak rekin\"?",
        "question": "What is the songwriter who created the track \"Fast As a Shark\"?",
        "question_pl": "Kto jest autorem utworu \"Szybki jak rekin\"?",
        "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";",
        "query_pl": "SELECT composer FROM tracks WHERE name = \"Szybki jak rekin\";"
    },
    {
        "db_id": "store_1",
        "question_original": "What is title of album which track Balls to the Wall belongs to?",
        "question_original_pl": "Jaki jest tytuł albumu, do którego należy utwór Balls to the Wall?",
        "question": "What is name of album which track Balls to the Wall belongs to?",
        "question_pl": "Jak nazywa się album, do którego należy utwór Balls to the Wall?",
        "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";",
        "query_pl": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"
    },
    {
        "db_id": "store_1",
        "question_original": "List title of albums have the number of tracks greater than 10.",
        "question_original_pl": "Wymień tytuły albumów z liczbą utworów większą niż 10.",
        "question": "List name of albums have the number of tracks greater than 10.",
        "question_pl": "Wymień nazwy albumów z liczbą utworów większą niż 10.",
        "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;",
        "query_pl": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"
    },
    {
        "db_id": "journal_committee",
        "question_original": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.",
        "question_original_pl": "Wymień datę, temat i sprzedaż czasopisma, w którym żaden z wymienionych redaktorów nie zasiadał w komitecie.",
        "question": "List the day, topic and sales volume of the journal which did not have any of the listed editors serving on committee.",
        "question_pl": "Wymień dzień, temat i wielkość sprzedaży czasopisma, w którym żaden z wymienionych redaktorów nie zasiadał w komitecie.",
        "query": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID",
        "query_pl": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Show other account details for account with name 338.",
        "question_original_pl": "Pokaż inne szczegóły konta dla konta o nazwie 338.",
        "question": "Show other account information for account with name 338.",
        "question_pl": "Pokaż inne informacje o koncie dla konta o nazwie 338.",
        "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
        "query_pl": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What are the other account details for the account with the name 338?",
        "question_original_pl": "Jakie są inne dane konta o nazwie 338?",
        "question": "What are the other account information for the account with the name 338?",
        "question_pl": "Jakie są inne informacje o koncie o nazwie 338?",
        "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
        "query_pl": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What is the first name, last name, and phone of the customer with account name 162?",
        "question_original_pl": "Jakie jest imię, nazwisko i telefon klienta o nazwie konta 162?",
        "question": "What is the full name, and mobile of the client with account name 162?",
        "question_pl": "Jaka jest pełna nazwa i telefon komórkowy klienta z nazwą konta 162?",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Give the full name and phone of the customer who has the account name 162.",
        "question_original_pl": "Podaj pełną nazwę i telefon klienta, który ma nazwę konta 162.",
        "question": "Give the full name and telephone of the client who has the account name 162.",
        "question_pl": "Podaj pełne imię i nazwisko oraz numer telefonu klienta, który posiada konto o nazwie 162.",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.",
        "question_original_pl": "Zwróć liczbę kont klienta o imieniu Art i nazwisku Turcotte.",
        "question": "Return the number of accounts that the client with the first name Art and last name Turcotte has.",
        "question_pl": "Zwróć liczbę kont posiadanych przez klienta o imieniu Art i nazwisku Turcotte.",
        "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"",
        "query_pl": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Sztuka\" AND T2.customer_last_name  =  \"Turcotte\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Show the customer id and number of accounts with most accounts.",
        "question_original_pl": "Pokaż identyfikator klienta i liczbę kont z największą liczbą kont.",
        "question": "Show the client id and number of accounts with most accounts.",
        "question_pl": "Pokaż identyfikator klienta i liczbę kont z większością kont.",
        "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What is the customer first, last name and id with least number of accounts.",
        "question_original_pl": "Jakie jest imię, nazwisko i identyfikator klienta z najmniejszą liczbą kont.",
        "question": "What is the client full name and id with least number of accounts.",
        "question_pl": "Jaka jest pełna nazwa i identyfikator klienta z najmniejszą liczbą kont.",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What are the full names of customers who do not have any accounts?",
        "question_original_pl": "Jakie są pełne nazwy klientów, którzy nie mają żadnych kont?",
        "question": "What are the full names of clients who do not have any accounts?",
        "question_pl": "Jakie są pełne nazwy klientów, którzy nie mają kont?",
        "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Show ids, first names, last names, and phones for all customers.",
        "question_original_pl": "Pokaż identyfikatory, imiona, nazwiska i telefony wszystkich klientów.",
        "question": "Show ids,full names, and phones for all clients.",
        "question_pl": "Pokaż identyfikatory, imiona i nazwiska oraz telefony wszystkich klientów.",
        "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers",
        "query_pl": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What are the ids, full names, and phones of each customer?",
        "question_original_pl": "Jakie są identyfikatory, imiona i nazwiska oraz telefony poszczególnych klientów?",
        "question": "What are the ids, full names, and telephones of each client?",
        "question_pl": "Jakie są identyfikatory, imiona i nazwiska oraz telefony każdego klienta?",
        "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers",
        "query_pl": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Return the phone and email of the customer with the first name Aniyah and last name Feest.",
        "question_original_pl": "Zwróć telefon i adres e-mail klienta o imieniu Aniyah i nazwisku Feest.",
        "question": "Return the telephone and email of the client with the first name Aniyah and last name Feest.",
        "question_pl": "Zwróć telefon i e-mail klienta o imieniu Aniyah i nazwisku Feest.",
        "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"",
        "query_pl": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Show the number of customer cards.",
        "question_original_pl": "Pokaż liczbę kart klientów.",
        "question": "Show the number of client cards.",
        "question_pl": "Pokaż liczbę kart klienta.",
        "query": "SELECT count(*) FROM Customers_cards",
        "query_pl": "SELECT count(*) FROM Customers_cards"
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "What is the first name, last name, and phone of the customer with card 4560596484842.",
        "question_original_pl": "Podaj imię, nazwisko i numer telefonu klienta z kartą 4560596484842.",
        "question": "What is the full name, and mobile of the client with card 4560596484842.",
        "question_pl": "Podaj imię i nazwisko oraz telefon komórkowy klienta z kartą 4560596484842.",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
    },
    {
        "db_id": "customers_card_transactions",
        "question_original": "Return the full name and phone of the customer who has card number 4560596484842.",
        "question_original_pl": "Zwróć imię i nazwisko oraz numer telefonu klienta, który ma numer karty 4560596484842.",
        "question": "Return the full name and telephone of the client who has card number 4560596484842.",
        "question_pl": "Podaj imię i nazwisko oraz numer telefonu klienta, który posiada kartę o numerze 4560596484842.",
        "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"",
        "query_pl": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name and location for all tracks.",
        "question_original_pl": "Pokaż nazwę i lokalizację wszystkich ścieżek.",
        "question": "Show the name and address for all tracks.",
        "question_pl": "Pokaż nazwę i adres wszystkich torów.",
        "query": "SELECT name ,  LOCATION FROM track",
        "query_pl": "SELECT name ,  LOCATION FROM track"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names and locations of all tracks?",
        "question_original_pl": "Jakie są nazwy i lokalizacje wszystkich torów?",
        "question": "What are the names and addresses of all tracks?",
        "question_pl": "Jakie są nazwy i adresy wszystkich torów?",
        "query": "SELECT name ,  LOCATION FROM track",
        "query_pl": "SELECT name ,  LOCATION FROM track"
    },
    {
        "db_id": "race_track",
        "question_original": "Show names and seatings, ordered by seating for all tracks opened after 2000.",
        "question_original_pl": "Pokaż nazwy i miejsca, uporządkowane według miejsc siedzących dla wszystkich torów otwartych po 2000 roku.",
        "question": "Show names and the number of seat, ordered by the number of seat for all tracks opened after 2000.",
        "question_pl": "Pokaż nazwy i liczbę miejsc, uporządkowane według liczby miejsc dla wszystkich torów otwartych po 2000 roku.",
        "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating",
        "query_pl": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names and seatings for all tracks opened after 2000, ordered by seating?",
        "question_original_pl": "Jakie są nazwy i miejsca siedzące na wszystkich torach otwartych po 2000 roku, uporządkowane według miejsc siedzących?",
        "question": "What are the names and number of seat for all tracks opened after 2000, ordered by number of seat?",
        "question_pl": "Jakie są nazwy i liczba miejsc na wszystkich torach otwartych po 2000 roku, uporządkowane według liczby miejsc?",
        "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating",
        "query_pl": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
    },
    {
        "db_id": "race_track",
        "question_original": "What is the name, location and seating for the most recently opened track?",
        "question_original_pl": "Jaka jest nazwa, lokalizacja i miejsca siedzące na ostatnio otwartym torze?",
        "question": "What is the name, address and seating for the most recently opened track?",
        "question_pl": "Jaka jest nazwa, adres i miejsca siedzące na ostatnio otwartym torze?",
        "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1",
        "query_pl": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "Return the name, location, and seating of the track that was opened in the most recent year.",
        "question_original_pl": "Zwróć nazwę, lokalizację i liczbę miejsc na torze, który został otwarty w ostatnim roku.",
        "question": "Return the name, address, and seating of the track that was opened in the most recent year.",
        "question_pl": "Podaj nazwę, adres i miejsce siedzące toru, który został otwarty w ostatnim roku.",
        "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1",
        "query_pl": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "What is the minimum, maximum, and average seating for all tracks.",
        "question_original_pl": "Jaka jest minimalna, maksymalna i średnia liczba widzów na wszystkich torach.",
        "question": "What is the minimum, maximum, and average number of seat for all tracks.",
        "question_pl": "Jaka jest minimalna, maksymalna i średnia liczba miejsc dla wszystkich torów.",
        "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track",
        "query_pl": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name, location, open year for all tracks with a seating higher than the average.",
        "question_original_pl": "Pokaż nazwę, lokalizację, rok otwarcia dla wszystkich torów z liczbą miejsc wyższą niż średnia.",
        "question": "Show the name, address, open year for all tracks with a seating higher than the average.",
        "question_pl": "Pokaż nazwę, adres, rok otwarcia dla wszystkich torów z liczbą miejsc wyższą niż średnia.",
        "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)",
        "query_pl": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names, locations, and years of opening for tracks with seating higher than average?",
        "question_original_pl": "Jakie są nazwy, lokalizacje i lata otwarcia torów z miejscami siedzącymi powyżej średniej?",
        "question": "What are the names, addresses, and years of opening for tracks with seating higher than average?",
        "question_pl": "Jakie są nazwy, adresy i lata otwarcia torów z miejscami siedzącymi powyżej średniej?",
        "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)",
        "query_pl": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
    },
    {
        "db_id": "race_track",
        "question_original": "What are distinct locations where tracks are located?",
        "question_original_pl": "Jakie są różne lokalizacje, w których znajdują się tory?",
        "question": "What are different addresses where tracks are located?",
        "question_pl": "Jakie są różne adresy, pod którymi znajdują się tory?",
        "query": "SELECT DISTINCT LOCATION FROM track",
        "query_pl": "SELECT DISTINCT LOCATION FROM track"
    },
    {
        "db_id": "race_track",
        "question_original": "Give the different locations of tracks.",
        "question_original_pl": "Podaj różne lokalizacje torów.",
        "question": "Give the different addresses of tracks.",
        "question_pl": "Podaj różne adresy torów.",
        "query": "SELECT DISTINCT LOCATION FROM track",
        "query_pl": "SELECT DISTINCT LOCATION FROM track"
    },
    {
        "db_id": "race_track",
        "question_original": "How many races are there?",
        "question_original_pl": "Ile jest wyścigów?",
        "question": "How many competitions are there?",
        "question_pl": "Ile jest konkursów?",
        "query": "SELECT count(*) FROM race",
        "query_pl": "SELECT count(*) FROM race"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the distinct classes that races can have?",
        "question_original_pl": "Jakie klasy mogą mieć poszczególne rasy?",
        "question": "What are the different types that races can have?",
        "question_pl": "Jakie są różne rodzaje ras?",
        "query": "SELECT DISTINCT CLASS FROM race",
        "query_pl": "SELECT DISTINCT CLASS FROM race"
    },
    {
        "db_id": "race_track",
        "question_original": "Return the different classes of races.",
        "question_original_pl": "Zwróć różne klasy ras.",
        "question": "Return the different type of races.",
        "question_pl": "Zwróć różne typy wyścigów.",
        "query": "SELECT DISTINCT CLASS FROM race",
        "query_pl": "SELECT DISTINCT CLASS FROM race"
    },
    {
        "db_id": "race_track",
        "question_original": "Show name, class, and date for all races.",
        "question_original_pl": "Pokaż nazwę, klasę i datę wszystkich wyścigów.",
        "question": "Show name, type, and day for all races.",
        "question_pl": "Pokaż nazwę, typ i dzień dla wszystkich wyścigów.",
        "query": "SELECT name ,  CLASS ,  date FROM race",
        "query_pl": "SELECT name ,  CLASS ,  date FROM race"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names, classes, and dates for all races?",
        "question_original_pl": "Jakie są nazwy, klasy i daty wszystkich wyścigów?",
        "question": "What are the names, type, and days for all races?",
        "question_pl": "Jakie są nazwy, typy i dni wszystkich wyścigów?",
        "query": "SELECT name ,  CLASS ,  date FROM race",
        "query_pl": "SELECT name ,  CLASS ,  date FROM race"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the race class and number of races in each class.",
        "question_original_pl": "Pokaż klasę wyścigu i liczbę wyścigów w każdej klasie.",
        "question": "Show the race type and number of races in each type.",
        "question_pl": "Pokaż typ wyścigu i liczbę wyścigów w każdym typie.",
        "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS",
        "query_pl": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the different classes of races, and how many races correspond to each?",
        "question_original_pl": "Jakie są różne klasy ras i ile ras odpowiada każdej z nich?",
        "question": "What are the different types of races, and how many races correspond to each?",
        "question_pl": "Jakie są różne rodzaje ras i ile ras odpowiada każdej z nich?",
        "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS",
        "query_pl": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
    },
    {
        "db_id": "race_track",
        "question_original": "What is the race class with most number of races.",
        "question_original_pl": "Jaka jest klasa wyścigowa z największą liczbą wyścigów?",
        "question": "What is the race type with most number of races.",
        "question_pl": "Jaki jest typ wyścigu z największą liczbą wyścigów?",
        "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "Give the class of races that is most common.",
        "question_original_pl": "Podaj klasę ras, która występuje najczęściej.",
        "question": "Give the type of races that is most common.",
        "question_pl": "Podaj typ wyścigów, który występuje najczęściej.",
        "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "List the race class with at least two races.",
        "question_original_pl": "Wymień klasę wyścigową z co najmniej dwoma wyścigami.",
        "question": "List the race type with at least two races.",
        "question_pl": "Wymień typ wyścigu z co najmniej dwoma wyścigami.",
        "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2",
        "query_pl": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the classes of races that have two or more corresponding races?",
        "question_original_pl": "Jakie są klasy ras, które mają dwie lub więcej odpowiadających im ras?",
        "question": "What are the types of races that have two or more corresponding races?",
        "question_pl": "Jakie są rodzaje ras, które mają dwie lub więcej odpowiadających im ras?",
        "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2",
        "query_pl": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names for tracks without a race in class 'GT'.",
        "question_original_pl": "Jakie są nazwy torów bez wyścigu w klasie \"GT\"?",
        "question": "What are the names for tracks without a contest in class 'GT'.",
        "question_pl": "Jak nazywają się tory bez zawodów w klasie \"GT\"?",
        "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'",
        "query_pl": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
    },
    {
        "db_id": "race_track",
        "question_original": "Give the names of tracks that do not have a race in the class 'GT'.",
        "question_original_pl": "Podaj nazwy torów, na których nie odbywają się wyścigi w klasie \"GT\".",
        "question": "Give the names of tracks that do not have a contest in the class 'GT'.",
        "question_pl": "Podaj nazwy torów, na których nie odbywają się zawody w klasie \"GT\".",
        "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'",
        "query_pl": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
    },
    {
        "db_id": "race_track",
        "question_original": "Show all track names that have had no races.",
        "question_original_pl": "Pokaż wszystkie nazwy torów, na których nie odbyły się żadne wyścigi.",
        "question": "Show all track names that have had no competitions.",
        "question_pl": "Pokaż wszystkie nazwy torów, na których nie odbyły się żadne zawody.",
        "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)",
        "query_pl": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
    },
    {
        "db_id": "race_track",
        "question_original": "Return the names of tracks that have no had any races.",
        "question_original_pl": "Zwróć nazwy torów, na których nie odbyły się żadne wyścigi.",
        "question": "Return the names of tracks that have no had any competitions.",
        "question_pl": "Zwróć nazwy torów, na których nie odbyły się żadne zawody.",
        "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)",
        "query_pl": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name of track and the number of races in each track.",
        "question_original_pl": "Pokaż nazwę toru i liczbę wyścigów na każdym torze.",
        "question": "Show the name of track and the number of competitions in each track.",
        "question_pl": "Pokaż nazwę toru i liczbę zawodów na każdym torze.",
        "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names of different tracks, and how many races has each had?",
        "question_original_pl": "Jak nazywają się poszczególne tory i ile wyścigów odbyło się na każdym z nich?",
        "question": "What are the names of different tracks, and how many competitions has each had?",
        "question_pl": "Jak nazywają się poszczególne tory i ile zawodów ma każdy z nich?",
        "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name of track with most number of races.",
        "question_original_pl": "Pokaż nazwę toru z największą liczbą wyścigów.",
        "question": "Show the name of track with most number of contests.",
        "question_pl": "Pokaż nazwę toru z największą liczbą konkursów.",
        "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "What is the name of the track that has had the greatest number of races?",
        "question_original_pl": "Jak nazywa się tor, na którym odbyła się największa liczba wyścigów?",
        "question": "What is the name of the track that has had the greatest number of contests?",
        "question_pl": "Jak nazywa się tor, na którym odbyła się największa liczba zawodów?",
        "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name and date for each race and its track name.",
        "question_original_pl": "Pokaż nazwę i datę każdego wyścigu oraz nazwę toru.",
        "question": "Show the name and day for each competition and its track name.",
        "question_pl": "Pokaż nazwę i dzień każdych zawodów oraz nazwę toru.",
        "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id",
        "query_pl": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names and dates of races, and the names of the tracks where they are held?",
        "question_original_pl": "Jakie są nazwy i daty wyścigów oraz nazwy torów, na których się odbywają?",
        "question": "What are the names and days of races, and the names of the tracks where they are held?",
        "question_pl": "Jakie są nazwy i dni wyścigów oraz nazwy torów, na których się odbywają?",
        "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id",
        "query_pl": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
    },
    {
        "db_id": "race_track",
        "question_original": "Show the name and location of track with 1 race.",
        "question_original_pl": "Pokaż nazwę i lokalizację toru z 1 wyścigiem.",
        "question": "Show the name and address of track with 1 race.",
        "question_pl": "Pokaż nazwę i adres toru z 1 wyścigiem.",
        "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1",
        "query_pl": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the names and locations of tracks that have had exactly 1 race?",
        "question_original_pl": "Jakie są nazwy i lokalizacje torów, na których odbył się dokładnie 1 wyścig?",
        "question": "What are the names and addresses of tracks that have had exactly 1 race?",
        "question_pl": "Jakie są nazwy i adresy torów, na których odbył się dokładnie 1 wyścig?",
        "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1",
        "query_pl": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
    },
    {
        "db_id": "race_track",
        "question_original": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.",
        "question_original_pl": "Znajdź lokalizacje, w których znajdują się zarówno tory z ponad 90000 miejscami, jak i tory z mniej niż 70000 miejscami.",
        "question": "Find the addresses where have both tracks with more than 90000 seats and tracks with less than 70000 seats.",
        "question_pl": "Znajdź adresy, pod którymi znajdują się zarówno tory z ponad 90000 miejscami, jak i tory z mniej niż 70000 miejscami.",
        "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000",
        "query_pl": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
    },
    {
        "db_id": "race_track",
        "question_original": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?",
        "question_original_pl": "Jakie są lokalizacje, w których znajdują się zarówno tory z ponad 90000 miejscami, jak i tory z mniej niż 70000 miejscami?",
        "question": "What are the addresses that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?",
        "question_pl": "Jakie adresy mają zarówno tory z ponad 90000 miejscami, jak i tory z mniej niż 70000 miejscami?",
        "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000",
        "query_pl": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Find the number of members living in each address.",
        "question_original_pl": "Znajdź liczbę członków mieszkających pod każdym adresem.",
        "question": "Find the number of members living in each location.",
        "question_pl": "Znajdź liczbę członków mieszkających w każdej lokalizacji.",
        "query": "SELECT count(*) ,  address FROM member GROUP BY address",
        "query_pl": "SELECT count(*) ,  address FROM member GROUP BY address"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Give me the names of members whose address is in Harford or Waterbury.",
        "question_original_pl": "Podaj mi nazwiska członków, których adres znajduje się w Harford lub Waterbury.",
        "question": "Give me the names of members whose location is in Harford or Waterbury.",
        "question_pl": "Podaj mi nazwiska członków, których lokalizacja znajduje się w Harford lub Waterbury.",
        "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'",
        "query_pl": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.",
        "question_original_pl": "Znajdź czas zakupu, wiek i adres każdego członka i pokaż wyniki w kolejności czasu zakupu.",
        "question": "Find the buy time, age and location of each member, and show the results in the order of buy time.",
        "question_pl": "Znajdź czas zakupu, wiek i lokalizację każdego członka i pokaż wyniki w kolejności czasu zakupu.",
        "query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase",
        "query_pl": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Which address has both members younger than 30 and members older than 40?",
        "question_original_pl": "Który adres ma zarówno członków młodszych niż 30 lat, jak i starszych niż 40 lat?",
        "question": "Which location has both members younger than 30 and members older than 40?",
        "question_pl": "Która lokalizacja ma zarówno członków młodszych niż 30 lat, jak i starszych niż 40 lat?",
        "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40",
        "query_pl": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Which address do not have any member with the black membership card?",
        "question_original_pl": "Który adres nie ma żadnego członka z czarną kartą członkowską?",
        "question": "Which location do not have any member with the black membership card?",
        "question_pl": "W której lokalizacji nie ma żadnego członka z czarną kartą członkowską?",
        "query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'",
        "query_pl": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Czarny'"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Show the shop addresses ordered by their opening year.",
        "question_original_pl": "Pokaż adresy sklepów uporządkowane według roku ich otwarcia.",
        "question": "Show the shop locations ordered by their opening year.",
        "question_pl": "Pokaż lokalizacje sklepów uporządkowane według roku ich otwarcia.",
        "query": "SELECT address FROM shop ORDER BY open_year",
        "query_pl": "SELECT address FROM shop ORDER BY open_year"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Find the id and address of the shops whose score is below the average score.",
        "question_original_pl": "Znajdź identyfikator i adres sklepów, których wynik jest poniżej średniej.",
        "question": "Find the id and location of the shops whose score is below the average score.",
        "question_pl": "Znajdź identyfikator i lokalizację sklepów, których wynik jest poniżej średniej.",
        "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)",
        "query_pl": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "Find the address and staff number of the shops that do not have any happy hour.",
        "question_original_pl": "Znajdź adres i numer personelu sklepów, które nie oferują happy hour.",
        "question": "Find the location and employee number of the shops that do not have any happy hour.",
        "question_pl": "Znajdź lokalizację i numer pracownika sklepów, które nie mają happy hour.",
        "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",
        "query_pl": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"
    },
    {
        "db_id": "coffee_shop",
        "question_original": "What are the id and address of the shops which have a happy hour in May?",
        "question_original_pl": "Jakie są nazwy i adresy sklepów, które mają happy hour w maju?",
        "question": "What are the id and location of the shops which have a happy hour in May?",
        "question_pl": "Jakie są nazwy i lokalizacje sklepów, które mają happy hour w maju?",
        "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'",
        "query_pl": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'Maj'"
    },
    {
        "db_id": "chinook_1",
        "question_original": "List the names of all music genres.",
        "question_original_pl": "Wymień nazwy wszystkich gatunków muzycznych.",
        "question": "List the names of all music types.",
        "question_pl": "Wymień nazwy wszystkich typów muzyki.",
        "query": "SELECT Name FROM GENRE",
        "query_pl": "SELECT Name FROM GENRE"
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find all the customer information in state NY.",
        "question_original_pl": "Znajdź wszystkie informacje o klientach w stanie NY.",
        "question": "Find all the client information in state NY.",
        "question_pl": "Znajdź wszystkie informacje o kliencie w stanie NY.",
        "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"",
        "query_pl": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the first names and last names of the employees who live in Calgary city.",
        "question_original_pl": "Podaj imiona i nazwiska pracowników mieszkających w mieście Calgary.",
        "question": "What are the full names of the employees who live in Calgary city.",
        "question_pl": "Podaj pełne imiona i nazwiska pracowników mieszkających w mieście Calgary.",
        "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"",
        "query_pl": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the distinct billing countries of the invoices?",
        "question_original_pl": "Jakie są poszczególne kraje rozliczeniowe faktur?",
        "question": "What are the different billing countries of the invoices?",
        "question_pl": "Jakie są różne kraje rozliczeniowe faktur?",
        "query": "SELECT distinct BillingCountry FROM INVOICE",
        "query_pl": "SELECT distinct(BillingCountry) FROM INVOICE"
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find the title of all the albums of the artist \"AC/DC\".",
        "question_original_pl": "Znajdź tytuły wszystkich albumów artysty \"AC/DC\".",
        "question": "Find the name of all the albums of the artist \"AC/DC\".",
        "question_pl": "Znajdź nazwy wszystkich albumów artysty \"AC/DC\".",
        "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
        "query_pl": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the titles of albums by the artist \"AC/DC\"?",
        "question_original_pl": "Jakie są tytuły albumów artysty \"AC/DC\"?",
        "question": "What are the names of albums by the artist \"AC/DC\"?",
        "question_pl": "Jakie są nazwy albumów artysty \"AC/DC\"?",
        "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
        "query_pl": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
        "question_original_pl": "Jakie są tytuły i identyfikatory albumów zawierających utwory z ceną jednostkową większą niż 1?",
        "question": "What are the names and ids for albums containing tracks with unit price greater than 1?",
        "question_pl": "Jakie są nazwy i identyfikatory albumów zawierających utwory z ceną jednostkową większą niż 1?",
        "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",
        "query_pl": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"
    },
    {
        "db_id": "chinook_1",
        "question_original": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?",
        "question_original_pl": "Jakie jest imię i nazwisko klienta, który ma adres e-mail \"luisg@embraer.com.br\"?",
        "question": "What is the full name of the customer that has email \"luisg@embraer.com.br\"?",
        "question_pl": "Jaka jest pełna nazwa klienta, który ma adres e-mail \"luisg@embraer.com.br\"?",
        "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"",
        "query_pl": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What is the first name and last name employee helps the customer with first name Leonie?",
        "question_original_pl": "Jakie jest imię i nazwisko pracownika, który pomaga klientowi o imieniu Leonie?",
        "question": "What is the full name employee helps the customer with first name Leonie?",
        "question_pl": "Jakie jest pełne imię i nazwisko pracownika, który pomaga klientowi o imieniu Leonie?",
        "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"",
        "query_pl": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find all the customer last names that do not have invoice totals larger than 20.",
        "question_original_pl": "Znajdź wszystkie nazwiska klientów, których suma faktur nie przekracza 20.",
        "question": "Find all the customer family names that do not have invoice totals larger than 20.",
        "question_pl": "Znajdź wszystkie nazwy rodzin klientów, których suma faktur nie przekracza 20.",
        "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20",
        "query_pl": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the last names of customers without invoice totals exceeding 20?",
        "question_original_pl": "Jakie są nazwiska klientów, których suma faktur nie przekracza 20?",
        "question": "What are the family names of customers without invoice totals exceeding 20?",
        "question_pl": "Jak nazywają się klienci, których suma faktur nie przekracza 20?",
        "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20",
        "query_pl": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the different first names for customers from Brazil who have also had an invoice?",
        "question_original_pl": "Jakie są różne imiona klientów z Brazylii, którzy również otrzymali fakturę?",
        "question": "What are the different forename for customers from Brazil who have also had an invoice?",
        "question_pl": "Jakie są różne imiona dla klientów z Brazylii, którzy również otrzymali fakturę?",
        "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"",
        "query_pl": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazylia\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find the address of all customers that live in Germany and have invoice.",
        "question_original_pl": "Znajdź adresy wszystkich klientów mieszkających w Niemczech i posiadających fakturę.",
        "question": "Find the location of all customers that live in Germany and have invoice.",
        "question_pl": "Znajdź lokalizację wszystkich klientów mieszkających w Niemczech i posiadających fakturę.",
        "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"",
        "query_pl": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Niemcy\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the addresses of customers living in Germany who have had an invoice?",
        "question_original_pl": "Jakie są adresy klientów mieszkających w Niemczech, którzy otrzymali fakturę?",
        "question": "What are the location of customers living in Germany who have had an invoice?",
        "question_pl": "Jaka jest lokalizacja klientów mieszkających w Niemczech, którzy otrzymali fakturę?",
        "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"",
        "query_pl": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Niemcy\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the phone numbers for each employee?",
        "question_original_pl": "Jakie są numery telefonów do każdego pracownika?",
        "question": "What are the mobile numbers for each employee?",
        "question_pl": "Jakie są numery telefonów komórkowych poszczególnych pracowników?",
        "query": "SELECT Phone FROM EMPLOYEE",
        "query_pl": "SELECT Phone FROM EMPLOYEE"
    },
    {
        "db_id": "chinook_1",
        "question_original": "Please show the employee last names that serves no more than 20 customers.",
        "question_original_pl": "Podaj nazwiska pracowników, którzy obsługują nie więcej niż 20 klientów.",
        "question": "Please show the employee family name that serves no more than 20 customers.",
        "question_pl": "Wskaż rodzinę pracowników, która obsługuje nie więcej niż 20 klientów.",
        "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20",
        "query_pl": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"
    },
    {
        "db_id": "chinook_1",
        "question_original": "Please list all album titles in alphabetical order.",
        "question_original_pl": "Wymień wszystkie tytuły albumów w kolejności alfabetycznej.",
        "question": "Please list all album names in alphabetical order.",
        "question_pl": "Wymień wszystkie nazwy albumów w kolejności alfabetycznej.",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "query_pl": "SELECT Title FROM ALBUM ORDER BY Title"
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are all the album titles, in alphabetical order?",
        "question_original_pl": "Jakie są tytuły wszystkich albumów w kolejności alfabetycznej?",
        "question": "What are all the album names, in alphabetical order?",
        "question_pl": "Jakie są nazwy wszystkich albumów w kolejności alfabetycznej?",
        "query": "SELECT Title FROM ALBUM ORDER BY Title",
        "query_pl": "SELECT Title FROM ALBUM ORDER BY Title"
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the birth dates of employees living in Edmonton?",
        "question_original_pl": "Jakie są daty urodzenia pracowników mieszkających w Edmonton?",
        "question": "What are the birthdays of employees living in Edmonton?",
        "question_pl": "Jakie są daty urodzin pracowników mieszkających w Edmonton?",
        "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
        "query_pl": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
        "question_original_pl": "Znajdź daty urodzenia odpowiadające pracownikom mieszkającym w mieście Edmonton.",
        "question": "Find the birthdays corresponding to employees who live in the city of Edmonton.",
        "question_pl": "Znajdź daty urodzin odpowiadające pracownikom mieszkającym w mieście Edmonton.",
        "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
        "query_pl": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
    },
    {
        "db_id": "chinook_1",
        "question_original": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?",
        "question_original_pl": "Jakie są tytuły albumów zawierających zarówno utwory z gatunku \"Reggae\", jak i \"Rock\"?",
        "question": "What are the album names for albums containing both 'Reggae' and 'Rock' genre tracks?",
        "question_pl": "Jakie są nazwy albumów zawierających zarówno utwory z gatunku \"Reggae\", jak i \"Rock\"?",
        "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'",
        "query_pl": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Skała'"
    },
    {
        "db_id": "chinook_1",
        "question_original": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.",
        "question_original_pl": "Znajdź tytuły albumów zawierających utwory z gatunków reggae i rock.",
        "question": "Find the names of albums that contain tracks of both the Reggae and Rock genres.",
        "question_pl": "Znajdź nazwy albumów, które zawierają utwory zarówno z gatunku reggae, jak i rock.",
        "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'",
        "query_pl": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Skała'"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What are the customer phone numbers under the policy \"Life Insurance\"?",
        "question_original_pl": "Jakie są numery telefonów klientów w ramach polisy \"Ubezpieczenie na życie\"?",
        "question": "What are the client mobile numbers under the policy \"Life Insurance\"?",
        "question_pl": "Jakie są numery telefonów komórkowych klientów w ramach polisy \"Ubezpieczenie na życie\"?",
        "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
        "query_pl": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Ubezpieczenie na życie\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
        "question_original_pl": "Jakie są numery telefonów klientów korzystających z polisy z kodem \"Ubezpieczenie na życie\"?",
        "question": "What are the mobile numbers of clients using the policy with the code \"Life Insurance\"?",
        "question_pl": "Jakie są numery telefonów komórkowych klientów korzystających z polisy z kodem \"Ubezpieczenie na życie\"?",
        "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
        "query_pl": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Ubezpieczenie na życie\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which policy type has the most records in the database?",
        "question_original_pl": "Który typ polisy ma najwięcej rekordów w bazie danych?",
        "question": "Which insurance type has the most records in the database?",
        "question_pl": "Który typ ubezpieczenia ma najwięcej rekordów w bazie danych?",
        "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which policy type appears most frequently in the available policies?",
        "question_original_pl": "Który typ polisy pojawia się najczęściej w dostępnych polisach?",
        "question": "Which insurance type appears most frequently in the available policies?",
        "question_pl": "Który rodzaj ubezpieczenia pojawia się najczęściej w dostępnych polisach?",
        "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the policy type used by more than 4 customers.",
        "question_original_pl": "Znajdź typ polisy używany przez więcej niż 4 klientów.",
        "question": "Find the insurance category used by more than 4 customers.",
        "question_pl": "Znajdź kategorię ubezpieczenia używaną przez więcej niż 4 klientów.",
        "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4",
        "query_pl": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the policy types more than 4 customers use. Show their type code.",
        "question_original_pl": "Znajdź typy polis, z których korzysta więcej niż 4 klientów. Pokaż ich kod typu.",
        "question": "Find the insurance categories more than 4 customers use. Show their category code.",
        "question_pl": "Znajdź kategorie ubezpieczeń, z których korzysta więcej niż 4 klientów. Pokaż ich kod kategorii.",
        "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4",
        "query_pl": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What is the effective date of the claim that has the largest amount of total settlement?",
        "question_original_pl": "Jaka jest data wejścia w życie roszczenia, które ma największą kwotę całkowitego rozliczenia?",
        "question": "What is the effective day of the claim that has the largest amount of total settlement?",
        "question_pl": "Jaki jest efektywny dzień roszczenia, które ma największą kwotę całkowitego rozliczenia?",
        "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1",
        "query_pl": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.",
        "question_original_pl": "Znajdź roszczenie z największą łączną kwotą ugody. Zwróć datę wejścia roszczenia w życie.",
        "question": "Find the claim that has the largest total settlement amount. Return the effective day of the claim.",
        "question_pl": "Znajdź roszczenie z największą łączną kwotą rozliczenia. Zwróć dzień wejścia roszczenia w życie.",
        "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1",
        "query_pl": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which customer uses the most policies? Give me the customer name.",
        "question_original_pl": "Który klient korzysta z największej liczby polis? Podaj nazwę klienta.",
        "question": "Which client uses the most policies? Give me the client name.",
        "question_pl": "Który klient używa najwięcej zasad? Podaj nazwę klienta.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What are all the policy types of the customer named \"Dayana Robel\"?",
        "question_original_pl": "Jakie są wszystkie typy polis klienta o nazwie \"Dayana Robel\"?",
        "question": "What are all the insurance categories of the client named \"Dayana Robel\"?",
        "question_pl": "Jakie są wszystkie kategorie ubezpieczeń klienta o nazwie \"Dayana Robel\"?",
        "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"",
        "query_pl": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Tell me the types of the policy used by the customer named \"Dayana Robel\".",
        "question_original_pl": "Podaj rodzaje polis używanych przez klienta o nazwie \"Dayana Robel\".",
        "question": "Tell me the categories of the insurance used by the client named \"Dayana Robel\".",
        "question_pl": "Podaj kategorie ubezpieczeń, z których korzysta klient o nazwie \"Dayana Robel\".",
        "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"",
        "query_pl": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What are all the policy types of the customer that has the most policies listed?",
        "question_original_pl": "Jakie są wszystkie typy polis klienta, który ma najwięcej polis na liście?",
        "question": "What are all the insurance categories of the client that has the most policies listed?",
        "question_pl": "Jakie są wszystkie kategorie ubezpieczeń klienta, który ma najwięcej polis na liście?",
        "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "List all the policy types used by the customer enrolled in the most policies.",
        "question_original_pl": "Wymień wszystkie typy polis używane przez klienta zarejestrowanego w większości polis.",
        "question": "List all the insurance categories used by the client enrolled in the most policies.",
        "question_pl": "Wymień wszystkie kategorie ubezpieczeń używane przez klienta zarejestrowanego w większości polis.",
        "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which customers do not have a first notification of loss record? Give me the customer names.",
        "question_original_pl": "Którzy klienci nie mają pierwszego zgłoszenia szkody? Podaj nazwy klientów.",
        "question": "Which users do not have a first notification of loss record? Give me the user names.",
        "question_pl": "Którzy użytkownicy nie mają pierwszego powiadomienia o utracie rekordu? Podaj nazwy użytkowników.",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
        "question_original_pl": "Znajdź nazwiska klientów, którzy skorzystali z usługi \"Zamknij polisę\" lub \"Aktualizuj politykę\".",
        "question": "Find the names of users who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".",
        "question_pl": "Znajdź nazwy użytkowników, którzy skorzystali z usługi \"Zamknij polisę\" lub \"Uaktualnij politykę\".",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Zamknij polisę\" OR t3.service_name  =  \"Uaktualnij politykę\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.",
        "question_original_pl": "Którzy klienci korzystali z usługi o nazwie \"Zamknij polisę\" lub \"Uaktualnij politykę\"? Podaj nazwy klientów.",
        "question": "Which users have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the user names.",
        "question_pl": "Którzy użytkownicy korzystali z usługi o nazwie \"Zamknij polisę\" lub \"Uaktualnij politykę\"? Podaj nazwy użytkowników.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Zamknij polisę\" OR t3.service_name  =  \"Uaktualnij politykę\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\".",
        "question_original_pl": "Znajdź nazwiska klientów, którzy skorzystali zarówno z usługi \"Zamknij polisę\", jak i usługi \"Nowy wniosek o politykę\".",
        "question": "Find the names of users who have used both the service \"Close a policy\" and the service \"New policy application\".",
        "question_pl": "Znajdź nazwy użytkowników, którzy korzystali zarówno z usługi \"Zamknij polisę\", jak i usługi \"Nowa aplikacja polisy\".",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Zamknij polisę\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Nowa aplikacja polityki\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Which customers have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the customer names.",
        "question_original_pl": "Którzy klienci korzystali zarówno z usługi o nazwie \"Zamknij polisę\", jak i usługi o nazwie \"Uaktualnij politykę\"? Podaj nazwy klientów.",
        "question": "Which users have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the user names.",
        "question_pl": "Którzy użytkownicy korzystali zarówno z usługi o nazwie \"Zamknij zasady\", jak i usługi o nazwie \"Uaktualnij zasady\"? Podaj nazwy użytkowników.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Zamknij polisę\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Nowa aplikacja polityki\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "Find the IDs of customers whose name contains \"Diana\".",
        "question_original_pl": "Znajdź identyfikatory klientów, których nazwa zawiera \"Diana\".",
        "question": "Find the IDs of users whose name contains \"Diana\".",
        "question_pl": "Znajdź identyfikatory użytkowników, których nazwa zawiera \"Diana\".",
        "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
        "query_pl": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What are the IDs of customers who have \"Diana\" in part of their names?",
        "question_original_pl": "Jakie są identyfikatory klientów, którzy mają \"Diana\" w części swojego imienia?",
        "question": "What are the IDs of users who have \"Diana\" in part of their names?",
        "question_pl": "Jakie są identyfikatory użytkowników, którzy mają w nazwie \"Diana\"?",
        "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
        "query_pl": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "List all the customers in increasing order of IDs.",
        "question_original_pl": "Wyświetl listę wszystkich klientów w kolejności rosnącej według identyfikatorów.",
        "question": "List all the users in increasing order of IDs.",
        "question_pl": "Wyświetl listę wszystkich użytkowników w rosnącej kolejności identyfikatorów.",
        "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC",
        "query_pl": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
    },
    {
        "db_id": "insurance_fnol",
        "question_original": "What is the ordered list of customer ids?",
        "question_original_pl": "Czym jest uporządkowana lista identyfikatorów klientów?",
        "question": "What is the ordered list of user ids?",
        "question_pl": "Jaka jest uporządkowana lista identyfikatorów użytkowników?",
        "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC",
        "query_pl": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "List the names and the locations that the enzymes can make an effect.",
        "question_original_pl": "Wymień nazwy i miejsca, w których enzymy mogą działać.",
        "question": "List the names and the position that the enzymes can make an effect.",
        "question_pl": "Wymień nazwy i miejsce, w którym enzymy mogą wywoływać efekt.",
        "query": "SELECT name ,  LOCATION FROM enzyme",
        "query_pl": "SELECT name ,  LOCATION FROM enzyme"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What are the names and locations of all enzymes listed?",
        "question_original_pl": "Jakie są nazwy i lokalizacje wszystkich wymienionych enzymów?",
        "question": "What are the names and position of all enzymes listed?",
        "question_pl": "Jakie są nazwy i pozycje wszystkich wymienionych enzymów?",
        "query": "SELECT name ,  LOCATION FROM enzyme",
        "query_pl": "SELECT name ,  LOCATION FROM enzyme"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",
        "question_original_pl": "Jaki jest produkt, chromosom i porfiria związane z enzymami, które działają w miejscu \"Cytosol\"?",
        "question": "What is the goods, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?",
        "question_pl": "Czym jest towar, chromosom i porfiria związane z enzymami, które działają w miejscu \"Cytosol\"?",
        "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'",
        "query_pl": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
        "question_original_pl": "Jaki jest produkt, chromosom i porfiria enzymów zlokalizowanych w cytozolu?",
        "question": "What is the goods, chromosome, and porphyria of the enzymes located at 'Cytosol'?",
        "question_pl": "Jaki jest towar, chromosom i porfiria enzymów znajdujących się w \"Cytosolu\"?",
        "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'",
        "query_pl": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What are the names of enzymes whose product is not 'Heme'?",
        "question_original_pl": "Jak nazywają się enzymy, których produktem nie jest \"hem\"?",
        "question": "What are the names of enzymes whose goods is not 'Heme'?",
        "question_pl": "Jak nazywają się enzymy, których towarem nie jest \"hem\"?",
        "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
        "query_pl": "SELECT name FROM enzyme WHERE product != 'Hem'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
        "question_original_pl": "Jaki jest typ interakcji enzymu o nazwie \"syntaza ALA\" i leku o nazwie \"aripiprazol\"?",
        "question": "What is the interplay category of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
        "question_pl": "Jaka jest kategoria wzajemnego oddziaływania enzymu o nazwie \"syntaza ALA\" i leku o nazwie \"aripiprazol\"?",
        "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'",
        "query_pl": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'Syntaza ALA' AND T2.name  =  'Aripiprazol'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
        "question_original_pl": "Jaki jest rodzaj interakcji między enzymem o nazwie \"syntaza ALA\" a lekiem o nazwie \"aripiprazol\"?",
        "question": "What is the category of interplay for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?",
        "question_pl": "Jaka jest kategoria wzajemnego oddziaływania enzymu o nazwie \"syntaza ALA\" i leku o nazwie \"aripiprazol\"?",
        "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'",
        "query_pl": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'Syntaza ALA' AND T2.name  =  'Aripiprazol'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What is the most common interaction type between enzymes and medicine? And how many are there?",
        "question_original_pl": "Jaki jest najczęstszy typ interakcji między enzymami a lekami? I ile ich jest?",
        "question": "What is the most common interplay category between enzymes and medicine? And how many are there?",
        "question_pl": "Jaka jest najczęstsza kategoria interakcji między enzymami a medycyną? I ile ich jest?",
        "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What are the most common types of interactions between enzymes and medicine, and how many types are there?",
        "question_original_pl": "Jakie są najczęstsze rodzaje interakcji między enzymami a lekami i ile ich jest?",
        "question": "What are the most common categories of interplay between enzymes and medicine, and how many categories are there?",
        "question_pl": "Jakie są najczęstsze kategorie interakcji między enzymami a medycyną i ile ich jest?",
        "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?",
        "question_original_pl": "Jaka jest nazwa, lokalizacja i produkty enzymów, które wchodzą w interakcje z inhibitorami?",
        "question": "What are the different name, position and goods of the enzymes which has any 'inhibitor' interaction?",
        "question_pl": "Jakie są różne nazwy, pozycje i właściwości enzymów, które wchodzą w interakcje z inhibitorami?",
        "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "question_original": "What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?",
        "question_original_pl": "Jakie są różne nazwy, lokalizacje i produkty enzymów, które mogą wchodzić w interakcje z inhibitorami?",
        "question": "What are the different names, positions, and goods of the enzymes that are capable inhibitor interactions?",
        "question_pl": "Jakie są różne nazwy, pozycje i właściwości enzymów, które mogą wchodzić w interakcje z inhibitorami?",
        "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
    },
    {
        "db_id": "university_basketball",
        "question_original": "List all schools and their nicknames in the order of founded year.",
        "question_original_pl": "Wymień wszystkie szkoły i ich przydomki w kolejności roku założenia.",
        "question": "List all schools and their monicker in the order of founded year.",
        "question_pl": "Wymień wszystkie szkoły i ich nazwy w kolejności roku założenia.",
        "query": "SELECT school ,  nickname FROM university ORDER BY founded",
        "query_pl": "SELECT school ,  nickname FROM university ORDER BY founded"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the different schools and their nicknames, ordered by their founding years?",
        "question_original_pl": "Jakie są różne szkoły i ich przydomki, uporządkowane według lat założenia?",
        "question": "What are the different schools and their monicker, ordered by their founding years?",
        "question_pl": "Jakie są różne szkoły i ich nazwy, uporządkowane według lat założenia?",
        "query": "SELECT school ,  nickname FROM university ORDER BY founded",
        "query_pl": "SELECT school ,  nickname FROM university ORDER BY founded"
    },
    {
        "db_id": "university_basketball",
        "question_original": "List all public schools and their locations.",
        "question_original_pl": "Wymień wszystkie szkoły publiczne i ich lokalizacje.",
        "question": "List all public schools and their addresses.",
        "question_pl": "Wymień wszystkie szkoły publiczne i ich adresy.",
        "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
        "query_pl": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Publiczny'"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the public schools and what are their locations?",
        "question_original_pl": "Jakie są szkoły publiczne i jakie są ich lokalizacje?",
        "question": "What are the public schools and what are their addresses?",
        "question_pl": "Jakie są szkoły publiczne i jakie są ich adresy?",
        "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
        "query_pl": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Publiczny'"
    },
    {
        "db_id": "university_basketball",
        "question_original": "When was the school with the largest enrollment founded?",
        "question_original_pl": "Kiedy została założona szkoła z największą liczbą uczniów?",
        "question": "When was the school with the largest enrollment established?",
        "question_pl": "Kiedy powstała szkoła z największą liczbą uczniów?",
        "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
        "query_pl": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Return the founded year for the school with the largest enrollment.",
        "question_original_pl": "Zwróć rok założenia szkoły z największą liczbą uczniów.",
        "question": "Return the established year for the school with the largest enrollment.",
        "question_pl": "Zwróć ustalony rok dla szkoły z największą liczbą uczniów.",
        "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
        "query_pl": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What is the founded year of the non public school that was founded most recently?",
        "question_original_pl": "Jaki jest rok założenia szkoły niepublicznej, która została założona najpóźniej?",
        "question": "What is the established year of the non public school that was founded most recently?",
        "question_pl": "Jaki jest rok założenia szkoły niepublicznej, która została założona niedawno?",
        "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1",
        "query_pl": "SELECT founded FROM university WHERE affiliation != 'Publiczny' ORDER BY founded DESC LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What is the primary conference of the school that has the lowest acc percent score in the competition?",
        "question_original_pl": "Jaka jest główna konferencja szkoły, która uzyskała najniższy wynik procentowy acc w konkursie?",
        "question": "What is the primary meeting of the school that has the lowest acc percent score in the competition?",
        "question_pl": "Jakie jest główne spotkanie szkoły, która uzyskała najniższy wynik procentowy acc w konkursie?",
        "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1",
        "query_pl": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Return the primary conference of the school with the lowest acc percentage score.",
        "question_original_pl": "Zwróć konferencję główną szkoły z najniższym wynikiem procentowym acc.",
        "question": "Return the primary meeting of the school with the lowest acc percentage score.",
        "question_pl": "Zwróć główne spotkanie szkoły z najniższym wynikiem procentowym acc.",
        "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1",
        "query_pl": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Find the location and all games score of the school that has Clemson as its team name.",
        "question_original_pl": "Znajdź lokalizację i wyniki wszystkich meczów szkoły, której nazwa drużyny to Clemson.",
        "question": "Find the addresses and all games score of the school that has Clemson as its team name.",
        "question_pl": "Znajdź adresy i wyniki wszystkich meczów szkoły, której nazwa drużyny to Clemson.",
        "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'",
        "query_pl": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the all games score and location of the school called Clemson?",
        "question_original_pl": "Jakie są wyniki wszystkich meczów i lokalizacja szkoły o nazwie Clemson?",
        "question": "What are the all games score and address of the school called Clemson?",
        "question_pl": "Jakie są wyniki wszystkich meczów i adres szkoły o nazwie Clemson?",
        "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'",
        "query_pl": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the average enrollment size of the universities that are founded before 1850?",
        "question_original_pl": "Jaka jest średnia wielkość zapisów na uniwersytety założone przed 1850 rokiem?",
        "question": "What are the average number of students enrolled in the universities that are founded before 1850?",
        "question_pl": "Jaka jest średnia liczba studentów zapisanych na uniwersytety założone przed 1850 rokiem?",
        "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
        "query_pl": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Return the average enrollment of universities founded before 1850.",
        "question_original_pl": "Zwróć średnią liczbę studentów uniwersytetów założonych przed 1850 rokiem.",
        "question": "Return the average number of students enrolled in the universities founded before 1850.",
        "question_pl": "Zwróć średnią liczbę studentów zapisanych na uniwersytety założone przed 1850 rokiem.",
        "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
        "query_pl": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Show the enrollment and primary_conference of the oldest college.",
        "question_original_pl": "Pokaż rejestrację i primary_conference najstarszej uczelni.",
        "question": "Show the number of students enrolled and primary_conference of the oldest college.",
        "question_pl": "Pokaż liczbę zapisanych studentów i primary_conference najstarszej uczelni.",
        "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",
        "query_pl": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the enrollment and primary conference for the university which was founded the earliest?",
        "question_original_pl": "Jakie są zapisy i główna konferencja dla uniwersytetu, który został założony najwcześniej?",
        "question": "What are the enrollment and primary meeting for the college which was founded the earliest?",
        "question_pl": "Jakie są zapisy i główne spotkania na uczelni, która została założona najwcześniej?",
        "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",
        "query_pl": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What is the total and minimum enrollment of all schools?",
        "question_original_pl": "Jaka jest całkowita i minimalna liczba uczniów we wszystkich szkołach?",
        "question": "What is the total and minimum number of student enrolled in all schools?",
        "question_pl": "Jaka jest całkowita i minimalna liczba uczniów zapisanych do wszystkich szkół?",
        "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university",
        "query_pl": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Return the total and minimum enrollments across all schools.",
        "question_original_pl": "Zwróć całkowitą i minimalną liczbę zapisów we wszystkich szkołach.",
        "question": "Return the total and minimum number of student enrolled in all schools.",
        "question_pl": "Zwróć całkowitą i minimalną liczbę uczniów zapisanych do wszystkich szkół.",
        "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university",
        "query_pl": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Find the total student enrollment for different affiliation type schools.",
        "question_original_pl": "Znajdź całkowitą liczbę uczniów zapisanych do różnych szkół stowarzyszonych.",
        "question": "Find the total number of student enrolled in different affiliation type schools.",
        "question_pl": "Znajdź całkowitą liczbę uczniów zapisanych do różnych szkół partnerskich.",
        "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation",
        "query_pl": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the total enrollments of universities of each affiliation type?",
        "question_original_pl": "Jaka jest łączna liczba studentów na uniwersytetach każdego typu afiliacji?",
        "question": "What are the total number of student enrolled in the universities of each affiliation type?",
        "question_pl": "Jaka jest łączna liczba studentów zapisanych na uniwersytety każdego typu afiliacji?",
        "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation",
        "query_pl": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Count the number of universities that do not participate in the baketball match.",
        "question_original_pl": "Policz liczbę uniwersytetów, które nie biorą udziału w rozgrywkach baketballowych.",
        "question": "Count the number of colleges that do not participate in the baketball match.",
        "question_pl": "Policz liczbę uczelni, które nie biorą udziału w meczu baketballowym.",
        "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
        "query_pl": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Find how many school locations have the word 'NY'.",
        "question_original_pl": "Sprawdź, ile lokalizacji szkół zawiera słowo \"NY\".",
        "question": "Find how many school addresses have the word 'NY'.",
        "question_pl": "Sprawdź, ile adresów szkół zawiera słowo \"NY\".",
        "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
        "query_pl": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
    },
    {
        "db_id": "university_basketball",
        "question_original": "How many universities have a location that contains NY?",
        "question_original_pl": "Ile uniwersytetów ma lokalizację w Nowym Jorku?",
        "question": "How many colleges have an address that contains NY?",
        "question_pl": "Ile uczelni ma adres zawierający NY?",
        "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
        "query_pl": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
    },
    {
        "db_id": "university_basketball",
        "question_original": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
        "question_original_pl": "Znajdź nazwy drużyn uniwersyteckich, których liczba studentów jest mniejsza niż średnia liczba studentów.",
        "question": "Find the team names of the colleges whose enrollments are smaller than the average enrollment size.",
        "question_pl": "Znajdź nazwy drużyn uczelni, w których liczba studentów jest mniejsza niż średnia liczba studentów.",
        "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)",
        "query_pl": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the names of teams from universities that have a below average enrollment?",
        "question_original_pl": "Jak nazywają się drużyny z uniwersytetów, które mają poniżej średniej rekrutację?",
        "question": "What are the names of teams from colleges that have a below average enrollment?",
        "question_pl": "Jakie są nazwy drużyn z uczelni, które mają poniżej średniej zapisów?",
        "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)",
        "query_pl": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
    },
    {
        "db_id": "university_basketball",
        "question_original": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.",
        "question_original_pl": "Znajdź liczbę uniwersytetów, które mają ponad 20000 zapisów dla każdego typu afiliacji.",
        "question": "Find the number of colleges that have over a 20000 enrollment size for each affiliation type.",
        "question_pl": "Znajdź liczbę uczelni, które mają ponad 20000 studentów dla każdego typu afiliacji.",
        "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation",
        "query_pl": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
        "question_original_pl": "Jakie są różne przynależności i jaka jest całkowita liczba uczniów w szkołach założonych po 1850 r. dla każdego typu zapisów?",
        "question": "What are the different affiliations, and what is the total number of students enrolled in the schools founded after 1850 for each enrollment type?",
        "question_pl": "Jakie są różne przynależności i jaka jest łączna liczba uczniów zapisanych do szkół założonych po 1850 r. dla każdego typu zapisów?",
        "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation",
        "query_pl": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
    },
    {
        "db_id": "university_basketball",
        "question_original": "List all information regarding the basketball match.",
        "question_original_pl": "Wymień wszystkie informacje dotyczące meczu koszykówki.",
        "question": "List the details regarding the basketball match.",
        "question_pl": "Wymień szczegóły dotyczące meczu koszykówki.",
        "query": "SELECT * FROM basketball_match",
        "query_pl": "SELECT * FROM basketball_match"
    },
    {
        "db_id": "university_basketball",
        "question_original": "What is all the information about the basketball match?",
        "question_original_pl": "Jakie są wszystkie informacje o meczu koszykówki?",
        "question": "What is all the details about the basketball match?",
        "question_pl": "Jakie są wszystkie szczegóły dotyczące meczu koszykówki?",
        "query": "SELECT * FROM basketball_match",
        "query_pl": "SELECT * FROM basketball_match"
    },
    {
        "db_id": "phone_1",
        "question_original": "Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.",
        "question_original_pl": "Znajdź nazwę firmy, która ma najmniej modeli telefonów. Wymień nazwę firmy i liczbę modeli telefonów produkowanych przez tę firmę.",
        "question": "Find the name of the enterprise that has the least number of phone models. List the company name and the number of phone model produced by that company.",
        "question_pl": "Znajdź nazwę firmy, która ma najmniej modeli telefonów. Wymień nazwę firmy i liczbę produkowanych przez nią modeli telefonów.",
        "query": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;",
        "query_pl": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;"
    },
    {
        "db_id": "phone_1",
        "question_original": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32.",
        "question_original_pl": "Wymień nazwę modelu sprzętu dla telefonów, które mają tryb ekranu typu \"Tekst\" lub rozmiar pamięci RAM większy niż 32.",
        "question": "List the hardware model name for the mobiles that have screen mode type \"Text\" or RAM size greater than 32.",
        "question_pl": "Wymień nazwę modelu sprzętu dla telefonów komórkowych, które mają tryb ekranu typu \"Tekst\" lub rozmiar pamięci RAM większy niż 32.",
        "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB  >  32;",
        "query_pl": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Tekst\" OR T1.RAM_MiB  >  32;"
    },
    {
        "db_id": "phone_1",
        "question_original": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15.",
        "question_original_pl": "Wymień model telefonu i nazwę firmy dla telefonów, których zużycie ekranu w kb wynosi od 10 do 15.",
        "question": "List the phone hardware model and enterprise name for the phones whose screen usage in kb is between 10 and 15.",
        "question_pl": "Wymień model sprzętowy telefonu i nazwę firmy dla telefonów, których zużycie ekranu w kb wynosi od 10 do 15.",
        "query": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;",
        "query_pl": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;"
    },
    {
        "db_id": "phone_1",
        "question_original": "Find the details for all chip models.",
        "question_original_pl": "Znajdź szczegóły dotyczące wszystkich modeli chipów.",
        "question": "Find the information for all chip models.",
        "question_pl": "Znajdź informacje dla wszystkich modeli chipów.",
        "query": "SELECT * FROM chip_model",
        "query_pl": "SELECT * FROM chip_model"
    },
    {
        "db_id": "match_season",
        "question_original": "How many countries are there in total?",
        "question_original_pl": "Ile jest w sumie krajów?",
        "question": "How many nations are there in total?",
        "question_pl": "Ile jest w sumie narodów?",
        "query": "SELECT count(*) FROM country",
        "query_pl": "SELECT count(*) FROM country"
    },
    {
        "db_id": "match_season",
        "question_original": "Count the number of countries.",
        "question_original_pl": "Policz liczbę krajów.",
        "question": "Count the number of nations.",
        "question_pl": "Policz liczbę narodów.",
        "query": "SELECT count(*) FROM country",
        "query_pl": "SELECT count(*) FROM country"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the country name and capital of all countries.",
        "question_original_pl": "Pokaż nazwę kraju i stolicę wszystkich krajów.",
        "question": "Show the nation name and capital of all nations.",
        "question_pl": "Pokaż nazwę kraju i stolicę wszystkich narodów.",
        "query": "SELECT Country_name ,  Capital FROM country",
        "query_pl": "SELECT Country_name ,  Capital FROM country"
    },
    {
        "db_id": "match_season",
        "question_original": "What are the names and capitals of each country?",
        "question_original_pl": "Jakie są nazwy i stolice każdego kraju?",
        "question": "What are the names and capitals of each nation?",
        "question_pl": "Jakie są nazwy i stolice każdego narodu?",
        "query": "SELECT Country_name ,  Capital FROM country",
        "query_pl": "SELECT Country_name ,  Capital FROM country"
    },
    {
        "db_id": "match_season",
        "question_original": "Show all distinct positions of matches.",
        "question_original_pl": "Pokaż wszystkie wyraźne pozycje dopasowań.",
        "question": "Show all different positions of matches.",
        "question_pl": "Pokaż wszystkie różne pozycje meczów.",
        "query": "SELECT DISTINCT POSITION FROM match_season",
        "query_pl": "SELECT DISTINCT POSITION FROM match_season"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the players from college UCLA.",
        "question_original_pl": "Pokaż zawodników z uczelni UCLA.",
        "question": "Show the participants from college UCLA.",
        "question_pl": "Pokaż uczestników z uczelni UCLA.",
        "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
        "query_pl": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
    },
    {
        "db_id": "match_season",
        "question_original": "Who are the players from UCLA?",
        "question_original_pl": "Kim są zawodnicy UCLA?",
        "question": "Who are the participants from UCLA?",
        "question_pl": "Kim są uczestnicy z UCLA?",
        "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
        "query_pl": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
    },
    {
        "db_id": "match_season",
        "question_original": "Show the distinct position of players from college UCLA or Duke.",
        "question_original_pl": "Pokaż wyraźną pozycję graczy z uczelni UCLA lub Duke.",
        "question": "Show the different position of players from college UCLA or Duke.",
        "question_pl": "Pokaż różne pozycje zawodników z uczelni UCLA lub Duke.",
        "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"",
        "query_pl": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Książę\""
    },
    {
        "db_id": "match_season",
        "question_original": "Show the players and the years played.",
        "question_original_pl": "Pokaż zawodników i lata gry.",
        "question": "Show the participants and the years played.",
        "question_pl": "Pokaż uczestników i rozegrane lata.",
        "query": "SELECT Player ,  Years_Played FROM player",
        "query_pl": "SELECT Player ,  Years_Played FROM player"
    },
    {
        "db_id": "match_season",
        "question_original": "Who are the different players and how many years has each played?",
        "question_original_pl": "Kim są poszczególni gracze i ile lat grał każdy z nich?",
        "question": "Who are the different participants and how many years has each played?",
        "question_pl": "Kim są poszczególni uczestnicy i ile lat grał każdy z nich?",
        "query": "SELECT Player ,  Years_Played FROM player",
        "query_pl": "SELECT Player ,  Years_Played FROM player"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the season, the player, and the name of the country that player belongs to.",
        "question_original_pl": "Pokaż sezon, zawodnika i nazwę kraju, do którego należy zawodnik.",
        "question": "Show the season, the participant, and the name of the nation that player belongs to.",
        "question_pl": "Pokaż sezon, uczestnika i nazwę kraju, do którego należy zawodnik.",
        "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country",
        "query_pl": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
    },
    {
        "db_id": "match_season",
        "question_original": "For each player, what are their name, season, and country that they belong to?",
        "question_original_pl": "Dla każdego gracza podaj jego imię, sezon i kraj, do którego należy?",
        "question": "For each participant, what are their name, season, and country that they belong to?",
        "question_pl": "Dla każdego uczestnika, jakie jest jego imię, pora roku i kraj, do którego należy?",
        "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country",
        "query_pl": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
    },
    {
        "db_id": "match_season",
        "question_original": "Which players are from Indonesia?",
        "question_original_pl": "Którzy zawodnicy pochodzą z Indonezji?",
        "question": "Which participants are from Indonesia?",
        "question_pl": "Którzy uczestnicy pochodzą z Indonezji?",
        "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"",
        "query_pl": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonezja\""
    },
    {
        "db_id": "match_season",
        "question_original": "Who are the players from Indonesia?",
        "question_original_pl": "Kim są zawodnicy z Indonezji?",
        "question": "Who are the participants from Indonesia?",
        "question_pl": "Kim są uczestnicy z Indonezji?",
        "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"",
        "query_pl": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonezja\""
    },
    {
        "db_id": "match_season",
        "question_original": "What are the distinct positions of the players from a country whose capital is Dublin?",
        "question_original_pl": "Czym wyróżniają się zawodnicy z kraju, którego stolicą jest Dublin?",
        "question": "What are the different positions of the players from a nation whose capital is Dublin?",
        "question_pl": "Jakie są różne pozycje graczy z kraju, którego stolicą jest Dublin?",
        "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
        "query_pl": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""
    },
    {
        "db_id": "match_season",
        "question_original": "Give the different positions of players who play for the country with the capital Dublin.",
        "question_original_pl": "Podaj różne pozycje zawodników grających dla kraju ze stolicą w Dublinie.",
        "question": "Give the different positions of players who play for the nation with the capital Dublin.",
        "question_pl": "Podaj różne pozycje zawodników grających dla narodu ze stolicą w Dublinie.",
        "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
        "query_pl": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""
    },
    {
        "db_id": "match_season",
        "question_original": "What are the official languages of the countries of players from Maryland or Duke college?",
        "question_original_pl": "Jakie są oficjalne języki krajów graczy z Maryland lub Duke College?",
        "question": "What are the official languages of the nations of players from Maryland or Duke college?",
        "question_pl": "Jakie są oficjalne języki narodów graczy z Maryland lub Duke College?",
        "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"",
        "query_pl": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Książę\""
    },
    {
        "db_id": "match_season",
        "question_original": "Return the official native languages of countries who have players from Maryland or Duke colleges.",
        "question_original_pl": "Zwróć oficjalne języki ojczyste krajów, w których grają zawodnicy z uczelni Maryland lub Duke.",
        "question": "Return the official native languages of nations who have players from Maryland or Duke colleges.",
        "question_pl": "Zwróć oficjalne języki ojczyste narodów, które mają graczy z uczelni Maryland lub Duke.",
        "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"",
        "query_pl": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Książę\""
    },
    {
        "db_id": "match_season",
        "question_original": "How many distinct official languages are there among countries of players whose positions are defenders.",
        "question_original_pl": "Ile jest różnych języków urzędowych w krajach, w których grają zawodnicy na pozycji obrońcy.",
        "question": "How many different official languages are there among nations of players whose positions are defenders.",
        "question_pl": "Ile jest różnych języków urzędowych wśród narodów graczy, których pozycje są obrońcami.",
        "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"",
        "query_pl": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Obrońca\""
    },
    {
        "db_id": "match_season",
        "question_original": "Count the number of different official languages corresponding to countries that players who play Defender are from.",
        "question_original_pl": "Policz liczbę różnych języków urzędowych odpowiadających krajom, z których pochodzą gracze grający w Defender.",
        "question": "Count the number of different official languages corresponding to nations that players who play Defender are from.",
        "question_pl": "Policz liczbę różnych języków urzędowych odpowiadających narodom, z których pochodzą gracze grający w Obrońcę.",
        "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"",
        "query_pl": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Obrońca\""
    },
    {
        "db_id": "match_season",
        "question_original": "Show the season, the player, and the name of the team that players belong to.",
        "question_original_pl": "Pokaż sezon, zawodnika i nazwę drużyny, do której należy.",
        "question": "Show the season, the participant, and the name of the team that players belong to.",
        "question_pl": "Pokaż sezon, uczestnika i nazwę drużyny, do której należą gracze.",
        "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id",
        "query_pl": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
    },
    {
        "db_id": "match_season",
        "question_original": "Who are the different players, what season do they play in, and what is the name of the team they are on?",
        "question_original_pl": "Kim są poszczególni gracze, w jakim sezonie grają i jak nazywa się drużyna, w której występują?",
        "question": "Who are the different participants, what season do they play in, and what is the name of the team they are on?",
        "question_pl": "Kim są poszczególni uczestnicy, w jakim sezonie grają i jak nazywa się drużyna, w której występują?",
        "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id",
        "query_pl": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
    },
    {
        "db_id": "match_season",
        "question_original": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".",
        "question_original_pl": "Ile różnych uczelni jest powiązanych z zawodnikami drużyny o nazwie \"Columbus Crew\".",
        "question": "How many different universities are associated with players from the team with name \"Columbus Crew\".",
        "question_pl": "Z iloma różnymi uniwersytetami związani są zawodnicy drużyny o nazwie \"Columbus Crew\".",
        "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
        "query_pl": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
    },
    {
        "db_id": "match_season",
        "question_original": "Count the number of different colleges that players who play for Columbus Crew are from.",
        "question_original_pl": "Policz, z ilu różnych uczelni pochodzą zawodnicy grający w Columbus Crew.",
        "question": "Count the number of different universities that players who play for Columbus Crew are from.",
        "question_pl": "Policz, z ilu różnych uniwersytetów pochodzą zawodnicy grający w Columbus Crew.",
        "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
        "query_pl": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
    },
    {
        "db_id": "match_season",
        "question_original": "Show the players and years played for players from team \"Columbus Crew\".",
        "question_original_pl": "Pokaż zawodników i lata gry zawodników z drużyny \"Columbus Crew\".",
        "question": "Show the participants and years played for players from team \"Columbus Crew\".",
        "question_pl": "Pokaż uczestników i lata gry zawodników z drużyny \"Columbus Crew\".",
        "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
        "query_pl": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
    },
    {
        "db_id": "match_season",
        "question_original": "What are the players who played for Columbus Crew, and how many years did each play for?",
        "question_original_pl": "Jacy zawodnicy grali w Columbus Crew i przez ile lat grał każdy z nich?",
        "question": "What are the participants who played for Columbus Crew, and how many years did each play for?",
        "question_pl": "Jacy uczestnicy grali w Columbus Crew i przez ile lat grał każdy z nich?",
        "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
        "query_pl": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
    },
    {
        "db_id": "match_season",
        "question_original": "How many players are from each country?",
        "question_original_pl": "Ilu graczy pochodzi z każdego kraju?",
        "question": "How many participants are from each nation?",
        "question_pl": "Ilu uczestników pochodzi z każdego kraju?",
        "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name",
        "query_pl": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"
    },
    {
        "db_id": "match_season",
        "question_original": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
        "question_original_pl": "Jacy są wszyscy gracze, którzy zagrali w sezonie meczowym, posortowani według uczelni w rosnącej kolejności alfabetycznej?",
        "question": "What are all the participants who played in match season, sorted by college in ascending alphabetical order?",
        "question_pl": "Jacy są wszyscy uczestnicy, którzy grali w sezonie meczowym, posortowani według uczelni w rosnącej kolejności alfabetycznej?",
        "query": "SELECT player FROM match_season ORDER BY College ASC",
        "query_pl": "SELECT player FROM match_season ORDER BY College ASC"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the top 3 most common colleges of players in match seasons.",
        "question_original_pl": "Pokaż 3 najpopularniejsze uczelnie zawodników w sezonach meczowych.",
        "question": "Show the top 3 most common universities of players in match seasons.",
        "question_pl": "Pokaż 3 najpopularniejsze uniwersytety zawodników w sezonach meczowych.",
        "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "match_season",
        "question_original": "What are the three colleges from which the most players are from?",
        "question_original_pl": "Z jakich trzech uczelni pochodzi najwięcej zawodników?",
        "question": "What are the three universities from which the most players are from?",
        "question_pl": "Z jakich trzech uniwersytetów pochodzi najwięcej zawodników?",
        "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the name of colleges that have at least two players.",
        "question_original_pl": "Pokaż nazwy uczelni, które mają co najmniej dwóch graczy.",
        "question": "Show the name of universities that have at least two players.",
        "question_pl": "Pokaż nazwy uniwersytetów, które mają co najmniej dwóch graczy.",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2",
        "query_pl": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
    },
    {
        "db_id": "match_season",
        "question_original": "What are the names of all colleges that have two or more players?",
        "question_original_pl": "Jak nazywają się wszystkie uczelnie, które mają dwóch lub więcej graczy?",
        "question": "What are the names of all universities that have two or more players?",
        "question_pl": "Jakie są nazwy wszystkich uniwersytetów, które mają dwóch lub więcej graczy?",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2",
        "query_pl": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
    },
    {
        "db_id": "match_season",
        "question_original": "Show the name of colleges that have at least two players in descending alphabetical order.",
        "question_original_pl": "Pokaż nazwy uczelni, które mają co najmniej dwóch graczy, w malejącej kolejności alfabetycznej.",
        "question": "Show the name of universities that have at least two players in descending alphabetical order.",
        "question_pl": "Pokaż nazwy uniwersytetów, które mają co najmniej dwóch graczy, w malejącej kolejności alfabetycznej.",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC",
        "query_pl": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
    },
    {
        "db_id": "match_season",
        "question_original": "What are the names of colleges that have two or more players, listed in descending alphabetical order?",
        "question_original_pl": "Jakie są nazwy uczelni, które mają dwóch lub więcej graczy, wymienione w kolejności alfabetycznej?",
        "question": "What are the names of universities that have two or more players, listed in descending alphabetical order?",
        "question_pl": "Jakie są nazwy uniwersytetów, które mają dwóch lub więcej graczy, wymienione w malejącej kolejności alfabetycznej?",
        "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC",
        "query_pl": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
    },
    {
        "db_id": "match_season",
        "question_original": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.",
        "question_original_pl": "Zwróć nazwy krajów, w których występują zawodnicy grający na pozycji napastnika, a także zawodnicy grający na pozycji obrońcy.",
        "question": "Return the names of nations that have players that play the Forward position, as well as players who play the Defender position.",
        "question_pl": "Zwróć nazwy nacji, które mają graczy grających na pozycji napastnika, a także graczy grających na pozycji obrońcy.",
        "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"",
        "query_pl": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Do przodu\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Obrońca\""
    },
    {
        "db_id": "match_season",
        "question_original": "Which college have both players with position midfielder and players with position defender?",
        "question_original_pl": "Która uczelnia ma zarówno graczy na pozycji pomocnika, jak i obrońcy?",
        "question": "Which university have both players with position midfielder and players with position defender?",
        "question_pl": "Który uniwersytet ma zarówno graczy na pozycji pomocnika, jak i obrońcy?",
        "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"",
        "query_pl": "SELECT College FROM match_season WHERE POSITION  =  \"Pomocnik\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Obrońca\""
    },
    {
        "db_id": "match_season",
        "question_original": "Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.",
        "question_original_pl": "Zwróć uczelnie, które mają zawodników grających na pozycji pomocnika, a także zawodników grających na pozycji obrońcy.",
        "question": "Return the universities that have players who play the Midfielder position, as well as players who play the Defender position.",
        "question_pl": "Zwróć uniwersytety, które mają zawodników grających na pozycji pomocnika, a także zawodników grających na pozycji obrońcy.",
        "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"",
        "query_pl": "SELECT College FROM match_season WHERE POSITION  =  \"Pomocnik\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Obrońca\""
    },
    {
        "db_id": "climbing",
        "question_original": "How many climbers are there?",
        "question_original_pl": "Ilu jest wspinaczy?",
        "question": "How many mountaineer are there?",
        "question_pl": "Ilu jest alpinistów?",
        "query": "SELECT count(*) FROM climber",
        "query_pl": "SELECT count(*) FROM climber"
    },
    {
        "db_id": "climbing",
        "question_original": "Count the number of climbers.",
        "question_original_pl": "Policz liczbę wspinaczy.",
        "question": "Count the number of mountaineer.",
        "question_pl": "Policz liczbę alpinistów.",
        "query": "SELECT count(*) FROM climber",
        "query_pl": "SELECT count(*) FROM climber"
    },
    {
        "db_id": "climbing",
        "question_original": "List the names of climbers in descending order of points.",
        "question_original_pl": "Wymień nazwiska wspinaczy w kolejności malejącej liczby punktów.",
        "question": "List the names of mountaineer in descending order of points.",
        "question_pl": "Wymień nazwiska alpinistów w kolejności malejącej liczby punktów.",
        "query": "SELECT Name FROM climber ORDER BY Points DESC",
        "query_pl": "SELECT Name FROM climber ORDER BY Points DESC"
    },
    {
        "db_id": "climbing",
        "question_original": "What are the names of the climbers, ordered by points descending?",
        "question_original_pl": "Jakie są nazwiska wspinaczy, uporządkowane według malejących punktów?",
        "question": "What are the names of the mountaineer, ordered by points descending?",
        "question_pl": "Jakie są imiona alpinistów, uporządkowane według malejących punktów?",
        "query": "SELECT Name FROM climber ORDER BY Points DESC",
        "query_pl": "SELECT Name FROM climber ORDER BY Points DESC"
    },
    {
        "db_id": "climbing",
        "question_original": "List the names of climbers whose country is not Switzerland.",
        "question_original_pl": "Wymień nazwiska wspinaczy, których krajem nie jest Szwajcaria.",
        "question": "List the names of mountaineer whose country is not Switzerland.",
        "question_pl": "Wymień nazwiska alpinistów, których krajem nie jest Szwajcaria.",
        "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
        "query_pl": "SELECT Name FROM climber WHERE Country != \"Szwajcaria\""
    },
    {
        "db_id": "climbing",
        "question_original": "What are the names of climbers who are not from the country of Switzerland?",
        "question_original_pl": "Jak nazywają się wspinacze, którzy nie pochodzą ze Szwajcarii?",
        "question": "What are the names of mountaineer who are not from the country of Switzerland?",
        "question_pl": "Jakie są nazwiska alpinistów, którzy nie pochodzą z kraju Szwajcaria?",
        "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
        "query_pl": "SELECT Name FROM climber WHERE Country != \"Szwajcaria\""
    },
    {
        "db_id": "climbing",
        "question_original": "What is the maximum point for climbers whose country is United Kingdom?",
        "question_original_pl": "Jaki jest maksymalny punkt dla wspinaczy, których krajem jest Wielka Brytania?",
        "question": "What is the maximum point for mountaineers whose country is United Kingdom?",
        "question_pl": "Jaka jest maksymalna liczba punktów dla alpinistów, których krajem jest Wielka Brytania?",
        "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
        "query_pl": "SELECT max(Points) FROM climber WHERE Country  =  \"Wielka Brytania\""
    },
    {
        "db_id": "climbing",
        "question_original": "Return the maximum number of points for climbers from the United Kingdom.",
        "question_original_pl": "Zwróć maksymalną liczbę punktów dla wspinaczy z Wielkiej Brytanii.",
        "question": "Return the maximum number of points for mountaineers from the United Kingdom.",
        "question_pl": "Zwróć maksymalną liczbę punktów dla alpinistów z Wielkiej Brytanii.",
        "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
        "query_pl": "SELECT max(Points) FROM climber WHERE Country  =  \"Wielka Brytania\""
    },
    {
        "db_id": "climbing",
        "question_original": "How many distinct countries are the climbers from?",
        "question_original_pl": "Z ilu różnych krajów pochodzą wspinacze?",
        "question": "How many different nations are the mountaineers from?",
        "question_pl": "Z ilu różnych narodów pochodzą alpiniści?",
        "query": "SELECT COUNT(DISTINCT Country) FROM climber",
        "query_pl": "SELECT COUNT(DISTINCT Country) FROM climber"
    },
    {
        "db_id": "climbing",
        "question_original": "Count the number of different countries that climbers are from.",
        "question_original_pl": "Policz liczbę różnych krajów, z których pochodzą wspinacze.",
        "question": "Count the number of different nations that mountaineers are from.",
        "question_pl": "Policz, z ilu różnych narodów pochodzą alpiniści.",
        "query": "SELECT COUNT(DISTINCT Country) FROM climber",
        "query_pl": "SELECT COUNT(DISTINCT Country) FROM climber"
    },
    {
        "db_id": "climbing",
        "question_original": "What are the countries of mountains with height bigger than 5000?",
        "question_original_pl": "W jakich krajach znajdują się góry o wysokości większej niż 5000?",
        "question": "What are the nations of mountains with height bigger than 5000?",
        "question_pl": "Jakie są narody gór o wysokości większej niż 5000?",
        "query": "SELECT Country FROM mountain WHERE Height  >  5000",
        "query_pl": "SELECT Country FROM mountain WHERE Height  >  5000"
    },
    {
        "db_id": "climbing",
        "question_original": "Return the countries of the mountains that have a height larger than 5000.",
        "question_original_pl": "Zwróć kraje, w których wysokość gór przekracza 5000.",
        "question": "Return the nations of the mountains that have a height larger than 5000.",
        "question_pl": "Zwróć narody gór, których wysokość przekracza 5000.",
        "query": "SELECT Country FROM mountain WHERE Height  >  5000",
        "query_pl": "SELECT Country FROM mountain WHERE Height  >  5000"
    },
    {
        "db_id": "climbing",
        "question_original": "List the distinct ranges of the mountains with the top 3 prominence.",
        "question_original_pl": "Wymień poszczególne pasma górskie z 3 najważniejszymi.",
        "question": "List the different ranges of the mountains with the top 3 prominence.",
        "question_pl": "Wymień różne pasma górskie wraz z trzema najważniejszymi.",
        "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
        "query_pl": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
    },
    {
        "db_id": "climbing",
        "question_original": "Show names of climbers and the names of mountains they climb.",
        "question_original_pl": "Pokaż nazwiska wspinaczy i nazwy gór, na które się wspinają.",
        "question": "Show names of mountaineer and the names of mountains they climb.",
        "question_pl": "Pokaż nazwiska alpinistów i nazwy gór, na które się wspinają.",
        "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID",
        "query_pl": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
    },
    {
        "db_id": "climbing",
        "question_original": "What are the names of climbers and the corresponding names of mountains that they climb?",
        "question_original_pl": "Jakie są imiona wspinaczy i odpowiadające im nazwy gór, na które się wspinają?",
        "question": "What are the names of mountaineer and the corresponding names of mountains that they climb?",
        "question_pl": "Jakie są imiona alpinistów i odpowiadające im nazwy gór, na które się wspinają?",
        "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID",
        "query_pl": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
    },
    {
        "db_id": "climbing",
        "question_original": "Show the names of climbers and the heights of mountains they climb.",
        "question_original_pl": "Pokaż nazwiska wspinaczy i wysokości gór, na które się wspinają.",
        "question": "Show the names of mountaineer and the heights of mountains they climb.",
        "question_pl": "Pokaż nazwiska alpinistów i wysokości gór, na które się wspinają.",
        "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID",
        "query_pl": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
    },
    {
        "db_id": "climbing",
        "question_original": "What are the names of climbers and the corresponding heights of the mountains that they climb?",
        "question_original_pl": "Jakie są imiona wspinaczy i odpowiadające im wysokości gór, na które się wspinają?",
        "question": "What are the names of mountaineer and the corresponding heights of the mountains that they climb?",
        "question_pl": "Jakie są imiona alpinistów i odpowiadające im wysokości gór, na które się wspinają?",
        "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID",
        "query_pl": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
    },
    {
        "db_id": "climbing",
        "question_original": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
        "question_original_pl": "Pokaż odrębne nazwy gór zdobytych przez wspinaczy z kraju \"Niemcy Zachodnie\".",
        "question": "Show the different names of mountains climbed by mountaineers from country \"West Germany\".",
        "question_pl": "Pokaż różne nazwy gór zdobytych przez alpinistów z kraju \"Niemcy Zachodnie\".",
        "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"Niemcy Zachodnie\""
    },
    {
        "db_id": "climbing",
        "question_original": "What are the different names of mountains ascended by climbers from the country of West Germany?",
        "question_original_pl": "Jakie są różne nazwy gór zdobytych przez wspinaczy z Niemiec Zachodnich?",
        "question": "What are the different names of mountains ascended by mountaineers from the country of West Germany?",
        "question_pl": "Jakie są różne nazwy gór zdobytych przez alpinistów z Niemiec Zachodnich?",
        "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"Niemcy Zachodnie\""
    },
    {
        "db_id": "climbing",
        "question_original": "Show the times used by climbers to climb mountains in Country Uganda.",
        "question_original_pl": "Pokaż czasy używane przez wspinaczy do wspinania się na góry w kraju Uganda.",
        "question": "Show the times used by mountaineers to climb mountains in Country Uganda.",
        "question_pl": "Pokaż czasy używane przez alpinistów do wspinania się na góry w kraju Uganda.",
        "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"",
        "query_pl": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""
    },
    {
        "db_id": "climbing",
        "question_original": "What are the times used by climbers who climbed mountains in the country of Uganda?",
        "question_original_pl": "Jakich czasów używają wspinacze, którzy wspinają się na góry w kraju Uganda?",
        "question": "What are the times used by mountaineers who climbed mountains in the country of Uganda?",
        "question_pl": "Jakich czasów używają alpiniści wspinający się na góry w kraju Uganda?",
        "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"",
        "query_pl": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""
    },
    {
        "db_id": "climbing",
        "question_original": "Please show the countries and the number of climbers from each country.",
        "question_original_pl": "Podaj kraje i liczbę wspinaczy z każdego kraju.",
        "question": "Please show the nations and the number of mountaineers from each nation.",
        "question_pl": "Podaj kraje i liczbę alpinistów z każdego kraju.",
        "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country",
        "query_pl": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
    },
    {
        "db_id": "climbing",
        "question_original": "How many climbers are from each country?",
        "question_original_pl": "Ilu wspinaczy pochodzi z każdego kraju?",
        "question": "What are the number of mountaineers from each nation?",
        "question_pl": "Jaka jest liczba alpinistów z każdego kraju?",
        "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country",
        "query_pl": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
    },
    {
        "db_id": "climbing",
        "question_original": "List the countries that have more than one mountain.",
        "question_original_pl": "Wymień kraje, które mają więcej niż jedną górę.",
        "question": "List the nations that have more than one mountain.",
        "question_pl": "Wymień narody, które mają więcej niż jedną górę.",
        "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "climbing",
        "question_original": "Which countries have more than one mountain?",
        "question_original_pl": "Które kraje mają więcej niż jedną górę?",
        "question": "Which nations have more than one mountain?",
        "question_pl": "Które narody mają więcej niż jedną górę?",
        "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "climbing",
        "question_original": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.",
        "question_original_pl": "Wskaż kraje, w których znajdują się góry o wysokości powyżej 5600 pięter i góry o wysokości poniżej 5200 pięter.",
        "question": "Show the nations that have mountains with height more than 5600 stories and mountains with height less than 5200.",
        "question_pl": "Wskaż narody, które mają góry o wysokości ponad 5600 pięter i góry o wysokości mniejszej niż 5200 pięter.",
        "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200",
        "query_pl": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"
    },
    {
        "db_id": "body_builder",
        "question_original": "List the total scores of body builders in ascending order.",
        "question_original_pl": "Wymień łączne wyniki kulturystów w kolejności rosnącej.",
        "question": "List the gross scores of bodybuilders in ascending order.",
        "question_pl": "Wymień wyniki brutto kulturystów w kolejności rosnącej.",
        "query": "SELECT Total FROM body_builder ORDER BY Total ASC",
        "query_pl": "SELECT Total FROM body_builder ORDER BY Total ASC"
    },
    {
        "db_id": "body_builder",
        "question_original": "What are the birthdays of people in ascending order of height?",
        "question_original_pl": "Jakie są daty urodzin ludzi w kolejności rosnącej według wzrostu?",
        "question": "What are the date of birth of people in ascending order of height?",
        "question_pl": "Jakie są daty urodzenia osób w kolejności rosnącej według wzrostu?",
        "query": "SELECT Birth_Date FROM People ORDER BY Height ASC",
        "query_pl": "SELECT Birth_Date FROM People ORDER BY Height ASC"
    },
    {
        "db_id": "body_builder",
        "question_original": "What are the names of body builders?",
        "question_original_pl": "Jakie są imiona kulturystów?",
        "question": "What are the names of bodybuilders?",
        "question_pl": "Jak nazywają się kulturyści?",
        "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_pl": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
    },
    {
        "db_id": "body_builder",
        "question_original": "What is the average total score of body builders with height bigger than 200?",
        "question_original_pl": "Jaki jest średni łączny wynik kulturystów o wzroście większym niż 200?",
        "question": "What is the average gross score of bodybuilders with height bigger than 200?",
        "question_pl": "Jaki jest średni wynik brutto kulturystów o wzroście większym niż 200?",
        "query": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200",
        "query_pl": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200"
    },
    {
        "db_id": "body_builder",
        "question_original": "Show all information about each body builder.",
        "question_original_pl": "Pokaż wszystkie informacje na temat każdego kulturysty.",
        "question": "Show the details about each body builder.",
        "question_pl": "Pokaż szczegóły dotyczące każdego kulturysty.",
        "query": "SELECT * FROM body_builder",
        "query_pl": "SELECT * FROM body_builder"
    },
    {
        "db_id": "body_builder",
        "question_original": "How many persons are not body builders?",
        "question_original_pl": "Ile osób nie jest kulturystami?",
        "question": "what are the number of people are not body builders?",
        "question_pl": "Jaka jest liczba osób, które nie są kulturystami?",
        "query": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)",
        "query_pl": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)"
    },
    {
        "db_id": "body_builder",
        "question_original": "What are the total scores of the body builders whose birthday contains the string \"January\" ?",
        "question_original_pl": "Jakie są łączne wyniki kulturystów, których data urodzenia zawiera ciąg znaków \"styczeń\"?",
        "question": "What are the gross scores of the bodybuilders whose birthday contains the string \"January\" ?",
        "question_pl": "Jakie są wyniki brutto kulturystów, których data urodzenia zawiera ciąg znaków \"styczeń\"?",
        "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";",
        "query_pl": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%styczeń%\";"
    },
    {
        "db_id": "election_representative",
        "question_original": "List the dates and vote percents of elections.",
        "question_original_pl": "Wymień daty i procenty głosów w wyborach.",
        "question": "List the days and vote percents of elections.",
        "question_pl": "Wymień dni i procent głosów w wyborach.",
        "query": "SELECT Date ,  Vote_Percent FROM election",
        "query_pl": "SELECT Date ,  Vote_Percent FROM election"
    },
    {
        "db_id": "election_representative",
        "question_original": "What are the life spans of representatives from New York state or Indiana state?",
        "question_original_pl": "Jaka jest długość życia przedstawicieli stanu Nowy Jork lub Indiana?",
        "question": "What are the lifetime of representatives from New York state or Indiana state?",
        "question_pl": "Jaki jest czas życia przedstawicieli stanu Nowy Jork lub Indiana?",
        "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"",
        "query_pl": "SELECT Lifespan FROM representative WHERE State  =  \"Nowy Jork\" OR State  =  \"Indiana\""
    },
    {
        "db_id": "election_representative",
        "question_original": "What are the names of representatives and the dates of elections they participated in.",
        "question_original_pl": "Podaj nazwiska przedstawicieli i daty wyborów, w których brali udział.",
        "question": "What are the names of representatives and the days of elections they participated in.",
        "question_pl": "Podaj nazwiska przedstawicieli i dni wyborów, w których brali udział.",
        "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID",
        "query_pl": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID"
    },
    {
        "db_id": "election_representative",
        "question_original": "What are the lifespans of representatives in descending order of vote percent?",
        "question_original_pl": "Jaka jest długość życia przedstawicieli w porządku malejącym według procentu głosów?",
        "question": "What are the lifetime of representatives in descending order of vote percent?",
        "question_pl": "Jaki jest czas życia przedstawicieli w kolejności malejącego procentu głosów?",
        "query": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC",
        "query_pl": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the start dates and end dates of all the apartment bookings.",
        "question_original_pl": "Pokaż daty rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "question": "Show the begin days and end days of all the apartment bookings.",
        "question_pl": "Pokaż dni rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings",
        "query_pl": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the start date and end date of each apartment booking?",
        "question_original_pl": "Jaka jest data rozpoczęcia i zakończenia każdej rezerwacji apartamentu?",
        "question": "What are the begin day and end day of each apartment booking?",
        "question_pl": "Jaki jest dzień rozpoczęcia i zakończenia każdej rezerwacji apartamentu?",
        "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings",
        "query_pl": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show all distinct building descriptions.",
        "question_original_pl": "Pokaż wszystkie odrębne opisy budynków.",
        "question": "Show all different building descriptions.",
        "question_pl": "Pokaż wszystkie różne opisy budynków.",
        "query": "SELECT DISTINCT building_description FROM Apartment_Buildings",
        "query_pl": "SELECT DISTINCT building_description FROM Apartment_Buildings"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Give me a list of all the distinct building descriptions.",
        "question_original_pl": "Podaj mi listę wszystkich odrębnych opisów budynków.",
        "question": "Give me a list of all the different building descriptions.",
        "question_pl": "Podaj mi listę różnych opisów budynków.",
        "query": "SELECT DISTINCT building_description FROM Apartment_Buildings",
        "query_pl": "SELECT DISTINCT building_description FROM Apartment_Buildings"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the short names of the buildings managed by \"Emma\".",
        "question_original_pl": "Pokaż krótkie nazwy budynków zarządzanych przez \"Emma\".",
        "question": "Show the names for short of the buildings managed by \"Emma\".",
        "question_pl": "Pokaż nazwy krótkich budynków zarządzanych przez \"Emmę\".",
        "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"",
        "query_pl": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the address and phone number of the buildings managed by \"Brenden\"?",
        "question_original_pl": "Jaki jest adres i numer telefonu budynków zarządzanych przez \"Brenden\"?",
        "question": "What are the location and phone number of the buildings managed by \"Brenden\"?",
        "question_pl": "Jaka jest lokalizacja i numer telefonu budynków zarządzanych przez \"Brenden\"?",
        "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"",
        "query_pl": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the building full names that contain the word \"court\"?",
        "question_original_pl": "Jakie pełne nazwy budynków zawierają słowo \"sąd\"?",
        "question": "What are the building first and last names that contain the word \"court\"?",
        "question_pl": "Jakie imiona i nazwiska budynków zawierają słowo \"sąd\"?",
        "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
        "query_pl": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%sąd%\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Find all the building full names containing the word \"court\".",
        "question_original_pl": "Znajdź wszystkie pełne nazwy budynków zawierające słowo \"sąd\".",
        "question": "Find all the building first and last names containing the word \"court\".",
        "question_pl": "Znajdź wszystkie imiona i nazwiska budowniczych zawierające słowo \"sąd\".",
        "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
        "query_pl": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%sąd%\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Return the first names and last names of all guests",
        "question_original_pl": "Zwróć imiona i nazwiska wszystkich gości.",
        "question": "Return the full names of all guests",
        "question_pl": "Zwróć pełne imiona i nazwiska wszystkich gości",
        "query": "SELECT guest_first_name ,  guest_last_name FROM Guests",
        "query_pl": "SELECT guest_first_name ,  guest_last_name FROM Guests"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Return the date of birth for all the guests with gender code \"Male\".",
        "question_original_pl": "Zwróć datę urodzenia wszystkich gości z kodem płci \"Mężczyzna\".",
        "question": "Return the birthday for all the guests with gender code \"Male\".",
        "question_pl": "Zwróć datę urodzin dla wszystkich gości z kodem płci \"Mężczyzna\".",
        "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
        "query_pl": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Mężczyzna\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are dates of birth of all the guests whose gender is \"Male\"?",
        "question_original_pl": "Jakie są daty urodzenia wszystkich gości, których płeć to \"Mężczyzna\"?",
        "question": "What are day of birth of all the guests whose gender is \"Male\"?",
        "question_pl": "Jaki jest dzień urodzenia wszystkich gości, których płeć to \"Mężczyzna\"?",
        "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
        "query_pl": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Mężczyzna\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.",
        "question_original_pl": "Pokaż numery apartamentów, daty rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "question": "Show the apartment numbers, begin days, and end days of all the apartment bookings.",
        "question_pl": "Pokaż numery apartamentów, dni rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id",
        "query_pl": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the apartment number, start date, and end date of each apartment booking?",
        "question_original_pl": "Jaki jest numer apartamentu, data rozpoczęcia i data zakończenia każdej rezerwacji apartamentu?",
        "question": "What are the apartment number, begin day, and end day of each apartment booking?",
        "question_pl": "Jaki jest numer apartamentu, dzień rozpoczęcia i dzień zakończenia każdej rezerwacji apartamentu?",
        "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id",
        "query_pl": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the booking start and end dates of the apartments with type code \"Duplex\"?",
        "question_original_pl": "Jakie są daty rozpoczęcia i zakończenia rezerwacji apartamentów z kodem typu \"Duplex\"?",
        "question": "What are the booking begin and end days of the apartments with type code \"Duplex\"?",
        "question_pl": "Jakie są dni rozpoczęcia i zakończenia rezerwacji apartamentów z kodem typu \"Duplex\"?",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Dupleks\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Return the booking start date and end date for the apartments that have type code \"Duplex\".",
        "question_original_pl": "Zwróć datę rozpoczęcia i zakończenia rezerwacji dla apartamentów o kodzie typu \"Duplex\".",
        "question": "Return the booking begin day and end day for the apartments that have type code \"Duplex\".",
        "question_pl": "Zwróć dzień rozpoczęcia i dzień zakończenia rezerwacji dla apartamentów z kodem typu \"Duplex\".",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Dupleks\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the booking start and end dates of the apartments with more than 2 bedrooms?",
        "question_original_pl": "Jakie są daty rozpoczęcia i zakończenia rezerwacji apartamentów z więcej niż 2 sypialniami?",
        "question": "What are the booking begin and end days of the apartments with more than 2 bedrooms?",
        "question_pl": "Jakie są dni rozpoczęcia i zakończenia rezerwacji apartamentów z więcej niż 2 sypialniami?",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Find the booking start date and end date for the apartments that have more than two bedrooms.",
        "question_original_pl": "Znajdź datę rozpoczęcia i zakończenia rezerwacji dla apartamentów z więcej niż dwiema sypialniami.",
        "question": "Find the booking begin day and end day for the apartments that have more than two bedrooms.",
        "question_pl": "Znajdź dzień rozpoczęcia i dzień zakończenia rezerwacji dla apartamentów z więcej niż dwiema sypialniami.",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
        "question_original_pl": "Pokaż poszczególne numery apartamentów, które mają rezerwacje z kodem statusu \"Potwierdzone\".",
        "question": "Show the different apartment numbers of the apartments that have bookings with status code \"Confirmed\".",
        "question_pl": "Pokaż różne numery apartamentów, które mają rezerwacje z kodem statusu \"Potwierdzone\".",
        "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"",
        "query_pl": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Potwierdzono\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the average room count of the apartments that have booking status code \"Provisional\".",
        "question_original_pl": "Pokaż średnią liczbę pokoi w apartamentach z kodem statusu rezerwacji \"Tymczasowa\".",
        "question": "Show the average room amount of the apartments that have booking status code \"Provisional\".",
        "question_pl": "Pokaż średnią kwotę za pokój w apartamentach z kodem statusu rezerwacji \"Tymczasowa\".",
        "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"",
        "query_pl": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Tymczasowe\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What is the average room count of the apartments whose booking status code is \"Provisional\"?",
        "question_original_pl": "Jaka jest średnia liczba pokoi w apartamentach, których kod statusu rezerwacji to \"Tymczasowy\"?",
        "question": "What is the average room amount of the apartments whose booking status code is \"Provisional\"?",
        "question_pl": "Jaka jest średnia kwota za pokój w apartamentach, których kod statusu rezerwacji to \"Tymczasowy\"?",
        "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"",
        "query_pl": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Tymczasowe\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the guest first names, start dates, and end dates of all the apartment bookings.",
        "question_original_pl": "Pokaż imiona gości, daty rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "question": "Show the guest forename, begin days, and end days of all the apartment bookings.",
        "question_pl": "Pokaż imię gościa, dni rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów.",
        "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id",
        "query_pl": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".",
        "question_original_pl": "Pokaż daty rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów dokonanych przez gości z kodem płci \"Kobieta\".",
        "question": "Show the begin days and end days of all the apartment bookings made by guests with gender code \"Female\".",
        "question_pl": "Wyświetl dni rozpoczęcia i zakończenia wszystkich rezerwacji apartamentów dokonanych przez gości z kodem płci \"Kobieta\".",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Kobieta\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?",
        "question_original_pl": "Jaka jest data rozpoczęcia i zakończenia rezerwacji apartamentów dokonywanych przez kobiety (kod płci \"Kobieta\")?",
        "question": "What are the begin day and end day of the apartment bookings made by female guests (gender code \"Female\")?",
        "question_pl": "Jaki jest dzień rozpoczęcia i dzień zakończenia rezerwacji apartamentu dokonanych przez kobiety (kod płci \"Kobieta\")?",
        "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"",
        "query_pl": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Kobieta\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.",
        "question_original_pl": "Którzy goście mają rezerwacje apartamentów z kodem statusu \"Potwierdzone\"? Zwróć ich imiona i nazwiska.",
        "question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their forename and surname.",
        "question_pl": "Którzy goście mają rezerwacje apartamentów z kodem statusu \"Potwierdzone\"? Zwróć ich imię i nazwisko.",
        "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"",
        "query_pl": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Potwierdzono\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Find the total number of rooms in the apartments that have facility code \"Gym\".",
        "question_original_pl": "Znajdź całkowitą liczbę pokoi w apartamentach z kodem udogodnienia \"Siłownia\".",
        "question": "Find the gross number of rooms in the apartments that have facility code \"Gym\".",
        "question_pl": "Znajdź liczbę brutto pokoi w apartamentach z kodem udogodnienia \"Siłownia\".",
        "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"",
        "query_pl": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Siłownia\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".",
        "question_original_pl": "Pokaż całkowitą liczbę pokoi w apartamentach w budynku o krótkiej nazwie \"Columbus Square\".",
        "question": "Show all the number of rooms of the apartments in the building with short name \"Columbus Square\".",
        "question_pl": "Pokaż wszystkie liczby pokoi w apartamentach w budynku o krótkiej nazwie \"Columbus Square\".",
        "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"",
        "query_pl": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.",
        "question_original_pl": "Pokaż adresy budynków, w których znajdują się apartamenty z więcej niż 2 łazienkami.",
        "question": "Show the locations of the buildings that have apartments with more than 2 bathrooms.",
        "question_pl": "Pokaż lokalizacje budynków, w których znajdują się apartamenty z więcej niż 2 łazienkami.",
        "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2",
        "query_pl": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.",
        "question_original_pl": "W których budynkach znajdują się apartamenty z więcej niż dwiema łazienkami? Podaj adresy tych budynków.",
        "question": "Which buildings have apartments that have more than two washrooms? Give me the locations of the buildings.",
        "question_pl": "W których budynkach znajdują się mieszkania z więcej niż dwiema łazienkami? Podaj lokalizacje tych budynków.",
        "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2",
        "query_pl": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".",
        "question_original_pl": "Pokaż kody typów mieszkań i numery mieszkań w budynkach zarządzanych przez \"Kylea\".",
        "question": "Show the apartment category codes and apartment numbers in the buildings managed by \"Kyle\".",
        "question_pl": "Pokaż kody kategorii apartamentów i numery apartamentów w budynkach zarządzanych przez \"Kyle\".",
        "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
        "query_pl": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?",
        "question_original_pl": "Jakie kody typów mieszkań i numery mieszkań mają budynki zarządzane przez \"Kylea\"?",
        "question": "What apartment category codes and apartment numbers do the buildings managed by \"Kyle\" have?",
        "question_pl": "Jakie kody kategorii apartamentów i numery apartamentów mają budynki zarządzane przez \"Kylea\"?",
        "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
        "query_pl": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.",
        "question_original_pl": "Pokaż kody typów apartamentów i odpowiadającą im liczbę apartamentów posortowaną według liczby apartamentów w porządku rosnącym.",
        "question": "Show the apartment category codes and the corresponding number of apartments sorted by the number of apartments in ascending order.",
        "question_pl": "Pokaż kody kategorii apartamentów i odpowiadającą im liczbę apartamentów posortowaną według liczby apartamentów w porządku rosnącym.",
        "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.",
        "question_original_pl": "Zwróć każdy kod typu apartamentu wraz z liczbą apartamentów posiadających ten typ apartamentu, w porządku rosnącym według liczby apartamentów.",
        "question": "Return each apartment category code with the number of apartments having that apartment category, in ascending order of the number of apartments.",
        "question_pl": "Zwróć każdy kod kategorii apartamentu wraz z liczbą apartamentów należących do tej kategorii, w porządku rosnącym według liczby apartamentów.",
        "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.",
        "question_original_pl": "Pokaż 3 najlepsze kody typów apartamentów posortowane według średniej liczby pokoi w porządku malejącym.",
        "question": "Show the top 3 apartment category codes sorted by the average number of rooms in descending order.",
        "question_pl": "Pokaż 3 najlepsze kody kategorii apartamentów posortowane według średniej liczby pokoi w porządku malejącym.",
        "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3",
        "query_pl": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "What are the top three apartment types in terms of the average room count? Give me the",
        "question_original_pl": "Jakie są trzy najlepsze typy mieszkań pod względem średniej liczby pokoi? Podaj mi",
        "question": "What are the top three apartment categories in terms of the average room count? Give me the",
        "question_pl": "Jakie są trzy najlepsze kategorie apartamentów pod względem średniej liczby pokoi? Podaj",
        "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3",
        "query_pl": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.",
        "question_original_pl": "Pokaż kod typu apartamentu, który ma największą liczbę pokoi, wraz z liczbą łazienek i liczbą sypialni.",
        "question": "Show the apartment category code that has the largest number of total rooms, together with the number of bathrooms and number of bedchambers.",
        "question_pl": "Pokaż kod kategorii apartamentu, który ma największą liczbę pokoi, wraz z liczbą łazienek i liczbą sypialni.",
        "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.",
        "question_original_pl": "Który typ apartamentu ma największą liczbę pokoi? Zwróć kod typu apartamentu, jego liczbę łazienek i liczbę sypialni.",
        "question": "Which apartment category has the largest number of total rooms? Return the apartment category code, its number of washrooms and number of bedrooms.",
        "question_pl": "Która kategoria apartamentów ma największą liczbę pokoi? Zwróć kod kategorii apartamentu, liczbę łazienek i liczbę sypialni.",
        "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the most common apartment type code.",
        "question_original_pl": "Pokaż najpopularniejszy kod typu mieszkania.",
        "question": "Show the most common apartment category code.",
        "question_pl": "Pokaż najpopularniejszy kod kategorii apartamentu.",
        "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Which apartment type code appears the most often?",
        "question_original_pl": "Który kod typu mieszkania pojawia się najczęściej?",
        "question": "Which apartment category code appears the most often?",
        "question_pl": "Który kod kategorii apartamentów pojawia się najczęściej?",
        "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show the most common apartment type code among apartments with more than 1 bathroom.",
        "question_original_pl": "Pokaż najpopularniejszy kod typu apartamentu wśród apartamentów z więcej niż 1 łazienką.",
        "question": "Show the most common apartment category code among apartments with more than 1 bathroom.",
        "question_pl": "Pokaż najpopularniejszy kod kategorii apartamentów z więcej niż 1 łazienką.",
        "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Which apartment type code is the most common among apartments with more than one bathroom?",
        "question_original_pl": "Który kod typu mieszkania jest najbardziej powszechny wśród mieszkań z więcej niż jedną łazienką?",
        "question": "Which apartment category code is the most common among apartments with more than one bathroom?",
        "question_pl": "Który kod kategorii mieszkań jest najbardziej powszechny wśród mieszkań z więcej niż jedną łazienką?",
        "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Show each apartment type code, and the maximum and minimum number of rooms for each type.",
        "question_original_pl": "Pokaż kod każdego typu apartamentu oraz maksymalną i minimalną liczbę pokoi dla każdego typu.",
        "question": "Show each apartment category code, and the maximum and minimum number of rooms for each category.",
        "question_pl": "Pokaż kod każdej kategorii apartamentów oraz maksymalną i minimalną liczbę pokoi dla każdej kategorii.",
        "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code",
        "query_pl": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "Return each apartment type code along with the maximum and minimum number of rooms among each type.",
        "question_original_pl": "Zwróć kod każdego typu apartamentu wraz z maksymalną i minimalną liczbą pokoi dla każdego typu.",
        "question": "Return each apartment category code along with the maximum and minimum number of rooms among each category.",
        "question_pl": "Zwróć kod każdej kategorii apartamentów wraz z maksymalną i minimalną liczbą pokoi w każdej kategorii.",
        "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code",
        "query_pl": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
    },
    {
        "db_id": "apartment_rentals",
        "question_original": "How many apartments do not have any facility?",
        "question_original_pl": "Ile mieszkań nie ma żadnych udogodnień?",
        "question": "show the number of apartments do not have any facility?",
        "question_pl": "Pokaż liczbę mieszkań, które nie mają żadnych udogodnień?",
        "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)",
        "query_pl": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"
    },
    {
        "db_id": "game_injury",
        "question_original": "How many games are held after season 2007?",
        "question_original_pl": "Ile meczów odbędzie się po sezonie 2007?",
        "question": "What are the number of the games are held after season 2007?",
        "question_pl": "Jaka jest liczba meczów rozgrywanych po sezonie 2007?",
        "query": "SELECT count(*) FROM game WHERE season  >  2007",
        "query_pl": "SELECT count(*) FROM game WHERE season  >  2007"
    },
    {
        "db_id": "game_injury",
        "question_original": "List the dates of games by the home team name in descending order.",
        "question_original_pl": "Wymień daty meczów według nazwy drużyny gospodarzy w kolejności malejącej.",
        "question": "List the day of games by the home team name in descending order.",
        "question_pl": "Wymień dni meczów według nazwy drużyny gospodarzy w kolejności malejącej.",
        "query": "SELECT Date FROM game ORDER BY home_team DESC",
        "query_pl": "SELECT Date FROM game ORDER BY home_team DESC"
    },
    {
        "db_id": "game_injury",
        "question_original": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
        "question_original_pl": "Jaka jest średnia frekwencja na stadionach o procentowej pojemności większej niż 100%?",
        "question": "What is the average number of attendees of stadiums with capacity percentage higher than 100%?",
        "question_pl": "Jaka jest średnia liczba widzów na stadionach o procentowej pojemności większej niż 100%?",
        "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100",
        "query_pl": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100"
    },
    {
        "db_id": "game_injury",
        "question_original": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?",
        "question_original_pl": "Jakie jest nazwisko zawodnika, liczba meczów i źródło informacji o zawodnikach, którzy nie doznali kontuzji \"Problem z kolanem\"?",
        "question": "What are the participant name, number of matches, and information source for participants who do not suffer from injury of 'Knee problem'?",
        "question_pl": "Jakie jest imię i nazwisko uczestnika, liczba meczów i źródło informacji dla uczestników, którzy nie doznali urazu \"Problem z kolanem\"?",
        "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'",
        "query_pl": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Problem z kolanem'"
    },
    {
        "db_id": "game_injury",
        "question_original": "What are the ids, scores, and dates of the games which caused at least two injury accidents?",
        "question_original_pl": "Jakie są identyfikatory, wyniki i daty meczów, które spowodowały co najmniej dwa wypadki?",
        "question": "What are the ids, scores, and day of the games which caused at least two injury accidents?",
        "question_pl": "Jakie są identyfikatory, wyniki i dni meczów, które spowodowały co najmniej dwa wypadki?",
        "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
    },
    {
        "db_id": "game_injury",
        "question_original": "How many distinct kinds of injuries happened after season 2010?",
        "question_original_pl": "Ile różnych rodzajów kontuzji miało miejsce po sezonie 2010?",
        "question": "How many different kinds of injuries happened after season 2010?",
        "question_pl": "Ile różnego rodzaju kontuzji miało miejsce po sezonie 2010?",
        "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010",
        "query_pl": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"
    },
    {
        "db_id": "game_injury",
        "question_original": "Show the name, average attendance, total attendance for stadiums where no accidents happened.",
        "question_original_pl": "Pokaż nazwę, średnią frekwencję, całkowitą frekwencję na stadionach, na których nie doszło do żadnego wypadku.",
        "question": "Show the name, average number of attendees, total number of attendees for stadiums where no accidents happened.",
        "question_pl": "Pokaż nazwę, średnią liczbę uczestników i całkowitą liczbę uczestników na stadionach, na których nie doszło do wypadków.",
        "query": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id",
        "query_pl": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id"
    },
    {
        "db_id": "game_injury",
        "question_original": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.",
        "question_original_pl": "Dla każdego wypadku z kontuzją znajdź datę meczu i nazwisko kontuzjowanego zawodnika, a następnie posortuj wyniki malejąco według sezonu rozgrywek.",
        "question": "For each injury accident, find the day of the game and the name of the injured gamer in the game, and sort the results in descending order of game season.",
        "question_pl": "Dla każdego wypadku z kontuzją znajdź dzień meczu i nazwisko kontuzjowanego gracza, a następnie posortuj wyniki malejąco według sezonu rozgrywek.",
        "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC",
        "query_pl": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC"
    },
    {
        "db_id": "soccer_1",
        "question_original": "What is the average weight of all players?",
        "question_original_pl": "Jaka jest średnia waga wszystkich zawodników?",
        "question": "What is the average weight of all participants?",
        "question_pl": "Jaka jest średnia waga wszystkich uczestników?",
        "query": "SELECT avg(weight) FROM Player",
        "query_pl": "SELECT avg(weight) FROM Player"
    },
    {
        "db_id": "soccer_1",
        "question_original": "What is the maximum and minimum height of all players?",
        "question_original_pl": "Jaki jest maksymalny i minimalny wzrost wszystkich graczy?",
        "question": "What is the maximum and minimum stature of all participants?",
        "question_pl": "Jaki jest maksymalny i minimalny wzrost wszystkich uczestników?",
        "query": "SELECT max(weight) ,  min(weight) FROM Player",
        "query_pl": "SELECT max(weight) ,  min(weight) FROM Player"
    },
    {
        "db_id": "soccer_1",
        "question_original": "List all player names who have an overall rating higher than the average.",
        "question_original_pl": "Wymień wszystkich graczy, których ogólna ocena jest wyższa niż średnia.",
        "question": "List all participant names who have an overall rating higher than the average.",
        "question_pl": "Wymień wszystkich uczestników, których ogólna ocena jest wyższa niż średnia.",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
    },
    {
        "db_id": "soccer_1",
        "question_original": "What are the names of players who have the best dribbling?",
        "question_original_pl": "Jak nazywają się zawodnicy, którzy mają najlepszy drybling?",
        "question": "What are the names of participants who have the best dribbling?",
        "question_pl": "Jak nazywają się uczestnicy, którzy mają najlepszy drybling?",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)"
    },
    {
        "db_id": "soccer_1",
        "question_original": "List the names of all players who have a crossing score higher than 90 and prefer their right foot.",
        "question_original_pl": "Wymień nazwiska wszystkich graczy, którzy mają wynik przejścia wyższy niż 90 i preferują prawą nogę.",
        "question": "List the names of all participants who have a crossing score higher than 90 and prefer their right foot.",
        "question_pl": "Wymień nazwiska wszystkich uczestników, którzy uzyskali wynik powyżej 90 i preferują prawą stopę.",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\"",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"prawo\""
    },
    {
        "db_id": "soccer_1",
        "question_original": "List the names of all left-footed players who have overall rating between 85 and 90.",
        "question_original_pl": "Wymień nazwiska wszystkich lewonożnych graczy, którzy mają ogólną ocenę między 85 a 90.",
        "question": "List the names of all left-footed participants who have overall rating between 85 and 90.",
        "question_pl": "Wymień nazwiska wszystkich lewonożnych zawodników, którzy mają ogólną ocenę między 85 a 90.",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"lewy\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90"
    },
    {
        "db_id": "soccer_1",
        "question_original": "What is the average rating for right-footed players and left-footed players?",
        "question_original_pl": "Jaka jest średnia ocena zawodników prawonożnych i lewonożnych?",
        "question": "What is the average score for right-footed players and left-footed players?",
        "question_pl": "Jaki jest średni wynik dla graczy prawonożnych i lewonożnych?",
        "query": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot",
        "query_pl": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot"
    },
    {
        "db_id": "soccer_1",
        "question_original": "Of all players with an overall rating greater than 80, how many are right-footed and left-footed?",
        "question_original_pl": "Spośród wszystkich zawodników z ogólną oceną wyższą niż 80, ilu jest prawonożnych i lewonożnych?",
        "question": "Of all players with an overall score greater than 80, how many are right-footed and left-footed?",
        "question_pl": "Spośród wszystkich zawodników z ogólną liczbą punktów większą niż 80, ilu jest prawonożnych i lewonożnych?",
        "query": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot",
        "query_pl": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot"
    },
    {
        "db_id": "soccer_1",
        "question_original": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.",
        "question_original_pl": "Wymień wszystkich graczy o wzroście co najmniej 180 cm i ogólnej ocenie wyższej niż 85.",
        "question": "List all of the participant ids with a height of at least 180cm and an overall rating higher than 85.",
        "question_pl": "Wymień wszystkich uczestników o wzroście co najmniej 180 cm i ogólnej ocenie wyższej niż 85.",
        "query": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85",
        "query_pl": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85"
    },
    {
        "db_id": "soccer_1",
        "question_original": "List all of the ids for left-footed players with a height between 180cm and 190cm.",
        "question_original_pl": "Wymień wszystkie identyfikatory zawodników lewonożnych o wzroście od 180 cm do 190 cm.",
        "question": "List all of the ids for left-footed participants with a height between 180cm and 190cm.",
        "question_pl": "Wymień wszystkie identyfikatory uczestników lewonożnych o wzroście od 180 cm do 190 cm.",
        "query": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\"",
        "query_pl": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"lewy\""
    },
    {
        "db_id": "soccer_1",
        "question_original": "Who are the top 3 players in terms of overall rating?",
        "question_original_pl": "Kim są trzej najlepsi gracze pod względem ogólnej oceny?",
        "question": "Who are the top 3 participants in terms of overall score?",
        "question_pl": "Kim są trzej najlepsi uczestnicy pod względem ogólnego wyniku?",
        "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3",
        "query_pl": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3"
    },
    {
        "db_id": "performance_attendance",
        "question_original": "What are the dates and locations of performances?",
        "question_original_pl": "Jakie są daty i miejsca występów?",
        "question": "What are the days and locations of performances?",
        "question_pl": "Jakie są dni i miejsca występów?",
        "query": "SELECT Date ,  LOCATION FROM performance",
        "query_pl": "SELECT Date ,  LOCATION FROM performance"
    },
    {
        "db_id": "performance_attendance",
        "question_original": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"",
        "question_original_pl": "Pokaż frekwencję podczas występów w lokalizacji \"TD Garden\" lub \"Bell Centre\".",
        "question": "Show the attendees of the performances at location \"TD Garden\" or \"Bell Centre\"",
        "question_pl": "Pokaż uczestników występów w lokalizacji \"TD Garden\" lub \"Bell Centre\".",
        "query": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\"",
        "query_pl": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\""
    },
    {
        "db_id": "performance_attendance",
        "question_original": "What is the date of the performance with the highest number of attendees?",
        "question_original_pl": "Jaka jest data występu z największą liczbą uczestników?",
        "question": "What is the day of the performance with the highest number of attendees?",
        "question_pl": "Który dzień występu ma największą liczbę uczestników?",
        "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
        "query_pl": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"
    },
    {
        "db_id": "performance_attendance",
        "question_original": "Show the dates of performances with attending members whose roles are \"Violin\".",
        "question_original_pl": "Pokaż daty występów z udziałem członków, których role to \"Skrzypce\".",
        "question": "Show the day of performances with attending members whose roles are \"Violin\".",
        "question_pl": "Pokaż dzień występów z udziałem członków, których role to \"Skrzypce\".",
        "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"",
        "query_pl": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Skrzypce\""
    },
    {
        "db_id": "performance_attendance",
        "question_original": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.",
        "question_original_pl": "Pokaż nazwiska członków i daty występów, w których uczestniczyli, w kolejności malejącej.",
        "question": "Show the names of members and the day of performances they attended in descending order of attendance of the performances.",
        "question_pl": "Pokaż nazwiska członków i dzień występów, w których uczestniczyli, w kolejności malejącej.",
        "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC",
        "query_pl": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the buildings which have rooms with capacity more than 50.",
        "question_original_pl": "Znajdź budynki, które mają pokoje o pojemności większej niż 50.",
        "question": "Find the buildings which have rooms with the number of seat more than 50.",
        "question_pl": "Znajdź budynki, które mają pokoje z liczbą miejsc większą niż 50.",
        "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50",
        "query_pl": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the distinct buildings with capacities of greater than 50?",
        "question_original_pl": "Jakie są odrębne budynki o pojemności większej niż 50?",
        "question": "What are the different buildings with the number of seats of greater than 50?",
        "question_pl": "Jakie są różne budynki z liczbą miejsc większą niż 50?",
        "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50",
        "query_pl": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
    },
    {
        "db_id": "college_2",
        "question_original": "How many classrooms are not in Lamberton?",
        "question_original_pl": "Ile klas nie znajduje się w Lamberton?",
        "question": "How many schoolrooms are not in Lamberton?",
        "question_pl": "Ile sal szkolnych nie ma w Lamberton?",
        "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'",
        "query_pl": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of classrooms in Lamberton.",
        "question_original_pl": "Policz liczbę sal lekcyjnych w Lamberton.",
        "question": "Count the number of schoolrooms in Lamberton.",
        "question_pl": "Policz liczbę sal szkolnych w Lamberton.",
        "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'",
        "query_pl": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
    },
    {
        "db_id": "college_2",
        "question_original": "How many students have advisors?",
        "question_original_pl": "Ilu studentów ma doradców?",
        "question": "How many students have advisers?",
        "question_pl": "Ilu uczniów ma doradców?",
        "query": "SELECT count(DISTINCT s_id) FROM advisor",
        "query_pl": "SELECT count(DISTINCT s_id) FROM advisor"
    },
    {
        "db_id": "college_2",
        "question_original": "How many departments offer courses?",
        "question_original_pl": "Ile wydziałów oferuje kursy?",
        "question": "How many departments offer curriculum?",
        "question_pl": "Ile wydziałów oferuje program nauczania?",
        "query": "SELECT count(DISTINCT dept_name) FROM course",
        "query_pl": "SELECT count(DISTINCT dept_name) FROM course"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of departments which offer courses.",
        "question_original_pl": "Policz liczbę wydziałów, które oferują kursy.",
        "question": "Count the number of departments which offer curriculum.",
        "question_pl": "Policz liczbę działów, które oferują program nauczania.",
        "query": "SELECT count(DISTINCT dept_name) FROM course",
        "query_pl": "SELECT count(DISTINCT dept_name) FROM course"
    },
    {
        "db_id": "college_2",
        "question_original": "How many different courses offered by Physics department?",
        "question_original_pl": "Ile różnych kursów oferuje wydział fizyki?",
        "question": "How many different curriculum offered by Physics department?",
        "question_pl": "Ile różnych programów nauczania oferuje wydział fizyki?",
        "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
        "query_pl": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Fizyka'"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of courses in the Physics department.",
        "question_original_pl": "Policz liczbę kursów na wydziale fizyki.",
        "question": "Count the number of curriculum in the Physics department.",
        "question_pl": "Policz liczbę programów nauczania na wydziale fizyki.",
        "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
        "query_pl": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Fizyka'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the title of courses that have two prerequisites?",
        "question_original_pl": "Znajdź tytuły kursów, które mają dwa wymagania wstępne?",
        "question": "Find the title of curriculum that have two prerequisites?",
        "question_pl": "Znajdź tytuł programu nauczania, który ma dwa wymagania wstępne?",
        "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2",
        "query_pl": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the titles for courses with two prerequisites?",
        "question_original_pl": "Jakie są tytuły kursów z dwoma wymaganiami wstępnymi?",
        "question": "What are the titles for curriculum with two prerequisites?",
        "question_pl": "Jakie są tytuły programów nauczania z dwoma wymaganiami wstępnymi?",
        "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2",
        "query_pl": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the title, credit, and department name of courses that have more than one prerequisites?",
        "question_original_pl": "Znajdź tytuł, zaliczenie i nazwę wydziału kursów, które mają więcej niż jeden warunek wstępny?",
        "question": "Find the title, credit, and department name of curriculum that have more than one prerequisites?",
        "question_pl": "Znajdź tytuł, zaliczenie i nazwę wydziału programu nauczania, który ma więcej niż jeden warunek wstępny?",
        "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title, credit value, and department name for courses with more than one prerequisite?",
        "question_original_pl": "Jaki jest tytuł, wartość punktowa i nazwa wydziału w przypadku kursów z więcej niż jednym warunkiem wstępnym?",
        "question": "What is the title, credit value, and department name for curriculum with more than one prerequisite?",
        "question_pl": "Jaki jest tytuł, wartość punktowa i nazwa wydziału dla programu nauczania z więcej niż jednym warunkiem wstępnym?",
        "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "How many courses that do not have prerequisite?",
        "question_original_pl": "Ile kursów nie ma wymagań wstępnych?",
        "question": "How many curriculum that do not have prerequisite?",
        "question_pl": "Ile programów nauczania nie ma wymagań wstępnych?",
        "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of courses without prerequisites.",
        "question_original_pl": "Policz liczbę kursów bez wymagań wstępnych.",
        "question": "Count the number of curriculum without prerequisites.",
        "question_pl": "Policz liczbę programów nauczania bez wymagań wstępnych.",
        "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of the courses that do not have any prerequisite?",
        "question_original_pl": "Znajdź nazwy kursów, które nie mają żadnych wymagań wstępnych?",
        "question": "Find the name of the curriculum that do not have any prerequisite?",
        "question_pl": "Znajdź nazwę programu nauczania, który nie ma żadnych wymagań wstępnych?",
        "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the titles of courses without prerequisites?",
        "question_original_pl": "Jakie są tytuły kursów bez wymagań wstępnych?",
        "question": "What are the titles of curriculum without prerequisites?",
        "question_pl": "Jakie są tytuły programów nauczania bez wymagań wstępnych?",
        "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "college_2",
        "question_original": "How many different instructors have taught some course?",
        "question_original_pl": "Ilu różnych instruktorów prowadziło dany kurs?",
        "question": "How many different teachers have taught some course?",
        "question_pl": "Ilu różnych nauczycieli prowadziło dany kurs?",
        "query": "SELECT COUNT (DISTINCT id) FROM teaches",
        "query_pl": "SELECT COUNT (DISTINCT id) FROM teaches"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of distinct instructors who have taught a course.",
        "question_original_pl": "Policz liczbę różnych instruktorów, którzy prowadzili dany kurs.",
        "question": "Count the number of different teachers who have taught a course.",
        "question_pl": "Policz liczbę różnych nauczycieli, którzy prowadzili dany kurs.",
        "query": "SELECT COUNT (DISTINCT id) FROM teaches",
        "query_pl": "SELECT COUNT (DISTINCT id) FROM teaches"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the department name of the instructor whose name contains 'Soisalon'.",
        "question_original_pl": "Znajdź nazwę działu instruktora, którego nazwa zawiera \"Soisalon\".",
        "question": "Find the department name of the teacher whose name contains 'Soisalon'.",
        "question_pl": "Znajdź nazwę działu nauczyciela, którego nazwisko zawiera \"Soisalon\".",
        "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
        "query_pl": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the name of the department with an instructure who has a name like 'Soisalon'?",
        "question_original_pl": "Jak nazywa się dział z instructure, który ma nazwę \"Soisalon\"?",
        "question": "What is the name of the department with a teacher who has a name like 'Soisalon'?",
        "question_pl": "Jak nazywa się wydział z nauczycielem, który ma na imię \"Soisalon\"?",
        "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
        "query_pl": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
    },
    {
        "db_id": "college_2",
        "question_original": "How many rooms whose capacity is less than 50 does the Lamberton building have?",
        "question_original_pl": "Ile pokoi o pojemności mniejszej niż 50 ma budynek Lamberton?",
        "question": "How many rooms whose seat is less than 50 does the Lamberton building have?",
        "question_pl": "Ile pokoi, w których jest mniej niż 50 osób, ma budynek Lamberton?",
        "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50",
        "query_pl": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
    },
    {
        "db_id": "college_2",
        "question_original": "Count the number of rooms in Lamberton with capacity lower than 50.",
        "question_original_pl": "Policz liczbę pokoi w Lamberton o pojemności mniejszej niż 50.",
        "question": "Count the number of rooms in Lamberton with the number of seats lower than 50.",
        "question_pl": "Policz liczbę pokoi w Lamberton z liczbą miejsc mniejszą niż 50.",
        "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50",
        "query_pl": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
    },
    {
        "db_id": "college_2",
        "question_original": "what is the name of the instructor who is in Statistics department and earns the lowest salary?",
        "question_original_pl": "Jak nazywa się instruktor, który pracuje w dziale statystyki i zarabia najniższą pensję?",
        "question": "what is the name of the teacher who is in Statistics department and earns the lowest salary?",
        "question_pl": "Jak nazywa się nauczyciel, który pracuje w dziale statystyki i zarabia najniższą pensję?",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Statystyki' ORDER BY salary LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Give the name of the lowest earning instructor in the Statistics department.",
        "question_original_pl": "Podaj nazwisko najgorzej zarabiającego instruktora w dziale statystyki.",
        "question": "Give the name of the lowest earning teacher in the Statistics department.",
        "question_pl": "Podaj nazwisko najgorzej zarabiającego nauczyciela w dziale statystyki.",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Statystyki' ORDER BY salary LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the title of course that is provided by both Statistics and Psychology departments.",
        "question_original_pl": "Znajdź tytuł kursu prowadzonego zarówno przez wydział statystyki, jak i psychologii.",
        "question": "Find the title of curriculum that is provided by both Statistics and Psychology departments.",
        "question_pl": "Znajdź tytuł programu nauczania oferowanego przez wydziały statystyki i psychologii.",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  'Statystyki' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychologia'"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title of a course that is listed in both the Statistics and Psychology departments?",
        "question_original_pl": "Jaki jest tytuł kursu, który jest wymieniony zarówno na wydziale statystyki, jak i psychologii?",
        "question": "What is the title of curriculum that is listed in both the Statistics and Psychology departments?",
        "question_pl": "Jaki jest tytuł programu nauczania, który jest wymieniony zarówno na wydziale statystyki, jak i psychologii?",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  'Statystyki' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychologia'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the title of course that is provided by Statistics but not Psychology departments.",
        "question_original_pl": "Znajdź tytuł kursu prowadzonego przez wydziały statystyki, ale nie psychologii.",
        "question": "Find the title of curriculum that is provided by Statistics but not Psychology departments.",
        "question_pl": "Znajdź tytuł programu nauczania, który jest oferowany przez wydziały statystyki, ale nie psychologii.",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  'Statystyki' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychologia'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the titles of courses that are in the Statistics department but not the Psychology department?",
        "question_original_pl": "Jakie są tytuły kursów, które są prowadzone na wydziale statystyki, ale nie na wydziale psychologii?",
        "question": "What are the titles of curriculum that are in the Statistics department but not the Psychology department?",
        "question_pl": "Jakie są tytuły programów nauczania, które znajdują się na wydziale statystyki, ale nie na wydziale psychologii?",
        "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'",
        "query_pl": "SELECT title FROM course WHERE dept_name  =  'Statystyki' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychologia'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.",
        "question_original_pl": "Znajdź liczbę instruktorów, którzy prowadzili zajęcia jesienią 2009, ale nie wiosną 2010.",
        "question": "Find the id of teachers who taught a class in Fall 2009 but not in Spring 2010.",
        "question_pl": "Znajdź liczbę nauczycieli, którzy prowadzili zajęcia jesienią 2009 roku, ale nie wiosną 2010 roku.",
        "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT id FROM teaches WHERE semester  =  'Upadek' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?",
        "question_original_pl": "Jakie są identyfikatory instruktorów, którzy prowadzili zajęcia jesienią 2009 r., ale nie wiosną 2010 r.?",
        "question": "What are the ids of teachers who taught in the Fall of 2009 but not in the Spring of 2010?",
        "question_pl": "Jakie są identyfikatory nauczycieli, którzy uczyli jesienią 2009 r., ale nie wiosną 2010 r.?",
        "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT id FROM teaches WHERE semester  =  'Upadek' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of the top 3 departments that provide the largest amount of courses?",
        "question_original_pl": "Znajdź nazwy 3 najlepszych wydziałów, które oferują największą liczbę kursów?",
        "question": "Find the names of the top 3 departments that provide the largest amount of curriculum?",
        "question_pl": "Znajdź nazwy 3 najlepszych działów, które zapewniają największą liczbę programów nauczania?",
        "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of the 3 departments with the most courses?",
        "question_original_pl": "Jak nazywają się 3 wydziały z największą liczbą kursów?",
        "question": "What are the names of the 3 departments with the most curriculum?",
        "question_pl": "Jak nazywają się 3 działy z największą liczbą programów nauczania?",
        "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "college_2",
        "question_original": "List the names of all courses ordered by their titles and credits.",
        "question_original_pl": "Wymień nazwy wszystkich kursów uporządkowane według ich tytułów i punktów.",
        "question": "List the names of all curriculum ordered by their titles and credits.",
        "question_pl": "Wymień nazwy wszystkich programów nauczania uporządkowane według ich tytułów i punktów.",
        "query": "SELECT title FROM course ORDER BY title ,  credits",
        "query_pl": "SELECT title FROM course ORDER BY title ,  credits"
    },
    {
        "db_id": "college_2",
        "question_original": "Given the titles of all courses, in order of titles and credits.",
        "question_original_pl": "Podaj tytuły wszystkich kursów w kolejności tytułów i punktów.",
        "question": "Given the titles of all curriculum, in order of titles and credits.",
        "question_pl": "Podaj tytuły wszystkich programów nauczania, w kolejności tytułów i punktów.",
        "query": "SELECT title FROM course ORDER BY title ,  credits",
        "query_pl": "SELECT title FROM course ORDER BY title ,  credits"
    },
    {
        "db_id": "college_2",
        "question_original": "Who is the instructor with the highest salary?",
        "question_original_pl": "Kto jest instruktorem z najwyższym wynagrodzeniem?",
        "question": "Who is the teacher with the highest salary?",
        "question_pl": "Kto jest nauczycielem z najwyższą pensją?",
        "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
        "query_pl": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Give the name of the highest paid instructor.",
        "question_original_pl": "Podaj nazwisko najlepiej opłacanego instruktora.",
        "question": "Give the name of the highest paid teacher.",
        "question_pl": "Podaj nazwisko najlepiej opłacanego nauczyciela.",
        "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
        "query_pl": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "List the information of all instructors ordered by their salary in ascending order.",
        "question_original_pl": "Wyświetl informacje o wszystkich instruktorach uporządkowane według ich wynagrodzenia w kolejności rosnącej.",
        "question": "List the detail of all teachers ordered by their salary in ascending order.",
        "question_pl": "Wyświetl dane wszystkich nauczycieli uporządkowane według ich wynagrodzenia w kolejności rosnącej.",
        "query": "SELECT * FROM instructor ORDER BY salary",
        "query_pl": "SELECT * FROM instructor ORDER BY salary"
    },
    {
        "db_id": "college_2",
        "question_original": "Give all information regarding instructors, in order of salary from least to greatest.",
        "question_original_pl": "Podaj wszystkie informacje dotyczące instruktorów, w kolejności od najmniejszego do największego wynagrodzenia.",
        "question": "Give all detail regarding teachers, in order of salary from least to greatest.",
        "question_pl": "Podaj wszystkie szczegóły dotyczące nauczycieli, w kolejności od najmniejszego do największego wynagrodzenia.",
        "query": "SELECT * FROM instructor ORDER BY salary",
        "query_pl": "SELECT * FROM instructor ORDER BY salary"
    },
    {
        "db_id": "college_2",
        "question_original": "list in alphabetic order all course names and their instructors' names in year 2008.",
        "question_original_pl": "wymień w kolejności alfabetycznej wszystkie nazwy kursów i nazwiska ich instruktorów w roku 2008.",
        "question": "list in alphabetic order all curriculum names and their instructors' names in year 2008.",
        "question_pl": "wymień w kolejności alfabetycznej wszystkie nazwy programów nauczania i nazwiska ich instruktorów w roku 2008.",
        "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title",
        "query_pl": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
    },
    {
        "db_id": "college_2",
        "question_original": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.",
        "question_original_pl": "Pokaż wszystkie tytuły i nazwiska ich instruktorów dla kursów w 2008 roku, w porządku alfabetycznym według tytułu.",
        "question": "Show all titles and their instructors' names for curriculum in 2008, in alphabetical order by title.",
        "question_pl": "Pokaż wszystkie tytuły i nazwiska ich instruktorów dla programu nauczania w 2008 roku, w porządku alfabetycznym według tytułu.",
        "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title",
        "query_pl": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of instructors who are advising more than one student.",
        "question_original_pl": "Znajdź nazwiska instruktorów, którzy doradzają więcej niż jednemu studentowi.",
        "question": "Find the name of teachers who are advising more than one student.",
        "question_pl": "Znajdź nazwiska nauczycieli, którzy doradzają więcej niż jednemu uczniowi.",
        "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of instructors who advise more than one student?",
        "question_original_pl": "Jak nazywają się instruktorzy, którzy doradzają więcej niż jednemu studentowi?",
        "question": "What are the names of teachers who advise more than one student?",
        "question_pl": "Jak nazywają się nauczyciele, którzy doradzają więcej niż jednemu uczniowi?",
        "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the maximum and average capacity among rooms in each building.",
        "question_original_pl": "Znajdź maksymalną i średnią pojemność pokoi w każdym budynku.",
        "question": "Find the maximum and average number of seats among rooms in each building.",
        "question_pl": "Znajdź maksymalną i średnią liczbę miejsc w pokojach w każdym budynku.",
        "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building",
        "query_pl": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the greatest and average capacity for rooms in each building?",
        "question_original_pl": "Jaka jest największa i średnia pojemność pokoi w każdym budynku?",
        "question": "What are the greatest and average number of seats for rooms in each building?",
        "question_pl": "Jaka jest największa i średnia liczba miejsc w pokojach w każdym budynku?",
        "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building",
        "query_pl": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the title of the course that is offered by more than one department.",
        "question_original_pl": "Znajdź tytuł kursu oferowanego przez więcej niż jeden wydział.",
        "question": "Find the title of the curriculum that is offered by more than one department.",
        "question_pl": "Znajdź tytuł programu nauczania oferowanego przez więcej niż jeden wydział.",
        "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
        "query_pl": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the titles of courses that are offered in more than one department?",
        "question_original_pl": "Jakie są tytuły kursów oferowanych na więcej niż jednym wydziale?",
        "question": "What are the titles of curriculum that are offered in more than one department?",
        "question_pl": "Jakie tytuły programów nauczania są oferowane na więcej niż jednym wydziale?",
        "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
        "query_pl": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the total credits of courses provided by different department.",
        "question_original_pl": "Znajdź łączną liczbę punktów kursów oferowanych przez różne wydziały.",
        "question": "Find the sum of credits of curriculum provided by different department.",
        "question_pl": "Znajdź sumę punktów programu nauczania oferowanego przez różne wydziały.",
        "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name",
        "query_pl": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.",
        "question_original_pl": "Znajdź minimalne wynagrodzenie dla działów, których średnie wynagrodzenie jest wyższe od średniego wynagrodzenia wszystkich instruktorów.",
        "question": "Find the minimum wage for the departments whose average wage is above the average payment of all instructors.",
        "question_pl": "Znajdź płacę minimalną dla działów, w których średnia płaca jest wyższa od średniej płacy wszystkich instruktorów.",
        "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)",
        "query_pl": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the lowest salary in departments with average salary greater than the overall average.",
        "question_original_pl": "Jaka jest najniższa pensja w działach, w których średnia pensja jest wyższa niż ogólna średnia.",
        "question": "What is the lowest wage in departments with average wage greater than the overall average.",
        "question_pl": "Jaka jest najniższa płaca w działach, w których średnia płaca jest wyższa niż średnia ogólna.",
        "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)",
        "query_pl": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the number of courses provided in each semester and year.",
        "question_original_pl": "Znajdź liczbę kursów oferowanych w każdym semestrze i roku.",
        "question": "Find the number of courses provided in each academic session and year.",
        "question_pl": "Znajdź liczbę kursów oferowanych w każdej sesji i roku akademickim.",
        "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR",
        "query_pl": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
    },
    {
        "db_id": "college_2",
        "question_original": "How many courses are provided in each semester and year?",
        "question_original_pl": "Ile kursów jest dostępnych w każdym semestrze i roku?",
        "question": "How many courses are provided in each academic session and year?",
        "question_pl": "Ile kursów jest oferowanych w każdej sesji akademickiej i roku?",
        "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR",
        "query_pl": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
    },
    {
        "db_id": "college_2",
        "question_original": "Which year had the greatest number of courses?",
        "question_original_pl": "Który rok miał największą liczbę kursów?",
        "question": "Which year had the greatest number of curriculum?",
        "question_pl": "Który rok miał największą liczbę programów nauczania?",
        "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the year and semester when offers the largest number of courses.",
        "question_original_pl": "Znajdź rok i semestr, w którym oferowana jest największa liczba kursów.",
        "question": "Find the year and academic session when offers the largest number of courses.",
        "question_pl": "Znajdź rok i sesję akademicką, w której oferowana jest największa liczba kursów.",
        "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the year and semester with the most courses?",
        "question_original_pl": "Który rok i semestr ma najwięcej kursów?",
        "question": "What is the year and academic session with the most courses?",
        "question_pl": "Jaki jest rok i sesja akademicka z największą liczbą kursów?",
        "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the semester and year which has the least number of student taking any class.",
        "question_original_pl": "Znajdź semestr i rok, w którym najmniej studentów uczęszcza na dowolne zajęcia.",
        "question": "Find the academic session and year which has the least number of student taking any class.",
        "question_pl": "Znajdź sesję akademicką i rok, w którym najmniej studentów uczęszcza na dowolne zajęcia.",
        "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Which semeseter and year had the fewest students?",
        "question_original_pl": "Który semestr i rok miał najmniej studentów?",
        "question": "Which academic session and year had the fewest students?",
        "question_pl": "W której sesji akademickiej i na którym roku było najmniej studentów?",
        "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the id of the instructor who advises of all students from History department?",
        "question_original_pl": "Jakie jest imię i nazwisko instruktora, który doradza wszystkim studentom z wydziału historii?",
        "question": "What is the id of the teacher who advises of all students from History department?",
        "question_pl": "Jaki jest identyfikator nauczyciela, który doradza wszystkim uczniom z wydziału historii?",
        "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
        "query_pl": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Historia'"
    },
    {
        "db_id": "college_2",
        "question_original": "Give id of the instructor who advises students in the History department.",
        "question_original_pl": "Podaj imię i nazwisko instruktora, który doradza studentom na wydziale historii.",
        "question": "Give id of the teacher who advises students in the History department.",
        "question_pl": "Podaj imię i nazwisko nauczyciela, który doradza uczniom na wydziale historii.",
        "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
        "query_pl": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'Historia'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name and salary of the instructors who are advisors of any student from History department?",
        "question_original_pl": "Znajdź nazwiska i pensje instruktorów, którzy są doradcami dowolnego studenta z wydziału historii?",
        "question": "Find the name and wage of the instructors who are advisors of any student from History department?",
        "question_pl": "Znajdź nazwisko i wynagrodzenie instruktorów, którzy są doradcami dowolnego studenta z wydziału historii?",
        "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'",
        "query_pl": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Historia'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names and salaries of instructors who advises students in the History department?",
        "question_original_pl": "Jakie są nazwiska i pensje instruktorów, którzy doradzają studentom na Wydziale Historycznym?",
        "question": "What are the names and wages of teachers who advises students in the History department?",
        "question_pl": "Jakie są nazwiska i pensje nauczycieli, którzy doradzają studentom na wydziale historii?",
        "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'",
        "query_pl": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Historia'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the id of the courses that do not have any prerequisite?",
        "question_original_pl": "Znajdź id kursów, które nie mają żadnych wymagań wstępnych?",
        "question": "Find the id of the curriculum that do not have any prerequisite?",
        "question_pl": "Znajdź elementy programu nauczania, które nie mają żadnych wymagań wstępnych?",
        "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
        "query_pl": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids of courses without prerequisites?",
        "question_original_pl": "Jakie są identyfikatory kursów bez wymagań wstępnych?",
        "question": "What are the ids of curriculum without prerequisites?",
        "question_pl": "Jakie są identyfikatory programów nauczania bez wymagań wstępnych?",
        "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
        "query_pl": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of courses without prerequisites?",
        "question_original_pl": "Jakie są nazwy kursów bez wymagań wstępnych?",
        "question": "What are the names of curriculum without prerequisites?",
        "question_pl": "Jak nazywają się programy nauczania bez wymagań wstępnych?",
        "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
        "query_pl": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title of the course with Differential Geometry as a prerequisite?",
        "question_original_pl": "Jaki jest tytuł kursu, którego warunkiem wstępnym jest geometria różniczkowa?",
        "question": "What is the title of the curriculum with Differential Geometry as a prerequisite?",
        "question_pl": "Jaki jest tytuł programu nauczania, którego warunkiem wstępnym jest geometria różniczkowa?",
        "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')",
        "query_pl": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Geometria różniczkowa')"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of students who have taken any course in the fall semester of year 2003.",
        "question_original_pl": "Znajdź nazwiska studentów, którzy uczęszczali na dowolny kurs w semestrze jesiennym 2003 roku.",
        "question": "Find the names of students who have taken any course in the fall academic session of year 2003.",
        "question_pl": "Znajdź nazwiska studentów, którzy wzięli udział w jakimkolwiek kursie w jesiennej sesji akademickiej 2003 roku.",
        "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
        "query_pl": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Upadek' AND YEAR  =  2003)"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?",
        "question_original_pl": "Jaki jest tytuł kursu oferowanego w budynku Chandler w semestrze jesiennym 2010 roku?",
        "question": "What is the title of the curriculum that was offered at building Chandler during the fall academic session in the year of 2010?",
        "question_pl": "Jaki jest tytuł programu nauczania oferowanego w budynku Chandler podczas jesiennej sesji akademickiej w roku 2010?",
        "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010",
        "query_pl": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Upadek' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Give the title of the course offered in Chandler during the Fall of 2010.",
        "question_original_pl": "Podaj tytuł kursu oferowanego w Chandler jesienią 2010 roku.",
        "question": "Give the title of the curriculum offered in Chandler during the Fall of 2010.",
        "question_pl": "Podaj tytuł programu nauczania oferowanego w Chandler jesienią 2010 roku.",
        "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010",
        "query_pl": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Upadek' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of the instructors who taught C Programming course before.",
        "question_original_pl": "Znajdź nazwiska instruktorów, którzy wcześniej prowadzili kurs programowania w języku C.",
        "question": "Find the name of the teachers who taught C Programming course before.",
        "question_pl": "Znajdź nazwiska nauczycieli, którzy wcześniej prowadzili kurs programowania w języku C.",
        "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'",
        "query_pl": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'Programowanie C'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of instructors who have taught C Programming courses?",
        "question_original_pl": "Jakie są nazwiska instruktorów, którzy prowadzili kursy programowania w języku C?",
        "question": "What are the names of teachers who have taught C Programming courses?",
        "question_pl": "Jakie są nazwiska nauczycieli, którzy prowadzili kursy programowania w języku C?",
        "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'",
        "query_pl": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'Programowanie C'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name and salary of instructors who are advisors of the students from the Math department.",
        "question_original_pl": "Znajdź nazwiska i wynagrodzenie instruktorów, którzy są doradcami studentów z wydziału matematyki.",
        "question": "Find the name and wage of instructors who are advisors of the students from the Math department.",
        "question_pl": "Znajdź nazwiska i płace instruktorów, którzy są doradcami studentów z wydziału matematyki.",
        "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
        "query_pl": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Matematyka'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names and salaries of instructors who advise students in the Math department?",
        "question_original_pl": "Jakie są nazwiska i pensje instruktorów, którzy doradzają studentom na wydziale matematyki?",
        "question": "What are the names and wages of instructors who advise students in the Math department?",
        "question_pl": "Jakie są nazwiska i płace instruktorów, którzy doradzają studentom na wydziale matematyki?",
        "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
        "query_pl": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Matematyka'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.",
        "question_original_pl": "Podaj nazwiska wszystkich instruktorów, którzy doradzają studentom na wydziale matematyki, posortowane według łącznej liczby punktów uzyskanych przez studentów.",
        "question": "What are the names of all teachers who advise students in the math depart sorted by total credits of the student.",
        "question_pl": "Podaj nazwiska wszystkich nauczycieli, którzy doradzają studentom na wydziale matematyki, posortowane według łącznej liczby punktów studenta.",
        "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred",
        "query_pl": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Matematyka' ORDER BY T3.tot_cred"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the course title of the prerequisite of course Mobile Computing?",
        "question_original_pl": "Jaki jest tytuł przedmiotu poprzedzającego kurs Mobile Computing?",
        "question": "What is the curriculum title of the prerequisite of curriculum Mobile Computing?",
        "question_pl": "Jaki jest tytuł programu nauczania warunku wstępnego programu nauczania Mobile Computing?",
        "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
        "query_pl": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Komputery mobilne')"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title of the course that is a prerequisite for Mobile Computing?",
        "question_original_pl": "Jaki jest tytuł kursu, który jest warunkiem wstępnym dla Mobile Computing?",
        "question": "What is the title of the curriculum that is a prerequisite for Mobile Computing?",
        "question_pl": "Jaki jest tytuł programu nauczania, który jest warunkiem wstępnym dla Mobile Computing?",
        "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
        "query_pl": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Komputery mobilne')"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of instructor who is the advisor of the student who has the highest number of total credits.",
        "question_original_pl": "Znajdź nazwisko instruktora, który jest doradcą studenta z największą liczbą punktów.",
        "question": "Find the name of teacher who is the advisor of the student who has the highest number of total credits.",
        "question_pl": "Znajdź nazwisko nauczyciela, który jest doradcą studenta z największą liczbą punktów.",
        "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the name of the instructor who advises the student with the greatest number of total credits?",
        "question_original_pl": "Jak nazywa się instruktor, który doradza studentowi z największą liczbą punktów?",
        "question": "What is the name of the teacher who advises the student with the greatest number of total credits?",
        "question_pl": "Jak nazywa się nauczyciel, który doradza studentowi z największą liczbą punktów?",
        "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of instructors who didn't teach any courses?",
        "question_original_pl": "Znajdź nazwiska instruktorów, którzy nie prowadzili żadnych kursów?",
        "question": "Find the name of teachers who didn't teach any courses?",
        "question_pl": "Znajdź nazwiska nauczycieli, którzy nie prowadzili żadnych kursów?",
        "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
        "query_pl": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of instructors who didn't teach?",
        "question_original_pl": "Jakie są nazwiska instruktorów, którzy nie prowadzili zajęć?",
        "question": "What are the names of teachers who didn't teach?",
        "question_pl": "Jak nazywają się nauczyciele, którzy nie uczyli?",
        "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
        "query_pl": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the id of instructors who didn't teach any courses?",
        "question_original_pl": "Znajdź identyfikatory instruktorów, którzy nie prowadzili żadnych kursów?",
        "question": "Find the id of teachers who didn't teach any courses?",
        "question_pl": "Znajdź id nauczycieli, którzy nie prowadzili żadnych kursów?",
        "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
        "query_pl": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids of instructors who didnt' teach?",
        "question_original_pl": "Jakie są identyfikatory instruktorów, którzy nie prowadzili zajęć?",
        "question": "What are the ids of teachers who didnt' teach?",
        "question_pl": "Jakie są identyfikatory nauczycieli, którzy nie uczyli?",
        "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches",
        "query_pl": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of instructors who didn't each any courses in any Spring semester.",
        "question_original_pl": "Znajdź nazwiska instruktorów, którzy nie prowadzili żadnych kursów w semestrze wiosennym.",
        "question": "Find the names of teachers who didn't each any courses in any Spring semester.",
        "question_pl": "Znajdź nazwiska nauczycieli, którzy nie prowadzili żadnych kursów w żadnym semestrze wiosennym.",
        "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')",
        "query_pl": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Wiosna')"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of instructors who didn't teach courses in the Spring?",
        "question_original_pl": "Jakie są nazwiska instruktorów, którzy nie prowadzili kursów wiosną?",
        "question": "What are the names of teachers who didn't teach courses in the Spring?",
        "question_pl": "Jakie są nazwiska nauczycieli, którzy nie prowadzili kursów wiosną?",
        "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')",
        "query_pl": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Wiosna')"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the number and averaged salary of all instructors who are in the department with the highest budget.",
        "question_original_pl": "Znajdź liczbę i uśrednione wynagrodzenie wszystkich instruktorów w dziale o najwyższym budżecie.",
        "question": "Find the number and averaged wage of all teachers who are in the department with the highest budget.",
        "question_pl": "Znajdź liczbę i uśrednione wynagrodzenie wszystkich nauczycieli, którzy pracują w dziale o najwyższym budżecie.",
        "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1",
        "query_pl": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "How many instructors are in the department with the highest budget, and what is their average salary?",
        "question_original_pl": "Ilu instruktorów pracuje w dziale o najwyższym budżecie i jaka jest ich średnia pensja?",
        "question": "How many teachers are in the department with the highest budget, and what is their average wage?",
        "question_pl": "Ilu nauczycieli pracuje w departamencie o najwyższym budżecie i jaka jest ich średnia pensja?",
        "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1",
        "query_pl": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
    },
    {
        "db_id": "college_2",
        "question_original": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?",
        "question_original_pl": "Jaki jest tytuł i punkty kursu, który jest prowadzony w największej sali lekcyjnej (o największej pojemności)?",
        "question": "What is the title and credits of the course that is taught in the largest schoolroom (with the highest capacity)?",
        "question_pl": "Jaki jest tytuł i zaliczenie przedmiotu, który jest prowadzony w największej sali szkolnej (o największej pojemności)?",
        "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)",
        "query_pl": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
    },
    {
        "db_id": "college_2",
        "question_original": "Give the title and credits for the course that is taught in the classroom with the greatest capacity.",
        "question_original_pl": "Podaj tytuł i punkty za kurs, który jest prowadzony w klasie o największej liczbie miejsc.",
        "question": "Give the title and credits for the course that is taught in the schoolroom with the greatest capacity.",
        "question_pl": "Podaj tytuł i punkty za kurs, który jest prowadzony w sali szkolnej o największej pojemności.",
        "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)",
        "query_pl": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
    },
    {
        "db_id": "college_2",
        "question_original": "How many students and instructors are in each department?",
        "question_original_pl": "Ilu studentów i instruktorów jest w każdym dziale?",
        "question": "How many students and teachers are in each department?",
        "question_pl": "Ilu uczniów i nauczycieli jest w każdym dziale?",
        "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name",
        "query_pl": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.",
        "question_original_pl": "Znajdź nazwiska i wynagrodzenie instruktorów, których wynagrodzenie jest niższe od średniego wynagrodzenia instruktorów na wydziale fizyki.",
        "question": "Find the name and wage of instructors whose wage is below the average wage of the instructors in the Physics department.",
        "question_pl": "Znajdź nazwiska i płace instruktorów, których płaca jest niższa od średniej płacy instruktorów na wydziale fizyki.",
        "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
        "query_pl": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Fizyka')"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?",
        "question_original_pl": "Jakie są nazwiska i pensje instruktorów, którzy zarabiają mniej niż średnia pensja instruktorów na wydziale fizyki?",
        "question": "What are the names and wages for instructors who earn less than the average wage of instructors in the Physics department?",
        "question_pl": "Jakie są nazwiska i płace instruktorów, którzy zarabiają mniej niż średnia płaca instruktorów na wydziale fizyki?",
        "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
        "query_pl": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Fizyka')"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the name of students who took some course offered by Statistics department.",
        "question_original_pl": "Znajdź nazwiska studentów, którzy wzięli udział w kursie oferowanym przez dział statystyki.",
        "question": "Find the name of students who took some curriculum offered by Statistics department.",
        "question_pl": "Znajdź nazwiska studentów, którzy uczestniczyli w programie nauczania oferowanym przez dział statystyki.",
        "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'",
        "query_pl": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statystyki'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.",
        "question_original_pl": "Znajdź budynek, numer sali, semestr i rok wszystkich kursów oferowanych przez Wydział Psychologii posortowane według tytułów kursów.",
        "question": "Find the building, room number, academic session and year of all curriculum offered by Psychology department sorted by curriculum titles.",
        "question_pl": "Znajdź budynek, numer pokoju, sesję akademicką i rok wszystkich programów nauczania oferowanych przez Wydział Psychologii posortowanych według tytułów programów nauczania.",
        "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title",
        "query_pl": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychologia' ORDER BY T1.title"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?",
        "question_original_pl": "Jaki jest budynek, numer sali, semestr i rok kursów na wydziale psychologii, posortowane według tytułu kursu?",
        "question": "What are the building, room number, academic session and year of courses in the Psychology department, sorted using course title?",
        "question_pl": "Jaki jest budynek, numer sali, sesja akademicka i rok kursów na Wydziale Psychologii, posortowane według nazwy kursu?",
        "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title",
        "query_pl": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychologia' ORDER BY T1.title"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors in computer science department",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów w dziale informatyki",
        "question": "Find the names of all teachers in computer science department",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli na wydziale informatyki",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of all instructors in the Comp. Sci. department?",
        "question_original_pl": "Jak nazywają się wszyscy instruktorzy na wydziale Comp. Sci.?",
        "question": "What are the names of all teachers in the Comp. Sci. department?",
        "question_pl": "Jak nazywają się wszyscy nauczyciele na wydziale Comp. Sci.?",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors in Comp. Sci. department with salary > 80000.",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów w dziale Comp. Sci. z wynagrodzeniem > 80000.",
        "question": "Find the names of all teachers in Comp. Sci. department with salary > 80000.",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli w Comp. Sci. z pensją > 80000.",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?",
        "question_original_pl": "Jakie są nazwiska instruktorów na wydziale Comp. Sci. którzy zarabiają więcej niż 80000?",
        "question": "What are the names of the teachers in the Comp. Sci. department who earn more than 80000?",
        "question_pl": "Jakie są nazwiska nauczycieli na wydziale Comp. Sci. którzy zarabiają więcej niż 80000?",
        "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
        "query_pl": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors who have taught some course and the course_id.",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów, którzy prowadzili dany kurs oraz identyfikator_kursu.",
        "question": "Find the names of all teachers who have taught some course and the course_id.",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli, którzy prowadzili dany kurs oraz identyfikator_kursu.",
        "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID",
        "query_pl": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of all instructors who have taught a course, as well as the corresponding course id?",
        "question_original_pl": "Jakie są nazwiska wszystkich instruktorów, którzy prowadzili kurs, a także odpowiadające im identyfikatory kursów?",
        "question": "What are the names of all teachers who have taught curriculum, as well as the corresponding curriculum id?",
        "question_pl": "Jakie są nazwiska wszystkich nauczycieli, którzy uczyli programu nauczania, a także odpowiedni identyfikator programu nauczania?",
        "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID",
        "query_pl": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors in the Art department who have taught some course and the course_id.",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów w dziale sztuki, którzy prowadzili jakiś kurs, oraz identyfikator_kursu.",
        "question": "Find the names of all teachers in the Art department who have taught some course and the course_id.",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli na wydziale sztuki, którzy prowadzili jakiś kurs oraz identyfikator_kursu.",
        "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'",
        "query_pl": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Sztuka'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of Art instructors who have taught a course, and the corresponding course id?",
        "question_original_pl": "Jak nazywają się instruktorzy sztuki, którzy prowadzili kurs, i jaki mają identyfikator kursu?",
        "question": "What are the names of Art instructors who have taught a curriculum, and the corresponding curriculum id?",
        "question_pl": "Jakie są nazwiska instruktorów sztuki, którzy prowadzili zajęcia w ramach programu nauczania, i odpowiadające im identyfikatory programów nauczania?",
        "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'",
        "query_pl": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Sztuka'"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors whose name includes the substring “dar”.",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów, których nazwa zawiera podciąg \"dar\".",
        "question": "Find the names of all teachers whose name includes the substring “dar”.",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli, których nazwisko zawiera podciąg \"dar\".",
        "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
        "query_pl": "SELECT name FROM instructor WHERE name LIKE '%dar%'"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of all instructors with names that include \"dar\"?",
        "question_original_pl": "Jak nazywają się wszyscy instruktorzy, których nazwiska zawierają słowo \"dar\"?",
        "question": "What are the names of all teachers with names that include \"dar\"?",
        "question_pl": "Jak nazywają się wszyscy nauczyciele, których imiona zawierają \"dar\"?",
        "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
        "query_pl": "SELECT name FROM instructor WHERE name LIKE '%dar%'"
    },
    {
        "db_id": "college_2",
        "question_original": "List in alphabetic order the names of all distinct instructors.",
        "question_original_pl": "Wymień w kolejności alfabetycznej nazwiska wszystkich poszczególnych instruktorów.",
        "question": "List in alphabetic order the names of all different teachers.",
        "question_pl": "Wymień w kolejności alfabetycznej nazwiska wszystkich różnych nauczycieli.",
        "query": "SELECT DISTINCT name FROM  instructor ORDER BY name",
        "query_pl": "SELECT DISTINCT name FROM  instructor ORDER BY name"
    },
    {
        "db_id": "college_2",
        "question_original": "List the distinct names of the instructors, ordered by name.",
        "question_original_pl": "Wymień poszczególne nazwiska instruktorów, uporządkowane według nazwy.",
        "question": "List the different names of the teachers, ordered by name.",
        "question_pl": "Wymień różne nazwiska nauczycieli, uporządkowane według nazwy.",
        "query": "SELECT DISTINCT name FROM  instructor ORDER BY name",
        "query_pl": "SELECT DISTINCT name FROM  instructor ORDER BY name"
    },
    {
        "db_id": "college_2",
        "question_original": "Find courses that ran in Fall 2009 or in Spring 2010.",
        "question_original_pl": "Znajdź kursy, które odbyły się jesienią 2009 roku lub wiosną 2010 roku.",
        "question": "Find curriculum that ran in Fall 2009 or in Spring 2010.",
        "question_pl": "Znajdź program nauczania, który został uruchomiony jesienią 2009 roku lub wiosną 2010 roku.",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids for courses in the Fall of 2009 or the Spring of 2010?",
        "question_original_pl": "Jakie są identyfikatory kursów na jesień 2009 lub wiosnę 2010?",
        "question": "What are the ids for curriculum in the Fall of 2009 or the Spring of 2010?",
        "question_pl": "Jakie są identyfikatory programów nauczania na jesień 2009 lub wiosnę 2010?",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find courses that ran in Fall 2009 and in Spring 2010.",
        "question_original_pl": "Znajdź kursy, które odbyły się jesienią 2009 roku i wiosną 2010 roku.",
        "question": "Find curriculum that ran in Fall 2009 and in Spring 2010.",
        "question_pl": "Znajdź program nauczania, który został uruchomiony jesienią 2009 roku i wiosną 2010 roku.",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?",
        "question_original_pl": "Jakie są identyfikatory kursów, które były oferowane zarówno jesienią 2009 r., jak i wiosną 2010 r.?",
        "question": "What are the ids for curriculum that were offered in both Fall of 2009 and Spring of 2010?",
        "question_pl": "Jakie są identyfikatory programów nauczania oferowanych zarówno jesienią 2009 r., jak i wiosną 2010 r.?",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find courses that ran in Fall 2009 but not in Spring 2010.",
        "question_original_pl": "Znajdź kursy, które odbyły się jesienią 2009, ale nie wiosną 2010.",
        "question": "Find curriculum that ran in Fall 2009 but not in Spring 2010.",
        "question_pl": "Znajdź program nauczania, który został uruchomiony jesienią 2009 roku, ale nie wiosną 2010 roku.",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the ids of courses offered in Fall of 2009 but not in Spring of 2010?",
        "question_original_pl": "Jakie są identyfikatory kursów oferowanych jesienią 2009, ale nie wiosną 2010?",
        "question": "What are the ids of curriculum offered in Fall of 2009 but not in Spring of 2010?",
        "question_pl": "Jakie są identyfikatory programów nauczania oferowanych jesienią 2009 r., ale nie wiosną 2010 r.?",
        "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT course_id FROM SECTION WHERE semester  =  'Upadek' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the salaries of all distinct instructors that are less than the largest salary.",
        "question_original_pl": "Znajdź pensje wszystkich różnych instruktorów, które są niższe od największej pensji.",
        "question": "Find the wage of all different instructors that are less than the largest wage.",
        "question_pl": "Znajdź płace wszystkich różnych instruktorów, które są niższe od największej płacy.",
        "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)",
        "query_pl": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the distinct salaries of all instructors who earned less than the maximum salary?",
        "question_original_pl": "Jakie są różne wynagrodzenia wszystkich instruktorów, którzy zarabiali mniej niż maksymalne wynagrodzenie?",
        "question": "What are the different wages of all instructors who earned less than the maximum wage?",
        "question_pl": "Jakie są różne płace wszystkich instruktorów, którzy zarabiali mniej niż płaca maksymalna?",
        "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)",
        "query_pl": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the total number of instructors who teach a course in the Spring 2010 semester.",
        "question_original_pl": "Znajdź całkowitą liczbę instruktorów prowadzących kurs w semestrze wiosennym 2010.",
        "question": "Find the total number of teachers who teach a course in the Spring 2010 semester.",
        "question_pl": "Znajdź całkowitą liczbę nauczycieli, którzy prowadzą kurs w semestrze wiosennym 2010.",
        "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "How many instructors teach a course in the Spring of 2010?",
        "question_original_pl": "Ilu instruktorów prowadzi kurs wiosną 2010 roku?",
        "question": "How many teachers teach a course in the Spring of 2010?",
        "question_pl": "Ilu nauczycieli prowadzi zajęcia wiosną 2010 roku?",
        "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
        "query_pl": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Wiosna' AND YEAR  =  2010"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names and average salaries of all departments whose average salary is greater than 42000.",
        "question_original_pl": "Znajdź nazwy i średnie pensje wszystkich działów, których średnia pensja jest wyższa niż 42000.",
        "question": "Find the names and average wages of all departments whose average wage is greater than 42000.",
        "question_pl": "Znajdź nazwy i średnie płace wszystkich działów, w których średnia płaca jest wyższa niż 42000.",
        "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000",
        "query_pl": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names and average salaries for departments with average salary higher than 42000?",
        "question_original_pl": "Jakie są nazwy i średnie pensje w działach, w których średnia pensja przekracza 42000?",
        "question": "What are the names and average wages for departments with average wage higher than 42000?",
        "question_pl": "Jakie są nazwy i średnie płace w działach ze średnią płacą wyższą niż 42000?",
        "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000",
        "query_pl": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
    },
    {
        "db_id": "college_2",
        "question_original": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.",
        "question_original_pl": "Znajdź nazwiska instruktorów z pensją wyższą niż pensja (przynajmniej jednego) instruktora na wydziale biologii.",
        "question": "Find names of teachers with wage greater than that of some (at least one) teacher in the Biology department.",
        "question_pl": "Znajdź nazwiska nauczycieli z pensją wyższą niż pensja (przynajmniej jednego) nauczyciela na wydziale biologii.",
        "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')",
        "query_pl": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biologia')"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of instructors who earn more than at least one instructor from the Biology department?",
        "question_original_pl": "Jakie są nazwiska instruktorów, którzy zarabiają więcej niż przynajmniej jeden instruktor z wydziału biologii?",
        "question": "What are the names of teachers who earn more than at least one teacher from the Biology department?",
        "question_pl": "Jakie są nazwiska nauczycieli, którzy zarabiają więcej niż przynajmniej jeden nauczyciel z wydziału biologii?",
        "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')",
        "query_pl": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biologia')"
    },
    {
        "db_id": "college_2",
        "question_original": "Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.",
        "question_original_pl": "Znajdź nazwiska wszystkich instruktorów, których wynagrodzenie jest wyższe niż wynagrodzenie wszystkich instruktorów na wydziale biologii.",
        "question": "Find the names of all teachers whose wage is greater than the wage of all teachers in the Biology department.",
        "question_pl": "Znajdź nazwiska wszystkich nauczycieli, których pensja jest wyższa niż pensja wszystkich nauczycieli na wydziale biologii.",
        "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')",
        "query_pl": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biologia')"
    },
    {
        "db_id": "college_2",
        "question_original": "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?",
        "question_original_pl": "Jakie są nazwiska wszystkich instruktorów z wyższą pensją niż którykolwiek z instruktorów na wydziale biologii?",
        "question": "What are the names of all teachers with a higher wage than any of the teachers in the Biology department?",
        "question_pl": "Jak nazywają się wszyscy nauczyciele, których pensja jest wyższa niż któregokolwiek z nauczycieli na wydziale biologii?",
        "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')",
        "query_pl": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biologia')"
    },
    {
        "db_id": "debate",
        "question_original": "What are the date and venue of each debate?",
        "question_original_pl": "Jaka jest data i miejsce każdej debaty?",
        "question": "What are the day and place of each debate?",
        "question_pl": "Jaki jest dzień i miejsce każdej debaty?",
        "query": "SELECT Date ,  Venue FROM debate",
        "query_pl": "SELECT Date ,  Venue FROM debate"
    },
    {
        "db_id": "debate",
        "question_original": "List the dates of debates with number of audience bigger than 150",
        "question_original_pl": "Wymień daty debat z liczbą widzów większą niż 150.",
        "question": "List the day of debates with number of audience bigger than 150",
        "question_pl": "Wymień dni debat z liczbą widzów większą niż 150",
        "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150",
        "query_pl": "SELECT Date FROM debate WHERE Num_of_Audience  >  150"
    },
    {
        "db_id": "debate",
        "question_original": "Show the names of people, and dates and venues of debates they are on the affirmative side.",
        "question_original_pl": "Pokaż nazwiska osób oraz daty i miejsca debat, w których są po stronie twierdzącej.",
        "question": "Show the names of people, and day and place of debates they are on the affirmative side.",
        "question_pl": "Pokaż nazwiska osób oraz dzień i miejsce debat, w których są po stronie twierdzącej.",
        "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
        "query_pl": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID"
    },
    {
        "db_id": "debate",
        "question_original": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.",
        "question_original_pl": "Pokaż nazwiska osób oraz daty i miejsca debat, w których występują po stronie negatywnej, uporządkowane w rosnącej kolejności alfabetycznej nazwisk.",
        "question": "Show the names of people, and days and place of debates they are on the negative side, ordered in ascending alphabetical order of name.",
        "question_pl": "Pokaż nazwiska osób oraz dni i miejsca ich debat po stronie ujemnej, uporządkowane w rosnącej kolejności alfabetycznej nazwisk.",
        "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC",
        "query_pl": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "What is the name of the customer who has made the largest amount of claim in a single claim?",
        "question_original_pl": "Jak nazywa się klient, który zgłosił największą kwotę roszczenia w pojedynczym roszczeniu?",
        "question": "What is the name of the client who has made the largest amount of claim in a single claim?",
        "question_pl": "Jak nazywa się klient, który złożył roszczenie na największą kwotę w ramach pojedynczego roszczenia?",
        "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)",
        "query_pl": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customer made the largest amount of claim in a single claim? Return the customer details.",
        "question_original_pl": "Który klient zgłosił największą kwotę roszczenia w pojedynczym roszczeniu? Zwróć dane klienta.",
        "question": "Which client made the largest amount of claim in a single claim? Return the client information.",
        "question_pl": "Który klient zgłosił największą kwotę roszczenia w pojedynczym roszczeniu? Zwróć informacje o kliencie.",
        "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)",
        "query_pl": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "What is the name of the customer who has made the minimum amount of payment in one claim?",
        "question_original_pl": "Jak nazywa się klient, który dokonał minimalnej kwoty płatności w jednym wniosku?",
        "question": "What is the name of the client who has made the minimum amount of payment in one claim?",
        "question_pl": "Jak nazywa się klient, który wpłacił minimalną kwotę w ramach jednego roszczenia?",
        "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)",
        "query_pl": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customer made the smallest amount of claim in one claim? Return the customer details.",
        "question_original_pl": "Który klient zgłosił najmniejszą kwotę roszczenia w jednym roszczeniu? Zwróć dane klienta.",
        "question": "Which client made the smallest amount of claim in one claim? Return the client information.",
        "question_pl": "Który klient złożył wniosek na najmniejszą kwotę w jednym wniosku? Zwróć informacje o kliencie.",
        "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)",
        "query_pl": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Find the number of distinct stages in claim processing.",
        "question_original_pl": "Znajdź liczbę poszczególnych etapów przetwarzania roszczenia.",
        "question": "Find the number of different stages in claim processing.",
        "question_pl": "Znajdź liczbę różnych etapów przetwarzania roszczenia.",
        "query": "SELECT count(*) FROM claims_processing_stages",
        "query_pl": "SELECT count(*) FROM claims_processing_stages"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Find the names of customers whose name contains \"Diana\".",
        "question_original_pl": "Znajdź nazwy klientów, których imię zawiera \"Diana\".",
        "question": "Find the names of clients whose name contains \"Diana\".",
        "question_pl": "Znajdź nazwiska klientów, których nazwa zawiera \"Diana\".",
        "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
        "query_pl": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customers have the substring \"Diana\" in their names? Return the customer details.",
        "question_original_pl": "Którzy klienci mają w nazwie podciąg \"Diana\"? Zwróć szczegóły klienta.",
        "question": "Which clients have the substring \"Diana\" in their names? Return the client information.",
        "question_pl": "Którzy klienci mają w nazwie podciąg \"Diana\"? Zwróć informacje o kliencie.",
        "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
        "query_pl": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.",
        "question_original_pl": "Którzy klienci mają polisę ubezpieczeniową z kodem typu \"Zastępca\"? Podaj mi szczegóły klienta.",
        "question": "Which clients have an insurance policy with the type code \"Deputy\"? Give me the client information.",
        "question_pl": "Którzy klienci mają polisę ubezpieczeniową z kodem typu \"Zastępca\"? Podaj mi informacje o kliencie.",
        "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"",
        "query_pl": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Zastępca\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.",
        "question_original_pl": "Którzy klienci mają polisę ubezpieczeniową z kodem typu \"Zastępca\" lub \"Mundurowy\"? Zwróć dane klienta.",
        "question": "Which clients have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the client information.",
        "question_pl": "Którzy klienci mają polisę ubezpieczeniową z kodem typu \"Zastępca\" lub \"Mundurowy\"? Zwróć informacje o kliencie.",
        "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"",
        "query_pl": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Zastępca\" OR t1.policy_type_code  =  \"Mundur\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customer have the most policies? Give me the customer details.",
        "question_original_pl": "Który klient ma najwięcej polis? Podaj mi szczegóły klienta.",
        "question": "Which client have the most policies? Give me the client information.",
        "question_pl": "Który klient ma najwięcej polis? Podaj mi informacje o kliencie.",
        "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "What is the description of the claim status \"Open\"?",
        "question_original_pl": "Jaki jest opis statusu roszczenia \"Otwarte\"?",
        "question": "What is the describing content of the claim status \"Open\"?",
        "question_pl": "Jaka jest opisowa treść statusu roszczenia \"Otwarte\"?",
        "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
        "query_pl": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Otwórz\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Find the description of the claim status \"Open\".",
        "question_original_pl": "Znajdź opis statusu roszczenia \"Otwarte\".",
        "question": "Find the describing content of the claim status \"Open\".",
        "question_pl": "Znajdź treść opisującą status roszczenia \"Otwarte\".",
        "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
        "query_pl": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Otwórz\""
    },
    {
        "db_id": "insurance_and_eClaims",
        "question_original": "Which customer is associated with the latest policy?",
        "question_original_pl": "Który klient jest powiązany z najnowszą polisą?",
        "question": "Which client is associated with the latest policy?",
        "question_pl": "Który klient jest powiązany z najnowszą polityką?",
        "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)",
        "query_pl": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show the id, the date of account opened, the account name, and other account detail for all accounts.",
        "question_original_pl": "Pokaż identyfikator, datę otwarcia konta, nazwę konta i inne szczegóły dotyczące wszystkich kont.",
        "question": "Show the id, the day of account opened, the account name, and other account information for all accounts.",
        "question_pl": "Pokaż identyfikator, dzień otwarcia konta, nazwę konta i inne informacje o koncie dla wszystkich kont.",
        "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",
        "query_pl": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the ids, date opened, name, and other details for all accounts?",
        "question_original_pl": "Jakie są identyfikatory, daty otwarcia, nazwy i inne szczegóły dotyczące wszystkich kont?",
        "question": "What are the ids, date opened, name, and other information for all accounts?",
        "question_pl": "Jakie są identyfikatory, daty otwarcia, nazwy i inne informacje dla wszystkich kont?",
        "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",
        "query_pl": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.",
        "question_original_pl": "Pokaż identyfikator, nazwę konta i inne szczegóły konta dla wszystkich kont klienta o imieniu \"Meaghan\".",
        "question": "Show the id, the account name, and other account information for all accounts by the customer with first name 'Meaghan'.",
        "question_pl": "Pokaż identyfikator, nazwę konta i inne informacje o koncie dla wszystkich kont klienta o imieniu \"Meaghan\".",
        "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'",
        "query_pl": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?",
        "question_original_pl": "Jakie są identyfikatory, nazwy, daty otwarcia i inne szczegóły dotyczące kont odpowiadających klientowi o imieniu \"Meaghan\"?",
        "question": "What are the ids, names, day of opening, and other information for accounts corresponding to the customer with the first name \"Meaghan\"?",
        "question_pl": "Jakie są identyfikatory, nazwy, dzień otwarcia i inne informacje dla kont odpowiadających klientowi o imieniu \"Meaghan\"?",
        "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'",
        "query_pl": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.",
        "question_original_pl": "Pokaż nazwę konta i inne szczegóły dotyczące wszystkich kont klienta o imieniu Meaghan i nazwisku Keeling.",
        "question": "Show the account name and other account information for all accounts by the customer with first name Meaghan and last name Keeling.",
        "question_pl": "Pokaż nazwę konta i inne informacje o koncie dla wszystkich kont klienta o imieniu Meaghan i nazwisku Keeling.",
        "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"",
        "query_pl": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?",
        "question_original_pl": "Jakie są nazwy i inne szczegóły dotyczące kont odpowiadających klientowi o nazwie Meaghan Keeling?",
        "question": "What are the names and other information for accounts corresponding to the customer named Meaghan Keeling?",
        "question_pl": "Jakie są nazwy i inne informacje dotyczące kont odpowiadających klientowi o nazwie Meaghan Keeling?",
        "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"",
        "query_pl": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the distinct first names, last names, and phone numbers for customers with accounts?",
        "question_original_pl": "Jakie są imiona, nazwiska i numery telefonów klientów posiadających konta?",
        "question": "What are the different full names, and telephone numbers for clients with accounts?",
        "question_pl": "Jakie są różne imiona i nazwiska oraz numery telefonów klientów posiadających konta?",
        "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What is the customer id, first and last name with most number of accounts.",
        "question_original_pl": "Jaki jest identyfikator klienta, imię i nazwisko z największą liczbą kont.",
        "question": "What is the client id, full name with most number of accounts.",
        "question_pl": "Jaki jest identyfikator klienta, pełna nazwa z największą liczbą kont.",
        "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show the number of customers for each gender.",
        "question_original_pl": "Pokaż liczbę klientów każdej płci.",
        "question": "Show the number of clients for each sex.",
        "question_pl": "Pokaż liczbę klientów dla każdej płci.",
        "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender",
        "query_pl": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show all product sizes.",
        "question_original_pl": "Pokaż wszystkie rozmiary produktów.",
        "question": "Show all goods sizes.",
        "question_pl": "Pokaż wszystkie rozmiary towarów.",
        "query": "SELECT DISTINCT product_size FROM Products",
        "query_pl": "SELECT DISTINCT product_size FROM Products"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the different product sizes?",
        "question_original_pl": "Jakie są różne rozmiary produktów?",
        "question": "What are the different goods sizes?",
        "question_pl": "Jakie są różne rozmiary towarów?",
        "query": "SELECT DISTINCT product_size FROM Products",
        "query_pl": "SELECT DISTINCT product_size FROM Products"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show all product colors.",
        "question_original_pl": "Pokaż wszystkie kolory produktu.",
        "question": "Show all goods colours.",
        "question_pl": "Pokaż wszystkie kolory towarów.",
        "query": "SELECT DISTINCT product_color FROM Products",
        "query_pl": "SELECT DISTINCT product_color FROM Products"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the different product colors?",
        "question_original_pl": "Jakie są różne kolory produktów?",
        "question": "What are the different goods colours?",
        "question_pl": "Jakie są różne kolory towarów?",
        "query": "SELECT DISTINCT product_color FROM Products",
        "query_pl": "SELECT DISTINCT product_color FROM Products"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What is the invoice number and invoice date for the invoice with most number of transactions?",
        "question_original_pl": "Jaki jest numer i data faktury z największą liczbą transakcji?",
        "question": "What is the invoice number and invoice day for the invoice with most number of transactions?",
        "question_pl": "Jaki jest numer faktury i dzień faktury dla faktury z największą liczbą transakcji?",
        "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?",
        "question_original_pl": "Jaki jest numer i data faktury odpowiadającej fakturze z największą liczbą transakcji?",
        "question": "What is the invoice number and invoice day corresponding to the invoice with the greatest number of transactions?",
        "question_pl": "Jaki numer faktury i dzień faktury odpowiada fakturze z największą liczbą transakcji?",
        "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show invoice dates and order id and details for all invoices.",
        "question_original_pl": "Pokaż daty faktur, identyfikatory zamówień i szczegóły wszystkich faktur.",
        "question": "Show invoice days and order id and details for all invoices.",
        "question_pl": "Pokaż dni wystawienia faktury oraz identyfikator i szczegóły zamówienia dla wszystkich faktur.",
        "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id",
        "query_pl": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the invoice dates, order ids, and order details for all invoices?",
        "question_original_pl": "Jakie są daty faktur, identyfikatory zamówień i szczegóły zamówień dla wszystkich faktur?",
        "question": "What are the invoice days, order ids, and order detail for all invoices?",
        "question_pl": "Jakie są dni wystawienia faktury, identyfikatory zamówień i szczegóły zamówień dla wszystkich faktur?",
        "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id",
        "query_pl": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What is the order id and order details for the order more than two invoices.",
        "question_original_pl": "Jaki jest identyfikator zamówienia i szczegóły zamówienia dla zamówienia obejmującego więcej niż dwie faktury.",
        "question": "What is the order id and order information for the order more than two invoices.",
        "question_pl": "Jaki jest identyfikator zamówienia i informacje o zamówieniu dla więcej niż dwóch faktur.",
        "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2",
        "query_pl": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What is the customer last name, id and phone number with most number of orders?",
        "question_original_pl": "Jakie jest nazwisko, identyfikator i numer telefonu klienta z największą liczbą zamówień?",
        "question": "What is the client family name, id and telephone number with most number of orders?",
        "question_pl": "Jakie jest imię i nazwisko, numer identyfikacyjny i numer telefonu rodziny klientów z największą liczbą zamówień?",
        "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show all product names without an order.",
        "question_original_pl": "Pokaż wszystkie nazwy produktów bez kolejności.",
        "question": "Show all goods names without an order.",
        "question_pl": "Pokaż wszystkie nazwy towarów bez zamówienia.",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_pl": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the names of products that have never been ordered?",
        "question_original_pl": "Jakie są nazwy produktów, które nigdy nie zostały zamówione?",
        "question": "What are the names of goods that have never been ordered?",
        "question_pl": "Jakie są nazwy towarów, które nigdy nie zostały zamówione?",
        "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
        "query_pl": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show all product names and the total quantity ordered for each product name.",
        "question_original_pl": "Pokaż wszystkie nazwy produktów i całkowitą ilość zamówioną dla każdej nazwy produktu.",
        "question": "Show all goods names and the total quantity ordered for each goods name.",
        "question_pl": "Pokaż wszystkie nazwy towarów i całkowitą ilość zamówioną dla każdej nazwy towaru.",
        "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name",
        "query_pl": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are the different product names, and what is the sum of quantity ordered for each product?",
        "question_original_pl": "Jakie są nazwy poszczególnych produktów i jaka jest suma ilości zamówionych dla każdego z nich?",
        "question": "What are the different goods names, and what is the sum of quantity ordered for each goods?",
        "question_pl": "Jak nazywają się poszczególne towary i jaka jest suma ilości zamówionych dla każdego towaru?",
        "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name",
        "query_pl": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show the product ids and the number of unique orders containing each product.",
        "question_original_pl": "Pokaż identyfikatory produktów i liczbę unikalnych zamówień zawierających każdy produkt.",
        "question": "Show the goods ids and the number of unique orders containing each goods.",
        "question_pl": "Pokaż identyfikatory towarów i liczbę unikalnych zamówień zawierających każdy towar.",
        "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id",
        "query_pl": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "How many distinct order ids correspond to each product?",
        "question_original_pl": "Ile różnych identyfikatorów zamówień odpowiada każdemu produktowi?",
        "question": "How many different order ids correspond to each goods?",
        "question_pl": "Ile różnych identyfikatorów zamówień odpowiada poszczególnym towarom?",
        "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id",
        "query_pl": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show all product names and the number of customers having an order on each product.",
        "question_original_pl": "Pokaż wszystkie nazwy produktów i liczbę klientów, którzy złożyli zamówienie na każdy produkt.",
        "question": "Show all goods names and the number of clients having an order on each goods.",
        "question_pl": "Pokaż nazwy wszystkich towarów i liczbę klientów mających zamówienie na każdy towar.",
        "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",
        "query_pl": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "What are teh names of the different products, as well as the number of customers who have ordered each product.",
        "question_original_pl": "Podaj nazwy poszczególnych produktów oraz liczbę klientów, którzy zamówili każdy z nich.",
        "question": "What are teh names of the different goods, as well as the number of customers who have ordered each goods.",
        "question_pl": "Podaj nazwy poszczególnych towarów oraz liczbę klientów, którzy zamówili każdy z nich.",
        "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",
        "query_pl": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show order ids and the number of products in each order.",
        "question_original_pl": "Pokaż identyfikatory zamówień i liczbę produktów w każdym zamówieniu.",
        "question": "Show order ids and the number of goods in each order.",
        "question_pl": "Pokaż identyfikatory zamówień i liczbę towarów w każdym zamówieniu.",
        "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id",
        "query_pl": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "How many different products correspond to each order id?",
        "question_original_pl": "Ile różnych produktów odpowiada każdemu identyfikatorowi zamówienia?",
        "question": "How many different goods correspond to each order id?",
        "question_pl": "Ile różnych towarów odpowiada każdemu identyfikatorowi zamówienia?",
        "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id",
        "query_pl": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Show order ids and the total quantity in each order.",
        "question_original_pl": "Pokaż identyfikatory zamówień i całkowitą ilość w każdym zamówieniu.",
        "question": "Show order ids and the total amount in each order.",
        "question_pl": "Pokaż identyfikatory zamówień i łączną kwotę w każdym zamówieniu.",
        "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id",
        "query_pl": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Give the order ids for all orders, as well as the total product quantity in each.",
        "question_original_pl": "Podaj identyfikatory zamówień dla wszystkich zamówień, a także całkowitą ilość produktów w każdym z nich.",
        "question": "Give the order ids for all orders, as well as the total goods amount in each.",
        "question_pl": "Podaj identyfikatory zamówień dla wszystkich zamówień, a także całkowitą ilość towarów w każdym z nich.",
        "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id",
        "query_pl": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "How many products were not included in any order?",
        "question_original_pl": "Ile produktów nie zostało uwzględnionych w żadnym zamówieniu?",
        "question": "How many goods were not included in any order?",
        "question_pl": "Ile towarów nie zostało uwzględnionych w żadnym zamówieniu?",
        "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "query_pl": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
    },
    {
        "db_id": "customers_and_invoices",
        "question_original": "Count the number of products that were never ordered.",
        "question_original_pl": "Policz liczbę produktów, które nigdy nie zostały zamówione.",
        "question": "Count the number of goods that were never ordered.",
        "question_pl": "Policz liczbę towarów, które nigdy nie zostały zamówione.",
        "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
        "query_pl": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
    },
    {
        "db_id": "wedding",
        "question_original": "How many churches opened before 1850 are there?",
        "question_original_pl": "Ile jest kościołów otwartych przed 1850 rokiem?",
        "question": "How many churches started before 1850 are there?",
        "question_pl": "Ile jest kościołów założonych przed 1850 rokiem?",
        "query": "SELECT count(*) FROM Church WHERE Open_Date  <  1850",
        "query_pl": "SELECT count(*) FROM Church WHERE Open_Date  <  1850"
    },
    {
        "db_id": "wedding",
        "question_original": "Show the name, open date, and organizer for all churches.",
        "question_original_pl": "Pokaż nazwę, datę otwarcia i organizatora dla wszystkich kościołów.",
        "question": "Show the name, start day, and organizer for all churches.",
        "question_pl": "Pokaż nazwę, dzień rozpoczęcia i organizatora dla wszystkich kościołów.",
        "query": "SELECT name ,  open_date ,  organized_by FROM Church",
        "query_pl": "SELECT name ,  open_date ,  organized_by FROM Church"
    },
    {
        "db_id": "wedding",
        "question_original": "Show the country where people older than 30 and younger than 25 are from.",
        "question_original_pl": "Wskaż kraj, z którego pochodzą osoby starsze niż 30 lat i młodsze niż 25 lat.",
        "question": "Show the nation where people older than 30 and younger than 25 are from.",
        "question_pl": "Wskaż naród, z którego pochodzą osoby starsze niż 30 lat i młodsze niż 25 lat.",
        "query": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30",
        "query_pl": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30"
    },
    {
        "db_id": "wedding",
        "question_original": "Show the name and country for all people whose age is smaller than the average.",
        "question_original_pl": "Pokaż imię i nazwisko oraz kraj wszystkich osób, których wiek jest niższy niż średnia.",
        "question": "Show the name and nation for all people whose age is smaller than the average.",
        "question_pl": "Pokaż imię i naród wszystkich osób, których wiek jest niższy niż średnia.",
        "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)",
        "query_pl": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)"
    },
    {
        "db_id": "wedding",
        "question_original": "Show all countries and the number of people from each country.",
        "question_original_pl": "Pokaż wszystkie kraje i liczbę osób z każdego kraju.",
        "question": "Show all nations and the number of people from each nation.",
        "question_pl": "Pokaż wszystkie narody i liczbę osób z każdego narodu.",
        "query": "SELECT country ,  count(*) FROM people GROUP BY country",
        "query_pl": "SELECT country ,  count(*) FROM people GROUP BY country"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Show all artist name, age, and country ordered by the yeared they joined.",
        "question_original_pl": "Pokaż nazwiska, wiek i kraj wszystkich artystów uporządkowane według lat, do których dołączyli.",
        "question": "Show all artist name, age, and nation ordered by the yeared they joined.",
        "question_pl": "Pokaż imię i nazwisko, wiek i naród wszystkich artystów uporządkowane według roku, w którym dołączyli.",
        "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join",
        "query_pl": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "What are the names, ages, and countries of artists, sorted by the year they joined?",
        "question_original_pl": "Jakie są nazwiska, wiek i kraje artystów, posortowane według roku, w którym dołączyli?",
        "question": "What are the names, ages, and nations of artists, sorted by the year they joined?",
        "question_pl": "Jakie są nazwiska, wiek i narody artystów, posortowane według roku, w którym dołączyli?",
        "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join",
        "query_pl": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "What are all distinct country for artists?",
        "question_original_pl": "Jakie są wszystkie odrębne kraje dla artystów?",
        "question": "What are all different nation for artists?",
        "question_pl": "Jakie są różne narody dla artystów?",
        "query": "SELECT DISTINCT country FROM artist",
        "query_pl": "SELECT DISTINCT country FROM artist"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Return the different countries for artists.",
        "question_original_pl": "Zwróć różne kraje dla artystów.",
        "question": "Return the different nations for artists.",
        "question_pl": "Zwróć różne narody dla artystów.",
        "query": "SELECT DISTINCT country FROM artist",
        "query_pl": "SELECT DISTINCT country FROM artist"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "What is the name and country for the artist with most number of exhibitions?",
        "question_original_pl": "Jakie jest nazwisko i kraj artysty z największą liczbą wystaw?",
        "question": "What is the name and nation for the artist with most number of exhibitions?",
        "question_pl": "Jak nazywa się i z jakiego kraju pochodzi artysta z największą liczbą wystaw?",
        "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "What is the theme and artist name for the exhibition with a ticket price higher than the average?",
        "question_original_pl": "Jaki jest temat i nazwisko artysty wystawy, na którą cena biletu jest wyższa niż średnia?",
        "question": "What is the topic and artist name for the exhibition with a ticket price higher than the average?",
        "question_pl": "Jaki jest temat i nazwisko artysty wystawy z ceną biletu wyższą niż średnia?",
        "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)",
        "query_pl": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.",
        "question_original_pl": "Zwróć nazwiska artystów i tematy ich wystaw, których cena biletu była wyższa niż średnia.",
        "question": "Return the names of artists and the topics of their exhibitions that had a ticket price higher than average.",
        "question_pl": "Zwróć nazwiska artystów i tematy ich wystaw, których cena biletu była wyższa od średniej.",
        "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)",
        "query_pl": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Show theme and year for all exhibitions in an descending order of ticket price.",
        "question_original_pl": "Pokaż temat i rok dla wszystkich wystaw w kolejności malejącej ceny biletu.",
        "question": "Show topic and year for all exhibitions in an descending order of ticket price.",
        "question_pl": "Pokaż temat i rok wszystkich wystaw w porządku malejącym według ceny biletu.",
        "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC",
        "query_pl": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "What is the theme, date, and attendance for the exhibition in year 2004?",
        "question_original_pl": "Jaki jest temat, data i frekwencja na wystawie w 2004 roku?",
        "question": "What is the topic, day, and number of attendees for the exhibition in year 2004?",
        "question_pl": "Jaki jest temat, dzień i liczba uczestników wystawy w roku 2004?",
        "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004",
        "query_pl": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Return the themes, dates, and attendance for exhibitions that happened in 2004.",
        "question_original_pl": "Zwróć tematy, daty i frekwencję wystaw, które odbyły się w 2004 roku.",
        "question": "Return the topics, day, and number of attendee for exhibitions that happened in 2004.",
        "question_pl": "Zwróć tematy, dni i liczbę uczestników wystaw, które odbyły się w 2004 roku.",
        "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004",
        "query_pl": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
    },
    {
        "db_id": "theme_gallery",
        "question_original": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?",
        "question_original_pl": "Które tematy miały odpowiadające im wystawy z frekwencją zarówno poniżej 100, jak i powyżej 500 osób?",
        "question": "Which topics have had corresponding exhibitions that have had attendance both below 100 and above 500?",
        "question_pl": "Które tematy miały odpowiadające im wystawy z frekwencją poniżej 100 i powyżej 500 osób?",
        "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500",
        "query_pl": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the id of the item whose title is \"orange\".",
        "question_original_pl": "Znajdź identyfikator elementu, którego tytuł to \"pomarańczowy\".",
        "question": "Find the id of the goods whose title is \"orange\".",
        "question_pl": "Znajdź identyfikator towaru, którego nazwa to \"pomarańczowy\".",
        "query": "SELECT i_id FROM item WHERE title  =  \"orange\"",
        "query_pl": "SELECT i_id FROM item WHERE title  =  \"pomarańczowy\""
    },
    {
        "db_id": "epinions_1",
        "question_original": "List all information in the item table.",
        "question_original_pl": "Wymień wszystkie informacje w tabeli pozycji.",
        "question": "List all information in the goods table.",
        "question_pl": "Wymień wszystkie informacje w tabeli towarów.",
        "query": "SELECT * FROM item",
        "query_pl": "SELECT * FROM item"
    },
    {
        "db_id": "epinions_1",
        "question_original": "How many different items were reviewed by some users?",
        "question_original_pl": "Ile różnych przedmiotów zostało sprawdzonych przez niektórych użytkowników?",
        "question": "How many different goods were reviewed by some users?",
        "question_pl": "Ile różnych towarów zostało sprawdzonych przez niektórych użytkowników?",
        "query": "SELECT count(DISTINCT i_id) FROM review",
        "query_pl": "SELECT count(DISTINCT i_id) FROM review"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the number of items that did not receive any review.",
        "question_original_pl": "Znajdź liczbę elementów, które nie otrzymały żadnej recenzji.",
        "question": "Find the number of goods that did not receive any review.",
        "question_pl": "Znajdź liczbę towarów, które nie otrzymały żadnej recenzji.",
        "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
        "query_pl": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the titles of items whose rating is higher than the average review rating of all items.",
        "question_original_pl": "Znajdź tytuły przedmiotów, których ocena jest wyższa niż średnia ocena wszystkich przedmiotów.",
        "question": "Find the titles of goods whose rating is higher than the average review rating of all goods.",
        "question_pl": "Znajdź tytuły towarów, których ocena jest wyższa niż średnia ocena wszystkich towarów.",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the titles of items that received any rating below 5.",
        "question_original_pl": "Znajdź tytuły przedmiotów, które otrzymały ocenę poniżej 5.",
        "question": "Find the titles of goods that received any rating below 5.",
        "question_pl": "Znajdź tytuły towarów, które otrzymały ocenę poniżej 5.",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the titles of items that received both a rating higher than 8 and a rating below 5.",
        "question_original_pl": "Znajdź tytuły artykułów, które otrzymały zarówno ocenę wyższą niż 8, jak i niższą niż 5.",
        "question": "Find the titles of goods that received both a rating higher than 8 and a rating below 5.",
        "question_pl": "Znajdź tytuły towarów, które otrzymały zarówno ocenę wyższą niż 8, jak i niższą niż 5.",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the names of items whose rank is higher than 3 and whose average rating is above 5.",
        "question_original_pl": "Znajdź nazwy przedmiotów, których ranga jest wyższa niż 3 i których średnia ocena jest wyższa niż 5.",
        "question": "Find the names of goods whose rank is higher than 3 and whose average rating is above 5.",
        "question_pl": "Znajdź nazwy towarów, których ranga jest wyższa niż 3 i których średnia ocena jest wyższa niż 5.",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the name of the item with the lowest average rating.",
        "question_original_pl": "Znajdź nazwę przedmiotu z najniższą średnią oceną.",
        "question": "Find the name of the goods with the lowest average rating.",
        "question_pl": "Znajdź nazwę towaru z najniższą średnią oceną.",
        "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1",
        "query_pl": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1"
    },
    {
        "db_id": "epinions_1",
        "question_original": "List the titles of all items in alphabetic order .",
        "question_original_pl": "Wymień tytuły wszystkich przedmiotów w kolejności alfabetycznej.",
        "question": "List the titles of all goods in alphabetic order .",
        "question_pl": "Wymień tytuły wszystkich towarów w kolejności alfabetycznej.",
        "query": "SELECT title FROM item ORDER BY title",
        "query_pl": "SELECT title FROM item ORDER BY title"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the name and id of the item with the highest average rating.",
        "question_original_pl": "Znajdź nazwę i identyfikator przedmiotu z najwyższą średnią oceną.",
        "question": "Find the name and id of the goods with the highest average rating.",
        "question_pl": "Znajdź nazwę i identyfikator towaru z najwyższą średnią oceną.",
        "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1",
        "query_pl": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the names of the items that did not receive any review.",
        "question_original_pl": "Znajdź nazwy przedmiotów, które nie otrzymały żadnej recenzji.",
        "question": "Find the names of the goods that did not receive any review.",
        "question_pl": "Znajdź nazwy towarów, które nie otrzymały żadnej recenzji.",
        "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
        "query_pl": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
    },
    {
        "db_id": "epinions_1",
        "question_original": "Find the number of items without any review.",
        "question_original_pl": "Znajdź liczbę elementów bez żadnej recenzji.",
        "question": "Find the number of goods without any review.",
        "question_pl": "Znajdź liczbę towarów bez przeglądu.",
        "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
        "query_pl": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
    },
    {
        "db_id": "riding_club",
        "question_original": "How many players are there?",
        "question_original_pl": "Ilu jest graczy?",
        "question": "How many participants are there?",
        "question_pl": "Ilu jest uczestników?",
        "query": "SELECT count(*) FROM player",
        "query_pl": "SELECT count(*) FROM player"
    },
    {
        "db_id": "riding_club",
        "question_original": "What are the gender and occupation of players?",
        "question_original_pl": "Jaka jest płeć i zawód graczy?",
        "question": "What are the sex and occupation of participants?",
        "question_pl": "Jaka jest płeć i zawód uczestników?",
        "query": "SELECT Gender ,  Occupation FROM player",
        "query_pl": "SELECT Gender ,  Occupation FROM player"
    },
    {
        "db_id": "riding_club",
        "question_original": "List the name and residence for players whose occupation is not \"Researcher\".",
        "question_original_pl": "Wymień imię i nazwisko oraz miejsce zamieszkania graczy, których zawód nie jest \"Badaczem\".",
        "question": "List the name and habitation for gamers whose occupation is not \"Researcher\".",
        "question_pl": "Podaj imię i nazwisko oraz miejsce zamieszkania graczy, których zawód nie jest \"Badaczem\".",
        "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\"",
        "query_pl": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Badacz\""
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".",
        "question_original_pl": "Pokaż nazwiska sponsorów graczy, których miejsce zamieszkania to \"Brandon\" lub \"Birtle\".",
        "question": "Show the names of sponsors of participants whose residence is either \"Brandon\" or \"Birtle\".",
        "question_pl": "Pokaż nazwiska sponsorów uczestników, których miejsce zamieszkania to \"Brandon\" lub \"Birtle\".",
        "query": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\"",
        "query_pl": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\""
    },
    {
        "db_id": "riding_club",
        "question_original": "Show different occupations along with the number of players in each occupation.",
        "question_original_pl": "Pokaż różne zawody wraz z liczbą graczy w każdym zawodzie.",
        "question": "Show different occupations along with the number of participants in each occupation.",
        "question_pl": "Pokaż różne zawody wraz z liczbą uczestników w każdym zawodzie.",
        "query": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation",
        "query_pl": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation"
    },
    {
        "db_id": "riding_club",
        "question_original": "Please show the most common occupation of players.",
        "question_original_pl": "Wskaż najczęstszy zawód wykonywany przez graczy.",
        "question": "Please show the most common occupation of participants.",
        "question_pl": "Wskaż najczęstszy zawód wykonywany przez uczestników.",
        "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the residences that have at least two players.",
        "question_original_pl": "Pokaż rezydencje, w których znajduje się co najmniej dwóch graczy.",
        "question": "Show the habitations that have at least two players.",
        "question_pl": "Pokaż siedliska, które mają co najmniej dwóch graczy.",
        "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the names of players and names of their coaches.",
        "question_original_pl": "Pokaż nazwiska zawodników i ich trenerów.",
        "question": "Show the names of participants and names of their coaches.",
        "question_pl": "Pokaż nazwiska uczestników i nazwiska ich trenerów.",
        "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
        "query_pl": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID"
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the names of players coached by the rank 1 coach.",
        "question_original_pl": "Pokaż nazwiska zawodników trenowanych przez trenera rangi 1.",
        "question": "Show the names of participants coached by the rank 1 coach.",
        "question_pl": "Pokaż nazwiska uczestników trenowanych przez trenera rangi 1.",
        "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1",
        "query_pl": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1"
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the names of players and names of their coaches in descending order of the votes of players.",
        "question_original_pl": "Pokaż nazwiska graczy i nazwiska ich trenerów w kolejności malejącej według głosów graczy.",
        "question": "Show the names of participants and names of their instructors in descending order of the votes of participants.",
        "question_pl": "Pokaż nazwiska uczestników i nazwiska ich instruktorów w kolejności malejącej liczby głosów uczestników.",
        "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC",
        "query_pl": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC"
    },
    {
        "db_id": "riding_club",
        "question_original": "List the names of players that do not have coaches.",
        "question_original_pl": "Wymień nazwiska zawodników, którzy nie mają trenerów.",
        "question": "List the names of participants that do not have coaches.",
        "question_pl": "Wymień nazwiska uczestników, którzy nie mają trenerów.",
        "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)",
        "query_pl": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)"
    },
    {
        "db_id": "riding_club",
        "question_original": "Show the residences that have both a player of gender \"M\" and a player of gender \"F\".",
        "question_original_pl": "Pokaż rezydencje, w których znajduje się zarówno gracz płci \"M\", jak i gracz płci \"F\".",
        "question": "Show the habitations that have both a player of gender \"M\" and a player of gender \"F\".",
        "question_pl": "Wskaż siedliska, w których znajduje się zarówno gracz płci \"M\", jak i gracz płci \"F\".",
        "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\"",
        "query_pl": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\""
    },
    {
        "db_id": "riding_club",
        "question_original": "How many coaches does each club has? List the club id, name and the number of coaches.",
        "question_original_pl": "Ilu trenerów ma każdy klub? Wymień identyfikator klubu, nazwę i liczbę trenerów.",
        "question": "How many instructors does each club has? List the club id, name and the number of instructors.",
        "question_pl": "Ilu instruktorów ma każdy klub? Wymień identyfikator klubu, nazwę i liczbę instruktorów.",
        "query": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id",
        "query_pl": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id"
    },
    {
        "db_id": "gymnast",
        "question_original": "How many gymnasts are there?",
        "question_original_pl": "Ilu jest gimnastyków?",
        "question": "How many gymnastics athletes are there?",
        "question_pl": "Ilu jest sportowców uprawiających gimnastykę?",
        "query": "SELECT count(*) FROM gymnast",
        "query_pl": "SELECT count(*) FROM gymnast"
    },
    {
        "db_id": "gymnast",
        "question_original": "Count the number of gymnasts.",
        "question_original_pl": "Policz liczbę gimnastyków.",
        "question": "Count the number of gymnastics athletes.",
        "question_pl": "Policz liczbę sportowców uprawiających gimnastykę.",
        "query": "SELECT count(*) FROM gymnast",
        "query_pl": "SELECT count(*) FROM gymnast"
    },
    {
        "db_id": "gymnast",
        "question_original": "List the total points of gymnasts in descending order.",
        "question_original_pl": "Wymień łączną liczbę punktów gimnastyczek w kolejności malejącej.",
        "question": "List the gross score of gymnasts in descending order.",
        "question_pl": "Wymień wyniki brutto gimnastyczek w kolejności malejącej.",
        "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
        "query_pl": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the total points for all gymnasts, ordered by total points descending?",
        "question_original_pl": "Jakie są łączne punkty wszystkich gimnastyczek, uporządkowane malejąco według łącznej liczby punktów?",
        "question": "What are the gross score for all gymnasts, ordered by total points descending?",
        "question_pl": "Jakie są wyniki brutto wszystkich gimnastyczek, uporządkowane malejąco według łącznej liczby punktów?",
        "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
        "query_pl": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
    },
    {
        "db_id": "gymnast",
        "question_original": "List the total points of gymnasts in descending order of floor exercise points.",
        "question_original_pl": "Wymień łączną liczbę punktów gimnastyczek w kolejności malejącej w ćwiczeniach na podłodze.",
        "question": "List the gross score of gymnasts in descending order of floor exercise points.",
        "question_pl": "Wymień wyniki brutto gimnastyczek w kolejności malejącej punktów za ćwiczenia na podłodze.",
        "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
        "query_pl": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
        "question_original_pl": "Jakie są łączne punkty gimnastyczek, uporządkowane malejąco według ich punktów za ćwiczenia na podłodze?",
        "question": "What are the gross score of gymnasts, ordered by their floor exercise points descending?",
        "question_pl": "Jakie są wyniki brutto gimnastyczek, uporządkowane według malejącej liczby punktów za ćwiczenia na podłodze?",
        "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
        "query_pl": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
    },
    {
        "db_id": "gymnast",
        "question_original": "What is the average horizontal bar points for all gymnasts?",
        "question_original_pl": "Jaka jest średnia liczba punktów na drążku poziomym dla wszystkich gimnastyczek?",
        "question": "What is the average horizontal bar score for all gymnasts?",
        "question_pl": "Jaki jest średni wynik na drążku poziomym dla wszystkich gimnastyczek?",
        "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
        "query_pl": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
    },
    {
        "db_id": "gymnast",
        "question_original": "Return the average horizontal bar points across all gymnasts.",
        "question_original_pl": "Zwróć średnią liczbę punktów uzyskanych na drążku poziomym przez wszystkich gimnastyków.",
        "question": "Return the average horizontal bar score across all gymnastics athletes.",
        "question_pl": "Zwróć średni wynik uzyskany na drążku poziomym przez wszystkich gimnastyków.",
        "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
        "query_pl": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the names of gymnasts?",
        "question_original_pl": "Jak nazywają się gimnastyczki?",
        "question": "What are the names of gymnastics athletes?",
        "question_pl": "Jak nazywają się sportowcy uprawiający gimnastykę?",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "gymnast",
        "question_original": "Return the names of the gymnasts.",
        "question_original_pl": "Zwróć nazwiska gimnastyczek.",
        "question": "Return the names of the gymnastics athletes.",
        "question_pl": "Zwróć nazwiska zawodników gimnastyki.",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?",
        "question_original_pl": "Jak nazywają się gimnastyczki, których rodzinnym miastem nie jest Santo Domingo?",
        "question": "What are the names of gymnastics athletes whose hometown is not \"Santo Domingo\"?",
        "question_pl": "Jakie są nazwiska sportowców gimnastycznych, których rodzinnym miastem nie jest \"Santo Domingo\"?",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
    },
    {
        "db_id": "gymnast",
        "question_original": "Return the names of gymnasts who did not grow up in Santo Domingo.",
        "question_original_pl": "Podaj nazwiska gimnastyków, którzy nie dorastali w Santo Domingo.",
        "question": "Return the names of gymnastics athletes who did not grow up in Santo Domingo.",
        "question_pl": "Podaj nazwiska sportowców gimnastycznych, którzy nie dorastali w Santo Domingo.",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
    },
    {
        "db_id": "gymnast",
        "question_original": "What is the total point count of the youngest gymnast?",
        "question_original_pl": "Jaka jest łączna liczba punktów najmłodszego gimnastyka?",
        "question": "What is the gross score count of the youngest gymnast?",
        "question_pl": "Jaki jest wynik brutto najmłodszego gimnastyka?",
        "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1",
        "query_pl": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question_original": "Return the total points of the gymnast with the lowest age.",
        "question_original_pl": "Zwróć sumę punktów gimnastyczki z najniższym wiekiem.",
        "question": "Return the gross score of the gymnast with the lowest age.",
        "question_pl": "Zwróć wynik brutto gimnastyczki z najniższym wiekiem.",
        "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1",
        "query_pl": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question_original": "What is the average age of all gymnasts?",
        "question_original_pl": "Jaki jest średni wiek wszystkich gimnastyków?",
        "question": "What is the average age of all gymnastics athletes?",
        "question_pl": "Jaki jest średni wiek wszystkich sportowców uprawiających gimnastykę?",
        "query": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the distinct hometowns of gymnasts with total points more than 57.5?",
        "question_original_pl": "Jakie są różne miasta rodzinne gimnastyczek z łączną liczbą punktów większą niż 57,5?",
        "question": "What are the different birthplaces of gymnasts with total points more than 57.5?",
        "question_pl": "Jakie są różne miejsca urodzenia gimnastyczek z łączną liczbą punktów większą niż 57,5?",
        "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5",
        "query_pl": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
    },
    {
        "db_id": "gymnast",
        "question_original": "Give the different hometowns of gymnasts that have a total point score of above 57.5.",
        "question_original_pl": "Podaj różne miasta rodzinne gimnastyczek, które uzyskały łączną liczbę punktów powyżej 57,5.",
        "question": "Give the different birthplaces of gymnasts that have a total point score of above 57.5.",
        "question_pl": "Podaj różne miejsca urodzenia gimnastyczek, które uzyskały łączną liczbę punktów powyżej 57,5.",
        "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5",
        "query_pl": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the hometowns of gymnasts and the corresponding number of gymnasts?",
        "question_original_pl": "Jakie są miasta rodzinne gimnastyczek i odpowiadająca im liczba gimnastyczek?",
        "question": "What are the birthplaces of gymnasts and the corresponding number of gymnasts?",
        "question_pl": "Jakie są miejsca urodzenia gimnastyczek i odpowiadająca im liczba gimnastyczek?",
        "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown",
        "query_pl": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
    },
    {
        "db_id": "gymnast",
        "question_original": "How many gymnasts are from each hometown?",
        "question_original_pl": "Ilu gimnastyków pochodzi z każdego miasta?",
        "question": "How many gymnasts are from each birthplace?",
        "question_pl": "Ilu gimnastyków pochodzi z każdego miejsca urodzenia?",
        "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown",
        "query_pl": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
    },
    {
        "db_id": "gymnast",
        "question_original": "What is the most common hometown of gymnasts?",
        "question_original_pl": "Jakie jest najczęstsze miasto rodzinne gimnastyków?",
        "question": "What is the most common birthplace of gymnasts?",
        "question_pl": "Jakie jest najczęstsze miejsce urodzenia gimnastyczek?",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question_original": "Return the hometown that is most common among gymnasts.",
        "question_original_pl": "Zwróć miasto rodzinne, które jest najbardziej popularne wśród gimnastyków.",
        "question": "Return the birthplace that is most common among gymnasts.",
        "question_pl": "Zwróć miejsce urodzenia, które jest najbardziej popularne wśród gimnastyków.",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the hometowns that are shared by at least two gymnasts?",
        "question_original_pl": "Jakie są miasta rodzinne, które są dzielone przez co najmniej dwie gimnastyczki?",
        "question": "What are the birthplace that are shared by at least two gymnasts?",
        "question_pl": "Jakie są miejsca urodzenia, które są wspólne dla co najmniej dwóch gimnastyczek?",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "gymnast",
        "question_original": "Give the hometowns from which two or more gymnasts are from.",
        "question_original_pl": "Podaj miasta rodzinne, z których pochodzą dwie lub więcej gimnastyczek.",
        "question": "Give the birthplace from which two or more gymnasts are from.",
        "question_pl": "Podaj miejsce urodzenia, z którego pochodzi dwóch lub więcej gimnastyków.",
        "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "gymnast",
        "question_original": "List the names of gymnasts in ascending order by their heights.",
        "question_original_pl": "Wymień nazwiska gimnastyczek w kolejności rosnącej według ich wysokości.",
        "question": "List the names of gymnastics athletes in ascending order by their heights.",
        "question_pl": "Wymień nazwiska gimnastyków w kolejności rosnącej według ich wzrostu.",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the names of gymnasts, ordered by their heights ascending?",
        "question_original_pl": "Jak nazywają się gimnastyczki uporządkowane według rosnącej wysokości?",
        "question": "What are the names of gymnastics athletes, ordered by their heights ascending?",
        "question_pl": "Jak nazywają się sportowcy uprawiający gimnastykę, uporządkowani według rosnącej wysokości?",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC",
        "query_pl": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
    },
    {
        "db_id": "gymnast",
        "question_original": "List the distinct hometowns that are not associated with any gymnast.",
        "question_original_pl": "Wymień różne miasta rodzinne, które nie są związane z żadnym gimnastykiem.",
        "question": "List the different birthplace that are not associated with any gymnast.",
        "question_pl": "Wymień różne miejsca urodzenia, które nie są związane z żadnym gimnastykiem.",
        "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "gymnast",
        "question_original": "From which hometowns did no gymnasts come from?",
        "question_original_pl": "Z których rodzinnych miast nie pochodzili gimnastycy?",
        "question": "From which birthplace did no gymnasts come from?",
        "question_pl": "Z którego miejsca urodzenia nie pochodził żaden gimnastyk?",
        "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_pl": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
    },
    {
        "db_id": "gymnast",
        "question_original": "Show the hometowns shared by people older than 23 and younger than 20.",
        "question_original_pl": "Pokaż miasta rodzinne osób starszych niż 23 lata i młodszych niż 20 lat.",
        "question": "Show the birthplace shared by people older than 23 and younger than 20.",
        "question_pl": "Pokaż miejsce urodzenia wspólne dla osób starszych niż 23 lata i młodszych niż 20 lat.",
        "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
        "query_pl": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
    },
    {
        "db_id": "gymnast",
        "question_original": "From which hometowns did both people older than 23 and younger than 20 come from?",
        "question_original_pl": "Z jakich rodzinnych miast pochodzą osoby starsze niż 23 lata i młodsze niż 20 lat?",
        "question": "From which birthplace did both people older than 23 and younger than 20 come from?",
        "question_pl": "Z którego miejsca urodzenia pochodzą zarówno osoby starsze niż 23 lata, jak i młodsze niż 20 lat?",
        "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
        "query_pl": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
    },
    {
        "db_id": "gymnast",
        "question_original": "How many distinct hometowns did these people have?",
        "question_original_pl": "Ile odrębnych miast rodzinnych mieli ci ludzie?",
        "question": "How many different birthplace did these people have?",
        "question_pl": "Ile różnych miejsc urodzenia mieli ci ludzie?",
        "query": "SELECT count(DISTINCT Hometown) FROM people",
        "query_pl": "SELECT count(DISTINCT Hometown) FROM people"
    },
    {
        "db_id": "gymnast",
        "question_original": "Count the number of different hometowns of these people.",
        "question_original_pl": "Policz liczbę różnych miast rodzinnych tych osób.",
        "question": "Count the number of different birthplaces of these people.",
        "question_pl": "Policz liczbę różnych miejsc urodzenia tych osób.",
        "query": "SELECT count(DISTINCT Hometown) FROM people",
        "query_pl": "SELECT count(DISTINCT Hometown) FROM people"
    },
    {
        "db_id": "gymnast",
        "question_original": "What are the ages of the gymnasts, ordered descending by their total points?",
        "question_original_pl": "W jakim wieku są gimnastyczki, uszeregowane malejąco według łącznej liczby punktów?",
        "question": "What are the ages of the gymnastics athletes, ordered descending by their total points?",
        "question_pl": "W jakim wieku są zawodniczki gimnastyki sportowej, uszeregowane malejąco według łącznej liczby punktów?",
        "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC",
        "query_pl": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
    },
    {
        "db_id": "browser_web",
        "question_original": "List the name of browsers in descending order by market share.",
        "question_original_pl": "Wymień nazwy przeglądarek w kolejności malejącej według udziału w rynku.",
        "question": "List the title of browsers in descending order by market share.",
        "question_pl": "Wymień tytuły przeglądarek w kolejności malejącej według udziału w rynku.",
        "query": "SELECT name FROM browser ORDER BY market_share DESC",
        "query_pl": "SELECT name FROM browser ORDER BY market_share DESC"
    },
    {
        "db_id": "browser_web",
        "question_original": "List the ids, names and market shares of all browsers.",
        "question_original_pl": "Wymień identyfikatory, nazwy i udziały w rynku wszystkich przeglądarek.",
        "question": "List the ids, titles and market shares of all browsers.",
        "question_pl": "Wyświetl identyfikatory, tytuły i udziały w rynku wszystkich przeglądarek.",
        "query": "SELECT id ,  name ,  market_share FROM browser",
        "query_pl": "SELECT id ,  name ,  market_share FROM browser"
    },
    {
        "db_id": "browser_web",
        "question_original": "What are the ids and names of the web accelerators that are compatible with two or more browsers?",
        "question_original_pl": "Jakie są identyfikatory i nazwy akceleratorów sieci, które są kompatybilne z dwiema lub więcej przeglądarkami?",
        "question": "What are the ids and titles of the web accelerators that are compatible with two or more browsers?",
        "question_pl": "Jakie są identyfikatory i tytuły akceleratorów internetowych, które są kompatybilne z dwiema lub więcej przeglądarkami?",
        "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
    },
    {
        "db_id": "browser_web",
        "question_original": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?",
        "question_original_pl": "Jakie nazwy akceleratorów są kompatybilne z przeglądarkami, których udział w rynku przekracza 15?",
        "question": "What different accelerator names are compatible with the browswers that have market share higher than 15?",
        "question_pl": "Jakie różne nazwy akceleratorów są kompatybilne z przeglądarkami, których udział w rynku przekracza 15?",
        "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;",
        "query_pl": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;"
    },
    {
        "db_id": "browser_web",
        "question_original": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.",
        "question_original_pl": "Wymień nazwy przeglądarek, które są kompatybilne zarówno z \"CACHEbox\", jak i \"Fasterfox\".",
        "question": "List the titles of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.",
        "question_pl": "Wymień tytuły przeglądarek, które są kompatybilne zarówno z \"CACHEbox\", jak i \"Fasterfox\".",
        "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'",
        "query_pl": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'"
    },
    {
        "db_id": "browser_web",
        "question_original": "Find the number of web accelerators used for each Operating system.",
        "question_original_pl": "Znajdź liczbę akceleratorów sieciowych używanych w każdym systemie operacyjnym.",
        "question": "Find the number of web accelerators used for each os .",
        "question_pl": "Znajdź liczbę akceleratorów sieciowych używanych dla każdego systemu operacyjnego.",
        "query": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system",
        "query_pl": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system"
    },
    {
        "db_id": "wrestler",
        "question_original": "How many wrestlers are there?",
        "question_original_pl": "Ilu jest zapaśników?",
        "question": "Count the number of wrestlers are there?",
        "question_pl": "Policz, ilu jest wrestlerów?",
        "query": "SELECT count(*) FROM wrestler",
        "query_pl": "SELECT count(*) FROM wrestler"
    },
    {
        "db_id": "wrestler",
        "question_original": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?",
        "question_original_pl": "Jakie są odrębne panowania wrestlerów, których lokalizacja nie jest \"Tokio, Japonia\"?",
        "question": "What are the different reigns of wrestlers whose location is not \"Tokyo,Japan\" ?",
        "question_pl": "Jakie są różne panowania wrestlerów, których lokalizacja nie jest \"Tokio, Japonia\"?",
        "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"",
        "query_pl": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokio , Japonia\""
    },
    {
        "db_id": "wrestler",
        "question_original": "What are the names and location of the wrestlers?",
        "question_original_pl": "Jakie są nazwiska i lokalizacja wrestlerów?",
        "question": "What are the names and city of the wrestlers?",
        "question_pl": "Jakie są imiona i miasta wrestlerów?",
        "query": "SELECT Name ,  LOCATION FROM wrestler",
        "query_pl": "SELECT Name ,  LOCATION FROM wrestler"
    },
    {
        "db_id": "wrestler",
        "question_original": "Give the names and locations of all wrestlers.",
        "question_original_pl": "Podaj nazwiska i lokalizacje wszystkich wrestlerów.",
        "question": "Give the names and cities of all wrestlers.",
        "question_pl": "Podaj nazwiska i miasta wszystkich wrestlerów.",
        "query": "SELECT Name ,  LOCATION FROM wrestler",
        "query_pl": "SELECT Name ,  LOCATION FROM wrestler"
    },
    {
        "db_id": "wrestler",
        "question_original": "List the locations that are shared by more than two wrestlers.",
        "question_original_pl": "Wymień lokalizacje, które są współdzielone przez więcej niż dwóch wrestlerów.",
        "question": "List the cities that are shared by more than two wrestlers.",
        "question_pl": "Wymień miasta, które są dzielone przez więcej niż dwóch wrestlerów.",
        "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
        "query_pl": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "wrestler",
        "question_original": "Which locations are shared by more than two wrestlers?",
        "question_original_pl": "Które lokalizacje są współdzielone przez więcej niż dwóch wrestlerów?",
        "question": "Which cities are shared by more than two wrestlers?",
        "question_pl": "Które miasta są dzielone przez więcej niż dwóch wrestlerów?",
        "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
        "query_pl": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "school_finance",
        "question_original": "How many schools are there?",
        "question_original_pl": "Ile jest szkół?",
        "question": "Show the nunmber of schools are there?",
        "question_pl": "Pokaż, ile jest szkół?",
        "query": "SELECT count(*) FROM school",
        "query_pl": "SELECT count(*) FROM school"
    },
    {
        "db_id": "school_finance",
        "question_original": "List the name, location, mascot for all schools.",
        "question_original_pl": "Podaj nazwę, lokalizację i maskotkę wszystkich szkół.",
        "question": "List the name, city, mascot for all schools.",
        "question_pl": "Podaj nazwę, miasto i maskotkę wszystkich szkół.",
        "query": "SELECT school_name ,  LOCATION ,  mascot FROM school",
        "query_pl": "SELECT school_name ,  LOCATION ,  mascot FROM school"
    },
    {
        "db_id": "school_finance",
        "question_original": "What are the total and average enrollment of all schools?",
        "question_original_pl": "Jaka jest całkowita i średnia liczba uczniów we wszystkich szkołach?",
        "question": "What are the total and average students are enrolled in all schools?",
        "question_pl": "Jaka jest łączna i średnia liczba uczniów zapisanych do wszystkich szkół?",
        "query": "SELECT sum(enrollment) ,  avg(enrollment) FROM school",
        "query_pl": "SELECT sum(enrollment) ,  avg(enrollment) FROM school"
    },
    {
        "db_id": "school_finance",
        "question_original": "Show the average, maximum, minimum enrollment of all schools.",
        "question_original_pl": "Pokaż średnią, maksymalną i minimalną liczbę uczniów we wszystkich szkołach.",
        "question": "Show the average, maximum, minimum students are enrolled in all schools.",
        "question_pl": "Pokaż średnią, maksymalną i minimalną liczbę uczniów zapisanych do wszystkich szkół.",
        "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school",
        "query_pl": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school"
    },
    {
        "db_id": "school_finance",
        "question_original": "Show each county along with the number of schools and total enrollment in each county.",
        "question_original_pl": "Pokaż każde hrabstwo wraz z liczbą szkół i całkowitą liczbą uczniów w każdym hrabstwie.",
        "question": "Show each county along with the number of schools and total students are enrolled in each county.",
        "question_pl": "Pokaż każde hrabstwo wraz z liczbą szkół i łączną liczbą uczniów zapisanych w każdym hrabstwie.",
        "query": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county",
        "query_pl": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county"
    },
    {
        "db_id": "school_finance",
        "question_original": "List each donator name and the amount of endowment in descending order of the amount of endowment.",
        "question_original_pl": "Wymień imię i nazwisko każdego darczyńcy oraz kwotę darowizny w porządku malejącym według kwoty darowizny.",
        "question": "List each donor name and the total of endowment in descending order of the amount of endowment.",
        "question_pl": "Wymień imię i nazwisko każdego darczyńcy oraz łączną kwotę darowizny w porządku malejącym według kwoty darowizny.",
        "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",
        "query_pl": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
    },
    {
        "db_id": "school_finance",
        "question_original": "Show each school name, its budgeted amount, and invested amount in year 2002 or after.",
        "question_original_pl": "Pokaż nazwę każdej szkoły, jej kwotę budżetową i kwotę zainwestowaną w roku 2002 lub później.",
        "question": "Show each school name, its budget, and invested amount in year 2002 or after.",
        "question_pl": "Pokaż nazwę każdej szkoły, jej budżet i zainwestowaną kwotę w roku 2002 lub później.",
        "query": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002",
        "query_pl": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.",
        "question_original_pl": "Pokaż nazwę, adres i liczbę pięter dla wszystkich budynków uporządkowanych według liczby pięter.",
        "question": "Show the name, street address, and number of storey for all buildings ordered by the number of storeys.",
        "question_pl": "Pokaż nazwę, adres ulicy i liczbę kondygnacji dla wszystkich budynków uporządkowanych według liczby kondygnacji.",
        "query": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors",
        "query_pl": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors"
    },
    {
        "db_id": "protein_institute",
        "question_original": "What are the average, maximum, and minimum number of floors for all buildings?",
        "question_original_pl": "Jaka jest średnia, maksymalna i minimalna liczba pięter dla wszystkich budynków?",
        "question": "What are the average, maximum, and minimum number of storey for all buildings?",
        "question_pl": "Jaka jest średnia, maksymalna i minimalna liczba kondygnacji dla wszystkich budynków?",
        "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building",
        "query_pl": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show institution types, along with the number of institutions and total enrollment for each type.",
        "question_original_pl": "Pokaż typy instytucji wraz z liczbą instytucji i całkowitą liczbą zapisów dla każdego typu.",
        "question": "Show institution categories, along with the number of institutions and total enrollment for each category.",
        "question_pl": "Pokaż kategorie instytucji wraz z liczbą instytucji i całkowitą liczbą zapisów dla każdej kategorii.",
        "query": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show the institution type with the largest number of institutions.",
        "question_original_pl": "Pokaż typ instytucji z największą liczbą instytucji.",
        "question": "Show the institution category with the largest number of institutions.",
        "question_pl": "Pokaż kategorię instytucji z największą liczbą instytucji.",
        "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.",
        "question_original_pl": "Pokaż typ instytucji z instytucją założoną po 1990 roku i instytucją z co najmniej 1000 zapisów.",
        "question": "Show the institution category with an institution founded after 1990 and an institution with at least 1000 enrollment.",
        "question_pl": "Pokaż kategorię instytucji z instytucją założoną po 1990 roku i instytucją z co najmniej 1000 zapisów.",
        "query": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000",
        "query_pl": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show all the distinct institution types.",
        "question_original_pl": "Pokaż wszystkie różne typy instytucji.",
        "question": "Show all the different institution categories.",
        "question_pl": "Pokaż wszystkie kategorie instytucji.",
        "query": "SELECT DISTINCT TYPE FROM institution",
        "query_pl": "SELECT DISTINCT TYPE FROM institution"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show institution names along with the number of proteins for each institution.",
        "question_original_pl": "Pokaż nazwy instytucji wraz z liczbą białek dla każdej instytucji.",
        "question": "Show university names along with the number of proteins for each university.",
        "question_pl": "Pokaż nazwy uniwersytetów wraz z liczbą białek dla każdego z nich.",
        "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id",
        "query_pl": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"
    },
    {
        "db_id": "protein_institute",
        "question_original": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?",
        "question_original_pl": "Ile białek jest powiązanych z instytucją założoną po 1880 roku lub instytucją typu \"Prywatna\"?",
        "question": "How many proteins are associated with university founded after 1880 or university with type \"Private\"?",
        "question_pl": "Ile białek jest powiązanych z uniwersytetem założonym po 1880 roku lub uniwersytetem typu \"Prywatny\"?",
        "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'",
        "query_pl": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Prywatny'"
    },
    {
        "db_id": "protein_institute",
        "question_original": "Show the protein name and the institution name.",
        "question_original_pl": "Pokaż nazwę białka i nazwę instytucji.",
        "question": "Show the protein name and the university name.",
        "question_pl": "Pokaż nazwę białka i nazwę uniwersytetu.",
        "query": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id",
        "query_pl": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id"
    },
    {
        "db_id": "protein_institute",
        "question_original": "How many proteins are associated with an institution in a building with at least 20 floors?",
        "question_original_pl": "Ile białek jest powiązanych z instytucją w budynku o co najmniej 20 piętrach?",
        "question": "How many proteins are associated with university in a building with at least 20 floors?",
        "question_pl": "Ile białek jest związanych z uniwersytetem w budynku o co najmniej 20 piętrach?",
        "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20",
        "query_pl": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20"
    },
    {
        "db_id": "protein_institute",
        "question_original": "How many institutions do not have an associated protein in our record?",
        "question_original_pl": "Ile instytucji nie ma powiązanego białka w naszym rejestrze?",
        "question": "How many universities do not have an associated protein in our record?",
        "question_pl": "Ile uniwersytetów nie ma powiązanego białka w naszym rejestrze?",
        "query": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)",
        "query_pl": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)"
    },
    {
        "db_id": "cinema",
        "question_original": "Show all the locations where no cinema has capacity over 800.",
        "question_original_pl": "Pokaż wszystkie lokalizacje, w których żadne kino nie mieści ponad 800 osób.",
        "question": "Show all the locations where no cinema has number of seats over 800.",
        "question_pl": "Pokaż wszystkie lokalizacje, w których żadne kino nie ma więcej niż 800 miejsc.",
        "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800",
        "query_pl": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800"
    },
    {
        "db_id": "cinema",
        "question_original": "Count the number of cinemas.",
        "question_original_pl": "Policz liczbę kin.",
        "question": "Count the number of movie theater.",
        "question_pl": "Policz liczbę sal kinowych.",
        "query": "SELECT count(*) FROM cinema",
        "query_pl": "SELECT count(*) FROM cinema"
    },
    {
        "db_id": "cinema",
        "question_original": "Show name, opening year, and capacity for each cinema.",
        "question_original_pl": "Pokaż nazwę, rok otwarcia i pojemność każdego kina.",
        "question": "Show name, opening year, and number of seats for each cinema.",
        "question_pl": "Pokaż nazwę, rok otwarcia i liczbę miejsc dla każdego kina.",
        "query": "SELECT name ,  openning_year ,  capacity FROM cinema",
        "query_pl": "SELECT name ,  openning_year ,  capacity FROM cinema"
    },
    {
        "db_id": "cinema",
        "question_original": "Show the cinema name and location for cinemas with capacity above average.",
        "question_original_pl": "Pokaż nazwę kina i lokalizację dla kin o pojemności powyżej średniej.",
        "question": "Show the cinema name and county for cinemas with number of seats above average.",
        "question_pl": "Pokaż nazwę kina i hrabstwo dla kin z liczbą miejsc powyżej średniej.",
        "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)",
        "query_pl": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)"
    },
    {
        "db_id": "cinema",
        "question_original": "What are all the locations with a cinema?",
        "question_original_pl": "Jakie są wszystkie lokalizacje z kinem?",
        "question": "What are all the county with a cinema?",
        "question_pl": "Jakie są wszystkie powiaty z kinem?",
        "query": "SELECT DISTINCT LOCATION FROM cinema",
        "query_pl": "SELECT DISTINCT LOCATION FROM cinema"
    },
    {
        "db_id": "cinema",
        "question_original": "Find the distinct locations that has a cinema.",
        "question_original_pl": "Znajdź różne lokalizacje, w których znajduje się kino.",
        "question": "Find the different county that has a cinema.",
        "question_pl": "Znajdź hrabstwo, w którym znajduje się kino.",
        "query": "SELECT DISTINCT LOCATION FROM cinema",
        "query_pl": "SELECT DISTINCT LOCATION FROM cinema"
    },
    {
        "db_id": "cinema",
        "question_original": "What are the name and location of the cinema with the largest capacity?",
        "question_original_pl": "Jak nazywa się i gdzie znajduje się kino o największej pojemności?",
        "question": "What are the name and county of the cinema with the largest number of seats?",
        "question_pl": "Jak nazywa się i w jakim hrabstwie znajduje się kino z największą liczbą miejsc?",
        "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
        "query_pl": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1"
    },
    {
        "db_id": "cinema",
        "question_original": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.",
        "question_original_pl": "Pokaż średnią, minimalną i maksymalną pojemność dla wszystkich kin otwartych w 2011 roku lub później.",
        "question": "Show the average, minimum, and maximum number of seats for all the cinemas opened in year 2011 or later.",
        "question_pl": "Pokaż średnią, minimalną i maksymalną liczbę miejsc dla wszystkich kin otwartych w 2011 roku lub później.",
        "query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011",
        "query_pl": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011"
    },
    {
        "db_id": "cinema",
        "question_original": "Show each location and the number of cinemas there.",
        "question_original_pl": "Pokaż każdą lokalizację i liczbę kin w niej.",
        "question": "Show each county and the number of cinemas there.",
        "question_pl": "Pokaż każde hrabstwo i liczbę kin w nim.",
        "query": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION",
        "query_pl": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION"
    },
    {
        "db_id": "cinema",
        "question_original": "What is the location with the most cinemas opened in year 2010 or later?",
        "question_original_pl": "W jakiej lokalizacji znajduje się najwięcej kin otwartych w 2010 roku lub później?",
        "question": "What is the county with the most cinemas opened in year 2010 or later?",
        "question_pl": "W którym hrabstwie znajduje się najwięcej kin otwartych w 2010 roku lub później?",
        "query": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cinema",
        "question_original": "Show all the locations with at least two cinemas with capacity above 300.",
        "question_original_pl": "Pokaż wszystkie lokalizacje z co najmniej dwoma kinami o pojemności powyżej 300.",
        "question": "Show all the county with at least two cinemas with the number of seats above 300.",
        "question_pl": "Pokaż wszystkie powiaty z co najmniej dwoma kinami z liczbą miejsc powyżej 300.",
        "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2",
        "query_pl": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
    },
    {
        "db_id": "cinema",
        "question_original": "Which locations have 2 or more cinemas with capacity over 300?",
        "question_original_pl": "Które lokalizacje mają 2 lub więcej kin o pojemności ponad 300?",
        "question": "Which county have 2 or more cinemas with the number of seats over 300?",
        "question_pl": "Które hrabstwo ma 2 lub więcej kin z liczbą miejsc powyżej 300?",
        "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2",
        "query_pl": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
    },
    {
        "db_id": "cinema",
        "question_original": "Show cinema name, film title, date, and price for each record in schedule.",
        "question_original_pl": "Pokaż nazwę kina, tytuł filmu, datę i cenę dla każdego rekordu w harmonogramie.",
        "question": "Show cinema name, film title, day, and price for each record in schedule.",
        "question_pl": "Pokaż nazwę kina, tytuł filmu, dzień i cenę dla każdego rekordu w harmonogramie.",
        "query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id",
        "query_pl": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id"
    },
    {
        "db_id": "cinema",
        "question_original": "Find the locations that have more than one movie theater with capacity above 300.",
        "question_original_pl": "Znajdź lokalizacje, w których znajduje się więcej niż jedno kino mogące pomieścić ponad 300 widzów.",
        "question": "Find the county that have more than one movie theater with the number of seats above 300.",
        "question_pl": "Znajdź hrabstwo, w którym znajduje się więcej niż jedno kino z liczbą miejsc powyżej 300.",
        "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
        "query_pl": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
    },
    {
        "db_id": "cinema",
        "question_original": "In which locations are there more than one movie theater with capacity above 300?",
        "question_original_pl": "W których lokalizacjach znajduje się więcej niż jedno kino mogące pomieścić ponad 300 widzów?",
        "question": "In which county are there more than one movie theater with the number of seats above 300?",
        "question_pl": "W którym hrabstwie jest więcej niż jedno kino z liczbą miejsc powyżej 300?",
        "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
        "query_pl": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "Are the customers holding coupons with amount 500 bad or good?",
        "question_original_pl": "Czy klienci posiadający kupony na kwotę 500 są źli czy dobrzy?",
        "question": "Are the clients holding coupons with amount 500 bad or good?",
        "question_pl": "Czy klienci posiadający kupony o wartości 500 są źli czy dobrzy?",
        "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500",
        "query_pl": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What is the maximum total amount paid by a customer? List the customer id and amount.",
        "question_original_pl": "Jaka jest maksymalna łączna kwota zapłacona przez klienta? Podaj identyfikator klienta i kwotę.",
        "question": "What is the maximum total amount paid by a client? List the client id and amount.",
        "question_pl": "Jaka jest maksymalna łączna kwota wpłacona przez klienta? Podaj identyfikator klienta i kwotę.",
        "query": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",
        "query_pl": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What is the id of the product that is booked for 3 times?",
        "question_original_pl": "Jaki jest identyfikator produktu zarezerwowanego 3 razy?",
        "question": "What is the id of the goods that is booked for 3 times?",
        "question_pl": "Jaki jest identyfikator towaru zarezerwowanego 3 razy?",
        "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3",
        "query_pl": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What is the product description of the product booked with an amount of 102.76?",
        "question_original_pl": "Jaki jest opis produktu zaksięgowanego na kwotę 102,76?",
        "question": "What is the goods describing content of the goods booked with an amount of 102.76?",
        "question_pl": "Jaka jest zawartość towarów opisujących towary zaksięgowane na kwotę 102,76?",
        "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76",
        "query_pl": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?",
        "question_original_pl": "Jaka jest data początkowa i końcowa rezerwacji, w ramach której zarezerwowano produkt o nazwie \"Zarezerwuj kolekcję A\"?",
        "question": "What are the start day and end day of the booking that has booked the goods named 'Book collection A'?",
        "question_pl": "Jaki jest dzień rozpoczęcia i dzień zakończenia rezerwacji, w ramach której zarezerwowano towary o nazwie \"Rezerwacja kolekcji A\"?",
        "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'",
        "query_pl": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Kolekcja książek A'"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the names of products whose availability equals to 1?",
        "question_original_pl": "Jakie są nazwy produktów, których dostępność jest równa 1?",
        "question": "What are the names of goods whose availability equals to 1?",
        "question_pl": "Jak nazywają się towary, których dostępność jest równa 1?",
        "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1",
        "query_pl": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "How many different product types are there?",
        "question_original_pl": "Ile jest różnych typów produktów?",
        "question": "How many different goods types are there?",
        "question_pl": "Ile jest różnych rodzajów towarów?",
        "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire",
        "query_pl": "SELECT count(DISTINCT product_type_code) FROM products_for_hire"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the maximum, minimum, and average booked count for the products booked?",
        "question_original_pl": "Jaka jest maksymalna, minimalna i średnia liczba zarezerwowanych produktów?",
        "question": "What are the maximum, minimum, and average booked quantity for the products booked?",
        "question_pl": "Jaka jest maksymalna, minimalna i średnia zarezerwowana ilość zarezerwowanych produktów?",
        "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked",
        "query_pl": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are all the distinct payment types?",
        "question_original_pl": "Jakie są rodzaje płatności?",
        "question": "What are all the different payment methods?",
        "question_pl": "Jakie są różne metody płatności?",
        "query": "SELECT DISTINCT payment_type_code FROM payments",
        "query_pl": "SELECT DISTINCT payment_type_code FROM payments"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the daily hire costs for the products with substring 'Book' in its name?",
        "question_original_pl": "Jakie są dzienne koszty wynajmu produktów z podciągiem \"Książka\" w nazwie?",
        "question": "What are the rent of day for the products with substring 'Book' in its name?",
        "question_pl": "Jakie są stawki dzienne dla produktów z podciągiem \"Książka\" w nazwie?",
        "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'",
        "query_pl": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Książka%'"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "How many products are never booked with amount higher than 200?",
        "question_original_pl": "Ile produktów nigdy nie jest rezerwowanych na kwotę wyższą niż 200?",
        "question": "How many goods are never booked with amount higher than 200?",
        "question_pl": "Ile towarów nigdy nie jest zaksięgowanych na kwotę wyższą niż 200?",
        "query": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )",
        "query_pl": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the coupon amount of the coupons owned by both good and bad customers?",
        "question_original_pl": "Jakie są kwoty kuponów posiadanych zarówno przez dobrych, jak i złych klientów?",
        "question": "What are the number of coupons owned by both good and bad customers?",
        "question_pl": "Jaka jest liczba kuponów posiadanych zarówno przez dobrych, jak i złych klientów?",
        "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'",
        "query_pl": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'dobry' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'zły'"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'",
        "question_original_pl": "Jakie są daty płatności dla płatności z kwotą wyższą niż 300 lub z typem płatności \"Czek\"?",
        "question": "What are the payment day of the payment with amount paid higher than 300 or with payment method is 'Check'",
        "question_pl": "Jakie są dni płatności w przypadku płatności na kwotę wyższą niż 300 lub gdy metodą płatności jest \"czek\"?",
        "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'",
        "query_pl": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Sprawdź'"
    },
    {
        "db_id": "products_for_hire",
        "question_original": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?",
        "question_original_pl": "Jakie są nazwy i opisy produktów typu \"Sztućce\", których dzienny koszt wynajmu jest niższy niż 20?",
        "question": "What are the names and describing details of the goods that are of 'Cutlery' type and have daily hire cost lower than 20?",
        "question_pl": "Jakie są nazwy i szczegóły opisujące towary typu \"Sztućce\", których dzienny koszt wynajmu jest niższy niż 20?",
        "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20",
        "query_pl": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Sztućce' AND daily_hire_cost  <  20"
    },
    {
        "db_id": "phone_market",
        "question_original": "How many phones are there?",
        "question_original_pl": "Ile masz telefonów?",
        "question": "Count the number of cellphones are there?",
        "question_pl": "Policz, ile jest telefonów komórkowych?",
        "query": "SELECT count(*) FROM phone",
        "query_pl": "SELECT count(*) FROM phone"
    },
    {
        "db_id": "phone_market",
        "question_original": "List the names of phones in ascending order of price.",
        "question_original_pl": "Wymień nazwy telefonów w kolejności rosnącej według ceny.",
        "question": "List the names of cellphones in ascending order of price.",
        "question_pl": "Wymień nazwy telefonów komórkowych w kolejności rosnącej według ceny.",
        "query": "SELECT Name FROM phone ORDER BY Price ASC",
        "query_pl": "SELECT Name FROM phone ORDER BY Price ASC"
    },
    {
        "db_id": "phone_market",
        "question_original": "What are the memories and carriers of phones?",
        "question_original_pl": "Jakie są pamięci i nośniki telefonów?",
        "question": "What are the storage space and carriers of phones?",
        "question_pl": "Jaka jest przestrzeń dyskowa i nośniki telefonów?",
        "query": "SELECT Memory_in_G ,  Carrier FROM phone",
        "query_pl": "SELECT Memory_in_G ,  Carrier FROM phone"
    },
    {
        "db_id": "phone_market",
        "question_original": "List the distinct carriers of phones with memories bigger than 32.",
        "question_original_pl": "Wymień różne nośniki telefonów z pamięcią większą niż 32.",
        "question": "List the different carriers of cellphones with memories bigger than 32.",
        "question_pl": "Wymień różnych operatorów telefonów komórkowych z pamięcią większą niż 32.",
        "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32",
        "query_pl": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".",
        "question_original_pl": "Pokaż nazwy telefonów z operatorem \"Sprint\" lub \"TMobile\".",
        "question": "Show the names of cellphones with carrier either \"Sprint\" or \"TMobile\".",
        "question_pl": "Pokaż nazwy telefonów komórkowych z operatorem \"Sprint\" lub \"TMobile\".",
        "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"",
        "query_pl": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\""
    },
    {
        "db_id": "phone_market",
        "question_original": "What is the carrier of the most expensive phone?",
        "question_original_pl": "Jaki jest operator najdroższego telefonu?",
        "question": "What is the carrier of the most expensive cellphone?",
        "question_pl": "Jaki jest operator najdroższego telefonu komórkowego?",
        "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
        "query_pl": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show different carriers of phones together with the number of phones with each carrier.",
        "question_original_pl": "Pokaż różnych operatorów telefonów wraz z liczbą telefonów z każdym operatorem.",
        "question": "Show different carriers of cellphones together with the number of cellphones with each carrier.",
        "question_pl": "Pokaż różnych operatorów telefonów komórkowych wraz z liczbą telefonów komórkowych z każdym operatorem.",
        "query": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier",
        "query_pl": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the most frequently used carrier of the phones.",
        "question_original_pl": "Pokaż najczęściej używanego operatora telefonów.",
        "question": "Show the most frequently used carrier of the cellphones.",
        "question_pl": "Pokaż najczęściej używane nośniki telefonów komórkowych.",
        "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.",
        "question_original_pl": "Wskaż operatorów, którzy mają zarówno telefony z pamięcią mniejszą niż 32, jak i telefony z pamięcią większą niż 64.",
        "question": "Show the carriers that have both cellphones with memory smaller than 32 and cellphones with memory bigger than 64.",
        "question_pl": "Wskaż operatorów, którzy mają zarówno telefony komórkowe z pamięcią mniejszą niż 32, jak i telefony komórkowe z pamięcią większą niż 64.",
        "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64",
        "query_pl": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the names of phones and the districts of markets they are on.",
        "question_original_pl": "Pokaż nazwy telefonów i dzielnice, w których się znajdują.",
        "question": "Show the names of cellphones and the region of markets they are on.",
        "question_pl": "Pokaż nazwy telefonów komórkowych i region rynków, na których działają.",
        "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID",
        "query_pl": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.",
        "question_original_pl": "Pokaż nazwy telefonów i dzielnice rynków, na których się znajdują, w kolejności rosnącej według rankingu rynku.",
        "question": "Show the names of phones and the region of markets they are on, in ascending order of the ranking of the market.",
        "question_pl": "Pokaż nazwy telefonów i regiony rynków, na których działają, w kolejności rosnącej w rankingu rynku.",
        "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking",
        "query_pl": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the names of phones that are on market with number of shops greater than 50.",
        "question_original_pl": "Pokaż nazwy telefonów, które są dostępne na rynku z liczbą sklepów większą niż 50.",
        "question": "Show the names of cellphones that are on market with number of shops greater than 50.",
        "question_pl": "Pokaż nazwy telefonów komórkowych, które są dostępne na rynku z liczbą sklepów większą niż 50.",
        "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50",
        "query_pl": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50"
    },
    {
        "db_id": "phone_market",
        "question_original": "For each phone, show its names and total number of stocks.",
        "question_original_pl": "Dla każdego telefonu podaj jego nazwę i całkowitą liczbę zapasów.",
        "question": "For each cellphone, show its names and inventory quantity.",
        "question_pl": "Dla każdego telefonu komórkowego podaj jego nazwę i ilość.",
        "query": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name",
        "query_pl": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name"
    },
    {
        "db_id": "phone_market",
        "question_original": "Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks.",
        "question_original_pl": "Pokaż nazwy telefonów, które mają łączną liczbę akcji większą niż 2000, w porządku malejącym według łącznej liczby akcji.",
        "question": "Show the names of phones that have inventory quantity bigger than 2000, in descending order of the total number of inventory.",
        "question_pl": "Pokaż nazwy telefonów, których ilość zapasów jest większa niż 2000, w kolejności malejącej całkowitej liczby zapasów.",
        "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC",
        "query_pl": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC"
    },
    {
        "db_id": "phone_market",
        "question_original": "List the names of phones that are not on any market.",
        "question_original_pl": "Wymień nazwy telefonów, których nie ma na żadnym rynku.",
        "question": "List the names of cellphones that are not on any market.",
        "question_pl": "Wymień nazwy telefonów komórkowych, których nie ma na rynku.",
        "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)",
        "query_pl": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)"
    },
    {
        "db_id": "gas_company",
        "question_original": "How many gas companies are there?",
        "question_original_pl": "Ile jest spółek gazowych?",
        "question": "Show the number of gas companies are there?",
        "question_pl": "Pokaż liczbę firm gazowych?",
        "query": "SELECT count(*) FROM company",
        "query_pl": "SELECT count(*) FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "What is the total number of companies?",
        "question_original_pl": "Jaka jest całkowita liczba firm?",
        "question": "What is the total number of enterprise?",
        "question_pl": "Jaka jest całkowita liczba przedsiębiorstw?",
        "query": "SELECT count(*) FROM company",
        "query_pl": "SELECT count(*) FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "List the company name and rank for all companies in the decreasing order of their sales.",
        "question_original_pl": "Wymień nazwę firmy i rangę dla wszystkich firm w kolejności malejącej ich sprzedaży.",
        "question": "List the enterprise name and rank for all enterprise in the decreasing order of their sales.",
        "question_pl": "Wymień nazwę przedsiębiorstwa i rangę dla wszystkich przedsiębiorstw w kolejności malejącej ich sprzedaży.",
        "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC",
        "query_pl": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
    },
    {
        "db_id": "gas_company",
        "question_original": "What is the name and rank of every company ordered by descending number of sales?",
        "question_original_pl": "Jaka jest nazwa i ranga każdej firmy uporządkowanej według malejącej liczby sprzedaży?",
        "question": "What is the name and rank of every enterprise ordered by descending number of sales?",
        "question_pl": "Jaka jest nazwa i ranga każdego przedsiębiorstwa uporządkowanego według malejącej liczby sprzedaży?",
        "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC",
        "query_pl": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
        "question_original_pl": "Pokaż nazwę firmy i główną branżę dla wszystkich firm, których siedziba główna nie znajduje się w USA.",
        "question": "Show the enterprise name and the main industry for all enterprise whose headquarters are not from USA.",
        "question_pl": "Pokaż nazwę przedsiębiorstwa i główną branżę dla wszystkich przedsiębiorstw, których siedziba główna nie znajduje się w USA.",
        "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'",
        "query_pl": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the companies and main industries of all companies that are not headquartered in the United States?",
        "question_original_pl": "Jakie są firmy i główne branże wszystkich firm, które nie mają siedziby w Stanach Zjednoczonych?",
        "question": "What are the enterprise and main industries of all enterprise that are not headquartered in the United States?",
        "question_pl": "Jakie są przedsiębiorstwa i główne branże wszystkich przedsiębiorstw, które nie mają siedziby w Stanach Zjednoczonych?",
        "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'",
        "query_pl": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all company names and headquarters in the descending order of market value.",
        "question_original_pl": "Pokaż nazwy i siedziby wszystkich firm w kolejności malejącej wartości rynkowej.",
        "question": "Show all enterprise names and head office in the descending order of market value.",
        "question_pl": "Pokaż wszystkie nazwy przedsiębiorstw i siedziby główne w porządku malejącym według wartości rynkowej.",
        "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC",
        "query_pl": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the names and headquarters of all companies ordered by descending market value?",
        "question_original_pl": "Jakie są nazwy i siedziby wszystkich firm uporządkowanych według malejącej wartości rynkowej?",
        "question": "What are the names and head office of all enterprise ordered by descending market value?",
        "question_pl": "Jakie są nazwy i siedziby wszystkich przedsiębiorstw uporządkowane według malejącej wartości rynkowej?",
        "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC",
        "query_pl": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show minimum, maximum, and average market value for all companies.",
        "question_original_pl": "Pokaż minimalną, maksymalną i średnią wartość rynkową dla wszystkich spółek.",
        "question": "Show minimum, maximum, and average market value for all enterprise.",
        "question_pl": "Pokaż minimalną, maksymalną i średnią wartość rynkową dla wszystkich przedsiębiorstw.",
        "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company",
        "query_pl": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "What is the minimum, maximum, and average market value for every company?",
        "question_original_pl": "Jaka jest minimalna, maksymalna i średnia wartość rynkowa dla każdej firmy?",
        "question": "What is the minimum, maximum, and average market value for every enterprise?",
        "question_pl": "Jaka jest minimalna, maksymalna i średnia wartość rynkowa dla każdego przedsiębiorstwa?",
        "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company",
        "query_pl": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all main industry for all companies.",
        "question_original_pl": "Pokaż wszystkie główne branże dla wszystkich firm.",
        "question": "Show all main industry for all enterprise.",
        "question_pl": "Pokaż wszystkie główne branże dla wszystkich przedsiębiorstw.",
        "query": "SELECT DISTINCT main_industry FROM company",
        "query_pl": "SELECT DISTINCT main_industry FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the different main industries for all companies?",
        "question_original_pl": "Jakie są główne branże dla wszystkich firm?",
        "question": "What are the different main industries for all enterprise?",
        "question_pl": "Jakie są główne branże dla wszystkich przedsiębiorstw?",
        "query": "SELECT DISTINCT main_industry FROM company",
        "query_pl": "SELECT DISTINCT main_industry FROM company"
    },
    {
        "db_id": "gas_company",
        "question_original": "List all headquarters and the number of companies in each headquarter.",
        "question_original_pl": "Wymień wszystkie siedziby i liczbę spółek w każdej z nich.",
        "question": "List all head office and the number of companies in each head office.",
        "question_pl": "Wymień wszystkie centrale i liczbę spółek w każdej z nich.",
        "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters",
        "query_pl": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
    },
    {
        "db_id": "gas_company",
        "question_original": "For each headquarter, what are the headquarter and how many companies are centered there?",
        "question_original_pl": "W przypadku każdej siedziby głównej, jakie są siedziby główne i ile firm jest tam skoncentrowanych?",
        "question": "For each head office, what are the head office and how many companies are centered there?",
        "question_pl": "Dla każdej centrali, jakie są centrale i ile firm jest w nich skupionych?",
        "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters",
        "query_pl": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
    },
    {
        "db_id": "gas_company",
        "question_original": "List the main industry with highest total market value and its number of companies.",
        "question_original_pl": "Wymień główną branżę o największej łącznej wartości rynkowej i liczbie firm.",
        "question": "List the main industry with highest total market value and its number of enterprise.",
        "question_pl": "Wymień główną branżę o największej łącznej wartości rynkowej i liczbie przedsiębiorstw.",
        "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
        "query_pl": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question_original": "For each main industry, what is the total number of companies for the industry with the highest total market value?",
        "question_original_pl": "Dla każdej głównej branży, jaka jest łączna liczba firm w branży o najwyższej łącznej wartości rynkowej?",
        "question": "For each main industry, what is the total number of enterprise for the industry with the highest total market value?",
        "question_pl": "Dla każdej głównej branży, jaka jest całkowita liczba przedsiębiorstw w branży o najwyższej całkowitej wartości rynkowej?",
        "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
        "query_pl": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show gas station id, location, and manager_name for all gas stations ordered by open year.",
        "question_original_pl": "Pokaż identyfikator stacji benzynowej, lokalizację i nazwę kierownika dla wszystkich stacji benzynowych uporządkowanych według roku otwarcia.",
        "question": "Show gas station id, address, and head name for all gas stations ordered by open year.",
        "question_pl": "Pokaż identyfikator, adres i nazwę stacji benzynowej dla wszystkich stacji benzynowych uporządkowanych według roku otwarcia.",
        "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year",
        "query_pl": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?",
        "question_original_pl": "Jakie są identyfikatory stacji benzynowych, lokalizacje i nazwiska kierowników stacji benzynowych uporządkowane według roku otwarcia?",
        "question": "What are the gas station ids, addresses, and head names for the gas stations ordered by opening year?",
        "question_pl": "Jakie są identyfikatory stacji benzynowych, adresy i nazwy stacji benzynowych uporządkowane według roku otwarcia?",
        "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year",
        "query_pl": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all locations and the number of gas stations in each location ordered by the count.",
        "question_original_pl": "Pokaż wszystkie lokalizacje i liczbę stacji benzynowych w każdej lokalizacji uporządkowaną według liczby.",
        "question": "Show all addresses and the number of gas stations in each address ordered by the count.",
        "question_pl": "Pokaż wszystkie adresy i liczbę stacji benzynowych w każdym adresie uporządkowaną według liczby.",
        "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",
        "query_pl": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
    },
    {
        "db_id": "gas_company",
        "question_original": "For each location, how many gas stations are there in order?",
        "question_original_pl": "Ile stacji benzynowych znajduje się w kolejności dla każdej lokalizacji?",
        "question": "For each address, how many gas stations are there in order?",
        "question_pl": "Ile stacji benzynowych znajduje się pod każdym adresem w kolejności?",
        "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",
        "query_pl": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all headquarters with both a company in banking industry and a company in Oil and gas.",
        "question_original_pl": "Pokaż wszystkie siedziby, w których znajduje się zarówno firma z branży bankowej, jak i naftowo-gazowej.",
        "question": "Show all head office with both a company in banking industry and a company in Oil and gas.",
        "question_pl": "Pokaż wszystkie siedziby zarówno firmy z branży bankowej, jak i firmy z branży ropy i gazu.",
        "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'",
        "query_pl": "SELECT headquarters FROM company WHERE main_industry  =  'Bankowość' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Ropa i gaz'"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the headquarters that have both a company in the banking and 'oil and gas' industries?",
        "question_original_pl": "Jakie są centrale, które mają zarówno firmę w branży bankowej, jak i \"naftowo-gazowej\"?",
        "question": "What are the head office that have both a company in the banking and 'oil and gas' industries?",
        "question_pl": "Jakie są centrale, które mają zarówno firmę w branży bankowej, jak i \"naftowej i gazowej\"?",
        "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'",
        "query_pl": "SELECT headquarters FROM company WHERE main_industry  =  'Bankowość' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Ropa i gaz'"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all headquarters without a company in banking industry.",
        "question_original_pl": "Pokaż wszystkie siedziby bez firmy w branży bankowej.",
        "question": "Show all head office without a company in banking industry.",
        "question_pl": "Pokaż wszystkie centrale bez firmy w branży bankowej.",
        "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'",
        "query_pl": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Bankowość'"
    },
    {
        "db_id": "gas_company",
        "question_original": "For each company id, what are the companies and how many gas stations does each one operate?",
        "question_original_pl": "Dla każdego identyfikatora firmy, jakie są firmy i ile stacji benzynowych obsługuje każda z nich?",
        "question": "For each enterprise id, what are the enterprise and how many gas stations does each one operate?",
        "question_pl": "Dla każdego identyfikatora przedsiębiorstwa, jakie są przedsiębiorstwa i ile stacji benzynowych obsługuje każde z nich?",
        "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id",
        "query_pl": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the main industries of the companies without gas stations and what are the companies?",
        "question_original_pl": "Jakie są główne branże firm bez stacji benzynowych i jakie to są firmy?",
        "question": "What are the main industries of the enterprise without gas stations and what are the enterprise?",
        "question_pl": "Jakie są główne branże przedsiębiorstwa bez stacji benzynowych i jakie są przedsiębiorstwa?",
        "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
        "query_pl": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show the manager name for gas stations belonging to the ExxonMobil company.",
        "question_original_pl": "Pokaż nazwę kierownika stacji benzynowych należących do firmy ExxonMobil.",
        "question": "Show the head name for gas stations belonging to the ExxonMobil company.",
        "question_pl": "Pokaż nazwę główną stacji benzynowych należących do firmy ExxonMobil.",
        "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'",
        "query_pl": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?",
        "question_original_pl": "Jak nazywają się kierownicy stacji benzynowych obsługiwanych przez firmę ExxonMobil?",
        "question": "What are the names of the heads for gas stations that are operated by the ExxonMobil company?",
        "question_pl": "Jak nazywają się szefowie stacji benzynowych obsługiwanych przez firmę ExxonMobil?",
        "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'",
        "query_pl": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show all locations where a gas station for company with market value greater than 100 is located.",
        "question_original_pl": "Pokaż wszystkie lokalizacje, w których znajduje się stacja benzynowa dla firmy o wartości rynkowej większej niż 100.",
        "question": "Show all addresses where a gas station for company with market value greater than 100 is located.",
        "question_pl": "Pokaż wszystkie adresy, pod którymi znajduje się stacja benzynowa dla firmy o wartości rynkowej większej niż 100.",
        "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100",
        "query_pl": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the locations that have gas stations owned by a company with a market value greater than 100?",
        "question_original_pl": "W jakich lokalizacjach znajdują się stacje benzynowe należące do firmy o wartości rynkowej większej niż 100?",
        "question": "What are the addresses that have gas stations owned by a company with a market value greater than 100?",
        "question_pl": "Pod jakimi adresami znajdują się stacje benzynowe należące do firmy o wartości rynkowej większej niż 100?",
        "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100",
        "query_pl": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
    },
    {
        "db_id": "gas_company",
        "question_original": "Show the manager name with most number of gas stations opened after 2000.",
        "question_original_pl": "Pokaż nazwę menedżera z największą liczbą stacji benzynowych otwartych po 2000 roku.",
        "question": "Show the head name with most number of gas stations opened after 2000.",
        "question_pl": "Wskaż nazwę główną z największą liczbą stacji benzynowych otwartych po 2000 roku.",
        "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question_original": "What is the name of the manager with the most gas stations that opened after 2000?",
        "question_original_pl": "Jak nazywa się menedżer z największą liczbą stacji benzynowych otwartych po 2000 roku?",
        "question": "What is the name of the head with the most gas stations that opened after 2000?",
        "question_pl": "Jak nazywa się głowa z największą liczbą stacji benzynowych otwartych po 2000 roku?",
        "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "gas_company",
        "question_original": "order all gas station locations by the opening year.",
        "question_original_pl": "zamów wszystkie lokalizacje stacji benzynowych do roku otwarcia.",
        "question": "order all gas station addresses by the opening year.",
        "question_pl": "uporządkuj wszystkie adresy stacji benzynowych według roku otwarcia.",
        "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
        "query_pl": "SELECT LOCATION FROM gas_station ORDER BY open_year"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the locations of all the gas stations ordered by opening year?",
        "question_original_pl": "Jakie są lokalizacje wszystkich stacji benzynowych uporządkowanych według roku otwarcia?",
        "question": "What are the addresses of all the gas stations ordered by opening year?",
        "question_pl": "Jakie są adresy wszystkich stacji benzynowych uporządkowanych według roku otwarcia?",
        "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
        "query_pl": "SELECT LOCATION FROM gas_station ORDER BY open_year"
    },
    {
        "db_id": "gas_company",
        "question_original": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.",
        "question_original_pl": "Znajdź rangę, nazwy firm, wartości rynkowe firm z branży bankowej uporządkowane według ich sprzedaży i zysków w miliardach.",
        "question": "find the rank, enterprise names, market values of the enterprises in the banking industry order by their sales and profits in billion.",
        "question_pl": "znajdź rangę, nazwy przedsiębiorstw, wartości rynkowe przedsiębiorstw w branży bankowej uporządkowane według ich sprzedaży i zysków w miliardach.",
        "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion",
        "query_pl": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Bankowość' ORDER BY sales_billion ,  profits_billion"
    },
    {
        "db_id": "gas_company",
        "question_original": "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?",
        "question_original_pl": "Jaka jest ranga, firma i wartość rynkowa każdej firmy w branży bankowej uporządkowanej według sprzedaży i zysków?",
        "question": "What is the rank,enterprise, and market value of every enterprise in the banking industry ordered by sales and profits?",
        "question_pl": "Jaka jest ranga, przedsiębiorstwo i wartość rynkowa każdego przedsiębiorstwa w branży bankowej uporządkowana według sprzedaży i zysków?",
        "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion",
        "query_pl": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Bankowość' ORDER BY sales_billion ,  profits_billion"
    },
    {
        "db_id": "gas_company",
        "question_original": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
        "question_original_pl": "znajdź lokalizację i reprezentatywną nazwę stacji benzynowych należących do firm z 3 najwyższymi kwotami aktywów.",
        "question": "find the address and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
        "question_pl": "znajdź adres i reprezentatywną nazwę stacji benzynowych należących do firm z 3 najwyższymi kwotami aktywów.",
        "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
        "query_pl": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
    },
    {
        "db_id": "gas_company",
        "question_original": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?",
        "question_original_pl": "Jakie są lokalizacje i nazwiska przedstawicieli stacji benzynowych należących do firm o 3 największych aktywach?",
        "question": "What are the addresses and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?",
        "question_pl": "Jakie są adresy i nazwiska przedstawicieli stacji benzynowych należących do firm z 3 największymi kwotami aktywów?",
        "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
        "query_pl": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
    },
    {
        "db_id": "party_people",
        "question_original": "How many regions do we have?",
        "question_original_pl": "Ile mamy regionów?",
        "question": "How many districts do we have?",
        "question_pl": "Ile mamy okręgów?",
        "query": "SELECT count(*) FROM region",
        "query_pl": "SELECT count(*) FROM region"
    },
    {
        "db_id": "party_people",
        "question_original": "Count the number of regions.",
        "question_original_pl": "Policz liczbę regionów.",
        "question": "Count the number of districts.",
        "question_pl": "Policz liczbę okręgów.",
        "query": "SELECT count(*) FROM region",
        "query_pl": "SELECT count(*) FROM region"
    },
    {
        "db_id": "party_people",
        "question_original": "Show all distinct region names ordered by their labels.",
        "question_original_pl": "Pokaż wszystkie odrębne nazwy regionów uporządkowane według ich etykiet.",
        "question": "Show all different district names ordered by their labels.",
        "question_pl": "Pokaż wszystkie różne nazwy okręgów uporządkowane według ich etykiet.",
        "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
        "query_pl": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "db_id": "party_people",
        "question_original": "What are the different region names, ordered by labels?",
        "question_original_pl": "Jakie są różne nazwy regionów, uporządkowane według etykiet?",
        "question": "What are the different district names, ordered by labels?",
        "question_pl": "Jakie są różne nazwy okręgów, uporządkowane według etykiet?",
        "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
        "query_pl": "SELECT DISTINCT region_name FROM region ORDER BY Label"
    },
    {
        "db_id": "party_people",
        "question_original": "Show all party names and their region names.",
        "question_original_pl": "Pokaż wszystkie nazwy partii i ich nazwy regionów.",
        "question": "Show all party names and their district names.",
        "question_pl": "Pokaż nazwy wszystkich partii i ich okręgi.",
        "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id",
        "query_pl": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "db_id": "party_people",
        "question_original": "What are the names of parties and their respective regions?",
        "question_original_pl": "Jakie są nazwy partii i ich regionów?",
        "question": "What are the names of parties and their respective districts?",
        "question_pl": "Jakie są nazwy partii i ich okręgów?",
        "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id",
        "query_pl": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
    },
    {
        "db_id": "party_people",
        "question_original": "How many Annual Meeting events happened in the United Kingdom region?",
        "question_original_pl": "Ile dorocznych spotkań odbyło się w regionie Wielkiej Brytanii?",
        "question": "How many Annual Meeting events happened in the United Kingdom district?",
        "question_pl": "Ile dorocznych spotkań odbyło się w okręgu Wielka Brytania?",
        "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"",
        "query_pl": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"Wielka Brytania\" AND t3.Event_Name  =  \"Spotkanie roczne\""
    },
    {
        "db_id": "party_people",
        "question_original": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.",
        "question_original_pl": "Policz liczbę corocznych spotkań, które odbyły się w regionie Wielkiej Brytanii.",
        "question": "Count the number of Annual Meeting events that took place in the district of the United Kingdom.",
        "question_pl": "Policz liczbę dorocznych spotkań, które odbyły się w okręgu Wielkiej Brytanii.",
        "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"",
        "query_pl": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"Wielka Brytania\" AND t3.Event_Name  =  \"Spotkanie roczne\""
    },
    {
        "db_id": "pilot_record",
        "question_original": "How many pilots are there?",
        "question_original_pl": "Ilu jest pilotów?",
        "question": "How many aviators are there?",
        "question_pl": "Ilu jest lotników?",
        "query": "SELECT count(*) FROM pilot",
        "query_pl": "SELECT count(*) FROM pilot"
    },
    {
        "db_id": "pilot_record",
        "question_original": "List the names of pilots in ascending order of rank.",
        "question_original_pl": "Wymień nazwiska pilotów w kolejności rosnącej.",
        "question": "List the names of aviators in ascending order of rank.",
        "question_pl": "Wymień nazwiska lotników w kolejności rosnącej.",
        "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
        "query_pl": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC"
    },
    {
        "db_id": "pilot_record",
        "question_original": "What are the positions and teams of pilots?",
        "question_original_pl": "Jakie są stanowiska i zespoły pilotów?",
        "question": "What are the locations and teams of pilots?",
        "question_pl": "Jakie są lokalizacje i zespoły pilotów?",
        "query": "SELECT POSITION ,  Team FROM pilot",
        "query_pl": "SELECT POSITION ,  Team FROM pilot"
    },
    {
        "db_id": "pilot_record",
        "question_original": "List the distinct positions of pilots older than 30.",
        "question_original_pl": "Wymień różne stanowiska pilotów w wieku powyżej 30 lat.",
        "question": "List the different locations of pilots older than 30.",
        "question_pl": "Wymień różne lokalizacje pilotów w wieku powyżej 30 lat.",
        "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30",
        "query_pl": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the names of pilots from team \"Bradley\" or \"Fordham\".",
        "question_original_pl": "Pokaż nazwiska pilotów z drużyny \"Bradley\" lub \"Fordham\".",
        "question": "Show the names of aviators from team \"Bradley\" or \"Fordham\".",
        "question_pl": "Pokaż nazwiska lotników z drużyny \"Bradley\" lub \"Fordham\".",
        "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"",
        "query_pl": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\""
    },
    {
        "db_id": "pilot_record",
        "question_original": "What is the joined year of the pilot of the highest rank?",
        "question_original_pl": "Jaki jest rok dołączenia pilota najwyższej rangi?",
        "question": "What is the joined year of the aviator of the highest rank?",
        "question_pl": "Jaki jest rok dołączenia najwyższego rangą lotnika?",
        "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1",
        "query_pl": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1"
    },
    {
        "db_id": "pilot_record",
        "question_original": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
        "question_original_pl": "Jakie są narodowości pilotów? Wskaż każdą narodowość i liczbę pilotów każdej narodowości.",
        "question": "What are the different countries of pilots? Show each country and the number of pilots of each country.",
        "question_pl": "Z jakich krajów pochodzą piloci? Pokaż każdy kraj i liczbę pilotów z każdego kraju.",
        "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the most common nationality of pilots.",
        "question_original_pl": "Pokaż najczęstszą narodowość pilotów.",
        "question": "Show the most common country of pilots.",
        "question_pl": "Wskaż najpopularniejszy kraj pilotów.",
        "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.",
        "question_original_pl": "Pokaż stanowiska pilotów, do których dołączyli zarówno piloci po roku 2005, jak i piloci, którzy dołączyli przed rokiem 2000.",
        "question": "Show the pilot locations that have both pilots joining after year 2005 and pilots joining before 2000.",
        "question_pl": "Pokaż lokalizacje pilotów, do których dołączyli zarówno piloci po roku 2005, jak i piloci, którzy dołączyli przed rokiem 2000.",
        "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005",
        "query_pl": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the names of pilots and models of aircrafts they have flied with.",
        "question_original_pl": "Pokaż nazwiska pilotów i modele samolotów, którymi latali.",
        "question": "Show the names of aviators and types of aircrafts they have flied with.",
        "question_pl": "Pokaż nazwiska lotników i typy samolotów, którymi latali.",
        "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID",
        "query_pl": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.",
        "question_original_pl": "Pokaż nazwiska pilotów i serie flot samolotów, którymi latali, w porządku rosnącym według rangi pilota.",
        "question": "Show the names of aviators and fleet series of the aircrafts they have flied with in ascending order of the rank of the aviator.",
        "question_pl": "Pokaż nazwiska lotników i serie flot samolotów, którymi latali, w kolejności rosnącej według rangi lotnika.",
        "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank",
        "query_pl": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show the names of pilots and the number of records they have.",
        "question_original_pl": "Pokaż nazwiska pilotów i liczbę posiadanych przez nich rekordów.",
        "question": "Show the names of aviators and the number of records they have.",
        "question_pl": "Pokaż nazwiska lotników i liczbę posiadanych przez nich rekordów.",
        "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name",
        "query_pl": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name"
    },
    {
        "db_id": "pilot_record",
        "question_original": "Show names of pilots that have more than one record.",
        "question_original_pl": "Pokaż nazwiska pilotów, którzy mają więcej niż jeden rekord.",
        "question": "Show names of aviators that have more than one record.",
        "question_pl": "Pokaż nazwiska lotników, którzy mają więcej niż jeden rekord.",
        "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "pilot_record",
        "question_original": "List the names of pilots that do not have any record.",
        "question_original_pl": "Wymień nazwiska pilotów, którzy nie mają żadnego rekordu.",
        "question": "List the names of aviator that do not have any record.",
        "question_pl": "Wymień nazwiska lotników, którzy nie mają żadnego rekordu.",
        "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)",
        "query_pl": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What document status codes do we have?",
        "question_original_pl": "Jakie mamy kody statusu dokumentów?",
        "question": "What file status codes do we have?",
        "question_pl": "Jakie mamy kody statusu plików?",
        "query": "SELECT document_status_code FROM Ref_Document_Status;",
        "query_pl": "SELECT document_status_code FROM Ref_Document_Status;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the description of document status code 'working'?",
        "question_original_pl": "Jaki jest opis kodu statusu dokumentu \"działa\"?",
        "question": "What is the describing content of file status code 'working'?",
        "question_pl": "Jaka jest opisująca zawartość kodu statusu pliku \"działa\"?",
        "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";",
        "query_pl": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"praca\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What document type codes do we have?",
        "question_original_pl": "Jakie mamy kody typów dokumentów?",
        "question": "What file type codes do we have?",
        "question_pl": "Jakie mamy kody typów plików?",
        "query": "SELECT document_type_code FROM Ref_Document_Types;",
        "query_pl": "SELECT document_type_code FROM Ref_Document_Types;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the description of document type 'Paper'?",
        "question_original_pl": "Jaki jest opis typu dokumentu \"Papier\"?",
        "question": "What is the describing content of file type 'Paper'?",
        "question_pl": "Jaka jest opisowa zawartość pliku typu \"Papier\"?",
        "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";",
        "query_pl": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Papier\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the description of role code ED?",
        "question_original_pl": "Jaki jest opis kodu roli ED?",
        "question": "What is the describing content of role code ED?",
        "question_pl": "Jaka jest opisująca zawartość kodu roli ED?",
        "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";",
        "query_pl": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List all document ids and receipt dates of documents.",
        "question_original_pl": "Wymień wszystkie identyfikatory dokumentów i daty ich otrzymania.",
        "question": "List all file ids and receipt dates of files.",
        "question_pl": "Wyświetl wszystkie identyfikatory plików i daty ich otrzymania.",
        "query": "SELECT document_id ,  receipt_date FROM Documents;",
        "query_pl": "SELECT document_id ,  receipt_date FROM Documents;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "How many employees does each role have? List role description, id and number of employees.",
        "question_original_pl": "Ilu pracowników ma każda rola? Wymień opis roli, identyfikator i liczbę pracowników.",
        "question": "How many employees does each role have? List role describing content, id and number of employees.",
        "question_pl": "Ilu pracowników ma każda rola? Wymień rolę opisującą zawartość, identyfikator i liczbę pracowników.",
        "query": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;",
        "query_pl": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List roles that have more than one employee. List the role description and number of employees.",
        "question_original_pl": "Wymień role, które mają więcej niż jednego pracownika. Wymień opis roli i liczbę pracowników.",
        "question": "List roles that have more than one employee. List the role describing content and number of employees.",
        "question_pl": "Wymień role, które mają więcej niż jednego pracownika. Wymień rolę opisującą zawartość i liczbę pracowników.",
        "query": "SELECT Roles.role_description , count(distinct Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(distinct Employees.employee_id)  >  1;",
        "query_pl": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the document status description of the document with id 1?",
        "question_original_pl": "Jaki jest opis statusu dokumentu o identyfikatorze 1?",
        "question": "What is the file status describing content of the file with id 1?",
        "question_pl": "Jaki jest status pliku opisujący zawartość pliku o identyfikatorze 1?",
        "query": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;",
        "query_pl": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "How many documents have the status code done?",
        "question_original_pl": "W ilu dokumentach wykonano kod statusu?",
        "question": "How many files have the status code done?",
        "question_pl": "Ile plików wykonało kod statusu?",
        "query": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";",
        "query_pl": "SELECT count(*) FROM Documents WHERE document_status_code = \"zrobione\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List the document type code for the document with the id 2.",
        "question_original_pl": "Wymień kod typu dokumentu dla dokumentu o identyfikatorze 2.",
        "question": "List the file type code for the file with the id 2.",
        "question_pl": "Wyświetl kod typu pliku o identyfikatorze 2.",
        "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;",
        "query_pl": "SELECT document_type_code FROM Documents WHERE document_id = 2;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List the document ids for any documents with the status code done and the type code paper.",
        "question_original_pl": "Wyświetl identyfikatory wszystkich dokumentów z kodem statusu wykonano i kodem typu papier.",
        "question": "List the file ids for any files with the status code done and the type code paper.",
        "question_pl": "Wyświetl identyfikatory plików z kodem statusu done i kodem typu paper.",
        "query": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";",
        "query_pl": "SELECT document_id FROM Documents WHERE document_status_code = \"zrobione\" AND document_type_code = \"Papier\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "How many documents were shipped by USPS?",
        "question_original_pl": "Ile dokumentów zostało wysłanych przez USPS?",
        "question": "How many files were shipped by USPS?",
        "question_pl": "Ile plików zostało wysłanych przez USPS?",
        "query": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";",
        "query_pl": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.",
        "question_original_pl": "Który spedytor wysłał najwięcej dokumentów? Podaj nazwę spedytora i liczbę dokumentów.",
        "question": "Which shipping agent shipped the most files? List the shipping agent name and the number of files.",
        "question_pl": "Który agent wysyłkowy wysłał najwięcej plików? Wymień nazwę agenta wysyłkowego i liczbę plików.",
        "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(distinct Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(distinct Documents.document_id) DESC LIMIT 1;",
        "query_pl": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the receipt date of the document with id 3?",
        "question_original_pl": "Jaka jest data otrzymania dokumentu o identyfikatorze 3?",
        "question": "What is the receipt day of the file with id 3?",
        "question_pl": "Jaki jest dzień odbioru pliku o identyfikatorze 3?",
        "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;",
        "query_pl": "SELECT receipt_date FROM Documents WHERE document_id = 3;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What address was the document with id 4 mailed to?",
        "question_original_pl": "Na jaki adres wysłano dokument z identyfikatorem 4?",
        "question": "What locations was the file with id 4 mailed to?",
        "question_pl": "Do jakich lokalizacji wysłano plik z identyfikatorem 4?",
        "query": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;",
        "query_pl": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is the mail date of the document with id 7?",
        "question_original_pl": "Jaka jest data wysłania dokumentu o identyfikatorze 7?",
        "question": "What is the mail day of the file with id 7?",
        "question_pl": "Jaki jest dzień wysłania pliku o identyfikatorze 7?",
        "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;",
        "query_pl": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.",
        "question_original_pl": "Wyświetl identyfikatory dokumentów o statusie \"Wykonane\" i typie \"Papier\", które nie zostały wysłane przez firmę kurierską USPS.",
        "question": "List the file ids of files with the status done and type Paper, which not shipped by the shipping agent named USPS.",
        "question_pl": "Wyświetl identyfikatory plików o statusie Done i typie Paper, które nie zostały wysłane przez firmę kurierską USPS.",
        "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";",
        "query_pl": "SELECT document_id FROM Documents WHERE document_status_code  =  \"zrobione\" AND document_type_code = \"Papier\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.",
        "question_original_pl": "Zwróć listę identyfikatorów dokumentów jest zakończona, typ dokumentu to Paper, a dokument jest wysyłany przez agenta spedycyjnego o nazwie USPS.",
        "question": "List file id of files status is done and file type is Paper and the file is shipped by shipping agent named USPS.",
        "question_pl": "Wyświetl identyfikator pliku statusu plików, a typ pliku to Paper, a plik jest wysyłany przez agenta wysyłkowego o nazwie USPS.",
        "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";",
        "query_pl": "SELECT document_id FROM Documents WHERE document_status_code  =  \"zrobione\" AND document_type_code = \"Papier\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "What is draft detail of the document with id 7?",
        "question_original_pl": "Jaka jest wersja robocza dokumentu o identyfikatorze 7?",
        "question": "What is draft detail of the file with id 7?",
        "question_pl": "Jaka jest wersja robocza pliku o identyfikatorze 7?",
        "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;",
        "query_pl": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "How many draft copies does the document with id 2 have?",
        "question_original_pl": "Ile kopii roboczych ma dokument o identyfikatorze 2?",
        "question": "How many draft copies does the file with id 2 have?",
        "question_pl": "Ile kopii roboczych ma plik o identyfikatorze 2?",
        "query": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;",
        "query_pl": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "Which document has the most draft copies? List its document id and number of draft copies.",
        "question_original_pl": "Który dokument ma najwięcej kopii roboczych? Wymień identyfikator dokumentu i liczbę kopii roboczych.",
        "question": "Which file has the most draft copies? List its file id and number of draft copies.",
        "question_pl": "Który plik ma najwięcej kopii roboczych? Podaj identyfikator pliku i liczbę kopii roboczych.",
        "query": "SELECT document_id , count(distinct copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(distinct copy_number) DESC LIMIT 1;",
        "query_pl": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "Which documents have more than 1 draft copies? List document id and number of draft copies.",
        "question_original_pl": "Które dokumenty mają więcej niż 1 kopię roboczą? Wymień identyfikator dokumentu i liczbę kopii roboczych.",
        "question": "Which files have more than 1 draft copies? List file id and number of draft copies.",
        "question_pl": "Które pliki mają więcej niż 1 kopię roboczą? Wymień identyfikator pliku i liczbę kopii roboczych.",
        "query": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;",
        "query_pl": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.",
        "question_original_pl": "Który pracownik pojawił się w większości dokumentów historii obiegu. Wymień imię i nazwisko pracownika oraz liczbę wersji roboczych i kopii.",
        "question": "Which staff has showed up in most circulation history documents. List the staff's name and the number of drafts and copies.",
        "question_pl": "Którzy pracownicy pojawili się w większości dokumentów historii obiegu. Wymień imię i nazwisko pracownika oraz liczbę wersji roboczych i kopii.",
        "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "question_original": "For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.",
        "question_original_pl": "Dla każdego dokumentu podaj liczbę pracowników, którzy pojawili się w historii obiegu tego dokumentu. Wymień identyfikatory dokumentów i liczbę pracowników.",
        "question": "For each file, list the number of employees who have showed up in the circulation history of that file. List the file ids and number of employees.",
        "question_pl": "Dla każdego pliku podaj liczbę pracowników, którzy pojawili się w historii obiegu tego pliku. Wymień identyfikatory plików i liczbę pracowników.",
        "query": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;",
        "query_pl": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;"
    },
    {
        "db_id": "company_1",
        "question_original": "List all department names ordered by their starting date.",
        "question_original_pl": "Wymień wszystkie nazwy działów uporządkowane według daty rozpoczęcia.",
        "question": "List all division names ordered by their starting date.",
        "question_pl": "Wymień wszystkie nazwy dywizji uporządkowane według daty rozpoczęcia.",
        "query": "SELECT dname FROM department ORDER BY mgr_start_date",
        "query_pl": "SELECT dname FROM department ORDER BY mgr_start_date"
    },
    {
        "db_id": "company_1",
        "question_original": "Find the names of departments that are located in Houston.",
        "question_original_pl": "Znajdź nazwy działów, które znajdują się w Houston.",
        "question": "Find the names of divisions that are located in Houston.",
        "question_pl": "Znajdź nazwy oddziałów, które znajdują się w Houston.",
        "query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'",
        "query_pl": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'"
    },
    {
        "db_id": "company_1",
        "question_original": "Return the first names and last names of employees who earn more than 30000 in salary.",
        "question_original_pl": "Zwróć imiona i nazwiska pracowników, którzy zarabiają więcej niż 30000.",
        "question": "Return the full name of employees who earn more than 30000 in salary.",
        "question_pl": "Zwróć pełną nazwę pracowników, którzy zarabiają więcej niż 30000.",
        "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000",
        "query_pl": "SELECT fname ,  lname FROM employee WHERE salary  >  30000"
    },
    {
        "db_id": "company_1",
        "question_original": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.",
        "question_original_pl": "podaj imiona i nazwiska oraz adresy wszystkich pracowników w porządku rosnącym według daty urodzenia.",
        "question": "list the full name, and the addresses of all employees in the ascending order of their birth date.",
        "question_pl": "podaj imiona i nazwiska oraz adresy wszystkich pracowników w kolejności rosnącej według daty urodzenia.",
        "query": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate",
        "query_pl": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "what are the event details of the services that have the type code 'Marriage'?",
        "question_original_pl": "Jakie są szczegóły zdarzenia dla usług z kodem typu \"Małżeństwo\"?",
        "question": "what are the event information of the services that have the type code 'Marriage'?",
        "question_pl": "Jakie są informacje o zdarzeniach dla usług o kodzie typu \"Małżeństwo\"?",
        "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'",
        "query_pl": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Małżeństwo'"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "What are the ids and details of events that have more than one participants?",
        "question_original_pl": "Jakie są identyfikatory i szczegóły wydarzeń, które mają więcej niż jednego uczestnika?",
        "question": "What are the ids and information of events that have more than one participants?",
        "question_pl": "Jakie są identyfikatory i informacje o wydarzeniach, które mają więcej niż jednego uczestnika?",
        "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1",
        "query_pl": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "How many events have each participants attended? List the participant id, type and the number.",
        "question_original_pl": "W ilu wydarzeniach uczestniczyli poszczególni uczestnicy? Wymień identyfikator, typ i liczbę uczestników.",
        "question": "How many events have each participators attended? List the participator id, type and the number.",
        "question_pl": "W ilu wydarzeniach uczestniczył każdy z uczestników? Wymień identyfikator, typ i liczbę uczestników.",
        "query": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID",
        "query_pl": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "What are all the the participant ids, type code and details?",
        "question_original_pl": "Jakie są identyfikatory uczestników, kod typu i szczegóły?",
        "question": "What are all the the participator ids, type code and information?",
        "question_pl": "Jakie są identyfikatory uczestników, kod typu i informacje?",
        "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants",
        "query_pl": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "List the service id and details for the events.",
        "question_original_pl": "Wyświetl identyfikator usługi i szczegóły zdarzeń.",
        "question": "List the service id and information for the events.",
        "question_pl": "Wyświetl identyfikator usługi i informacje o zdarzeniach.",
        "query": "SELECT service_id ,  event_details FROM EVENTS",
        "query_pl": "SELECT service_id ,  event_details FROM EVENTS"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "How many events had participants whose details had the substring 'Dr.'",
        "question_original_pl": "Ile wydarzeń miało uczestników, których dane zawierały podciąg \"Dr.\"?",
        "question": "How many events had participants whose information had the substring 'Dr.'",
        "question_pl": "W ilu wydarzeniach brali udział uczestnicy, których informacje zawierały podciąg \"Dr.\"?",
        "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
        "query_pl": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'"
    },
    {
        "db_id": "local_govt_in_alabama",
        "question_original": "What are all the distinct participant ids who attended any events?",
        "question_original_pl": "Jakie są wszystkie identyfikatory uczestników, którzy wzięli udział w jakimkolwiek wydarzeniu?",
        "question": "What are all the different participator ids who attended any events?",
        "question_pl": "Jakie są wszystkie identyfikatory uczestników, którzy wzięli udział w wydarzeniach?",
        "query": "SELECT count(DISTINCT participant_id) FROM participants_in_Events",
        "query_pl": "SELECT count(DISTINCT participant_id) FROM participants_in_Events"
    },
    {
        "db_id": "formula_1",
        "question_original": "What is the name and date of the most recent race?",
        "question_original_pl": "Jaka jest nazwa i data ostatniego wyścigu?",
        "question": "What is the name and day of the most recent race?",
        "question_pl": "Jaka jest nazwa i dzień ostatniego wyścigu?",
        "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1",
        "query_pl": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
    },
    {
        "db_id": "formula_1",
        "question_original": "What is the name and date of the race that occurred most recently?",
        "question_original_pl": "Jaka jest nazwa i data wyścigu, który odbył się ostatnio?",
        "question": "What is the name and day of the race that occurred most recently?",
        "question_pl": "Jaka jest nazwa i dzień wyścigu, który odbył się ostatnio?",
        "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1",
        "query_pl": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find the distinct names of all races held between 2014 and 2017?",
        "question_original_pl": "Znajdź nazwy wszystkich wyścigów, które odbyły się w latach 2014-2017?",
        "question": "Find the different names of all races held between 2014 and 2017?",
        "question_pl": "Znajdź różne nazwy wszystkich wyścigów, które odbyły się w latach 2014-2017?",
        "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017",
        "query_pl": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"
    },
    {
        "db_id": "formula_1",
        "question_original": "List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?",
        "question_original_pl": "Wymień imiona i nazwiska wszystkich kierowców, którzy uzyskali czas przejazdu poniżej 93000 milisekund?",
        "question": "List the first name and last name of all distinct drivers who once had laptime less than 93000 milliseconds?",
        "question_pl": "Wymień imię i nazwisko wszystkich kierowców, którzy uzyskali czas przejazdu poniżej 93000 milisekund?",
        "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000",
        "query_pl": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find all the distinct id and nationality of drivers who have had laptime more than 100000 milliseconds?",
        "question_original_pl": "Znajdź wszystkie identyfikatory i narodowości kierowców, których czas przejazdu przekroczył 100000 milisekund?",
        "question": "Find all the different id and nationality of drivers who have had laptime more than 100000 milliseconds?",
        "question_pl": "Znajdź wszystkie różne identyfikatory i narodowości kierowców, którzy osiągnęli czas przejazdu powyżej 100000 milisekund?",
        "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000",
        "query_pl": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
    },
    {
        "db_id": "formula_1",
        "question_original": "What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds?",
        "question_original_pl": "Jakie są identyfikatory i narodowości wszystkich kierowców, którzy uzyskali czas przejazdu powyżej 100000 milisekund?",
        "question": "What are the different driver ids and nation of all drivers who had a laptime of more than 100000 milliseconds?",
        "question_pl": "Jakie są różne identyfikatory kierowców i narodowości wszystkich kierowców, których czas przejazdu przekroczył 100000 milisekund?",
        "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000",
        "query_pl": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
    },
    {
        "db_id": "formula_1",
        "question_original": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?",
        "question_original_pl": "Jaki jest identyfikator, imię i nazwisko kierowcy, który co najmniej dwa razy zajął pierwsze miejsce pod względem czasu przejazdu?",
        "question": "What is the id, full name of the driver who had the first position in terms of laptime at least twice?",
        "question_pl": "Jakie jest imię i nazwisko kierowcy, który co najmniej dwa razy zajął pierwsze miejsce pod względem czasu przejazdu?",
        "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
    },
    {
        "db_id": "formula_1",
        "question_original": "What is the id, first name, and last name of the driver who was in the first position for laptime at least twice?",
        "question_original_pl": "Jaki jest identyfikator, imię i nazwisko kierowcy, który co najmniej dwa razy zajął pierwsze miejsce pod względem czasu przejazdu?",
        "question": "What is the id, full name of the driver who was in the first position for laptime at least twice?",
        "question_pl": "Jaki jest identyfikator, pełne imię i nazwisko kierowcy, który był na pierwszym miejscu pod względem czasu przejazdu co najmniej dwa razy?",
        "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
    },
    {
        "db_id": "formula_1",
        "question_original": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?",
        "question_original_pl": "Jakie są imiona i nazwiska kierowców, którzy brali udział w wyścigach o nazwie Grand Prix Australii, ale nie w wyścigach o nazwie Grand Prix Chin?",
        "question": "What are the full name of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?",
        "question_pl": "Jakie są pełne imiona i nazwiska kierowców, którzy brali udział w wyścigach o nazwie Grand Prix Australii, ale nie w wyścigach o nazwie Grand Prix Chin?",
        "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"",
        "query_pl": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Grand Prix Australii\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Grand Prix Chin\""
    },
    {
        "db_id": "formula_1",
        "question_original": "Find all the forenames of distinct drivers who was in position 1 as standing and won?",
        "question_original_pl": "Znajdź wszystkie imiona i nazwiska różnych kierowców, którzy byli na pozycji 1 i wygrali?",
        "question": "Find all the forenames of different drivers who was in position 1 as standing and won?",
        "question_pl": "Znajdź wszystkie imiona różnych kierowców, którzy byli na pozycji 1 i wygrali?",
        "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1",
        "query_pl": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?",
        "question_original_pl": "Znajdź wszystkie imiona i nazwiska kierowców, którzy wygrali na pozycji 1 i zdobyli więcej niż 20 punktów?",
        "question": "Find all the first name of different drivers who won in position 1 as driver standing and had more than 20 points?",
        "question_pl": "Znajdź wszystkie imiona różnych kierowców, którzy wygrali na pozycji 1 jako kierowca stojący i mieli więcej niż 20 punktów?",
        "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20",
        "query_pl": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"
    },
    {
        "db_id": "formula_1",
        "question_original": "What are the numbers of constructors for different nationalities?",
        "question_original_pl": "Jaka jest liczba konstruktorów różnych narodowości?",
        "question": "What are the numbers of constructors for different nations?",
        "question_pl": "Jaka jest liczba konstruktorów w różnych krajach?",
        "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality",
        "query_pl": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
    },
    {
        "db_id": "formula_1",
        "question_original": "For each nationality, how many different constructors are there?",
        "question_original_pl": "Ilu jest różnych konstruktorów dla każdej narodowości?",
        "question": "For each nation, how many different constructors are there?",
        "question_pl": "Ilu jest różnych konstruktorów dla każdego kraju?",
        "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality",
        "query_pl": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841.",
        "question_original_pl": "Znajdź identyfikator kierowcy i numer pit stopu wszystkich kierowców, którzy mają krótszy pit stop niż niektórzy kierowcy w wyścigu o identyfikatorze 841.",
        "question": "Find the different driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841.",
        "question_pl": "Znajdź inny identyfikator kierowcy i numer pit stopu wszystkich kierowców, którzy mają krótszy pit stop niż niektórzy kierowcy w wyścigu o identyfikatorze 841.",
        "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)",
        "query_pl": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?",
        "question_original_pl": "Znajdź identyfikatory wszystkich kierowców, którzy mają dłuższy czas postoju niż niektórzy kierowcy w wyścigu, których identyfikator to 841?",
        "question": "Find the different driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?",
        "question_pl": "Znajdź różne identyfikatory kierowców, którzy mają dłuższy czas postoju niż niektórzy kierowcy w wyścigu, których identyfikator to 841?",
        "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)",
        "query_pl": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find the id and location of circuits that belong to France or Belgium?",
        "question_original_pl": "Znajdź identyfikator i lokalizację obwodów należących do Francji lub Belgii?",
        "question": "Find the id and city of circuits that belong to France or Belgium?",
        "question_pl": "Znajdź identyfikator i miasto obwodów należących do Francji lub Belgii?",
        "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
        "query_pl": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"Francja\" OR country = \"Belgia\""
    },
    {
        "db_id": "formula_1",
        "question_original": "What are the ids and locations of all circuits in France or Belgium?",
        "question_original_pl": "Jakie są identyfikatory i lokalizacje wszystkich obwodów we Francji lub Belgii?",
        "question": "What are the ids and cities of all circuits in France or Belgium?",
        "question_pl": "Jakie są identyfikatory i miasta wszystkich obwodów we Francji lub Belgii?",
        "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
        "query_pl": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"Francja\" OR country = \"Belgia\""
    },
    {
        "db_id": "formula_1",
        "question_original": "What is the id, forename, and number of races for all drivers that have participated in at least 2 races?",
        "question_original_pl": "Jaki jest identyfikator, imię i nazwisko oraz liczba wyścigów wszystkich kierowców, którzy wzięli udział w co najmniej 2 wyścigach?",
        "question": "What is the id, first name, and number of races for all drivers that have participated in at least 2 races?",
        "question_pl": "Jaki jest identyfikator, imię i liczba wyścigów wszystkich kierowców, którzy wzięli udział w co najmniej 2 wyścigach?",
        "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
    },
    {
        "db_id": "formula_1",
        "question_original": "Find the id and surname of the driver who participated the most number of races?",
        "question_original_pl": "Znajdź imię i nazwisko kierowcy, który wziął udział w największej liczbie wyścigów?",
        "question": "Find the id and family name of the driver who participated the most number of races?",
        "question_pl": "Znajdź identyfikator i nazwisko kierowcy, który wziął udział w największej liczbie wyścigów?",
        "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "machine_repair",
        "question_original": "What are the team and starting year of technicians?",
        "question_original_pl": "Jaka jest drużyna i rok rozpoczęcia pracy techników?",
        "question": "What are the group and starting year of technicians?",
        "question_pl": "Jaka jest grupa i rok rozpoczęcia pracy techników?",
        "query": "SELECT Team ,  Starting_Year FROM technician",
        "query_pl": "SELECT Team ,  Starting_Year FROM technician"
    },
    {
        "db_id": "machine_repair",
        "question_original": "What is the team and starting year for each technician?",
        "question_original_pl": "Jaki jest zespół i rok rozpoczęcia pracy każdego z techników?",
        "question": "What is the group and starting year for each technician?",
        "question_pl": "Jaka jest grupa i rok rozpoczęcia pracy każdego technika?",
        "query": "SELECT Team ,  Starting_Year FROM technician",
        "query_pl": "SELECT Team ,  Starting_Year FROM technician"
    },
    {
        "db_id": "machine_repair",
        "question_original": "Show different teams of technicians and the number of technicians in each team.",
        "question_original_pl": "Pokaż różne zespoły techników i liczbę techników w każdym zespole.",
        "question": "Show different group of technicians and the number of technicians in each group.",
        "question_pl": "Pokaż różne grupy techników i liczbę techników w każdej grupie.",
        "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team",
        "query_pl": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
    },
    {
        "db_id": "machine_repair",
        "question_original": "For each team, how many technicians are there?",
        "question_original_pl": "Ilu techników jest w każdym zespole?",
        "question": "For each group, how many technicians are there?",
        "question_pl": "Ilu jest techników w każdej grupie?",
        "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team",
        "query_pl": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
    },
    {
        "db_id": "machine_repair",
        "question_original": "Please show the team that has the most number of technicians.",
        "question_original_pl": "Wskaż zespół, który ma najwięcej techników.",
        "question": "Please show the group that has the most number of technicians.",
        "question_pl": "Wskaż grupę, która ma najwięcej techników.",
        "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "machine_repair",
        "question_original": "What are the teams with the most technicians?",
        "question_original_pl": "Które zespoły mają najwięcej techników?",
        "question": "What are the group with the most technicians?",
        "question_pl": "Jakie są grupy z największą liczbą techników?",
        "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "machine_repair",
        "question_original": "Show the team that have at least two technicians.",
        "question_original_pl": "Pokaż drużynę, która ma co najmniej dwóch techników.",
        "question": "Show the group that have at least two technicians.",
        "question_pl": "Pokaż grupę, która ma co najmniej dwóch techników.",
        "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "machine_repair",
        "question_original": "What is the team with at least 2 technicians?",
        "question_original_pl": "Jaki jest zespół z co najmniej 2 technikami?",
        "question": "What is the group with at least 2 technicians?",
        "question_pl": "Jaka jest grupa z co najmniej 2 technikami?",
        "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "List the companies of entrepreneurs in descending order of money requested.",
        "question_original_pl": "Wymień firmy przedsiębiorców w kolejności malejącej według żądanych pieniędzy.",
        "question": "List the enterprises of entrepreneurs in descending order of money requested.",
        "question_pl": "Wymień przedsiębiorstwa przedsiębiorców w porządku malejącym według żądanych pieniędzy.",
        "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
        "query_pl": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the companies of entrepreneurs, ordered descending by amount of money requested?",
        "question_original_pl": "Jakie są firmy przedsiębiorców, uporządkowane malejąco według wnioskowanej kwoty pieniędzy?",
        "question": "What are the enterprises of entrepreneurs, ordered descending by amount of money requested?",
        "question_pl": "Jakie są przedsiębiorstwa przedsiębiorców, uporządkowane malejąco według wnioskowanej kwoty pieniędzy?",
        "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
        "query_pl": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "List the companies and the investors of entrepreneurs.",
        "question_original_pl": "Wymień firmy i inwestorów przedsiębiorców.",
        "question": "List the enterprises and the investors of entrepreneurs.",
        "question_pl": "Wymień przedsiębiorstwa i inwestorów przedsiębiorców.",
        "query": "SELECT Company ,  Investor FROM entrepreneur",
        "query_pl": "SELECT Company ,  Investor FROM entrepreneur"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the companies and investors that correspond to each entrepreneur?",
        "question_original_pl": "Jakie firmy i inwestorzy odpowiadają poszczególnym przedsiębiorcom?",
        "question": "What are the enterprises and investors that correspond to each entrepreneur?",
        "question_pl": "Jakie przedsiębiorstwa i inwestorzy odpowiadają każdemu przedsiębiorcy?",
        "query": "SELECT Company ,  Investor FROM entrepreneur",
        "query_pl": "SELECT Company ,  Investor FROM entrepreneur"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Return the average money requested across all entrepreneurs.",
        "question_original_pl": "Zwróć średnią kwotę żądaną przez wszystkich przedsiębiorców.",
        "question": "Return the average money required across all enterprisers.",
        "question_pl": "Zwróć średnią kwotę wymaganą przez wszystkich przedsiębiorców.",
        "query": "SELECT avg(Money_Requested) FROM entrepreneur",
        "query_pl": "SELECT avg(Money_Requested) FROM entrepreneur"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?",
        "question_original_pl": "Jak nazywają się przedsiębiorcy, których inwestorem nie jest \"Rachel Elnaugh\"?",
        "question": "What are the names of enterprisers whose investor is not \"Rachel Elnaugh\"?",
        "question_pl": "Jakie są nazwy przedsiębiorstw, których inwestorem nie jest \"Rachel Elnaugh\"?",
        "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"",
        "query_pl": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.",
        "question_original_pl": "Zwróć nazwy przedsiębiorców nie mają inwestora Rachel Elnaugh.",
        "question": "Return the names of enterprisers do no not have the investor Rachel Elnaugh.",
        "question_pl": "Zwróć nazwy przedsiębiorstw, które nie mają inwestora Rachel Elnaugh.",
        "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"",
        "query_pl": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What is the total money requested by entrepreneurs with height more than 1.85?",
        "question_original_pl": "Jakiej łącznej kwoty żądają przedsiębiorcy o wzroście powyżej 1,85?",
        "question": "What is the total money requested by enterprisers with height more than 1.85?",
        "question_pl": "Jaka jest łączna kwota wymagana przez przedsiębiorców o wzroście powyżej 1,85?",
        "query": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85",
        "query_pl": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
        "question_original_pl": "Jakie są daty urodzenia przedsiębiorców z inwestorem \"Simon Woodroffe\" lub \"Peter Jones\"?",
        "question": "What are the birthday of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
        "question_pl": "Jakie są urodziny przedsiębiorców z inwestorem \"Simon Woodroffe\" lub \"Peter Jones\"?",
        "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"",
        "query_pl": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
        "question_original_pl": "Zwróć daty urodzenia przedsiębiorców, którzy mają inwestora Simon Woodroffe lub Peter Jones.",
        "question": "Return the birthday for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
        "question_pl": "Zwróć datę urodzin przedsiębiorcom, którzy mają inwestora Simona Woodroffe'a lub Petera Jonesa.",
        "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"",
        "query_pl": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Return the weights of entrepreneurs, ordered descending by amount of money requested.",
        "question_original_pl": "Zwróć wagi przedsiębiorców uporządkowane malejąco według wnioskowanej kwoty.",
        "question": "Return the weights of enterprisers, ordered descending by amount of money requested.",
        "question_pl": "Zwróć wagi przedsiębiorców, uporządkowane malejąco według żądanej kwoty pieniędzy.",
        "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC",
        "query_pl": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
        "question_original_pl": "Jacy są inwestorzy przedsiębiorców i odpowiadająca im liczba przedsiębiorców zainwestowanych przez każdego inwestora?",
        "question": "What are the investors of enterprisers and the corresponding number of enterprisers invested by each investor?",
        "question_pl": "Jacy są inwestorzy przedsiębiorstw i odpowiadająca im liczba przedsiębiorstw zainwestowanych przez każdego inwestora?",
        "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor",
        "query_pl": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What is the investor that has invested in the most number of entrepreneurs?",
        "question_original_pl": "Jaki jest inwestor, który zainwestował w największą liczbę przedsiębiorców?",
        "question": "What is the investor that has invested in the most number of enterprisers?",
        "question_pl": "Jaki jest inwestor, który zainwestował w największą liczbę przedsiębiorstw?",
        "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Return the investor who have invested in the greatest number of entrepreneurs.",
        "question_original_pl": "Zwróć inwestora, który zainwestował w największą liczbę przedsiębiorców.",
        "question": "Return the investor who have invested in the greatest number of enterprisers.",
        "question_pl": "Zwróć inwestora, który zainwestował w największą liczbę przedsiębiorstw.",
        "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the investors that have invested in at least two entrepreneurs?",
        "question_original_pl": "Jacy są inwestorzy, którzy zainwestowali w co najmniej dwóch przedsiębiorców?",
        "question": "What are the investors that have invested in at least two enterprisers?",
        "question_pl": "Jacy są inwestorzy, którzy zainwestowali w co najmniej dwa przedsiębiorstwa?",
        "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "List the names of entrepreneurs and their companies in descending order of money requested?",
        "question_original_pl": "Wymień nazwy przedsiębiorców i ich firm w porządku malejącym według żądanych pieniędzy?",
        "question": "List the names of enterprisers and their enterprise in descending order of money requested?",
        "question_pl": "Wymień nazwiska przedsiębiorców i ich przedsiębiorstwa w porządku malejącym według żądanych pieniędzy?",
        "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested",
        "query_pl": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "What are the investors who have invested in both entrepreneurs who requested more than 140000 and entrepreneurs who requested less than 120000?",
        "question_original_pl": "Jacy są inwestorzy, którzy zainwestowali zarówno w przedsiębiorców, którzy zażądali więcej niż 140000, jak i przedsiębiorców, którzy zażądali mniej niż 120000?",
        "question": "What are the investors who have invested in both enterprisers who requested more than 140000 and enterprisers who requested less than 120000?",
        "question_pl": "Jacy są inwestorzy, którzy zainwestowali zarówno w przedsiębiorstwa, które zażądały więcej niż 140000, jak i przedsiębiorstwa, które zażądały mniej niż 120000?",
        "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000",
        "query_pl": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "How many distinct companies are there?",
        "question_original_pl": "Ile jest różnych firm?",
        "question": "How many different enterprises are there?",
        "question_pl": "Ile jest różnych przedsiębiorstw?",
        "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
        "query_pl": "SELECT count(DISTINCT Company) FROM entrepreneur"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Count the number of different companies.",
        "question_original_pl": "Policz liczbę różnych firm.",
        "question": "Count the number of different enterprises.",
        "question_pl": "Policz liczbę różnych przedsiębiorstw.",
        "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
        "query_pl": "SELECT count(DISTINCT Company) FROM entrepreneur"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Show the company of the tallest entrepreneur.",
        "question_original_pl": "Pokaż firmę najwyższego przedsiębiorcy.",
        "question": "Show the enterprise of the tallest entrepreneur.",
        "question_pl": "Pokaż przedsiębiorstwo najwyższego przedsiębiorcy.",
        "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1",
        "query_pl": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
    },
    {
        "db_id": "entrepreneur",
        "question_original": "Which company was started by the entrepreneur with the greatest height?",
        "question_original_pl": "Która firma została założona przez przedsiębiorcę o największym wzroście?",
        "question": "Which enterprise was started by the entrepreneur with the greatest height?",
        "question_pl": "Które przedsiębiorstwo zostało założone przez przedsiębiorcę o największym wzroście?",
        "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1",
        "query_pl": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
    },
    {
        "db_id": "perpetrator",
        "question_original": "List the date of perpetrators in descending order of the number of people killed.",
        "question_original_pl": "Wymień daty sprawców w porządku malejącym według liczby zabitych osób.",
        "question": "List the day of perpetrators in descending order of the number of people killed.",
        "question_pl": "Wymień dni sprawców w porządku malejącym według liczby zabitych osób.",
        "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC",
        "query_pl": "SELECT Date FROM perpetrator ORDER BY Killed DESC"
    },
    {
        "db_id": "perpetrator",
        "question_original": "What is the location of the perpetrator with the largest kills.",
        "question_original_pl": "Jaka jest lokalizacja sprawcy z największą liczbą zabójstw.",
        "question": "What is the city of the perpetrator with the largest kills.",
        "question_pl": "Jakie jest miasto sprawcy z największą liczbą zabójstw.",
        "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1"
    },
    {
        "db_id": "perpetrator",
        "question_original": "What are the heights of perpetrators in descending order of the number of people they injured?",
        "question_original_pl": "Jaka jest wysokość sprawców w porządku malejącym według liczby osób, które zranili?",
        "question": "What are the stature of perpetrators in descending order of the number of people they injured?",
        "question_pl": "Jakiej rangi są sprawcy w porządku malejącym według liczby osób, które zranili?",
        "query": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC",
        "query_pl": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC"
    },
    {
        "db_id": "perpetrator",
        "question_original": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
        "question_original_pl": "Z jakich krajów pochodzą sprawcy? Pokaż każdy kraj i odpowiadającą mu liczbę sprawców.",
        "question": "What are the nations of perpetrators? Show each nation and the corresponding number of perpetrators there.",
        "question_pl": "Jakie są narody sprawców? Pokaż każdy naród i odpowiadającą mu liczbę sprawców.",
        "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country",
        "query_pl": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country"
    },
    {
        "db_id": "perpetrator",
        "question_original": "What is the country that has the most perpetrators?",
        "question_original_pl": "W jakim kraju jest najwięcej sprawców?",
        "question": "What is the nation that has the most perpetrators?",
        "question_pl": "Który naród ma najwięcej sprawców?",
        "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "perpetrator",
        "question_original": "What are the countries that have at least two perpetrators?",
        "question_original_pl": "W jakich krajach jest co najmniej dwóch sprawców?",
        "question": "What are the nations that have at least two perpetrators?",
        "question_pl": "Jakie narody mają co najmniej dwóch sprawców?",
        "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "perpetrator",
        "question_original": "How many distinct locations of perpetrators are there?",
        "question_original_pl": "Ile jest różnych lokalizacji sprawców?",
        "question": "How many different cities of perpetrators are there?",
        "question_pl": "Ile jest różnych miast sprawców?",
        "query": "SELECT count(DISTINCT LOCATION) FROM perpetrator",
        "query_pl": "SELECT count(DISTINCT LOCATION) FROM perpetrator"
    },
    {
        "db_id": "perpetrator",
        "question_original": "Show the date of the tallest perpetrator.",
        "question_original_pl": "Pokaż datę najwyższego sprawcy.",
        "question": "Show the day of the tallest perpetrator.",
        "question_pl": "Pokaż dzień najwyższego sprawcy.",
        "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_pl": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "Report the name of all campuses in Los Angeles county.",
        "question_original_pl": "Podaj nazwy wszystkich kampusów w hrabstwie Los Angeles.",
        "question": "Report the name of all universities in Los Angeles county.",
        "question_pl": "Podaj nazwy wszystkich uniwersytetów w hrabstwie Los Angeles.",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses are located in the county of Los Angeles?",
        "question_original_pl": "Jakie kampusy znajdują się w hrabstwie Los Angeles?",
        "question": "What universities are located in the county of Los Angeles?",
        "question_pl": "Jakie uniwersytety znajdują się w hrabstwie Los Angeles?",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What are the names of all campuses located at Chico?",
        "question_original_pl": "Jak nazywają się wszystkie kampusy zlokalizowane w Chico?",
        "question": "What are the names of all universities located at Chico?",
        "question_pl": "Jak nazywają się wszystkie uniwersytety znajdujące się w Chico?",
        "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
        "query_pl": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses are located in Chico?",
        "question_original_pl": "Jakie kampusy znajdują się w Chico?",
        "question": "What universities are located in Chico?",
        "question_pl": "Jakie uniwersytety znajdują się w Chico?",
        "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
        "query_pl": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
    },
    {
        "db_id": "csu_1",
        "question_original": "Find all the campuses opened in 1958.",
        "question_original_pl": "Znajdź wszystkie kampusy otwarte w 1958 roku.",
        "question": "Find all the universities opened in 1958.",
        "question_pl": "Znajdź wszystkie uniwersytety otwarte w 1958 roku.",
        "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  =  1958"
    },
    {
        "db_id": "csu_1",
        "question_original": "What are the campuses that opened in 1958?",
        "question_original_pl": "Jakie kampusy zostały otwarte w 1958 roku?",
        "question": "What are the universities that opened in 1958?",
        "question_pl": "Jakie uniwersytety zostały otwarte w 1958 roku?",
        "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  =  1958"
    },
    {
        "db_id": "csu_1",
        "question_original": "Find the name of the campuses opened before 1800.",
        "question_original_pl": "Znajdź nazwy kampusów otwartych przed 1800 rokiem.",
        "question": "Find the name of the universities opened before 1800.",
        "question_pl": "Znajdź nazwy uniwersytetów otwartych przed 1800 rokiem.",
        "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  <  1800"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses opened before 1800?",
        "question_original_pl": "Jakie kampusy zostały otwarte przed 1800 rokiem?",
        "question": "What universities opened before 1800?",
        "question_pl": "Jakie uniwersytety otwarto przed 1800 rokiem?",
        "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  <  1800"
    },
    {
        "db_id": "csu_1",
        "question_original": "Which campus was opened between 1935 and 1939?",
        "question_original_pl": "Który kampus został otwarty w latach 1935-1939?",
        "question": "Which university was opened between 1935 and 1939?",
        "question_pl": "Który uniwersytet został otwarty w latach 1935-1939?",
        "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses opened between 1935 and 1939?",
        "question_original_pl": "Jakie kampusy zostały otwarte w latach 1935-1939?",
        "question": "What universities opened between 1935 and 1939?",
        "question_pl": "Jakie uniwersytety otwarto w latach 1935-1939?",
        "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
        "query_pl": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
    },
    {
        "db_id": "csu_1",
        "question_original": "Find the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco.",
        "question_original_pl": "Znajdź nazwę kampusu w Northridge, Los Angeles lub w San Francisco, San Francisco.",
        "question": "Find the name of the universities that is in Northridge, Los Angeles or in San Francisco, San Francisco.",
        "question_pl": "Znajdź nazwę uniwersytetu w Northridge, Los Angeles lub w San Francisco, San Francisco.",
        "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"",
        "query_pl": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?",
        "question_original_pl": "Jakie kampusy znajdują się w Northridge, w Los Angeles lub w San Francisco w San Francisco?",
        "question": "What universities are located in Northridge, Los Angeles or in San Francisco, San Francisco?",
        "question_pl": "Jakie uniwersytety znajdują się w Northridge w Los Angeles lub w San Francisco w San Francisco?",
        "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"",
        "query_pl": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses are located in Los Angeles county and opened after 1950?",
        "question_original_pl": "Jakie kampusy znajdują się w hrabstwie Los Angeles i zostały otwarte po 1950 roku?",
        "question": "What universities are located in Los Angeles county and opened after 1950?",
        "question_pl": "Jakie uniwersytety znajdują się w hrabstwie Los Angeles i zostały otwarte po 1950 roku?",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"
    },
    {
        "db_id": "csu_1",
        "question_original": "Which campus has the most degrees conferred in all times?",
        "question_original_pl": "Który kampus ma najwięcej przyznanych stopni naukowych?",
        "question": "Which university has the most degrees conferred in all times?",
        "question_pl": "Który uniwersytet ma najwięcej nadanych stopni naukowych w historii?",
        "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1",
        "query_pl": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campus has the most degrees  conferrred over its entire existence?",
        "question_original_pl": "Który kampus ma najwięcej nadanych stopni naukowych w ciągu całego swojego istnienia?",
        "question": "What university has the most degrees  conferrred over its entire existence?",
        "question_pl": "Który uniwersytet ma najwięcej stopni naukowych nadanych w ciągu całego swojego istnienia?",
        "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1",
        "query_pl": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "Which campus has the most faculties in year 2003?",
        "question_original_pl": "Który kampus ma najwięcej wydziałów w 2003 roku?",
        "question": "Which university has the most faculties in year 2003?",
        "question_pl": "Który uniwersytet ma najwięcej wydziałów w 2003 roku?",
        "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1",
        "query_pl": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campus has the most faculties in 2003?",
        "question_original_pl": "Który kampus ma najwięcej wydziałów w 2003 roku?",
        "question": "What university has the most faculties in 2003?",
        "question_pl": "Który uniwersytet ma najwięcej wydziałów w 2003 roku?",
        "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1",
        "query_pl": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "For each Orange county campus, report the number of degrees granted after 2000.",
        "question_original_pl": "Dla każdego kampusu w hrabstwie Orange podaj liczbę stopni naukowych przyznanych po 2000 roku.",
        "question": "For each Orange county university, report the number of degrees granted after 2000.",
        "question_pl": "Dla każdego uniwersytetu w hrabstwie Orange podaj liczbę stopni naukowych przyznanych po 2000 roku.",
        "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus",
        "query_pl": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Pomarańczowy\" AND T2.year  >=  2000 GROUP BY T1.campus"
    },
    {
        "db_id": "csu_1",
        "question_original": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county.",
        "question_original_pl": "Znajdź nazwy kampusów, które w 2002 roku miały więcej wydziałów niż wszystkie kampusy w hrabstwie Orange.",
        "question": "Find the names of the university which has more faculties in 2002 than every university in Orange county.",
        "question_pl": "Znajdź nazwę uniwersytetu, który w 2002 roku miał więcej wydziałów niż każdy uniwersytet w hrabstwie Orange.",
        "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")",
        "query_pl": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Pomarańczowy\")"
    },
    {
        "db_id": "csu_1",
        "question_original": "What are the names of the campus that have more faculties in 2002 than the maximum number in Orange county?",
        "question_original_pl": "Jak nazywają się kampusy, które w 2002 roku miały więcej wydziałów niż maksymalna liczba w hrabstwie Orange?",
        "question": "What are the names of the university that have more faculties in 2002 than the maximum number in Orange county?",
        "question_pl": "Jakie są nazwy uniwersytetów, które w 2002 roku miały więcej wydziałów niż maksymalna liczba w hrabstwie Orange?",
        "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")",
        "query_pl": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Pomarańczowy\")"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?",
        "question_original_pl": "Który kampus miał więcej niż 400 zapisów ogółem, ale więcej niż 200 zapisów w pełnym wymiarze godzin w roku 1956?",
        "question": "What university had more than 400 total enrollment but more than 200 full time enrollment in year 1956?",
        "question_pl": "Jaki uniwersytet miał więcej niż 400 studentów, ale więcej niż 200 pełnoetatowych studentów w 1956 roku?",
        "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200",
        "query_pl": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
    },
    {
        "db_id": "csu_1",
        "question_original": "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?",
        "question_original_pl": "Który kampus rozpoczął działalność w 1956 roku, ma ponad 200 studentów studiów dziennych i ponad 400 zapisanych studentów?",
        "question": "What university started in year 1956, has more than 200 full time students, and more than 400 students enrolled?",
        "question_pl": "Jaki uniwersytet rozpoczął działalność w 1956 roku, ma ponad 200 studentów studiów dziennych i ponad 400 studentów?",
        "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200",
        "query_pl": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many campuses are there in Los Angeles county?",
        "question_original_pl": "Ile kampusów znajduje się w hrabstwie Los Angeles?",
        "question": "How many universities are there in Los Angeles county?",
        "question_pl": "Ile uniwersytetów znajduje się w hrabstwie Los Angeles?",
        "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "How many campuses exist are in the county of LA?",
        "question_original_pl": "Ile kampusów znajduje się w hrabstwie LA?",
        "question": "How many universities exist are in the county of LA?",
        "question_pl": "Ile uniwersytetów znajduje się w hrabstwie LA?",
        "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "List the campuses in Los Angeles county.",
        "question_original_pl": "Wymień kampusy w hrabstwie Los Angeles.",
        "question": "List the universities in Los Angeles county.",
        "question_pl": "Wymień uniwersytety w hrabstwie Los Angeles.",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What campuses are in Los Angeles county?",
        "question_original_pl": "Jakie kampusy znajdują się w hrabstwie Los Angeles?",
        "question": "What universities are in Los Angeles county?",
        "question_pl": "Jakie uniwersytety znajdują się w hrabstwie Los Angeles?",
        "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
        "query_pl": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty is there in total in the year of 2002?",
        "question_original_pl": "Ile wydziałów jest w sumie w 2002 roku?",
        "question": "How many teacher is there in total in the year of 2002?",
        "question_pl": "Ilu łącznie jest nauczycieli w 2002 roku?",
        "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
        "query_pl": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty, in total, are there in the year 2002?",
        "question_original_pl": "Ile wydziałów jest w sumie w 2002 roku?",
        "question": "How many teacher, in total, are there in the year 2002?",
        "question_pl": "Ilu łącznie jest nauczycieli w 2002 roku?",
        "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
        "query_pl": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
    },
    {
        "db_id": "csu_1",
        "question_original": "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?",
        "question_original_pl": "Jaka jest liczba wydziałów w kampusie \"Uniwersytet Stanowy Long Beach\" w 2002 roku?",
        "question": "What is the number of teacher lines in campus \"Long Beach State University\" in 2002?",
        "question_pl": "Jaka jest liczba linii nauczycielskich w kampusie \"Uniwersytet Stanowy Long Beach\" w 2002 roku?",
        "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"",
        "query_pl": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Uniwersytet Stanowy Long Beach\""
    },
    {
        "db_id": "csu_1",
        "question_original": "What is the number of faculty at Long Beach State University in 2002?",
        "question_original_pl": "Jaka jest liczba wykładowców na Long Beach State University w 2002 roku?",
        "question": "What is the number of teacher at Long Beach State University in 2002?",
        "question_pl": "Jaka jest liczba nauczycieli na Long Beach State University w 2002 roku?",
        "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"",
        "query_pl": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Uniwersytet Stanowy Long Beach\""
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty lines are there in \"San Francisco State University\" in year 2004?",
        "question_original_pl": "Ile wydziałów ma \"Uniwersytet Stanowy San Francisco\" w 2004 roku?",
        "question": "How many teacher lines are there in \"San Francisco State University\" in year 2004?",
        "question_pl": "Ile jest linii nauczycielskich w \"Uniwersytet Stanowy San Francisco\" w roku 2004?",
        "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"",
        "query_pl": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"Uniwersytet Stanowy San Francisco\""
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty lines are there at San Francisco State University in 2004?",
        "question_original_pl": "Ile wydziałów ma San Francisco State University w 2004 roku?",
        "question": "How many teacher lines are there at San Francisco State University in 2004?",
        "question_pl": "Ile jest linii nauczycielskich na Uniwersytecie Stanowym San Francisco w 2004 roku?",
        "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"",
        "query_pl": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"Uniwersytet Stanowy San Francisco\""
    },
    {
        "db_id": "csu_1",
        "question_original": "List the campus that have between 600 and 1000 faculty lines in year 2004.",
        "question_original_pl": "Wymień kampusy, które mają od 600 do 1000 wydziałów w 2004 roku.",
        "question": "List the university that have between 600 and 1000 faculty lines in year 2004.",
        "question_pl": "Wymień uniwersytety, które mają od 600 do 1000 linii wydziałowych w 2004 roku.",
        "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004",
        "query_pl": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
    },
    {
        "db_id": "csu_1",
        "question_original": "What are the campuses that had between 600 and 1000 faculty members in 2004?",
        "question_original_pl": "Jakie kampusy miały od 600 do 1000 wykładowców w 2004 roku?",
        "question": "What are the universities that had between 600 and 1000 faculty members in 2004?",
        "question_pl": "Jakie uniwersytety miały od 600 do 1000 wykładowców w 2004 roku?",
        "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004",
        "query_pl": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?",
        "question_original_pl": "Ile jest wydziałów na uniwersytecie, który nadał najwięcej stopni naukowych w 2002 roku?",
        "question": "How many teacher lines are there in the university that conferred the most number of degrees in year 2002?",
        "question_pl": "Ile jest kierunków nauczycielskich na uniwersytecie, który nadał najwięcej stopni naukowych w 2002 roku?",
        "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1",
        "query_pl": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty members did the university that conferred the most degrees in 2002 have?",
        "question_original_pl": "Ilu wykładowców miał uniwersytet, który nadał najwięcej stopni naukowych w 2002 roku?",
        "question": "How many teacher members did the university that conferred the most degrees in 2002 have?",
        "question_pl": "Ilu członków-nauczycieli miał uniwersytet, który nadał najwięcej stopni naukowych w 2002 roku?",
        "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1",
        "query_pl": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty lines are there in the university that conferred the least number of degrees in year 2001?",
        "question_original_pl": "Ile wydziałów jest na uniwersytecie, który nadał najmniej stopni naukowych w 2001 roku?",
        "question": "How many teacher lines are there in the university that conferred the least number of degrees in year 2001?",
        "question_pl": "Ile jest kierunków nauczycielskich na uniwersytecie, który nadał najmniej stopni naukowych w 2001 roku?",
        "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1",
        "query_pl": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many faculty members are at the university that gave the least number of degrees in 2001?",
        "question_original_pl": "Ilu wykładowców ma uniwersytet, który w 2001 roku wydał najmniej dyplomów?",
        "question": "How many teacher members are at the university that gave the least number of degrees in 2001?",
        "question_pl": "Ilu nauczycieli akademickich pracuje na uniwersytecie, który w 2001 roku wydał najmniej dyplomów?",
        "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1",
        "query_pl": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
    },
    {
        "db_id": "csu_1",
        "question_original": "How many CSU campuses are there?",
        "question_original_pl": "Ile jest kampusów CSU?",
        "question": "How many CSU universities are there?",
        "question_pl": "Ile jest uniwersytetów CSU?",
        "query": "SELECT count(*) FROM campuses",
        "query_pl": "SELECT count(*) FROM campuses"
    },
    {
        "db_id": "csu_1",
        "question_original": "What is the total number of campuses?",
        "question_original_pl": "Jaka jest całkowita liczba kampusów?",
        "question": "What is the total number of universities?",
        "question_pl": "Jaka jest całkowita liczba uniwersytetów?",
        "query": "SELECT count(*) FROM campuses",
        "query_pl": "SELECT count(*) FROM campuses"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "What are the names of all people, ordered by their date of birth?",
        "question_original_pl": "Jakie są imiona wszystkich ludzi uporządkowane według daty urodzenia?",
        "question": "What are the names of all people, ordered by their day of birth?",
        "question_pl": "Jakie są imiona wszystkich ludzi uporządkowane według dnia ich urodzenia?",
        "query": "SELECT name FROM people ORDER BY date_of_birth",
        "query_pl": "SELECT name FROM people ORDER BY date_of_birth"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "Find the average height and weight for all males (sex is M).",
        "question_original_pl": "Znajdź średni wzrost i wagę dla wszystkich mężczyzn (płeć to M).",
        "question": "Find the average stature and weight for all males (sex is M).",
        "question_pl": "Znajdź średnią wzrostu i wagi dla wszystkich mężczyzn (płeć to M).",
        "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
        "query_pl": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "What is the name and sex of the candidate with the highest support rate?",
        "question_original_pl": "Jak nazywa się i jakiej jest płci kandydat z najwyższym wskaźnikiem poparcia?",
        "question": "What is the name and gender of the candidate with the highest support rate?",
        "question_pl": "Jakie jest imię i nazwisko oraz płeć kandydata z najwyższym wskaźnikiem poparcia?",
        "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?",
        "question_original_pl": "Dla każdej płci, jakie jest imię i nazwisko oraz płeć kandydata ze wskaźnikiem sprzeciwu dla jego płci?",
        "question": "For each gender, what is the name and gender of the candidate with the oppose rate for their gender?",
        "question_pl": "Dla każdej płci, jakie jest imię i nazwisko oraz płeć kandydata z przeciwną stawką dla jego płci?",
        "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex",
        "query_pl": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?",
        "question_original_pl": "Zwróć maksymalny wskaźnik poparcia, minimalny wskaźnik rozważenia i minimalny wskaźnik sprzeciwu dla wszystkich kandydatów?",
        "question": "Return the maximum support percentage, minimum consider percentage, and minimum oppose percentage across all candidates?",
        "question_pl": "Zwróć maksymalny procent poparcia, minimalny procent poparcia i minimalny procent sprzeciwu dla wszystkich kandydatów?",
        "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",
        "query_pl": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"
    },
    {
        "db_id": "candidate_poll",
        "question_original": "find the name of people whose height is lower than the average.",
        "question_original_pl": "Znajdź nazwiska osób, których wzrost jest niższy od średniej.",
        "question": "find the name of people whose stature is lower than the average.",
        "question_pl": "znajdź nazwiska osób, których wzrost jest niższy niż przeciętny.",
        "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)",
        "query_pl": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"
    },
    {
        "db_id": "movie_1",
        "question_original": "How many movies were made before 2000?",
        "question_original_pl": "Ile filmów nakręcono przed 2000 rokiem?",
        "question": "How many films were made before 2000?",
        "question_pl": "Ile filmów powstało przed 2000 rokiem?",
        "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000",
        "query_pl": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
    },
    {
        "db_id": "movie_1",
        "question_original": "Who is the director of movie Avatar?",
        "question_original_pl": "Kto jest reżyserem filmu Avatar?",
        "question": "Who directed movie Avatar?",
        "question_pl": "Kto wyreżyserował film Avatar?",
        "query": "SELECT director FROM Movie WHERE title  = 'Avatar'",
        "query_pl": "SELECT director FROM Movie WHERE title  = 'Awatar'"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is the total number of ratings that has more than 3 stars?",
        "question_original_pl": "Jaka jest łączna liczba ocen, które mają więcej niż 3 gwiazdki?",
        "question": "What is the total number of scores that has more than 3 stars?",
        "question_pl": "Jaka jest łączna liczba wyników, które mają więcej niż 3 gwiazdki?",
        "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
        "query_pl": "SELECT count(*) FROM Rating WHERE stars  >  3"
    },
    {
        "db_id": "movie_1",
        "question_original": "How many movie ratings have more than 3 stars?",
        "question_original_pl": "Ile ocen filmów ma więcej niż 3 gwiazdki?",
        "question": "How many film scores have more than 3 stars?",
        "question_pl": "Ile partytur filmowych ma więcej niż 3 gwiazdki?",
        "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
        "query_pl": "SELECT count(*) FROM Rating WHERE stars  >  3"
    },
    {
        "db_id": "movie_1",
        "question_original": "Find the titles of all movies that have no ratings.",
        "question_original_pl": "Znajdź tytuły wszystkich filmów, które nie mają ocen.",
        "question": "Find the titles of all films that have no scores.",
        "question_pl": "Znajdź tytuły wszystkich filmów, które nie mają wyników.",
        "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
        "query_pl": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
    },
    {
        "db_id": "movie_1",
        "question_original": "Find the names of all reviewers who have ratings with a NULL value for the date.",
        "question_original_pl": "Znajdź nazwiska wszystkich recenzentów, którzy mają oceny z wartością NULL dla danej daty.",
        "question": "Find the names of all reviewers who have scores with a NULL value for the date.",
        "question_pl": "Znajdź nazwiska wszystkich recenzentów, którzy mają wyniki z wartością NULL dla daty.",
        "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"",
        "query_pl": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the different names of all reviewers whose ratings do not have a date field?",
        "question_original_pl": "Jakie są różne nazwy wszystkich recenzentów, których oceny nie mają pola daty?",
        "question": "What are the different names of all reviewers whose scores do not have a date field?",
        "question_pl": "Jakie są nazwy wszystkich recenzentów, których wyniki nie mają pola daty?",
        "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"",
        "query_pl": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
    },
    {
        "db_id": "movie_1",
        "question_original": "For the oldest movie listed, what is its average rating and title?",
        "question_original_pl": "Jaka jest średnia ocena i tytuł najstarszego z wymienionych filmów?",
        "question": "For the oldest film listed, what is its average score and title?",
        "question_pl": "Jaki jest średni wynik i tytuł najstarszego z wymienionych filmów?",
        "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)",
        "query_pl": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is the title of the newest movie?",
        "question_original_pl": "Jaki jest tytuł najnowszego filmu?",
        "question": "What is the title of the newest film?",
        "question_pl": "Jaki tytuł nosi najnowszy film?",
        "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)",
        "query_pl": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is the maximum stars and year for the most recent movie?",
        "question_original_pl": "Jaka jest maksymalna liczba gwiazdek i rok najnowszego filmu?",
        "question": "What is the maximum stars and year for the most recent film?",
        "question_pl": "Jaka jest maksymalna liczba gwiazd i rok premiery najnowszego filmu?",
        "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)",
        "query_pl": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is highest rating for the most recent movie and when was it released?",
        "question_original_pl": "Jaka jest najwyższa ocena ostatniego filmu i kiedy został wydany?",
        "question": "What is highest score for the most recent movie and when was it released?",
        "question_pl": "Jaki jest najwyższy wynik ostatniego filmu i kiedy został wydany?",
        "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)",
        "query_pl": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?",
        "question_original_pl": "Jakie są nazwy filmów, których rok powstania przypada po wszystkich filmach wyreżyserowanych przez Stevena Spielberga?",
        "question": "What is the names of films whose created year is after all films directed by Steven Spielberg?",
        "question_pl": "Jak nazywają się filmy, których rok powstania przypada po wszystkich filmach wyreżyserowanych przez Stevena Spielberga?",
        "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")",
        "query_pl": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?",
        "question_original_pl": "Jakie są tytuły i reżyserzy wszystkich filmów, które mają ocenę wyższą niż średnia ocena filmu Jamesa Camerona?",
        "question": "What are the titles and directors of all films that have a score higher than the average James Cameron film score?",
        "question_pl": "Jakie są tytuły i reżyserzy wszystkich filmów, które mają wynik wyższy niż średni wynik filmu Jamesa Camerona?",
        "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")",
        "query_pl": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"
    },
    {
        "db_id": "movie_1",
        "question_original": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.",
        "question_original_pl": "Zwróć nazwę recenzenta, tytuł filmu, gwiazdki i ratingDate. Posortuj dane najpierw według nazwiska recenzenta, następnie według tytułu filmu, a na końcu według liczby gwiazdek.",
        "question": "Return reviewer name, film name, stars, and ratingDate. And sort the data first by reviewer name, then by film name, and lastly by number of stars.",
        "question_pl": "Zwróć nazwisko recenzenta, nazwę filmu, gwiazdki i ratingDate. Posortuj dane najpierw według nazwiska recenzenta, następnie według nazwy filmu, a na końcu według liczby gwiazdek.",
        "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars",
        "query_pl": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
    },
    {
        "db_id": "movie_1",
        "question_original": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?",
        "question_original_pl": "Jakie jest nazwisko recenzenta, tytuł filmu, ocena filmu i data oceny dla każdego filmu uporządkowanego według nazwiska recenzenta, tytułu filmu, a następnie oceny?",
        "question": "What is the reviewer name, film name, film rating, and rating day  for every film ordered by reviewer name, film name, then finally rating?",
        "question_pl": "Jakie jest nazwisko recenzenta, nazwa filmu, ocena filmu i dzień oceny dla każdego filmu uporządkowanego według nazwiska recenzenta, nazwy filmu, a następnie oceny?",
        "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars",
        "query_pl": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
    },
    {
        "db_id": "movie_1",
        "question_original": "Find the names of all reviewers who have contributed three or more ratings.",
        "question_original_pl": "Znajdź nazwiska wszystkich recenzentów, którzy wystawili trzy lub więcej ocen.",
        "question": "Find the names of all reviewers who have contributed three or more scores.",
        "question_pl": "Znajdź nazwiska wszystkich recenzentów, którzy wystawili co najmniej trzy oceny.",
        "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3",
        "query_pl": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
    },
    {
        "db_id": "movie_1",
        "question_original": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.",
        "question_original_pl": "Dla każdej oceny, w której nazwisko recenzenta jest takie samo jak nazwisko reżysera filmu, zwróć nazwisko recenzenta, tytuł filmu i liczbę gwiazdek.",
        "question": "For any score where the name of reviewer is the same as the director of the film, return the reviewer name, film name, and number of stars.",
        "question_pl": "Dla każdej oceny, w której nazwisko recenzenta jest takie samo jak nazwisko reżysera filmu, zwróć nazwisko recenzenta, nazwę filmu i liczbę gwiazdek.",
        "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name",
        "query_pl": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?",
        "question_original_pl": "Jakie są różne nazwiska recenzentów, tytuły filmów i gwiazdki dla każdej oceny, w której recenzent miał takie samo nazwisko jak reżyser?",
        "question": "What are the different reviewer names, film names and stars for every rating where the reviewer had the same name as the director?",
        "question_pl": "Jakie są różne nazwiska recenzentów, nazwy filmów i gwiazdki dla każdej oceny, w której recenzent miał takie samo nazwisko jak reżyser?",
        "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name",
        "query_pl": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
    },
    {
        "db_id": "movie_1",
        "question_original": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.",
        "question_original_pl": "Dla wszystkich reżyserów, którzy wyreżyserowali więcej niż jeden film, zwróć tytuły wszystkich wyreżyserowanych przez nich filmów wraz z nazwiskiem reżysera. Sortuj według nazwiska reżysera, a następnie tytułu filmu.",
        "question": "For all directors who directed more than one film, return the titles of all films directed by them, along with the director name. Sort by director name, then film name.",
        "question_pl": "Dla wszystkich reżyserów, którzy wyreżyserowali więcej niż jeden film, zwróć tytuły wszystkich wyreżyserowanych przez nich filmów wraz z nazwiskiem reżysera. Sortuj według nazwiska reżysera, a następnie nazwy filmu.",
        "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title",
        "query_pl": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the names of all directors who made one movie?",
        "question_original_pl": "Jakie są nazwiska wszystkich reżyserów, którzy nakręcili jeden film?",
        "question": "What are the names of all directors who made one film?",
        "question_pl": "Jak nazywają się wszyscy reżyserzy, którzy nakręcili jeden film?",
        "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1",
        "query_pl": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
    },
    {
        "db_id": "movie_1",
        "question_original": "Find the movies with the highest average rating. Return the movie titles and average rating.",
        "question_original_pl": "Znajdź filmy z najwyższą średnią oceną. Zwróć tytuły filmów i średnią ocenę.",
        "question": "Find the films with the highest average score. Return the film names and average score.",
        "question_pl": "Znajdź filmy z najwyższą średnią oceną. Zwróć nazwy filmów i średnią ocenę.",
        "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1",
        "query_pl": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the movie titles with the highest average rating and what are those ratings?",
        "question_original_pl": "Jakie są tytuły filmów z najwyższą średnią oceną i jakie są te oceny?",
        "question": "What are the film names with the highest average score and what are those scores?",
        "question_pl": "Jakie są nazwy filmów z najwyższym średnim wynikiem i jakie są te wyniki?",
        "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1",
        "query_pl": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the movie titles and average rating of the movies with the lowest average rating?",
        "question_original_pl": "Jakie są tytuły filmów i średnia ocena filmów z najniższą średnią oceną?",
        "question": "What are the film titles and average score of the film with the lowest average score?",
        "question_pl": "Jakie są tytuły filmów i średnia ocena filmu z najniższą średnią oceną?",
        "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",
        "query_pl": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the titles and average ratings for all movies that have the lowest average rating?",
        "question_original_pl": "Jakie są tytuły i średnie oceny wszystkich filmów, które mają najniższą średnią ocenę?",
        "question": "What are the titles and average scores for all films that have the lowest average score?",
        "question_pl": "Jakie są tytuły i średnie oceny wszystkich filmów, które uzyskały najniższą średnią ocenę?",
        "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",
        "query_pl": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the names and years released for the movies with the top 3 highest ratings?",
        "question_original_pl": "Jakie są nazwy i lata premiery filmów z 3 najwyższymi ocenami?",
        "question": "What are the names and years released for the movies with the top 3 highest scores?",
        "question_pl": "Jakie są nazwy i lata premiery filmów z 3 najwyższymi wynikami?",
        "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
        "query_pl": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
    },
    {
        "db_id": "movie_1",
        "question_original": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.",
        "question_original_pl": "Dla każdego reżysera zwróć jego nazwisko wraz z tytułem wyreżyserowanego przez niego filmu, który otrzymał najwyższą ocenę spośród wszystkich jego filmów, oraz wartość tej oceny. Zignoruj filmy, których reżyser ma wartość NULL.",
        "question": "For each director, return the director's name together with the title of the movie they directed that received the highest score among all of their movies, and the value of that score. Ignore movies whose director is NULL.",
        "question_pl": "Dla każdego reżysera zwróć jego imię i nazwisko wraz z tytułem wyreżyserowanego przez niego filmu, który otrzymał najwyższą ocenę spośród wszystkich jego filmów, oraz wartość tej oceny. Zignoruj filmy, których reżyser ma wartość NULL.",
        "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director",
        "query_pl": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
    },
    {
        "db_id": "movie_1",
        "question_original": "For each director, what are the titles and ratings for all the movies they reviewed?",
        "question_original_pl": "Dla każdego reżysera, jakie są tytuły i oceny wszystkich recenzowanych przez niego filmów?",
        "question": "For each director, what are the titles and scores for all the movies they reviewed?",
        "question_pl": "Dla każdego reżysera, jakie są tytuły i oceny wszystkich filmów, które recenzował?",
        "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director",
        "query_pl": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
    },
    {
        "db_id": "movie_1",
        "question_original": "For each movie that received more than 3 reviews, what is the average rating?",
        "question_original_pl": "Jaka jest średnia ocena każdego filmu, który otrzymał więcej niż 3 recenzje?",
        "question": "For each film that received more than 3 reviews, what is the average score?",
        "question_pl": "Jaka jest średnia ocena dla każdego filmu, który otrzymał więcej niż 3 recenzje?",
        "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2",
        "query_pl": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?",
        "question_original_pl": "Jakie są nazwy filmów nakręconych po 2000 roku lub zrecenzowanych przez Brittany Harris?",
        "question": "What are names of the films that are either made after 2000 or reviewed by Brittany Harris?",
        "question_pl": "Jak nazywają się filmy nakręcone po 2000 roku lub zrecenzowane przez Brittany Harris?",
        "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000",
        "query_pl": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?",
        "question_original_pl": "Jak nazywają się wszystkie filmy, które zostały nakręcone po 2000 roku lub zrecenzowane przez Brittany Harris?",
        "question": "What are the names of all films that were made after 2000 or reviewed by Brittany Harris?",
        "question_pl": "Jak nazywają się wszystkie filmy nakręcone po 2000 roku lub zrecenzowane przez Brittany Harris?",
        "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000",
        "query_pl": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
    },
    {
        "db_id": "movie_1",
        "question_original": "What are the names of all movies made before 1980 or had James Cameron as the director?",
        "question_original_pl": "Jakie są nazwy wszystkich filmów nakręconych przed 1980 rokiem, których reżyserem był James Cameron?",
        "question": "What are the names of all films made before 1980 or had James Cameron as the director?",
        "question_pl": "Jak nazywają się wszystkie filmy nakręcone przed 1980 rokiem, których reżyserem był James Cameron?",
        "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980",
        "query_pl": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "Show names of cities and names of counties they are in.",
        "question_original_pl": "Pokaż nazwy miast i hrabstw, w których się znajdują.",
        "question": "Show names of towns and names of counties they are in.",
        "question_pl": "Pokaż nazwy miast i nazwy hrabstw, w których się znajdują.",
        "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID",
        "query_pl": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "Show white percentages of cities and the crime rates of counties they are in.",
        "question_original_pl": "Pokaż odsetek białych w miastach i wskaźniki przestępczości w hrabstwach, w których się znajdują.",
        "question": "Show percentages of caucasian in the cities and the crime rates of counties they are in.",
        "question_pl": "Pokaż odsetek rasy białej w miastach i wskaźniki przestępczości w hrabstwach, w których się znajdują.",
        "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID",
        "query_pl": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
        "question_original_pl": "Jaki jest odsetek białych w miastach i odpowiadające im wskaźniki przestępczości w hrabstwach, którym odpowiadają?",
        "question": "What are the percentages of caucasian in the cities, and the corresponding crime rates of the counties they correspond to?",
        "question_pl": "Jaki jest odsetek rasy białej w miastach i odpowiadające im wskaźniki przestępczości w hrabstwach, którym odpowiadają?",
        "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID",
        "query_pl": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "What is the location shared by most counties?",
        "question_original_pl": "Jaka jest lokalizacja wspólna dla większości hrabstw?",
        "question": "What is the position shared by most counties?",
        "question_pl": "Jakie jest stanowisko większości hrabstw?",
        "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "Which location has the most corresponding counties?",
        "question_original_pl": "Która lokalizacja ma najwięcej odpowiadających okręgów?",
        "question": "Which position has the most corresponding counties?",
        "question_pl": "Która pozycja ma najwięcej odpowiadających jej okręgów?",
        "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "county_public_safety",
        "question_original": "Show the police force shared by counties with location on the east and west.",
        "question_original_pl": "Pokaż siły policyjne podzielone na hrabstwa z lokalizacją na wschodzie i zachodzie.",
        "question": "Show the police force shared by counties with position on the east and west.",
        "question_pl": "Pokaż siły policyjne podzielone na hrabstwa z położeniem na wschodzie i zachodzie.",
        "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"",
        "query_pl": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"Wschód\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"Zachód\""
    },
    {
        "db_id": "county_public_safety",
        "question_original": "What are the case burdens of counties, ordered descending by population?",
        "question_original_pl": "Jakie są obciążenia sprawami w hrabstwach, uporządkowane malejąco według liczby ludności?",
        "question": "What are the case burdens of counties, ordered descending by the number of people?",
        "question_pl": "Jakie są obciążenia sprawami w hrabstwach, uporządkowane malejąco według liczby mieszkańców?",
        "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
        "query_pl": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
    },
    {
        "db_id": "inn_1",
        "question_original": "Which room has the largest number of reservations?",
        "question_original_pl": "Który pokój ma największą liczbę rezerwacji?",
        "question": "Which room has the most people booked?",
        "question_pl": "Który pokój zarezerwowało najwięcej osób?",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.",
        "question_original_pl": "Znajdź liczbę dzieci przebywających w pokojach zarezerwowanych przez osobę o imieniu ROY SWEAZ.",
        "question": "Find the number of children staying in the rooms reserved by a person called ROY SWEAZ.",
        "question_pl": "Znajdź liczbę dzieci przebywających w pokojach zarezerwowanych przez osobę o nazwisku ROY SWEAZ.",
        "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
        "query_pl": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the number of times ROY SWEAZY has reserved a room.",
        "question_original_pl": "Sprawdź, ile razy ROY SWEAZY rezerwował pokój.",
        "question": "Find the number of times ROY SWEAZY has booked a room.",
        "question_pl": "Znajdź liczbę razy, kiedy ROY SWEAZY rezerwował pokój.",
        "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
        "query_pl": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
    },
    {
        "db_id": "inn_1",
        "question_original": "Return the decor of the room named \"Recluse and defiance\".",
        "question_original_pl": "Przywróć wystrój pokoju o nazwie \"Rozpustnik i buntownik\".",
        "question": "Return the decoration of the room named \"Recluse and defiance\".",
        "question_pl": "Przywróć dekorację pokoju o nazwie \"Rozpustnik i buntownik\".",
        "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";",
        "query_pl": "SELECT decor FROM Rooms WHERE roomName  =  \"Rozpusta i bunt\";"
    },
    {
        "db_id": "inn_1",
        "question_original": "What kind of decor has the least number of reservations?",
        "question_original_pl": "Jaki wystrój ma najmniejszą liczbę rezerwacji?",
        "question": "What kind of decoration has the least number of reservations?",
        "question_pl": "Jaki rodzaj dekoracji ma najmniejszą liczbę rezerwacji?",
        "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;",
        "query_pl": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"
    },
    {
        "db_id": "inn_1",
        "question_original": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?",
        "question_original_pl": "Ile razy liczba dorosłych i dzieci przebywających w pokoju osiągnęła maksymalną pojemność pokoju?",
        "question": "How many times the number of adults and kids staying in a room reached the maximum the number of seats of the room?",
        "question_pl": "Ile razy liczba dorosłych i dzieci przebywających w pokoju osiągnęła maksymalną liczbę miejsc w pokoju?",
        "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;",
        "query_pl": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the first and last names of people who payed more than the rooms' base prices.",
        "question_original_pl": "Znajdź imiona i nazwiska osób, które zapłaciły więcej niż cena podstawowa pokoju.",
        "question": "Find the full name of people who payed more than the rooms' base prices.",
        "question_pl": "Znajdź pełne imiona i nazwiska osób, które zapłaciły więcej niż ceny bazowe pokoi.",
        "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
        "query_pl": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
    },
    {
        "db_id": "inn_1",
        "question_original": "What are the first and last names of people who payed more than the rooms' base prices?",
        "question_original_pl": "Jakie są imiona i nazwiska osób, które zapłaciły więcej niż podstawowe ceny pokoi?",
        "question": "What are the full name of people who payed more than the rooms' base prices?",
        "question_pl": "Jakie są pełne imiona i nazwiska osób, które zapłaciły więcej niż podstawowe ceny pokoi?",
        "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
        "query_pl": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the average and minimum price of the rooms in different decor.",
        "question_original_pl": "Znajdź średnią i minimalną cenę pokoi w różnych wystrojach.",
        "question": "Find the average and minimum price of the rooms in different decoration.",
        "question_pl": "Znajdź średnią i minimalną cenę pokoi w różnych dekoracjach.",
        "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;",
        "query_pl": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
    },
    {
        "db_id": "inn_1",
        "question_original": "What is the average minimum and price of the rooms for each different decor.",
        "question_original_pl": "Jaka jest średnia cena minimalna i cena pokoi dla każdego wystroju.",
        "question": "What is the average minimum and price of the rooms for each different decoration.",
        "question_pl": "Jaka jest średnia cena minimalna i cena pokoi dla każdego z różnych wystrojów.",
        "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;",
        "query_pl": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the number of rooms with price higher than 120 for different decor.",
        "question_original_pl": "Znajdź liczbę pokoi z ceną wyższą niż 120 dla różnych wystrojów.",
        "question": "Find the number of rooms with price higher than 120 for different decoration.",
        "question_pl": "Znajdź liczbę pokoi z ceną wyższą niż 120 dla różnych dekoracji.",
        "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;",
        "query_pl": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
    },
    {
        "db_id": "inn_1",
        "question_original": "How many rooms cost more than 120, for each different decor?",
        "question_original_pl": "Ile pokoi kosztuje więcej niż 120 za każdy inny wystrój?",
        "question": "How many rooms cost more than 120, for each different decoration?",
        "question_pl": "Ile pokoi kosztuje więcej niż 120 za każdą inną dekorację?",
        "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;",
        "query_pl": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
    },
    {
        "db_id": "inn_1",
        "question_original": "Find the name of rooms booked by some customers whose first name contains ROY.",
        "question_original_pl": "Znajdź nazwy pokoi zarezerwowanych przez klientów, których imię zawiera ROY.",
        "question": "Find the name of rooms booked by some customers whose forename contains ROY.",
        "question_pl": "Znajdź nazwy pokoi zarezerwowanych przez klientów, których imiona zawierają ROY.",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'",
        "query_pl": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"
    },
    {
        "db_id": "inn_1",
        "question_original": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?",
        "question_original_pl": "Jak nazywają się pokoje zarezerwowane przez klientów, których imię składa się z części \"ROY\"?",
        "question": "What are the name of rooms booked by customers whose forename has \"ROY\" in part?",
        "question_pl": "Jak nazywają się pokoje zarezerwowane przez klientów, których imiona zawierają \"ROY\"?",
        "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'",
        "query_pl": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"
    },
    {
        "db_id": "local_govt_mdm",
        "question_original": "what are the details of the cmi masters that have the cross reference code 'Tax'?",
        "question_original_pl": "Jakie są szczegóły list głównych cmi, które mają kod referencyjny \"Podatek\"?",
        "question": "what are the information of the cmi masters that have the cross reference code 'Tax'?",
        "question_pl": "Jakie są informacje o wzorcach cmi, które mają kod odsyłacza \"Podatek\"?",
        "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'",
        "query_pl": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Podatek'"
    },
    {
        "db_id": "local_govt_mdm",
        "question_original": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
        "question_original_pl": "Jaki jest identyfikator odsyłacza cmi, który jest powiązany z co najmniej jednym wpisem dotyczącym podatku lokalnego? Wymień identyfikator odnośnika i kod systemu źródłowego.",
        "question": "What is the cmi cross-reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
        "question_pl": "Jaki jest identyfikator odsyłacza cmi, który jest powiązany z co najmniej jednym wpisem dotyczącym podatku lokalnego? Podaj identyfikator odsyłacza i kod systemu źródłowego.",
        "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1",
        "query_pl": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1"
    },
    {
        "db_id": "local_govt_mdm",
        "question_original": "List the council tax ids and their related cmi cross references of all the parking fines.",
        "question_original_pl": "Wymień numery identyfikacyjne podatku lokalnego i powiązane z nimi numery referencyjne cmi wszystkich mandatów za parkowanie.",
        "question": "List the council tax ids and their related cmi cross-references of all the parking fines.",
        "question_pl": "Wyświetl identyfikatory podatku lokalnego i powiązane z nimi odsyłacze cmi dla wszystkich mandatów za parkowanie.",
        "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines",
        "query_pl": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines"
    },
    {
        "db_id": "local_govt_mdm",
        "question_original": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
        "question_original_pl": "Jakie są odrębne kody referencyjne systemu źródłowego, które są powiązane z głównymi danymi klienta \"Gottlieb, Becker i Wyman\"?",
        "question": "What are the different cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
        "question_pl": "Jakie są różne kody źródłowego systemu referencyjnego, które są powiązane z głównymi danymi klienta \"Gottlieb, Becker i Wyman\"?",
        "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'",
        "query_pl": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb , Becker i Wyman'"
    },
    {
        "db_id": "local_govt_mdm",
        "question_original": "Which distinct source system code includes the substring 'en'?",
        "question_original_pl": "Który odrębny kod systemu źródłowego zawiera podciąg \"en\"?",
        "question": "Which different source system code includes the substring 'en'?",
        "question_pl": "Który inny kod systemu źródłowego zawiera podciąg \"en\"?",
        "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
        "query_pl": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'"
    },
    {
        "db_id": "party_host",
        "question_original": "How many parties are there?",
        "question_original_pl": "Ile jest imprez?",
        "question": "How many parties are there?",
        "question_pl": "Ile jest partii?",
        "query": "SELECT count(*) FROM party",
        "query_pl": "SELECT count(*) FROM party"
    },
    {
        "db_id": "party_host",
        "question_original": "Count the number of parties.",
        "question_original_pl": "Policz liczbę imprez.",
        "question": "Count the number of parties.",
        "question_pl": "Policz liczbę stron.",
        "query": "SELECT count(*) FROM party",
        "query_pl": "SELECT count(*) FROM party"
    },
    {
        "db_id": "party_host",
        "question_original": "What are the themes of parties ordered by the number of hosts in ascending manner?",
        "question_original_pl": "Jakie są tematy imprez uporządkowane rosnąco według liczby gospodarzy?",
        "question": "What are the topics of parties ordered by the number of hosts in ascending manner?",
        "question_pl": "Jakie są tematy stron uporządkowane rosnąco według liczby hostów?",
        "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
        "query_pl": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
    },
    {
        "db_id": "party_host",
        "question_original": "What are the themes and locations of parties?",
        "question_original_pl": "Jakie są tematy i lokalizacje imprez?",
        "question": "What are the topics and addresses of parties?",
        "question_pl": "Jakie są tematy i adresy stron?",
        "query": "SELECT Party_Theme ,  LOCATION FROM party",
        "query_pl": "SELECT Party_Theme ,  LOCATION FROM party"
    },
    {
        "db_id": "party_host",
        "question_original": "Give me the theme and location of each party.",
        "question_original_pl": "Podaj temat i lokalizację każdej imprezy.",
        "question": "Give me the topic and address of each party.",
        "question_pl": "Podaj mi temat i adres każdej ze stron.",
        "query": "SELECT Party_Theme ,  LOCATION FROM party",
        "query_pl": "SELECT Party_Theme ,  LOCATION FROM party"
    },
    {
        "db_id": "party_host",
        "question_original": "What is the location of the party with the most hosts?",
        "question_original_pl": "Jaka jest lokalizacja imprezy z największą liczbą gospodarzy?",
        "question": "What is the address of the party with the most hosts?",
        "question_pl": "Jaki jest adres imprezy z największą liczbą gospodarzy?",
        "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
    },
    {
        "db_id": "party_host",
        "question_original": "Which party had the most hosts? Give me the party location.",
        "question_original_pl": "Która impreza miała najwięcej gospodarzy? Podaj lokalizację imprezy.",
        "question": "Which party had the most hosts? Give me the party address.",
        "question_pl": "Która impreza miała najwięcej gospodarzy? Podaj mi adres imprezy.",
        "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
    },
    {
        "db_id": "party_host",
        "question_original": "Show different nationalities along with the number of hosts of each nationality.",
        "question_original_pl": "Pokaż różne narodowości wraz z liczbą hostów każdej narodowości.",
        "question": "Show different nation along with the number of hosts of each nation.",
        "question_pl": "Pokaż różne nacje wraz z liczbą hostów każdej z nich.",
        "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
    },
    {
        "db_id": "party_host",
        "question_original": "How many hosts does each nationality have? List the nationality and the count.",
        "question_original_pl": "Ilu gospodarzy ma każda narodowość? Wymień narodowość i liczbę.",
        "question": "How many hosts does each nation have? List the nation and the count.",
        "question_pl": "Ilu gospodarzy ma każdy naród? Wymień naród i liczbę.",
        "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
    },
    {
        "db_id": "party_host",
        "question_original": "Show the most common nationality of hosts.",
        "question_original_pl": "Pokaż najczęstszą narodowość hostów.",
        "question": "Show the most common nation of hosts.",
        "question_pl": "Pokaż najpopularniejszy naród hostów.",
        "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "party_host",
        "question_original": "Which nationality has the most hosts?",
        "question_original_pl": "Która narodowość ma najwięcej hostów?",
        "question": "Which nation has the most hosts?",
        "question_pl": "Który naród ma najwięcej hostów?",
        "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "party_host",
        "question_original": "Show the themes of parties and the names of the party hosts.",
        "question_original_pl": "Pokaż tematy imprez i nazwiska gospodarzy.",
        "question": "Show the topics of parties and the names of the party hosts.",
        "question_pl": "Pokaż tematy imprez i nazwiska ich gospodarzy.",
        "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID",
        "query_pl": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
    },
    {
        "db_id": "party_host",
        "question_original": "For each party, return its theme and the name of its host.",
        "question_original_pl": "Dla każdej imprezy podaj jej temat i nazwę gospodarza.",
        "question": "For each party, return its topic and the name of its host.",
        "question_pl": "Dla każdej strony zwróć jej temat i nazwę hosta.",
        "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID",
        "query_pl": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
    },
    {
        "db_id": "party_host",
        "question_original": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.",
        "question_original_pl": "Pokaż lokalizacje imprez i nazwiska gospodarzy imprez w kolejności rosnącej według wieku gospodarza.",
        "question": "Show the addresses of parties and the names of the party hosts in ascending order of the age of the host.",
        "question_pl": "Pokaż adresy imprez i nazwiska gospodarzy imprez w kolejności rosnącej według wieku gospodarza.",
        "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age",
        "query_pl": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
    },
    {
        "db_id": "party_host",
        "question_original": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.",
        "question_original_pl": "Dla każdej imprezy znajdź jej lokalizację i nazwisko gospodarza. Posortuj wyniki rosnąco według wieku gospodarza.",
        "question": "For each party, find its address and the name of its host. Sort the result in ascending order of the age of the host.",
        "question_pl": "Dla każdej imprezy znajdź jej adres i nazwisko gospodarza. Posortuj wyniki rosnąco według wieku gospodarza.",
        "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age",
        "query_pl": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
    },
    {
        "db_id": "party_host",
        "question_original": "Show the locations of parties with hosts older than 50.",
        "question_original_pl": "Pokaż lokalizacje imprez z gospodarzami w wieku powyżej 50 lat.",
        "question": "Show the addresses of parties with hosts older than 50.",
        "question_pl": "Pokaż adresy imprez z gospodarzami w wieku powyżej 50 lat.",
        "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50",
        "query_pl": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
    },
    {
        "db_id": "party_host",
        "question_original": "Which parties have hosts of age above 50? Give me the party locations.",
        "question_original_pl": "Które imprezy mają gospodarzy w wieku powyżej 50 lat? Podaj mi lokalizacje imprez.",
        "question": "Which parties have hosts of age above 50? Give me the party addresses.",
        "question_pl": "Które imprezy mają gospodarzy w wieku powyżej 50 lat? Podaj mi adresy imprez.",
        "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50",
        "query_pl": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
    },
    {
        "db_id": "party_host",
        "question_original": "Show the name and the nationality of the oldest host.",
        "question_original_pl": "Pokaż imię i nazwisko oraz narodowość najstarszego hosta.",
        "question": "Show the name and the nation of the oldest host.",
        "question_pl": "Pokaż nazwę i kraj najstarszego hosta.",
        "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "party_host",
        "question_original": "What are the name and the nationality of the host of the highest age?",
        "question_original_pl": "Jak nazywa się i jakiej jest narodowości gospodarz w najwyższym wieku?",
        "question": "What are the name and the nation of the host of the highest age?",
        "question_pl": "Jakie jest imię i naród gospodarza najwyższego wieku?",
        "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question_original": "How many regions do we have?",
        "question_original_pl": "Ile mamy regionów?",
        "question": "How many districts do we have?",
        "question_pl": "Ile mamy okręgów?",
        "query": "SELECT count(*) FROM region",
        "query_pl": "SELECT count(*) FROM region"
    },
    {
        "db_id": "storm_record",
        "question_original": "Count the number of regions.",
        "question_original_pl": "Policz liczbę regionów.",
        "question": "Count the number of districts.",
        "question_pl": "Policz liczbę okręgów.",
        "query": "SELECT count(*) FROM region",
        "query_pl": "SELECT count(*) FROM region"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show all region code and region name sorted by the codes.",
        "question_original_pl": "Pokaż wszystkie kody regionów i nazwy regionów posortowane według kodów.",
        "question": "Show all district code and district name sorted by the codes.",
        "question_pl": "Pokaż wszystkie kody okręgów i nazwy okręgów posortowane według kodów.",
        "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code",
        "query_pl": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the codes and names for all regions, sorted by codes?",
        "question_original_pl": "Jakie są kody i nazwy wszystkich regionów, posortowane według kodów?",
        "question": "What are the codes and names for all districts, sorted by codes?",
        "question_pl": "Jakie są kody i nazwy wszystkich dzielnic, posortowane według kodów?",
        "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code",
        "query_pl": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
    },
    {
        "db_id": "storm_record",
        "question_original": "List all region names in alphabetical order.",
        "question_original_pl": "Wymień wszystkie nazwy regionów w kolejności alfabetycznej.",
        "question": "List all district names in alphabetical order.",
        "question_pl": "Wymień wszystkie nazwy okręgów w kolejności alfabetycznej.",
        "query": "SELECT region_name FROM region ORDER BY region_name",
        "query_pl": "SELECT region_name FROM region ORDER BY region_name"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of the regions in alphabetical order?",
        "question_original_pl": "Jak nazywają się regiony w kolejności alfabetycznej?",
        "question": "What are the names of the districts in alphabetical order?",
        "question_pl": "Jak nazywają się dzielnice w kolejności alfabetycznej?",
        "query": "SELECT region_name FROM region ORDER BY region_name",
        "query_pl": "SELECT region_name FROM region ORDER BY region_name"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show names for all regions except for Denmark.",
        "question_original_pl": "Pokaż nazwy dla wszystkich regionów z wyjątkiem Danii.",
        "question": "Show names for all districts except for Denmark.",
        "question_pl": "Pokaż nazwy dla wszystkich okręgów z wyjątkiem Danii.",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "query_pl": "SELECT region_name FROM region WHERE region_name != 'Dania'"
    },
    {
        "db_id": "storm_record",
        "question_original": "Return the names of all regions other than Denmark.",
        "question_original_pl": "Zwróć nazwy wszystkich regionów innych niż Dania.",
        "question": "Return the names of all districts other than Denmark.",
        "question_pl": "Zwróć nazwy wszystkich okręgów innych niż Dania.",
        "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
        "query_pl": "SELECT region_name FROM region WHERE region_name != 'Dania'"
    },
    {
        "db_id": "storm_record",
        "question_original": "How many storms had death records?",
        "question_original_pl": "Ile burz miało zapisy dotyczące śmierci?",
        "question": "How many windstorm had death records?",
        "question_pl": "Ile wichur miało zapisy dotyczące śmierci?",
        "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
        "query_pl": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
    },
    {
        "db_id": "storm_record",
        "question_original": "Count the number of storms in which at least 1 person died.",
        "question_original_pl": "Policz liczbę burz, w których zginęła co najmniej 1 osoba.",
        "question": "Count the number of windstorm in which at least 1 person died.",
        "question_pl": "Policz liczbę wichur, w których zginęła co najmniej 1 osoba.",
        "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
        "query_pl": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
    },
    {
        "db_id": "storm_record",
        "question_original": "List name, dates active, and number of deaths for all storms with at least 1 death.",
        "question_original_pl": "Wymień nazwę, daty aktywności i liczbę ofiar śmiertelnych dla wszystkich burz z co najmniej 1 ofiarą śmiertelną.",
        "question": "List name, dates active, and number of deaths for all windstorms with at least 1 death.",
        "question_pl": "Wymień nazwy, daty aktywności i liczbę ofiar śmiertelnych wszystkich wichur z co najmniej 1 ofiarą śmiertelną.",
        "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1",
        "query_pl": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names, dates active, and number of deaths for storms that had 1 or more death?",
        "question_original_pl": "Jakie są nazwy, daty aktywności i liczba ofiar śmiertelnych burz, w których zginęła co najmniej jedna osoba?",
        "question": "What are the names, dates active, and number of deaths for windstorms that had 1 or more death?",
        "question_pl": "Jakie są nazwy, daty aktywności i liczba ofiar śmiertelnych wichur, które spowodowały co najmniej 1 ofiarę śmiertelną?",
        "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1",
        "query_pl": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show the average and maximum damage for all storms with max speed higher than 1000.",
        "question_original_pl": "Pokaż średnie i maksymalne uszkodzenia dla wszystkich burz z maksymalną prędkością większą niż 1000.",
        "question": "Show the average and maximum loss for all windstorms with max speed higher than 1000.",
        "question_pl": "Pokaż średnią i maksymalną stratę dla wszystkich burz z maksymalną prędkością większą niż 1000.",
        "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000",
        "query_pl": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
    },
    {
        "db_id": "storm_record",
        "question_original": "What is the average and maximum damage in millions for storms that had a max speed over 1000?",
        "question_original_pl": "Jakie są średnie i maksymalne szkody w milionach dla burz, których maksymalna prędkość przekraczała 1000?",
        "question": "What is the average and maximum loss in millions for storms that had a max speed over 1000?",
        "question_pl": "Jakie są średnie i maksymalne straty w milionach dla burz, których maksymalna prędkość przekraczała 1000?",
        "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000",
        "query_pl": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
    },
    {
        "db_id": "storm_record",
        "question_original": "What is the total number of deaths and damage for all storms with a max speed greater than the average?",
        "question_original_pl": "Jaka jest łączna liczba ofiar śmiertelnych i uszkodzeń dla wszystkich burz z maksymalną prędkością większą niż średnia?",
        "question": "What is the total number of deaths and loss for all storms with a max speed greater than the average?",
        "question_pl": "Jaka jest łączna liczba ofiar śmiertelnych i strat dla wszystkich burz z maksymalną prędkością większą niż średnia?",
        "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)",
        "query_pl": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
    },
    {
        "db_id": "storm_record",
        "question_original": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.",
        "question_original_pl": "Zwróć łączną liczbę ofiar śmiertelnych i łączne szkody w milionach dla burz, których maksymalna prędkość była większa niż średnia.",
        "question": "Return the total number of deaths and total loss in millions for storms that had a max speed greater than the average.",
        "question_pl": "Zwróć łączną liczbę ofiar śmiertelnych i łączne straty w milionach dla burz, których maksymalna prędkość była większa niż średnia.",
        "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)",
        "query_pl": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
    },
    {
        "db_id": "storm_record",
        "question_original": "List name and damage for all storms in a descending order of max speed.",
        "question_original_pl": "Wymień nazwy i uszkodzenia wszystkich burz w porządku malejącym według maksymalnej prędkości.",
        "question": "List name and loss for all storms in a descending order of max speed.",
        "question_pl": "Wyświetl nazwę i straty dla wszystkich burz w porządku malejącym według maksymalnej prędkości.",
        "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC",
        "query_pl": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names and damage in millions for storms, ordered by their max speeds descending?",
        "question_original_pl": "Jakie są nazwy i szkody w milionach dla burz, uporządkowane według ich maksymalnych prędkości malejących?",
        "question": "What are the names and loss in millions for storms, ordered by their max speeds descending?",
        "question_pl": "Jakie są nazwy i straty w milionach dla burz, uporządkowane według ich maksymalnych prędkości malejących?",
        "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC",
        "query_pl": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
    },
    {
        "db_id": "storm_record",
        "question_original": "How many regions are affected?",
        "question_original_pl": "Ilu regionów to dotyczy?",
        "question": "How many districts are affected?",
        "question_pl": "Ilu okręgów to dotyczy?",
        "query": "SELECT count(DISTINCT region_id) FROM affected_region",
        "query_pl": "SELECT count(DISTINCT region_id) FROM affected_region"
    },
    {
        "db_id": "storm_record",
        "question_original": "Count the number of different affected regions.",
        "question_original_pl": "Policz liczbę różnych dotkniętych regionów.",
        "question": "Count the number of different affected districts.",
        "question_pl": "Policz liczbę różnych dotkniętych okręgów.",
        "query": "SELECT count(DISTINCT region_id) FROM affected_region",
        "query_pl": "SELECT count(DISTINCT region_id) FROM affected_region"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show the name for regions not affected.",
        "question_original_pl": "Pokaż nazwę dla regionów, których to nie dotyczy.",
        "question": "Show the name for districts not affected.",
        "question_pl": "Pokaż nazwę dla okręgów, których to nie dotyczy.",
        "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
        "query_pl": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of regions that were not affected?",
        "question_original_pl": "Jak nazywają się regiony, które nie ucierpiały?",
        "question": "What are the names of districts that were not affected?",
        "question_pl": "Jakie są nazwy okręgów, których to nie dotyczy?",
        "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
        "query_pl": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show the name for regions and the number of storms for each region.",
        "question_original_pl": "Pokaż nazwy regionów i liczbę burz dla każdego regionu.",
        "question": "Show the name for districts and the number of storms for each district.",
        "question_pl": "Pokaż nazwy okręgów i liczbę burz dla każdego okręgu.",
        "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
        "query_pl": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
    },
    {
        "db_id": "storm_record",
        "question_original": "How many storms occured in each region?",
        "question_original_pl": "Ile burz wystąpiło w każdym regionie?",
        "question": "How many windstorm occured in each district?",
        "question_pl": "Ile wichur wystąpiło w każdym okręgu?",
        "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
        "query_pl": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
    },
    {
        "db_id": "storm_record",
        "question_original": "List the name for storms and the number of affected regions for each storm.",
        "question_original_pl": "Wymień nazwy burz i liczbę dotkniętych regionów dla każdej burzy.",
        "question": "List the name for windstorm and the number of affected districts for each windstorm.",
        "question_pl": "Wymień nazwę wichury i liczbę dotkniętych nią okręgów dla każdej wichury.",
        "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id",
        "query_pl": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
    },
    {
        "db_id": "storm_record",
        "question_original": "How many regions were affected by each storm?",
        "question_original_pl": "Ile regionów zostało dotkniętych przez każdą z burz?",
        "question": "How many districts were affected by each windstorm?",
        "question_pl": "Ile okręgów zostało dotkniętych przez każdą wichurę?",
        "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id",
        "query_pl": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
    },
    {
        "db_id": "storm_record",
        "question_original": "What is the storm name and max speed which affected the greatest number of regions?",
        "question_original_pl": "Jaka jest nazwa burzy i maksymalna prędkość, która dotknęła największą liczbę regionów?",
        "question": "What is the storm name and max velocity which affected the greatest number of districts?",
        "question_pl": "Jaka jest nazwa burzy i maksymalna prędkość, która dotknęła największą liczbę okręgów?",
        "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question_original": "Return the name and max speed of the storm that affected the most regions.",
        "question_original_pl": "Zwróć nazwę i maksymalną prędkość burzy, która dotknęła najwięcej regionów.",
        "question": "Return the name and max velocity of the storm that affected the most districts.",
        "question_pl": "Zwróć nazwę i maksymalną prędkość burzy, która dotknęła najwięcej dzielnic.",
        "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show the name of storms which don't have affected region in record.",
        "question_original_pl": "Pokaż nazwy burz, które nie mają w rekordzie dotkniętego regionu.",
        "question": "Show the name of windstorms which don't have affected district in record.",
        "question_pl": "Pokaż nazwy wichur, które nie miały wpływu na dzielnicę w rekordzie.",
        "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
        "query_pl": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of storms that did not affect any regions?",
        "question_original_pl": "Jak nazywają się burze, które nie dotknęły żadnego regionu?",
        "question": "What are the names of windstorm that did not affect any regions?",
        "question_pl": "Jak nazywają się wichury, które nie dotknęły żadnego regionu?",
        "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
        "query_pl": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show storm name with at least two regions and 10 cities affected.",
        "question_original_pl": "Pokaż nazwę huraganu z co najmniej dwoma regionami i 10 miastami dotkniętymi huraganem.",
        "question": "Show windstorm name with at least two districts and 10 cities affected.",
        "question_pl": "Pokaż nazwę wichury z co najmniej dwoma okręgami i 10 dotkniętymi miastami.",
        "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10",
        "query_pl": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?",
        "question_original_pl": "Jak nazywają się burze, które dotknęły co najmniej dwa regiony i łącznie co najmniej 10 miast?",
        "question": "What are the names of windstorms that both affected two or more districts and affected a total of 10 or more cities?",
        "question_pl": "Jak nazywają się wichury, które dotknęły dwie lub więcej dzielnic i łącznie 10 lub więcej miast?",
        "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10",
        "query_pl": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show all storm names except for those with at least two affected regions.",
        "question_original_pl": "Pokaż wszystkie nazwy burz z wyjątkiem tych, które mają co najmniej dwa dotknięte regiony.",
        "question": "Show all windstorm names except for those with at least two affected districts.",
        "question_pl": "Pokaż wszystkie nazwy wichur z wyjątkiem tych, które mają co najmniej dwa dotknięte okręgi.",
        "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2",
        "query_pl": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of storms that did not affect two or more regions?",
        "question_original_pl": "Jak nazywają się burze, które nie dotknęły dwóch lub więcej regionów?",
        "question": "What are the names of windstorms that did not affect two or more districts?",
        "question_pl": "Jak nazywają się wichury, które nie dotknęły dwóch lub więcej okręgów?",
        "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2",
        "query_pl": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the region names affected by the storm with a number of deaths of least 10?",
        "question_original_pl": "Jak nazywają się regiony dotknięte burzą z liczbą ofiar śmiertelnych wynoszącą co najmniej 10?",
        "question": "What are the district names affected by the storm with a number of deaths of least 10?",
        "question_pl": "Jakie są nazwy dzielnic dotkniętych burzą z liczbą ofiar śmiertelnych wynoszącą co najmniej 10?",
        "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10",
        "query_pl": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
    },
    {
        "db_id": "storm_record",
        "question_original": "Return the names of the regions affected by storms that had a death count of at least 10.",
        "question_original_pl": "Zwróć nazwy regionów dotkniętych burzami, w których liczba ofiar śmiertelnych wyniosła co najmniej 10.",
        "question": "Return the names of the districts affected by storms that had a death count of at least 10.",
        "question_pl": "Zwróć nazwy okręgów dotkniętych burzami, w których zginęło co najmniej 10 osób.",
        "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10",
        "query_pl": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show all storm names affecting region \"Denmark\".",
        "question_original_pl": "Pokaż wszystkie nazwy burz wpływające na region \"Dania\".",
        "question": "Show all storm names affecting district \"Denmark\".",
        "question_pl": "Pokaż wszystkie nazwy burz wpływające na okręg \"Dania\".",
        "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'",
        "query_pl": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Dania'"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of the storms that affected Denmark?",
        "question_original_pl": "Jak nazywają się burze, które nawiedziły Danię?",
        "question": "What are the names of the windstorm that affected Denmark?",
        "question_pl": "Jak nazywa się wichura, która dotknęła Danię?",
        "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'",
        "query_pl": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Dania'"
    },
    {
        "db_id": "storm_record",
        "question_original": "Show the region name with at least two storms.",
        "question_original_pl": "Pokaż nazwę regionu z co najmniej dwoma burzami.",
        "question": "Show the district name with at least two windstorm.",
        "question_pl": "Pokaż nazwę okręgu z co najmniej dwoma wichurami.",
        "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of regions with two or more storms?",
        "question_original_pl": "Jak nazywają się regiony, w których występują dwie lub więcej burz?",
        "question": "What are the names of districts with two or more windstorm?",
        "question_pl": "Jak nazywają się dystrykty z co najmniej dwoma wichurami?",
        "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "storm_record",
        "question_original": "Find the names of the regions which were affected by the storm that killed the greatest number of people.",
        "question_original_pl": "Znajdź nazwy regionów dotkniętych burzą, która zabiła największą liczbę osób.",
        "question": "Find the names of the districts which were affected by the windstorm that killed the greatest number of people.",
        "question_pl": "Znajdź nazwy dzielnic dotkniętych wichurą, która zabiła największą liczbę osób.",
        "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1",
        "query_pl": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of regions that were affected by the storm in which the most people died?",
        "question_original_pl": "Jak nazywają się regiony dotknięte huraganem, w których zginęło najwięcej osób?",
        "question": "What are the names of districts that were affected by the storm in which the most people died?",
        "question_pl": "Jak nazywają się dzielnice dotknięte huraganem, w których zginęło najwięcej osób?",
        "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1",
        "query_pl": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
    },
    {
        "db_id": "storm_record",
        "question_original": "Find the name of the storm that affected both Afghanistan and Albania regions.",
        "question_original_pl": "Znajdź nazwę burzy, która dotknęła regiony Afganistanu i Albanii.",
        "question": "Find the name of the windstorm that affected both Afghanistan and Albania regions.",
        "question_pl": "Znajdź nazwę wichury, która dotknęła regiony Afganistanu i Albanii.",
        "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'",
        "query_pl": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afganistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"
    },
    {
        "db_id": "storm_record",
        "question_original": "What are the names of the storms that affected both the regions of Afghanistan and Albania?",
        "question_original_pl": "Jak nazywają się burze, które nawiedziły oba regiony Afganistanu i Albanii?",
        "question": "What are the names of the windstorm that affected both the districts of Afghanistan and Albania?",
        "question_pl": "Jak nazywa się wichura, która dotknęła oba dystrykty Afganistanu i Albanii?",
        "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'",
        "query_pl": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afganistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"
    },
    {
        "db_id": "election",
        "question_original": "Show the county name and population of all counties.",
        "question_original_pl": "Pokaż nazwę hrabstwa i populację wszystkich hrabstw.",
        "question": "Show the county name and populace of all counties.",
        "question_pl": "Pokaż nazwę hrabstwa i liczbę mieszkańców wszystkich hrabstw.",
        "query": "SELECT County_name ,  Population FROM county",
        "query_pl": "SELECT County_name ,  Population FROM county"
    },
    {
        "db_id": "election",
        "question_original": "What are the name and population of each county?",
        "question_original_pl": "Jaka jest nazwa i populacja każdego hrabstwa?",
        "question": "What are the name and the number of people in each county?",
        "question_pl": "Jaka jest nazwa i liczba mieszkańców każdego hrabstwa?",
        "query": "SELECT County_name ,  Population FROM county",
        "query_pl": "SELECT County_name ,  Population FROM county"
    },
    {
        "db_id": "election",
        "question_original": "Show the average population of all counties.",
        "question_original_pl": "Pokaż średnią populację wszystkich hrabstw.",
        "question": "Show the average number of people in all counties.",
        "question_pl": "Pokaż średnią liczbę osób we wszystkich hrabstwach.",
        "query": "SELECT avg(Population) FROM county",
        "query_pl": "SELECT avg(Population) FROM county"
    },
    {
        "db_id": "election",
        "question_original": "On average how large is the population of the counties?",
        "question_original_pl": "Jak duża jest średnio populacja hrabstw?",
        "question": "On average how large is the number of people in the counties?",
        "question_pl": "Jaka jest średnia liczba osób w powiatach?",
        "query": "SELECT avg(Population) FROM county",
        "query_pl": "SELECT avg(Population) FROM county"
    },
    {
        "db_id": "election",
        "question_original": "Return the maximum and minimum population among all counties.",
        "question_original_pl": "Zwróć maksymalną i minimalną populację wśród wszystkich hrabstw.",
        "question": "Return the maximum and minimum number of people in all counties.",
        "question_pl": "Zwróć maksymalną i minimalną liczbę osób we wszystkich hrabstwach.",
        "query": "SELECT max(Population) ,  min(Population) FROM county",
        "query_pl": "SELECT max(Population) ,  min(Population) FROM county"
    },
    {
        "db_id": "election",
        "question_original": "What are the maximum and minimum population of the counties?",
        "question_original_pl": "Jaka jest maksymalna i minimalna populacja hrabstw?",
        "question": "What are the maximum and minimum number of people in the counties?",
        "question_pl": "Jaka jest maksymalna i minimalna liczba osób w okręgach?",
        "query": "SELECT max(Population) ,  min(Population) FROM county",
        "query_pl": "SELECT max(Population) ,  min(Population) FROM county"
    },
    {
        "db_id": "election",
        "question_original": "Show all the distinct districts for elections.",
        "question_original_pl": "Pokaż wszystkie odrębne okręgi wyborcze.",
        "question": "Show all the different regions for elections.",
        "question_pl": "Pokaż wszystkie różne regiony wyborcze.",
        "query": "SELECT DISTINCT District FROM election",
        "query_pl": "SELECT DISTINCT District FROM election"
    },
    {
        "db_id": "election",
        "question_original": "What are the distinct districts for elections?",
        "question_original_pl": "Jakie są odrębne okręgi wyborcze?",
        "question": "What are the different regions for elections?",
        "question_pl": "W jakich regionach odbywają się wybory?",
        "query": "SELECT DISTINCT District FROM election",
        "query_pl": "SELECT DISTINCT District FROM election"
    },
    {
        "db_id": "election",
        "question_original": "Show the delegate from district 1 in election.",
        "question_original_pl": "Pokaż delegata z okręgu 1 w wyborach.",
        "question": "Show the representative from district 1 in election.",
        "question_pl": "Pokaż przedstawiciela z okręgu 1 w wyborach.",
        "query": "SELECT Delegate FROM election WHERE District  =  1",
        "query_pl": "SELECT Delegate FROM election WHERE District  =  1"
    },
    {
        "db_id": "election",
        "question_original": "Who is the delegate of district 1 in the elections?",
        "question_original_pl": "Kto jest delegatem okręgu 1 w wyborach?",
        "question": "Who is the representative of district 1 in the elections?",
        "question_pl": "Kto jest przedstawicielem okręgu 1 w wyborach?",
        "query": "SELECT Delegate FROM election WHERE District  =  1",
        "query_pl": "SELECT Delegate FROM election WHERE District  =  1"
    },
    {
        "db_id": "election",
        "question_original": "Show the delegate and committee information of elections.",
        "question_original_pl": "Pokaż informacje o delegatach i komitetach wyborczych.",
        "question": "Show the representative and committee information of elections.",
        "question_pl": "Pokaż informacje o przedstawicielach i komitetach wyborczych.",
        "query": "SELECT Delegate ,  Committee FROM election",
        "query_pl": "SELECT Delegate ,  Committee FROM election"
    },
    {
        "db_id": "election",
        "question_original": "What are the delegate and committee information for each election record?",
        "question_original_pl": "Jakie są informacje o delegatach i komitetach dla każdego protokołu wyborczego?",
        "question": "What are the representative and committee information for each election record?",
        "question_pl": "Jakie są informacje o przedstawicielu i komitecie dla każdego rekordu wyborczego?",
        "query": "SELECT Delegate ,  Committee FROM election",
        "query_pl": "SELECT Delegate ,  Committee FROM election"
    },
    {
        "db_id": "election",
        "question_original": "Show all the information about election.",
        "question_original_pl": "Pokaż wszystkie informacje o wyborach.",
        "question": "Show all the details about election.",
        "question_pl": "Pokaż wszystkie szczegóły dotyczące wyborów.",
        "query": "SELECT * FROM election",
        "query_pl": "SELECT * FROM election"
    },
    {
        "db_id": "election",
        "question_original": "Return all the information for each election record.",
        "question_original_pl": "Zwróć wszystkie informacje dla każdego rekordu wyborów.",
        "question": "Return all the details for each election record.",
        "question_pl": "Zwróć wszystkie szczegóły dla każdego rekordu wyborów.",
        "query": "SELECT * FROM election",
        "query_pl": "SELECT * FROM election"
    },
    {
        "db_id": "election",
        "question_original": "Show the delegates and the names of county they belong to.",
        "question_original_pl": "Pokaż delegatów i nazwy okręgów, do których należą.",
        "question": "Show the representative and the names of county they belong to.",
        "question_pl": "Pokaż przedstawiciela i nazwy hrabstw, do których należą.",
        "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District",
        "query_pl": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
    },
    {
        "db_id": "election",
        "question_original": "What are the delegate and name of the county they belong to, for each county?",
        "question_original_pl": "Jaki jest delegat i nazwa okręgu, do którego należy, dla każdego okręgu?",
        "question": "What are the representative and name of the county they belong to, for each county?",
        "question_pl": "Jaki jest przedstawiciel i nazwa hrabstwa, do którego należą, dla każdego hrabstwa?",
        "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District",
        "query_pl": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
    },
    {
        "db_id": "election",
        "question_original": "Which delegates are from counties with population smaller than 100000?",
        "question_original_pl": "Którzy delegaci pochodzą z hrabstw o populacji mniejszej niż 100000?",
        "question": "Which representative are from counties with population smaller than 100000?",
        "question_pl": "Którzy przedstawiciele pochodzą z hrabstw o populacji mniejszej niż 100000?",
        "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000",
        "query_pl": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
    },
    {
        "db_id": "election",
        "question_original": "Find the delegates who are from counties with population below 100000.",
        "question_original_pl": "Znajdź delegatów, którzy pochodzą z hrabstw o populacji poniżej 100000.",
        "question": "Find the representative who are from counties with population below 100000.",
        "question_pl": "Znajdź przedstawicieli, którzy pochodzą z hrabstw o populacji poniżej 100000.",
        "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000",
        "query_pl": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
    },
    {
        "db_id": "election",
        "question_original": "How many distinct delegates are from counties with population larger than 50000?",
        "question_original_pl": "Ilu odrębnych delegatów pochodzi z hrabstw o populacji większej niż 50000?",
        "question": "How many different representative are from counties with population larger than 50000?",
        "question_pl": "Ilu różnych reprezentantów pochodzi z hrabstw o populacji większej niż 50000?",
        "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000",
        "query_pl": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
    },
    {
        "db_id": "election",
        "question_original": "Count the number of distinct delegates who are from counties with population above 50000.",
        "question_original_pl": "Policz liczbę odrębnych delegatów, którzy pochodzą z hrabstw o populacji powyżej 50000.",
        "question": "Count the number of different representative who are from counties with population above 50000.",
        "question_pl": "Policz liczbę różnych przedstawicieli, którzy pochodzą z hrabstw o populacji powyżej 50000.",
        "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000",
        "query_pl": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
    },
    {
        "db_id": "election",
        "question_original": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
        "question_original_pl": "Jak nazywają się hrabstwa, do których należą delegaci w komisji \"Środki\"?",
        "question": "What are the names of the county that the representative on \"Appropriations\" committee belong to?",
        "question_pl": "Jak nazywają się hrabstwa, do których należą przedstawiciele w komisji \"Środki\"?",
        "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"",
        "query_pl": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Środki\""
    },
    {
        "db_id": "election",
        "question_original": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.",
        "question_original_pl": "Do którego okręgu należą delegaci komisji \"Środki\"? Podaj mi nazwy okręgów.",
        "question": "Which county do the representative on \"Appropriations\" committee belong to? Give me the county names.",
        "question_pl": "Do którego hrabstwa należy przedstawiciel w komisji \"Środki\"? Podaj mi nazwy okręgów.",
        "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"",
        "query_pl": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Środki\""
    },
    {
        "db_id": "election",
        "question_original": "Show the delegates and the names of the party they belong to.",
        "question_original_pl": "Pokaż delegatów i nazwy partii, do których należą.",
        "question": "Show the representative and the names of the party they belong to.",
        "question_pl": "Pokaż przedstawiciela i nazwę partii, do której należy.",
        "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID",
        "query_pl": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
    },
    {
        "db_id": "election",
        "question_original": "For each delegate, find the names of the party they are part of.",
        "question_original_pl": "Dla każdego delegata znajdź nazwę partii, do której należy.",
        "question": "For each representative, find the names of the party they are part of.",
        "question_pl": "Dla każdego przedstawiciela znajdź nazwę partii, do której należy.",
        "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID",
        "query_pl": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
    },
    {
        "db_id": "election",
        "question_original": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?",
        "question_original_pl": "Kim byli kontrolerzy partii związani z delegatami z okręgu 1 lub 2?",
        "question": "Who were the comptroller of the parties associated with the delegates from district 1 or district 2?",
        "question_pl": "Kto był kontrolerem partii związanych z delegatami z okręgu 1 lub okręgu 2?",
        "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2",
        "query_pl": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"
    },
    {
        "db_id": "election",
        "question_original": "Which committees have delegates from the Democratic party?",
        "question_original_pl": "Które komitety mają delegatów z Partii Demokratycznej?",
        "question": "Which committee have delegates from the Democratic party?",
        "question_pl": "Który komitet ma delegatów z Partii Demokratycznej?",
        "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"",
        "query_pl": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Demokratyczny\""
    },
    {
        "db_id": "election",
        "question_original": "Show the 3 counties with the smallest population.",
        "question_original_pl": "Wskaż 3 hrabstwa o najmniejszej populacji.",
        "question": "Show the 3 counties with the smallest populace.",
        "question_pl": "Wskaż 3 hrabstwa o najmniejszej liczbie mieszkańców.",
        "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
        "query_pl": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
    },
    {
        "db_id": "election",
        "question_original": "Show the name of the party that has the most delegates.",
        "question_original_pl": "Pokaż nazwę partii, która ma najwięcej delegatów.",
        "question": "Show the name of the party that has the most representative.",
        "question_pl": "Pokaż nazwę partii, która ma najwięcej przedstawicieli.",
        "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "election",
        "question_original": "Which party has the largest number of delegates?",
        "question_original_pl": "Która partia ma największą liczbę delegatów?",
        "question": "Which party has the largest number of representative?",
        "question_pl": "Która partia ma największą liczbę przedstawicieli?",
        "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "election",
        "question_original": "Which parties did not have any delegates in elections?",
        "question_original_pl": "Które partie nie miały delegatów w wyborach?",
        "question": "Which parties did not have any representative in elections?",
        "question_pl": "Które partie nie miały żadnego przedstawiciela w wyborach?",
        "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)",
        "query_pl": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"
    },
    {
        "db_id": "election",
        "question_original": "What are the names of parties that have both delegates on \"Appropriations\" committee and",
        "question_original_pl": "Jakie są nazwy partii, które mają zarówno delegatów do komisji \"Środki\" i",
        "question": "What are the names of parties that have both representative on \"Appropriations\" committee and",
        "question_pl": "Jakie są nazwy partii, które mają obu przedstawicieli w komisji \"Środki\" i",
        "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"",
        "query_pl": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Środki\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Sprawy gospodarcze\""
    },
    {
        "db_id": "election",
        "question_original": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
        "question_original_pl": "Które partie mają delegatów zarówno w komisji \"Środki\", jak i w komisji \"Sprawy gospodarcze\"?",
        "question": "Which parties have representative in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
        "question_pl": "Które partie mają swoich przedstawicieli zarówno w komisji \"Środki\", jak i w komisji \"Sprawy gospodarcze\"?",
        "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"",
        "query_pl": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Środki\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Sprawy gospodarcze\""
    },
    {
        "db_id": "election",
        "question_original": "Which committees have delegates from both democratic party and liberal party?",
        "question_original_pl": "Które komitety mają delegatów zarówno z partii demokratycznej, jak i liberalnej?",
        "question": "Which committee have delegates from both democratic party and liberal party?",
        "question_pl": "Który komitet ma delegatów zarówno z partii demokratycznej, jak i liberalnej?",
        "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"",
        "query_pl": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Demokratyczny\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberał\""
    },
    {
        "db_id": "election",
        "question_original": "Find the committees that have delegates both from from the democratic party and the liberal party.",
        "question_original_pl": "Znajdź komitety, które mają delegatów zarówno z partii demokratycznej, jak i liberalnej.",
        "question": "Find the committee that have delegates both from from the democratic party and the liberal party.",
        "question_pl": "Znajdź komitet, który ma delegatów zarówno z partii demokratycznej, jak i liberalnej.",
        "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"",
        "query_pl": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Demokratyczny\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberał\""
    },
    {
        "db_id": "news_report",
        "question_original": "How many journalists are there?",
        "question_original_pl": "Ilu jest dziennikarzy?",
        "question": "How many reporters are there?",
        "question_pl": "Ilu jest reporterów?",
        "query": "SELECT count(*) FROM journalist",
        "query_pl": "SELECT count(*) FROM journalist"
    },
    {
        "db_id": "news_report",
        "question_original": "List the names of journalists in ascending order of years working.",
        "question_original_pl": "Wymień nazwiska dziennikarzy w kolejności rosnącej według lat pracy.",
        "question": "List the names of reporters in ascending order of years working.",
        "question_pl": "Wymień nazwiska reporterów w kolejności rosnącej według lat pracy.",
        "query": "SELECT Name FROM journalist ORDER BY Years_working ASC",
        "query_pl": "SELECT Name FROM journalist ORDER BY Years_working ASC"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the names of journalists from \"England\" or \"Wales\".",
        "question_original_pl": "Pokaż nazwiska dziennikarzy z \"Anglia\" lub \"Walii\".",
        "question": "Show the names of reporters from \"England\" or \"Wales\".",
        "question_pl": "Pokaż nazwiska reporterów z \"Anglia\" lub \"Walii\".",
        "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"",
        "query_pl": "SELECT Name FROM journalist WHERE Nationality  =  \"Anglia\" OR Nationality  =  \"Walia\""
    },
    {
        "db_id": "news_report",
        "question_original": "What is the nationality of the journalist with the largest number of years working?",
        "question_original_pl": "Jakiej narodowości jest dziennikarz z największym stażem pracy?",
        "question": "What is the nation of the reporter with the largest number of years working?",
        "question_pl": "Jakiego kraju jest reporter z największym stażem pracy?",
        "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the different nationalities and the number of journalists of each nationality.",
        "question_original_pl": "Wskaż różne narodowości i liczbę dziennikarzy każdej narodowości.",
        "question": "Show the different nation and the number of reporter of each nation.",
        "question_pl": "Pokaż różne narody i liczbę reporterów z każdego narodu.",
        "query": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality",
        "query_pl": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the most common nationality for journalists.",
        "question_original_pl": "Wskaż najczęstszą narodowość dziennikarzy.",
        "question": "Show the most common nation for reporters.",
        "question_pl": "Pokaż najpopularniejszy naród dla reporterów.",
        "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the dates, places, and names of events in descending order of the attendance.",
        "question_original_pl": "Pokaż daty, miejsca i nazwy wydarzeń w kolejności malejącej według frekwencji.",
        "question": "Show the day, location, and names of events in descending order of the attendance.",
        "question_pl": "Pokaż dzień, lokalizację i nazwy wydarzeń w kolejności malejącej według frekwencji.",
        "query": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC",
        "query_pl": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the names of journalists and the dates of the events they reported.",
        "question_original_pl": "Pokaż nazwiska dziennikarzy i daty wydarzeń, które relacjonowali.",
        "question": "Show the names of reporters and the day of the events they reported.",
        "question_pl": "Pokaż nazwiska reporterów i dzień wydarzeń, które relacjonowali.",
        "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID",
        "query_pl": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the names of journalists and the names of the events they reported in ascending order",
        "question_original_pl": "Pokaż nazwiska dziennikarzy i nazwy wydarzeń, które relacjonowali, w kolejności rosnącej.",
        "question": "Show the names of reporters and the names of the events they reported in ascending order",
        "question_pl": "Pokaż nazwiska reporterów i nazwy wydarzeń, które relacjonowali, w kolejności rosnącej.",
        "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC",
        "query_pl": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the names of journalists and the number of events they reported.",
        "question_original_pl": "Pokaż nazwiska dziennikarzy i liczbę wydarzeń, które relacjonowali.",
        "question": "Show the names of reporters and the number of events they reported.",
        "question_pl": "Pokaż nazwiska reporterów i liczbę zgłoszonych przez nich wydarzeń.",
        "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name",
        "query_pl": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
    },
    {
        "db_id": "news_report",
        "question_original": "Show the names of journalists that have reported more than one event.",
        "question_original_pl": "Pokaż nazwiska dziennikarzy, którzy relacjonowali więcej niż jedno wydarzenie.",
        "question": "Show the names of reporters that have reported more than one event.",
        "question_pl": "Pokaż nazwiska reporterów, którzy zgłosili więcej niż jedno zdarzenie.",
        "query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "news_report",
        "question_original": "List the names of journalists who have not reported any event.",
        "question_original_pl": "Wymień nazwiska dziennikarzy, którzy nie relacjonowali żadnego wydarzenia.",
        "question": "List the names of reporters who have not reported any event.",
        "question_pl": "Wymień nazwiska reporterów, którzy nie zgłosili żadnego zdarzenia.",
        "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)",
        "query_pl": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)"
    },
    {
        "db_id": "news_report",
        "question_original": "what are the average and maximum attendances of all events?",
        "question_original_pl": "Jaka jest średnia i maksymalna frekwencja na wszystkich wydarzeniach?",
        "question": "what are the average and maximum number of attendees of all events?",
        "question_pl": "Jaka jest średnia i maksymalna liczba uczestników wszystkich wydarzeń?",
        "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event",
        "query_pl": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "What is the address of the restaurant Subway?",
        "question_original_pl": "Jaki jest adres restauracji Subway?",
        "question": "What is the location of the restaurant Subway?",
        "question_pl": "Gdzie znajduje się restauracja Subway?",
        "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";",
        "query_pl": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "What is the rating of the restaurant Subway?",
        "question_original_pl": "Jaka jest ocena restauracji Subway?",
        "question": "What is the score of the restaurant Subway?",
        "question_pl": "Jaki jest wynik restauracji Subway?",
        "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";",
        "query_pl": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "What is the description of the restaurant type Sandwich?",
        "question_original_pl": "Jaki jest opis restauracji typu Sandwich?",
        "question": "What is the describing content of the restaurant type Sandwich?",
        "question_pl": "Jaka jest opisowa zawartość restauracji typu Sandwich?",
        "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";",
        "query_pl": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Kanapka\";"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Which restaurants have highest rating? List the restaurant name and its rating.",
        "question_original_pl": "Które restauracje mają najwyższą ocenę? Wymień nazwę restauracji i jej ocenę.",
        "question": "Which restaurants have highest score? List the restaurant name and its score.",
        "question_pl": "Które restauracje mają najwyższy wynik? Wymień nazwę restauracji i jej wynik.",
        "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;",
        "query_pl": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Advisor 1121 has how many students?",
        "question_original_pl": "Ilu studentów ma doradca 1121?",
        "question": "Adviser 1121 has how many students?",
        "question_pl": "Ilu uczniów ma doradca 1121?",
        "query": "SELECT count(*) FROM Student WHERE Advisor =  1121;",
        "query_pl": "SELECT count(*) FROM Student WHERE Advisor =  1121;"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Which major has least number of students? List the major and the number of students.",
        "question_original_pl": "Który kierunek ma najmniejszą liczbę studentów? Wymień kierunek i liczbę studentów.",
        "question": "Which discipline has least number of students? List the discipline and the number of students.",
        "question_pl": "Która dyscyplina ma najmniejszą liczbę studentów? Wymień dyscyplinę i liczbę studentów.",
        "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;",
        "query_pl": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Which major has between 2 and 30 number of students? List major and the number of students.",
        "question_original_pl": "Który kierunek ma od 2 do 30 studentów? Wymień kierunek i liczbę studentów.",
        "question": "Which discipline has between 2 and 30 number of students? List discipline and the number of students.",
        "question_pl": "Która dyscyplina ma od 2 do 30 studentów? Wymień dyscyplinę i liczbę studentów.",
        "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",
        "query_pl": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.",
        "question_original_pl": "Który uczeń ma więcej niż 18 lat i studiuje na kierunku 600? Wymień imię i nazwisko każdego studenta.",
        "question": "Which student's age is older than 18 and is majoring in 600? List each student's full name.",
        "question_pl": "Który uczeń ma więcej niż 18 lat i studiuje na kierunku 600? Wymień pełne imię i nazwisko każdego studenta.",
        "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;",
        "query_pl": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.",
        "question_original_pl": "Wymień wszystkie uczennice w wieku powyżej 18 lat, które nie studiują na kierunku 600. Wymień imię i nazwisko uczennicy.",
        "question": "List all female students age is older than 18 who is not majoring in 600. List students' full name.",
        "question_pl": "Wymień wszystkie uczennice w wieku powyżej 18 lat, które nie studiują na kierunku 600. Wymień imiona i nazwiska uczennic.",
        "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';",
        "query_pl": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';"
    },
    {
        "db_id": "restaurant_1",
        "question_original": "Which student visited restaurant most often? List student's first name and last name.",
        "question_original_pl": "Który uczeń najczęściej odwiedzał restaurację? Wymień imię i nazwisko ucznia.",
        "question": "Which student visited restaurant most often? List student's full name.",
        "question_pl": "Który uczeń najczęściej odwiedzał restaurację? Wymień pełne imię i nazwisko ucznia.",
        "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Show the details of all trucks in the order of their license number.",
        "question_original_pl": "Pokaż szczegóły wszystkich ciężarówek w kolejności ich numerów rejestracyjnych.",
        "question": "Show the information of all lorry in the order of their license number.",
        "question_pl": "Pokaż informacje o wszystkich ciężarówkach w kolejności ich numerów rejestracyjnych.",
        "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number",
        "query_pl": "SELECT truck_details FROM trucks ORDER BY truck_licence_number"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Find the name of the most expensive product.",
        "question_original_pl": "Znajdź nazwę najdroższego produktu.",
        "question": "Find the name of the most expensive goods.",
        "question_pl": "Znajdź nazwę najdroższego towaru.",
        "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Find the names of customers who are not living in the state of California.",
        "question_original_pl": "Znajdź nazwy klientów, którzy nie mieszkają w stanie Kalifornia.",
        "question": "Find the names of clients who are not living in the state of California.",
        "question_pl": "Znajdź nazwiska klientów, którzy nie mieszkają w stanie Kalifornia.",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'Kalifornia'"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "List the names and emails of customers who payed by Visa card.",
        "question_original_pl": "Podaj nazwiska i adresy e-mail klientów, którzy zapłacili kartą Visa.",
        "question": "List the names and emails of clients who payed by Visa card.",
        "question_pl": "Wymień nazwiska i adresy e-mail klientów, którzy zapłacili kartą Visa.",
        "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'",
        "query_pl": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Wiza'"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Find the states which do not have any employee in their record.",
        "question_original_pl": "Znajdź stany, w których nie ma żadnego pracownika.",
        "question": "Find the states which do not have any staff in their record.",
        "question_pl": "Znajdź stany, które nie mają żadnego pracownika w swoim rejestrze.",
        "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)",
        "query_pl": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.",
        "question_original_pl": "Wypisz nazwiska, numery telefonów i adresy e-mail wszystkich klientów posortowane według dat, w których stali się klientami.",
        "question": "List the names, telephone numbers, and emails of all clients sorted by their dates of becoming clients.",
        "question_pl": "Wymień imiona i nazwiska, numery telefonów i adresy e-mail wszystkich klientów posortowane według dat, w których stali się klientami.",
        "query": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer",
        "query_pl": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Find the name of the first 5 customers.",
        "question_original_pl": "Znajdź nazwiska pierwszych 5 klientów.",
        "question": "Find the name of the first 5 clients.",
        "question_pl": "Znajdź nazwy pierwszych 5 klientów.",
        "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
        "query_pl": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "List the names of all routes in alphabetic order.",
        "question_original_pl": "Wymień nazwy wszystkich tras w kolejności alfabetycznej.",
        "question": "List the names of all paths in alphabetic order.",
        "question_pl": "Wymień nazwy wszystkich ścieżek w kolejności alfabetycznej.",
        "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name",
        "query_pl": "SELECT route_name FROM Delivery_Routes ORDER BY route_name"
    },
    {
        "db_id": "customer_deliveries",
        "question_original": "Find the name of route that has the highest number of deliveries.",
        "question_original_pl": "Znajdź nazwę trasy z największą liczbą dostaw.",
        "question": "Find the name of path that has the highest number of deliveries.",
        "question_pl": "Znajdź nazwę ścieżki, która ma największą liczbę dostaw.",
        "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question_original": "How many institutions are there?",
        "question_original_pl": "Ile jest takich instytucji?",
        "question": "How many organization are there?",
        "question_pl": "Ile jest takich organizacji?",
        "query": "SELECT count(*) FROM inst",
        "query_pl": "SELECT count(*) FROM inst"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Count the number of institutions.",
        "question_original_pl": "Policz liczbę instytucji.",
        "question": "Count the number of organizations.",
        "question_pl": "Policz liczbę organizacji.",
        "query": "SELECT count(*) FROM inst",
        "query_pl": "SELECT count(*) FROM inst"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Count the number of total papers.",
        "question_original_pl": "Policz liczbę wszystkich dokumentów.",
        "question": "Count the number of total articles.",
        "question_pl": "Policz liczbę wszystkich artykułów.",
        "query": "SELECT count(*) FROM papers",
        "query_pl": "SELECT count(*) FROM papers"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the titles of all the papers written by \"Aaron Turon\".",
        "question_original_pl": "Znajdź tytuły wszystkich artykułów napisanych przez \"Aaron Turon\".",
        "question": "Find the titles of all the articles written by \"Aaron Turon\".",
        "question_pl": "Znajdź tytuły wszystkich artykułów, których autorem jest \"Aaron Turon\".",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.",
        "question_original_pl": "Do jakiej instytucji należy autor \"Matthias Blume\"? Podaj nazwę tej instytucji.",
        "question": "Which institution is the writer \"Matthias Blume\" belong to? Give me the name of the institution.",
        "question_pl": "Do jakiej instytucji należy pisarz \"Matthias Blume\"? Podaj nazwę tej instytucji.",
        "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"",
        "query_pl": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Who belong to the institution \"University of Oxford\"? Show the first names and last names.",
        "question_original_pl": "Kto należy do instytucji \"Uniwersytet Oksfordzki\"? Pokaż imiona i nazwiska.",
        "question": "Who belong to the institution \"University of Oxford\"? Show the forename and family name.",
        "question_pl": "Kto należy do instytucji \"Uniwersytet Oksfordzki\"? Podaj imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"",
        "query_pl": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Oksfordzki\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which authors belong to the institution \"Google\"? Show the first names and last names.",
        "question_original_pl": "Którzy autorzy należą do instytucji \"Google\"? Pokaż imiona i nazwiska.",
        "question": "Which authors belong to the institution \"Google\"? Show the forename and family name.",
        "question_pl": "Którzy autorzy należą do instytucji \"Google\"? Podaj imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"",
        "query_pl": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the first names and last names of the authors whose institution affiliation is \"Google\".",
        "question_original_pl": "Znajdź imiona i nazwiska autorów, których instytucją stowarzyszoną jest \"Google\".",
        "question": "Find the full names of the authors whose institution affiliation is \"Google\".",
        "question_pl": "Znajdź pełne nazwiska autorów, których instytucją stowarzyszoną jest \"Google\".",
        "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"",
        "query_pl": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "What are the last names of the author of the paper titled \"Binders Unbound\"?",
        "question_original_pl": "Jak nazywają się autorzy artykułu zatytułowanego \"Binders Unbound\"?",
        "question": "What are the family names of the author of the paper titled \"Binders Unbound\"?",
        "question_pl": "Jakie są nazwiska autora artykułu zatytułowanego \"Binders Unbound\"?",
        "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"",
        "query_pl": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Bindery Unbound\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".",
        "question_original_pl": "Znajdź imię i nazwisko autora (autorów), którzy napisali artykuł \"Bezimienny, bezbolesny\".",
        "question": "Find the full name of the author(s) who wrote the paper \"Nameless, Painless\".",
        "question_pl": "Znajdź pełne imię i nazwisko autora (autorów), którzy napisali artykuł \"Bezimienny, bezbolesny\".",
        "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"",
        "query_pl": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Bezimienny, Bezbolesny\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?",
        "question_original_pl": "Jakie jest imię i nazwisko autora, który opublikował artykuł zatytułowany \"Bezimienny, bezbolesny\"?",
        "question": "What are the forename and family name of the author who published the paper titled \"Nameless, Painless\"?",
        "question_pl": "Jak brzmi imię i nazwisko autora, który opublikował artykuł zatytułowany \"Bezimienny, bezbolesny\"?",
        "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"",
        "query_pl": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Bezimienny, Bezbolesny\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "What are the papers published under the institution \"Indiana University\"?",
        "question_original_pl": "Jakie prace zostały opublikowane w ramach instytucji \"Indiana University\"?",
        "question": "What are the articles published under the institution \"Indiana University\"?",
        "question_pl": "Jakie artykuły są publikowane w ramach instytucji \"Indiana University\"?",
        "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
        "query_pl": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Indiana\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "List the titles of the papers whose authors are from the institution \"Indiana University\".",
        "question_original_pl": "Wymień tytuły artykułów, których autorzy pochodzą z instytucji \"Indiana University\".",
        "question": "List the titles of the articles whose authors are from the institution \"Indiana University\".",
        "question_pl": "Zwróć listę tytułów artykułów, których autorzy pochodzą z instytucji \"Indiana University\".",
        "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
        "query_pl": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Indiana\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the number of papers published by authors from the institution \"Tokohu University\".",
        "question_original_pl": "Znajdź liczbę prac opublikowanych przez autorów z instytucji \"Uniwersytet Tokohu\".",
        "question": "Find the number of articles published by authors from the institution \"Tokohu University\".",
        "question_pl": "Znajdź liczbę artykułów opublikowanych przez autorów z instytucji \"Uniwersytet Tokohu\".",
        "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"",
        "query_pl": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Uniwersytet Tokohu\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
        "question_original_pl": "Jakie prace napisał autor \"Olin Shivers\"? Podaj tytuły artykułów.",
        "question": "Which articles did the author \"Olin Shivers\" write? Give me the article titles.",
        "question_pl": "Jakie artykuły napisał autor \"Olin Shivers\"? Podaj tytuły artykułów.",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Dreszcze\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.",
        "question_original_pl": "Znajdź tytuły artykułów, które napisał autor \"Stephanie Weirich\".",
        "question": "Find the titles of the articles the author \"Stephanie Weirich\" wrote.",
        "question_pl": "Znajdź tytuły artykułów, których autorem jest \"Stephanie Weirich\".",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which paper is published in an institution in \"USA\" and have \"Turon\" as its second author?",
        "question_original_pl": "Który artykuł został opublikowany w instytucji w \"USA\" i ma \"Turon\" jako drugiego autora?",
        "question": "Which articles is published in an institution in \"USA\" and have \"Turon\" as its second author?",
        "question_pl": "Które artykuły zostały opublikowane w instytucji w \"USA\" i mają \"Turon\" jako drugiego autora?",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find papers whose second author has last name \"Turon\" and is affiliated with an institution in the country \"USA\".",
        "question_original_pl": "Znajdź prace, których drugi autor ma na nazwisko \"Turon\" i jest powiązany z instytucją w kraju \"USA\".",
        "question": "Find papers whose second writer has last name \"Turon\" and is affiliated with an institution in the country \"USA\".",
        "question_pl": "Znajdź dokumenty, których drugi autor ma na nazwisko \"Turon\" i jest powiązany z instytucją w kraju \"USA\".",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which papers' first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers.",
        "question_original_pl": "Który pierwszy autor pracy jest powiązany z instytucją w kraju \"Japonia\" i ma na nazwisko \"Ohori\"? Podaj tytuły tych artykułów.",
        "question": "Which papers' first writer is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers.",
        "question_pl": "Pierwszy autor której gazety jest powiązany z instytucją w kraju \"Japonia\" i ma na nazwisko \"Ohori\"? Podaj tytuły artykułów.",
        "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"",
        "query_pl": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japonia\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "What is the last name of the author that has published the most papers?",
        "question_original_pl": "Jakie jest nazwisko autora, który opublikował najwięcej artykułów?",
        "question": "What is the family name of the writer that has published the most papers?",
        "question_pl": "Jakie jest nazwisko pisarza, który opublikował najwięcej artykułów?",
        "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which author has written the most papers? Find his or her last name.",
        "question_original_pl": "Który autor napisał najwięcej artykułów? Znajdź jego nazwisko.",
        "question": "Which author has written the most papers? Find his or her family name.",
        "question_pl": "Który autor napisał najwięcej artykułów? Znajdź jego lub jej nazwisko.",
        "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which institution has the most papers? Find the name of the institution.",
        "question_original_pl": "Która instytucja ma najwięcej dokumentów? Znajdź nazwę instytucji.",
        "question": "Which organization has the most papers? Find the name of the organization.",
        "question_pl": "Która organizacja ma najwięcej dokumentów? Znajdź nazwę tej organizacji.",
        "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".",
        "question_original_pl": "Znajdź imiona i nazwiska wszystkich autorów, którzy napisali artykuł o tytule zawierającym słowo \"Funkcjonalny\".",
        "question": "Find the forename of all the authors who have written a paper with title containing the word \"Functional\".",
        "question_pl": "Znajdź imiona wszystkich autorów, którzy napisali artykuł o tytule zawierającym słowo \"Funkcjonalny\".",
        "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"",
        "query_pl": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Funkcjonalny%\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which authors have last name \"Ueno\"? List their first names.",
        "question_original_pl": "Którzy autorzy mają na nazwisko \"Ueno\"? Wymień ich imiona.",
        "question": "Which authors have family name \"Ueno\"? List their forename.",
        "question_pl": "Którzy autorzy noszą nazwisko rodowe \"Ueno\"? Wymień ich imiona.",
        "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"",
        "query_pl": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Find the last name of the author with first name \"Amal\".",
        "question_original_pl": "Znajdź nazwisko autora o imieniu \"Amal\".",
        "question": "Find the family name of the author with forename \"Amal\".",
        "question_pl": "Znajdź nazwisko autora z imieniem \"Amal\".",
        "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
        "query_pl": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Which authors have first name \"Amal\"? List their last names.",
        "question_original_pl": "Którzy autorzy mają na imię \"Amal\"? Wymień ich nazwiska.",
        "question": "Which authors have forename \"Amal\"? List their family names.",
        "question_pl": "Którzy autorzy mają na imię \"Amal\"? Wymień ich nazwiska rodowe.",
        "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
        "query_pl": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
    },
    {
        "db_id": "icfp_1",
        "question_original": "Retrieve all the first and last names of authors in the alphabetical order of last names.",
        "question_original_pl": "Pobierz wszystkie imiona i nazwiska autorów w kolejności alfabetycznej.",
        "question": "Retrieve all the full names of authors in the alphabetical order of family names.",
        "question_pl": "Pobierz wszystkie pełne nazwiska autorów w kolejności alfabetycznej nazwisk.",
        "query": "SELECT fname ,  lname FROM authors ORDER BY lname",
        "query_pl": "SELECT fname ,  lname FROM authors ORDER BY lname"
    },
    {
        "db_id": "icfp_1",
        "question_original": "Sort the list of all the first and last names of authors in alphabetical order of the last names.",
        "question_original_pl": "Posortuj listę wszystkich imion i nazwisk autorów w kolejności alfabetycznej.",
        "question": "Sort the list of all the forename and family name of authors in alphabetical order of the family names.",
        "question_pl": "Posortuj listę wszystkich imion i nazwisk autorów w kolejności alfabetycznej nazwisk.",
        "query": "SELECT fname ,  lname FROM authors ORDER BY lname",
        "query_pl": "SELECT fname ,  lname FROM authors ORDER BY lname"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What is the most popular first name of the actors?",
        "question_original_pl": "Jakie jest najpopularniejsze imię wśród aktorów?",
        "question": "What is the most popular forename of the actors?",
        "question_pl": "Jakie jest najpopularniejsze imię aktorów?",
        "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which districts have at least two addresses?",
        "question_original_pl": "Które dzielnice mają co najmniej dwa adresy?",
        "question": "Which regions have at least two addresses?",
        "question_pl": "Które regiony mają co najmniej dwa adresy?",
        "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2",
        "query_pl": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Give the districts which have two or more addresses.",
        "question_original_pl": "Podaj dzielnice, które mają dwa lub więcej adresów.",
        "question": "Give the regions which have two or more addresses.",
        "question_pl": "Podaj regiony, które mają dwa lub więcej adresów.",
        "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2",
        "query_pl": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
    },
    {
        "db_id": "sakila_1",
        "question_original": "How many addresses are in the district of California?",
        "question_original_pl": "Ile adresów znajduje się w okręgu Kalifornia?",
        "question": "How many locations are in the district of California?",
        "question_pl": "Ile lokalizacji znajduje się w okręgu Kalifornia?",
        "query": "SELECT count(*) FROM address WHERE district  =  'California'",
        "query_pl": "SELECT count(*) FROM address WHERE district  =  'Kalifornia'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.",
        "question_original_pl": "Który film jest wypożyczony za opłatą 0,99 i ma mniej niż 3 w inwentarzu? Wymień tytuł i identyfikator filmu.",
        "question": "Which movie is rented at a fee of 0.99 and has less than 3 in the inventory? List the movie title and id.",
        "question_pl": "Który film jest wypożyczony za opłatą 0,99 i ma mniej niż 3 w ekwipunku? Wymień tytuł i identyfikator filmu.",
        "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3",
        "query_pl": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?",
        "question_original_pl": "Jaki jest tytuł i identyfikator filmu, którego współczynnik wypożyczenia wynosi 0,99, a stan magazynowy poniżej 3?",
        "question": "What are the title and id of the movie which has a rental rate of 0.99 and an inventory of below 3?",
        "question_pl": "Jaki jest tytuł i identyfikator filmu, którego współczynnik wypożyczeń wynosi 0,99, a stan magazynowy poniżej 3?",
        "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3",
        "query_pl": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
    },
    {
        "db_id": "sakila_1",
        "question_original": "How many cities are in Australia?",
        "question_original_pl": "Ile miast znajduje się w Australii?",
        "question": "How many towns are in Australia?",
        "question_pl": "Ile miast jest w Australii?",
        "query": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'",
        "query_pl": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the countries that contain 3 or more cities?",
        "question_original_pl": "Jakie są kraje, w których znajdują się 3 lub więcej miast?",
        "question": "What are the nations that contain 3 or more cities?",
        "question_pl": "Jakie narody zawierają 3 lub więcej miast?",
        "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3",
        "query_pl": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa.",
        "question_original_pl": "Znajdź wszystkie daty płatności dla płatności na kwotę większą niż 10 i płatności obsługiwanych przez pracownika o imieniu Elsa.",
        "question": "Find all the payment days for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa.",
        "question_pl": "Znajdź wszystkie dni płatności dla płatności na kwotę większą niż 10 i płatności obsługiwanych przez pracownika o imieniu Elsa.",
        "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'",
        "query_pl": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
        "question_original_pl": "Jakie są daty płatności w przypadku płatności na kwotę wyższą niż 10 lub dokonanych przez pracownika o imieniu Elsa?",
        "question": "What are the payment days for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
        "question_pl": "Jakie są dni płatności w przypadku płatności na kwotę wyższą niż 10 lub dokonanych przez pracownika o imieniu Elsa?",
        "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'",
        "query_pl": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the title and rental rate of the film with the highest rental rate?",
        "question_original_pl": "Jaki jest tytuł i współczynnik wypożyczeń filmu o najwyższym współczynniku wypożyczeń?",
        "question": "What are the title and rental rate of the movie with the highest rental rate?",
        "question_pl": "Jaki jest tytuł i współczynnik wypożyczeń filmu z najwyższym współczynnikiem wypożyczeń?",
        "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1",
        "query_pl": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which film has the most number of actors or actresses? List the film name, film id and description.",
        "question_original_pl": "Który film ma najwięcej aktorów lub aktorek? Wymień nazwę filmu, jego identyfikator i opis.",
        "question": "Which movie has the most number of actors or actresses? List the movie name, movie id and describing content.",
        "question_pl": "Który film ma najwięcej aktorów lub aktorek? Wymień nazwę filmu, identyfikator filmu i opis treści.",
        "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the title, id, and description of the movie with the greatest number of actors?",
        "question_original_pl": "Jaki jest tytuł, identyfikator i opis filmu z największą liczbą aktorów?",
        "question": "What are the title, id, and describing content of the movie with the greatest number of actors?",
        "question_pl": "Jaki jest tytuł, identyfikator i opis zawartości filmu z największą liczbą aktorów?",
        "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.",
        "question_original_pl": "Którzy aktorzy (aktorki) zagrali w ponad 30 filmach? Wymień jego imię i nazwisko.",
        "question": "Which film actors (actresses) played a role in more than 30 films? List his or her full name.",
        "question_pl": "Którzy aktorzy (aktorki) zagrali w ponad 30 filmach? Wymień jego lub jej pełne imię i nazwisko.",
        "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What is the id of the store that has the most items in inventory?",
        "question_original_pl": "Jaki jest identyfikator sklepu, który ma najwięcej produktów w magazynie?",
        "question": "What is the id of the warehouse that has the most commodity in inventory?",
        "question_pl": "Jaki jest identyfikator magazynu, w którym znajduje się najwięcej towarów?",
        "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.",
        "question_original_pl": "Który klient, który dokonał co najmniej jednej płatności, wydał najmniej pieniędzy? Wymień jego imię, nazwisko i identyfikator.",
        "question": "Which client, who has made at least one payment, has spent the least money? List his or her full name, and the id.",
        "question_pl": "Który klient, który dokonał co najmniej jednej płatności, wydał najmniej pieniędzy? Wymień jego imię i nazwisko oraz identyfikator.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Return the name of the category to which the film 'HUNGER ROOF' belongs.",
        "question_original_pl": "Zwróć nazwę kategorii, do której należy film \"HUNGER ROOF\".",
        "question": "Return the name of the type to which the film 'HUNGER ROOF' belongs.",
        "question_pl": "Zwróć nazwę typu, do którego należy film \"HUNGER ROOF\".",
        "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'",
        "query_pl": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "How many films are there in each category? List the genre name, genre id and the count.",
        "question_original_pl": "Ile jest filmów w każdej kategorii? Wymień nazwę gatunku, identyfikator gatunku i liczbę filmów.",
        "question": "How many movies are there in each category? List the genre name, genre id and the count.",
        "question_pl": "Ile filmów znajduje się w każdej kategorii? Wymień nazwę gatunku, identyfikator gatunku i liczbę filmów.",
        "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id",
        "query_pl": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the names and ids of the different categories, and how many films are in each?",
        "question_original_pl": "Jakie są nazwy i identyfikatory poszczególnych kategorii i ile filmów znajduje się w każdej z nich?",
        "question": "What are the names and ids of the different types, and how many movies are in each?",
        "question_pl": "Jakie są nazwy i identyfikatory różnych typów i ile filmów znajduje się w każdym z nich?",
        "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id",
        "query_pl": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which film has the most copies in the inventory? List both title and id.",
        "question_original_pl": "Który film ma najwięcej kopii w spisie? Wymień zarówno tytuł, jak i identyfikator.",
        "question": "Which movie has the most copies in the inventory? List both title and id.",
        "question_pl": "Który film ma najwięcej kopii w magazynie? Wymień zarówno tytuł, jak i identyfikator.",
        "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What is the film title and inventory id of the item in the inventory which was rented most frequently?",
        "question_original_pl": "Jaki jest tytuł filmu i identyfikator pozycji w spisie, która była najczęściej wypożyczana?",
        "question": "What is the movie title and inventory id of the item in the inventory which was rented most frequently?",
        "question_pl": "Jaki jest tytuł filmu i identyfikator pozycji w ekwipunku, która była najczęściej wypożyczana?",
        "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Return the address of store 1.",
        "question_original_pl": "Zwróć adres sklepu 1.",
        "question": "Return the location of store 1.",
        "question_pl": "Zwróć lokalizację sklepu 1.",
        "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1",
        "query_pl": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "How many stores are there?",
        "question_original_pl": "Ile jest sklepów?",
        "question": "How many warehouses are there?",
        "question_pl": "Ile jest magazynów?",
        "query": "SELECT count(*) FROM store",
        "query_pl": "SELECT count(*) FROM store"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Count the number of stores.",
        "question_original_pl": "Policz liczbę sklepów.",
        "question": "Count the number of warehouse.",
        "question_pl": "Policz liczbę magazynów.",
        "query": "SELECT count(*) FROM store",
        "query_pl": "SELECT count(*) FROM store"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Count the number of different film ratings.",
        "question_original_pl": "Policz liczbę różnych ocen filmów.",
        "question": "Count the number of different movie scores.",
        "question_pl": "Policz liczbę różnych partytur filmowych.",
        "query": "SELECT count(DISTINCT rating) FROM film",
        "query_pl": "SELECT count(DISTINCT rating) FROM film"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What was the date of the earliest payment?",
        "question_original_pl": "Jaka była data najwcześniejszej płatności?",
        "question": "What was the day of the earliest payment?",
        "question_pl": "Jaki był dzień najwcześniejszej płatności?",
        "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
        "query_pl": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Return the address and email of the customer with the first name Linda.",
        "question_original_pl": "Zwróć adres i adres e-mail klienta o imieniu Linda.",
        "question": "Return the location and email of the client with the forename Linda.",
        "question_pl": "Zwróć lokalizację i adres e-mail klienta o imieniu Linda.",
        "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'",
        "query_pl": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?",
        "question_original_pl": "Jakie są tytuły filmów, które są dłuższe niż 100 minut lub mają kategorię PG, z wyjątkiem tych, których koszt wymiany przekracza 200?",
        "question": "What are the titles of movies that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?",
        "question_pl": "Jakie są tytuły filmów, które są dłuższe niż 100 minut lub mają kategorię PG, z wyjątkiem tych, które kosztują więcej niż 200?",
        "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200",
        "query_pl": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What is the first name and the last name of the customer who made the earliest rental?",
        "question_original_pl": "Jakie jest imię i nazwisko klienta, który dokonał najwcześniejszego wypożyczenia?",
        "question": "What is the forename and the family name of the customer who made the earliest rental?",
        "question_pl": "Jakie jest imię i nazwisko klienta, który dokonał najwcześniejszego wynajmu?",
        "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1",
        "query_pl": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Which store has most the customers?",
        "question_original_pl": "Który sklep ma najwięcej klientów?",
        "question": "Which warehouse has most the clients?",
        "question_pl": "Który magazyn ma najwięcej klientów?",
        "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Return the id of the store with the most customers.",
        "question_original_pl": "Zwróć identyfikator sklepu z największą liczbą klientów.",
        "question": "Return the id of the warehouse with the most clients.",
        "question_pl": "Zwróć identyfikator magazynu z największą liczbą klientów.",
        "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sakila_1",
        "question_original": "Give the address of the staff member who has the first name Elsa.",
        "question_original_pl": "Podaj adres pracownika, który ma na imię Elsa.",
        "question": "Give the location of the staff member who has the forename Elsa.",
        "question_pl": "Podaj lokalizację pracownika o imieniu Elsa.",
        "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'",
        "query_pl": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"
    },
    {
        "db_id": "sakila_1",
        "question_original": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?",
        "question_original_pl": "Jakie są imiona klientów, którzy nie wypożyczyli żadnych filmów po '2005-08-23 02:06:01'?",
        "question": "What are the forename of customers who have not rented any films after '2005-08-23 02:06:01'?",
        "question_pl": "Jakie są imiona i nazwiska klientów, którzy nie wypożyczyli żadnego filmu po '2005-08-23 02:06:01'?",
        "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )",
        "query_pl": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of all customers, ordered by account balance?",
        "question_original_pl": "Jakie są nazwy wszystkich klientów uporządkowane według salda konta?",
        "question": "What are the names of all clients, ordered by account balance?",
        "question_pl": "Jakie są nazwy wszystkich klientów, uporządkowane według salda konta?",
        "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
        "query_pl": "SELECT cust_name FROM customer ORDER BY acc_bal"
    },
    {
        "db_id": "loan_1",
        "question_original": "List the name of all different customers who have some loan sorted by their total loan amount.",
        "question_original_pl": "Wyświetl nazwy wszystkich klientów, którzy mają jakąś pożyczkę, posortowane według całkowitej kwoty pożyczki.",
        "question": "List the name of all different clients who have some loan sorted by their total loan amount.",
        "question_pl": "Wymień nazwiska wszystkich klientów, którzy mają jakąś pożyczkę, posortowane według całkowitej kwoty pożyczki.",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)",
        "query_pl": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"
    },
    {
        "db_id": "loan_1",
        "question_original": "How many distinct types of accounts are there?",
        "question_original_pl": "Ile jest różnych typów kont?",
        "question": "How many different categories of accounts are there?",
        "question_pl": "Ile jest różnych kategorii kont?",
        "query": "SELECT count(DISTINCT acc_type) FROM customer",
        "query_pl": "SELECT count(DISTINCT acc_type) FROM customer"
    },
    {
        "db_id": "loan_1",
        "question_original": "Count the number of different account types.",
        "question_original_pl": "Policz liczbę różnych typów kont.",
        "question": "Count the number of different account categories.",
        "question_pl": "Policz liczbę różnych kategorii kont.",
        "query": "SELECT count(DISTINCT acc_type) FROM customer",
        "query_pl": "SELECT count(DISTINCT acc_type) FROM customer"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name of customers who have both saving and checking account types.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy posiadają zarówno konto oszczędnościowe, jak i czekowe.",
        "question": "Find the name of clients who have both saving and checking account types.",
        "question_pl": "Znajdź nazwy klientów, którzy posiadają zarówno konta oszczędnościowe, jak i czekowe.",
        "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'",
        "query_pl": "SELECT cust_name FROM customer WHERE acc_type  =  'oszczędność' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'sprawdzanie'"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of customers who have both savings and checking accounts?",
        "question_original_pl": "Jakie są nazwiska klientów, którzy posiadają zarówno konta oszczędnościowe, jak i czekowe?",
        "question": "What are the names of clients who have both savings and checking accounts?",
        "question_pl": "Jakie są nazwiska klientów, którzy mają zarówno konta oszczędnościowe, jak i czekowe?",
        "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'",
        "query_pl": "SELECT cust_name FROM customer WHERE acc_type  =  'oszczędność' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'sprawdzanie'"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of customers who do not have saving accounts?",
        "question_original_pl": "Jakie są nazwy klientów, którzy nie mają kont oszczędnościowych?",
        "question": "What are the names of clients who do not have saving accounts?",
        "question_pl": "Jakie są nazwiska klientów, którzy nie mają kont oszczędnościowych?",
        "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'",
        "query_pl": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'oszczędność'"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name of customers who do not have a loan with a type of Mortgages.",
        "question_original_pl": "Znajdź nazwy klientów, którzy nie mają pożyczki z rodzajem hipoteki.",
        "question": "Find the name of clients who do not have a loan with a type of Mortgages.",
        "question_pl": "Znajdź nazwiska klientów, którzy nie mają pożyczki z rodzajem hipoteki.",
        "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'",
        "query_pl": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Kredyty hipoteczne'"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of customers who have not taken a Mortage loan?",
        "question_original_pl": "Jakie są nazwy klientów, którzy nie zaciągnęli kredytu hipotecznego?",
        "question": "What are the names of clients who have not taken a Mortage loan?",
        "question_pl": "Jakie są nazwiska klientów, którzy nie wzięli kredytu hipotecznego?",
        "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'",
        "query_pl": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Kredyty hipoteczne'"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name of customers whose credit score is below the average credit scores of all customers.",
        "question_original_pl": "Znajdź nazwiska klientów, których ocena kredytowa jest niższa od średniej oceny kredytowej wszystkich klientów.",
        "question": "Find the name of clients whose credit score is below the average credit scores of all clients.",
        "question_pl": "Znajdź nazwiska klientów, których ocena kredytowa jest poniżej średniej oceny kredytowej wszystkich klientów.",
        "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
        "query_pl": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of customers with credit score less than the average credit score across customers?",
        "question_original_pl": "Jakie są nazwy klientów, których ocena kredytowa jest niższa niż średnia ocena kredytowa wszystkich klientów?",
        "question": "What are the names of clients with credit score less than the average credit score across clients?",
        "question_pl": "Jakie są nazwiska klientów, których ocena kredytowa jest niższa niż średnia ocena kredytowa wszystkich klientów?",
        "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
        "query_pl": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the branch name of the bank that has the most number of customers.",
        "question_original_pl": "Znajdź nazwę oddziału banku, który ma największą liczbę klientów.",
        "question": "Find the branch name of the bank that has the most number of clients.",
        "question_pl": "Znajdź nazwę oddziału banku, który ma najwięcej klientów.",
        "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
        "query_pl": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name, account type, and account balance of the customer who has the highest credit score.",
        "question_original_pl": "Znajdź nazwę, typ konta i saldo konta klienta, który ma najwyższą ocenę kredytową.",
        "question": "Find the name, account category, and account balance of the client who has the highest credit score.",
        "question_pl": "Znajdź nazwę, kategorię konta i saldo konta klienta, który ma najwyższą ocenę kredytową.",
        "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
        "query_pl": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
    },
    {
        "db_id": "loan_1",
        "question_original": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?",
        "question_original_pl": "Jaka jest nazwa, typ konta i saldo konta odpowiadające klientowi z najwyższą oceną kredytową?",
        "question": "What is the name, account category, and account balance corresponding to the client with the highest credit score?",
        "question_pl": "Jaka jest nazwa, kategoria konta i saldo konta odpowiadające klientowi z najwyższą oceną kredytową?",
        "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",
        "query_pl": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
    },
    {
        "db_id": "loan_1",
        "question_original": "For each account type, find the average account balance of customers with credit score lower than 50.",
        "question_original_pl": "Dla każdego typu konta znajdź średnie saldo konta klientów z oceną kredytową niższą niż 50.",
        "question": "For each account category, find the average account balance of clients with credit score lower than 50.",
        "question_pl": "Dla każdej kategorii konta znajdź średnie saldo konta klientów z oceną kredytową niższą niż 50.",
        "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type",
        "query_pl": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
    },
    {
        "db_id": "loan_1",
        "question_original": "What is the average account balance of customers with credit score below 50 for the different account types?",
        "question_original_pl": "Jakie jest średnie saldo konta klientów z oceną kredytową poniżej 50 dla różnych typów kont?",
        "question": "What is the average account balance of clients with credit score below 50 for the different account categories?",
        "question_pl": "Jakie jest średnie saldo konta klientów z oceną kredytową poniżej 50 dla różnych kategorii kont?",
        "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type",
        "query_pl": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100.",
        "question_original_pl": "Znajdź nazwę oddziału banku, który udzielił największej łącznej kwoty kredytów klientom z oceną zdolności kredytowej poniżej 100.",
        "question": "Find the name of bank branch that provided the greatest total amount of loans to clients with credit score is less than 100.",
        "question_pl": "Znajdź nazwę oddziału banku, który udzielił największej łącznej kwoty pożyczek klientom o zdolności kredytowej poniżej 100.",
        "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1",
        "query_pl": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the name and credit score of the customers who have some loans.",
        "question_original_pl": "Znajdź nazwiska i ocenę kredytową klientów, którzy mają jakieś pożyczki.",
        "question": "Find the name and credit score of the clients who have some loans.",
        "question_pl": "Znajdź nazwę i ocenę kredytową klientów, którzy mają jakieś pożyczki.",
        "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id",
        "query_pl": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"
    },
    {
        "db_id": "loan_1",
        "question_original": "Find the the name of the customers who have a loan with amount more than 3000.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy mają pożyczkę na kwotę wyższą niż 3000.",
        "question": "Find the the name of the clients who have a loan with amount more than 3000.",
        "question_pl": "Znajdź nazwiska klientów, którzy mają pożyczkę na kwotę powyżej 3000.",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
        "query_pl": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
    },
    {
        "db_id": "loan_1",
        "question_original": "What are the names of customers who have a loan of more than 3000 in amount?",
        "question_original_pl": "Jakie są nazwy klientów, którzy mają pożyczkę w wysokości ponad 3000?",
        "question": "What are the names of clients who have a loan of more than 3000 in amount?",
        "question_pl": "Jakie są nazwiska klientów, którzy mają pożyczkę w wysokości ponad 3000?",
        "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
        "query_pl": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the dates of the assessment notes?",
        "question_original_pl": "Jakie są daty notatek z oceny?",
        "question": "What are the day of the assessment notes?",
        "question_pl": "Jaki jest dzień notatek z oceny?",
        "query": "SELECT date_of_notes FROM Assessment_Notes",
        "query_pl": "SELECT date_of_notes FROM Assessment_Notes"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "How many addresses have zip code 197?",
        "question_original_pl": "Ile adresów ma kod pocztowy 197?",
        "question": "How many locations have zip code 197?",
        "question_pl": "Ile lokalizacji ma kod pocztowy 197?",
        "query": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"",
        "query_pl": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "How many distinct incident type codes are there?",
        "question_original_pl": "Ile jest różnych kodów typów incydentów?",
        "question": "How many different event type codes are there?",
        "question_pl": "Ile jest różnych kodów typów zdarzeń?",
        "query": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident",
        "query_pl": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Return all distinct detention type codes.",
        "question_original_pl": "Zwróć wszystkie odrębne kody typu zatrzymania.",
        "question": "Return all different detainment type codes.",
        "question_pl": "Zwróć wszystkie różne kody typu zatrzymania.",
        "query": "SELECT DISTINCT detention_type_code FROM Detention",
        "query_pl": "SELECT DISTINCT detention_type_code FROM Detention"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the start and end dates for incidents with incident type code \"NOISE\"?",
        "question_original_pl": "Jakie są daty rozpoczęcia i zakończenia incydentów z kodem typu incydentu \"HAŁAS\"?",
        "question": "What are the start and end day for event with event type code \"NOISE\"?",
        "question_pl": "Jaki jest dzień rozpoczęcia i zakończenia wydarzenia z kodem typu wydarzenia \"NOISE\"?",
        "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"",
        "query_pl": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"HAŁAS\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
        "question_original_pl": "Jaki jest opis typu incydentu dla typu incydentu z kodem \"PRZEMOC\"?",
        "question": "What is the event type describing content for the even type with code \"VIOLENCE\"?",
        "question_pl": "Jaki jest typ zdarzenia opisujący zawartość dla typu parzystego z kodem \"PRZEMOC\"?",
        "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"",
        "query_pl": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"PRZEMOC\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "List all cities of addresses in alphabetical order.",
        "question_original_pl": "Wymień wszystkie miasta i adresy w kolejności alfabetycznej.",
        "question": "List all towns of locations in alphabetical order.",
        "question_pl": "Wymień wszystkie miasta i lokalizacje w kolejności alfabetycznej.",
        "query": "SELECT city FROM Addresses ORDER BY city",
        "query_pl": "SELECT city FROM Addresses ORDER BY city"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the first names and last names of teachers in alphabetical order of last name.",
        "question_original_pl": "Znajdź imiona i nazwiska nauczycieli w kolejności alfabetycznej.",
        "question": "Find the full names of teachers in alphabetical order of family name.",
        "question_pl": "Znajdź pełne imiona i nazwiska nauczycieli w kolejności alfabetycznej nazwisk.",
        "query": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name",
        "query_pl": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find all information about student addresses, and sort by monthly rental in descending order.",
        "question_original_pl": "Znajdź wszystkie informacje o adresach studentów i sortuj według miesięcznego czynszu w porządku malejącym.",
        "question": "Find all information about student locations, and sort by monthly rent in descending order.",
        "question_pl": "Znajdź wszystkie informacje o lokalizacjach dla studentów i sortuj według miesięcznego czynszu w porządku malejącym.",
        "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
        "query_pl": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the id and city of the student address with the highest average monthly rental.",
        "question_original_pl": "Znajdź identyfikator i miasto adresu studenta z najwyższym średnim miesięcznym czynszem.",
        "question": "Find the id and town of the student location with the highest average monthly rental.",
        "question_pl": "Znajdź identyfikator i miasto lokalizacji studenckiej z najwyższym średnim miesięcznym czynszem.",
        "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
        "query_pl": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the code and description of the most frequent behavior incident type?",
        "question_original_pl": "Jaki jest kod i opis najczęstszego typu incydentu związanego z zachowaniem?",
        "question": "What are the code and describing content of the most frequent behavior incident type?",
        "question_pl": "Jaki jest kod i opis treści najczęstszego typu incydentu związanego z zachowaniem?",
        "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the code and description of the least frequent detention type ?",
        "question_original_pl": "Jaki jest kod i opis najrzadziej występującego typu zatrzymania?",
        "question": "What are the code and describing content of the least frequent detainment type ?",
        "question_pl": "Jaki jest kod i opis treści najrzadziej występującego typu zatrzymania?",
        "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the dates of assessment notes for students with first name \"Fanny\".",
        "question_original_pl": "Znajdź daty not ocen dla uczniów o imieniu \"Fanny\".",
        "question": "Find the day of assessment notes for students with forename \"Fanny\".",
        "question_pl": "Znajdź notatki z dnia oceny dla uczniów o imieniu \"Fanny\".",
        "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"",
        "query_pl": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the texts of assessment notes for teachers with last name \"Schuster\".",
        "question_original_pl": "Znajdź teksty ocen dla nauczycieli z nazwiskiem \"Schuster\".",
        "question": "Find the texts of assessment notes for teachers with family name \"Schuster\".",
        "question_pl": "Znajdź teksty notatek oceniających dla nauczycieli o nazwisku \"Schuster\".",
        "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\"",
        "query_pl": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".",
        "question_original_pl": "Znajdź daty rozpoczęcia i zakończenia incydentów związanych z zachowaniem uczniów o nazwisku \"Fahey\".",
        "question": "Find the start and end day of behavior events of students with surname \"Fahey\".",
        "question_pl": "Znajdź dzień rozpoczęcia i zakończenia wydarzeń związanych z zachowaniem uczniów o nazwisku \"Fahey\".",
        "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"",
        "query_pl": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the start and end dates of detentions of teachers with last name \"Schultz\".",
        "question_original_pl": "Znajdź daty rozpoczęcia i zakończenia zatrzymań nauczycieli o nazwisku \"Schultz\".",
        "question": "Find the start and end day of detainments of teachers with surname \"Schultz\".",
        "question_pl": "Znajdź dzień rozpoczęcia i zakończenia zatrzymań nauczycieli o nazwisku \"Schultz\".",
        "query": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\"",
        "query_pl": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What is the cell phone number of the student whose address has the lowest monthly rental?",
        "question_original_pl": "Jaki jest numer telefonu komórkowego ucznia, którego adres ma najniższy miesięczny czynsz?",
        "question": "What is the mobile phone number of the student whose address has the lowest monthly rental?",
        "question_pl": "Jaki jest numer telefonu komórkowego studenta, którego adres ma najniższy miesięczny czynsz?",
        "query": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1",
        "query_pl": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the monthly rentals of student addresses in Texas state?",
        "question_original_pl": "Jakie są miesięczne opłaty za wynajem adresów studentów w stanie Teksas?",
        "question": "What are the monthly rent of student locations in Texas state?",
        "question_pl": "Jaki jest miesięczny czynsz w lokalizacjach studenckich w Teksasie?",
        "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"",
        "query_pl": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Teksas\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?",
        "question_original_pl": "Jaki jest kod pocztowy adresu, pod którym mieszka nauczycielka o imieniu \"Lyla\"?",
        "question": "What is the postal code of the location where the teacher with forename \"Lyla\" lives?",
        "question_pl": "Jaki jest kod pocztowy miejsca, w którym mieszka nauczycielka o imieniu \"Lyla\"?",
        "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\"",
        "query_pl": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\""
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "How many students are not involved in any behavior incident?",
        "question_original_pl": "Ilu uczniów nie uczestniczy w żadnym incydencie związanym z zachowaniem?",
        "question": "How many students are not involved in any behavior event?",
        "question_pl": "Ilu uczniów nie bierze udziału w żadnym wydarzeniu związanym z zachowaniem?",
        "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
        "query_pl": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "Find the last names of teachers who are not involved in any detention.",
        "question_original_pl": "Znajdź nazwiska nauczycieli, którzy nie biorą udziału w zatrzymaniu.",
        "question": "Find the family names of teachers who are not involved in any detention.",
        "question_pl": "Znajdź nazwiska nauczycieli, którzy nie zostali zatrzymani.",
        "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id",
        "query_pl": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id"
    },
    {
        "db_id": "behavior_monitoring",
        "question_original": "What are the line 1 of addresses shared by some students and some teachers?",
        "question_original_pl": "Jaka jest linia 1 adresów współdzielonych przez niektórych uczniów i niektórych nauczycieli?",
        "question": "What are the line 1 of locations shared by some students and some teachers?",
        "question_pl": "Jaka jest linia 1 lokalizacji współdzielonych przez niektórych uczniów i niektórych nauczycieli?",
        "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id",
        "query_pl": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.",
        "question_original_pl": "Które zasoby mają 2 części i mniej niż 2 dzienniki błędów? Wymień identyfikator zasobu i szczegóły.",
        "question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and information.",
        "question_pl": "Które zasoby mają 2 części i mniej niż 2 dzienniki błędów? Wymień identyfikator zasobu i informacje.",
        "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2",
        "query_pl": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "How many assets does each third party company supply? List the count and the company id.",
        "question_original_pl": "Ile aktywów dostarcza każda firma zewnętrzna? Wymień liczbę i identyfikator firmy.",
        "question": "How many assets does each third party enterprise supply? List the count and the enterprise id.",
        "question_pl": "Ile zasobów dostarcza każda firma zewnętrzna? Wymień liczbę i identyfikator przedsiębiorstwa.",
        "query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id",
        "query_pl": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.",
        "question_original_pl": "Które firmy zewnętrzne zatrudniają co najmniej 2 inżynierów utrzymania ruchu lub mają co najmniej 2 umowy serwisowe? Wymień identyfikator i nazwę firmy.",
        "question": "Which third party enterprise have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the enterprise id and name.",
        "question_pl": "Które przedsiębiorstwo zewnętrzne ma co najmniej 2 inżynierów ds. konserwacji lub co najmniej 2 umowy serwisowe? Podaj identyfikator i nazwę przedsiębiorstwa.",
        "query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "question_original_pl": "Który inżynier odwiedził Cię najwięcej razy? Pokaż identyfikator inżyniera, imię i nazwisko.",
        "question": "Which engineer has visited the most times? Show the engineer id, full name.",
        "question_pl": "Który inżynier odwiedził Cię najwięcej razy? Pokaż identyfikator inżyniera, pełne imię i nazwisko.",
        "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which parts have more than 2 faults? Show the part name and id.",
        "question_original_pl": "Które części mają więcej niż 2 usterki? Pokaż nazwę i identyfikator części.",
        "question": "Which components have more than 2 faults? Show the component name and id.",
        "question_pl": "Które komponenty mają więcej niż 2 błędy? Pokaż nazwę i identyfikator komponentu.",
        "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "List all every engineer's first name, last name, details and coresponding skill description.",
        "question_original_pl": "Wymień imię, nazwisko, szczegóły i opis umiejętności każdego inżyniera.",
        "question": "List all every engineer's forename, surname, detail and coresponding skill describing content.",
        "question_pl": "Wymień wszystkie imiona, nazwiska, szczegóły i umiejętności każdego inżyniera opisujące treść.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "question_original_pl": "Dla wszystkich usterek różnych części, jakie są opisy umiejętności wymaganych do ich usunięcia? Wymień nazwy usterek i opis umiejętności.",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill describing content.",
        "question_pl": "Dla wszystkich usterek różnych części, jakie są opisy umiejętności wymaganych do ich usunięcia? Wymień nazwy usterek i umiejętności opisujące ich treść.",
        "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "query_pl": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "How many assets can each parts be used in? List the part name and the number.",
        "question_original_pl": "W ilu zasobach mogą być używane poszczególne części? Wymień nazwę i numer części.",
        "question": "How many assets can each component be used in? List the component name and the number.",
        "question_pl": "W ilu zasobach można użyć każdego komponentu? Wymień nazwę i numer komponentu.",
        "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "query_pl": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?",
        "question_original_pl": "Jakie są opisy i statusy wszystkich usterek zarejestrowanych w dziennikach?",
        "question": "What are all the fault descriptions and the fault status of all the fault recoreded in the logs?",
        "question_pl": "Jakie są wszystkie opisy błędów i stan wszystkich błędów zarejestrowanych w dziennikach?",
        "query": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id",
        "query_pl": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "List the asset id, details, make and model for every asset.",
        "question_original_pl": "Wyświetl identyfikator zasobu, szczegóły, markę i model dla każdego zasobu.",
        "question": "List the asset id, information, make and type for every asset.",
        "question_pl": "Wyświetl identyfikator zasobu, informacje, markę i typ dla każdego zasobu.",
        "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets",
        "query_pl": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which part fault requires the most number of skills to fix? List part id and name.",
        "question_original_pl": "Usunięcie usterki której części wymaga najwięcej umiejętności? Wymień identyfikator i nazwę części.",
        "question": "Which component fault requires the most number of skills to fix? List component id and name.",
        "question_pl": "Usunięcie usterki którego komponentu wymaga najwięcej umiejętności? Wymień identyfikator i nazwę komponentu.",
        "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which kind of part has the least number of faults? List the part name.",
        "question_original_pl": "Który rodzaj części ma najmniejszą liczbę usterek? Wymień nazwę części.",
        "question": "Which kind of component has the least number of faults? List the component name.",
        "question_pl": "Który rodzaj komponentu ma najmniejszą liczbę błędów? Wymień nazwę komponentu.",
        "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "question_original_pl": "Który z inżynierów odwiedził Twoją firmę najmniej razy? Wymień identyfikator, imię i nazwisko inżyniera.",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, full name.",
        "question_pl": "Spośród tych inżynierów, którzy złożyli wizytę, który inżynier składa najmniej wizyt? Wymień identyfikator inżyniera i jego imię i nazwisko.",
        "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "question_original_pl": "Którzy pracownicy kontaktowali się z którymi inżynierami? Wymień imię i nazwisko pracownika oraz imię i nazwisko inżyniera.",
        "question": "Which employee have contacted which engineers? List the employee name and the engineer forename and surname.",
        "question_pl": "Który pracownik kontaktował się z którym inżynierem? Wymień imię i nazwisko pracownika oraz imię i nazwisko inżyniera.",
        "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "query_pl": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
        "question_original_pl": "Który dziennik usterek zawierał najwięcej uszkodzonych części? Wymień identyfikator dziennika usterek, opis i czas rejestracji.",
        "question": "Which fault log included the most number of faulty parts? List the fault log id, describing content and record time.",
        "question_pl": "Który dziennik usterek zawierał najwięcej uszkodzonych części? Wymień identyfikator dziennika usterek, opisując jego zawartość i czas zapisu.",
        "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "question_original_pl": "Która umiejętność jest używana do naprawy największej liczby usterek? Wymień identyfikator i opis umiejętności.",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and describing content.",
        "question_pl": "Która umiejętność jest używana do usuwania największej liczby usterek? Wymień identyfikator umiejętności i opisz jej zawartość.",
        "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "List the all the assets make, model, details by the disposed date ascendingly.",
        "question_original_pl": "Wymień wszystkie marki, modele i szczegóły aktywów według daty usunięcia rosnąco.",
        "question": "List the all the assets make, type, detail by the disposed date ascendingly.",
        "question_pl": "Wyświetl listę wszystkich aktywów marki, typu, szczegółów według daty usunięcia rosnąco.",
        "query": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC",
        "query_pl": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which part has the least chargeable amount? List the part id and amount.",
        "question_original_pl": "Która część ma najmniejszą kwotę do zapłaty? Wymień identyfikator części i kwotę.",
        "question": "Which component has the least chargeable amount? List the component id and amount.",
        "question_pl": "Który składnik ma najmniejszą kwotę do zapłaty? Podaj identyfikator składnika i kwotę.",
        "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
        "query_pl": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which company started the earliest the maintenance contract? Show the company name.",
        "question_original_pl": "Która firma najwcześniej zawarła umowę serwisową? Podaj nazwę firmy.",
        "question": "Which enterprise started the earliest the maintenance contract? Show the enterprise name.",
        "question_pl": "Które przedsiębiorstwo najwcześniej zawarło umowę serwisową? Podaj nazwę przedsiębiorstwa.",
        "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
        "query_pl": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "What is the description of the type of the company who concluded its contracts most recently?",
        "question_original_pl": "Jaki jest opis typu firmy, która ostatnio zawarła umowy?",
        "question": "What is the describing content of the type of the enterprise who concluded its contracts most recently?",
        "question_pl": "Jaka jest treść opisująca typ przedsiębiorstwa, które ostatnio zawarło umowy?",
        "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1",
        "query_pl": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
        "question_original_pl": "Z iloma inżynierami skontaktował się każdy z pracowników? Wymień zarówno nazwisko osoby kontaktowej, jak i liczbę inżynierów, z którymi się skontaktowano.",
        "question": "How many engineers did each employee contact? List both the contact employee name and number of engineers contacted.",
        "question_pl": "Z iloma inżynierami skontaktował się każdy pracownik? Wymień zarówno imię i nazwisko pracownika kontaktowego, jak i liczbę inżynierów, z którymi się skontaktował.",
        "query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name",
        "query_pl": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name"
    },
    {
        "db_id": "assets_maintenance",
        "question_original": "Which assets did not incur any fault log? List the asset model.",
        "question_original_pl": "Które zasoby nie zostały zarejestrowane w dzienniku błędów? Wymień model zasobu.",
        "question": "Which assets did not incur any fault log? List the asset type.",
        "question_pl": "Które zasoby nie zostały zarejestrowane w dzienniku błędów? Wymień typ zasobu.",
        "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
        "query_pl": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)"
    },
    {
        "db_id": "station_weather",
        "question_original": "list the local authorities and services provided by all stations.",
        "question_original_pl": "Wymień lokalne władze i usługi świadczone przez wszystkie stacje.",
        "question": "list the local authorities and services provided by all terminals.",
        "question_pl": "Wymień lokalne władze i usługi świadczone przez wszystkie terminale.",
        "query": "SELECT local_authority ,  services FROM station",
        "query_pl": "SELECT local_authority ,  services FROM station"
    },
    {
        "db_id": "station_weather",
        "question_original": "Find the number of trains for each station, as well as the station network name and services.",
        "question_original_pl": "Znajdź liczbę pociągów na każdej stacji, a także nazwę sieci stacji i usługi.",
        "question": "Find the number of trains for each terminal, as well as the terminal network name and services.",
        "question_pl": "Znajdź liczbę pociągów dla każdego terminalu, a także nazwę sieci terminalu i usługi.",
        "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id",
        "query_pl": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id"
    },
    {
        "db_id": "station_weather",
        "question_original": "Find names and times of trains that run through stations for the local authority Chiltern.",
        "question_original_pl": "Znajdź nazwy i godziny pociągów przejeżdżających przez stacje lokalnych władz Chiltern.",
        "question": "Find names and times of trains that run through terminals for the local authority Chiltern.",
        "question_pl": "Znajdź nazwy i godziny pociągów przejeżdżających przez terminale lokalnych władz Chiltern.",
        "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"",
        "query_pl": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\""
    },
    {
        "db_id": "station_weather",
        "question_original": "How many different services are provided by all stations?",
        "question_original_pl": "Ile różnych usług jest świadczonych przez wszystkie stacje?",
        "question": "How many different services are provided by all terminals?",
        "question_pl": "Ile różnych usług jest świadczonych przez wszystkie terminale?",
        "query": "SELECT count(DISTINCT services) FROM station",
        "query_pl": "SELECT count(DISTINCT services) FROM station"
    },
    {
        "db_id": "station_weather",
        "question_original": "Find the id and local authority of the station with has the highest average high temperature.",
        "question_original_pl": "Znajdź identyfikator i władze lokalne stacji o najwyższej średniej wysokiej temperaturze.",
        "question": "Find the id and local authority of the terminal with has the highest average high temperature.",
        "question_pl": "Znajdź identyfikator i władze lokalne terminalu o najwyższej średniej wysokiej temperaturze.",
        "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1",
        "query_pl": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1"
    },
    {
        "db_id": "station_weather",
        "question_original": "Find the origins from which more than 1 train starts.",
        "question_original_pl": "Znajdź początki, z których startuje więcej niż 1 pociąg.",
        "question": "Find the starting point from which more than 1 train starts.",
        "question_pl": "Znajdź punkt początkowy, z którego wyrusza więcej niż 1 pociąg.",
        "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1",
        "query_pl": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first and last name of the professor in biology department?",
        "question_original_pl": "Jakie jest imię i nazwisko profesora na wydziale biologii?",
        "question": "What is the full name of the professor in biology department?",
        "question_pl": "Jak brzmi pełne imię i nazwisko profesora na wydziale biologii?",
        "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"",
        "query_pl": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biologia\""
    },
    {
        "db_id": "college_1",
        "question_original": "How many credits does course CIS-220 have, and what its description?",
        "question_original_pl": "Ile punktów ma kurs CIS-220 i jaki jest jego opis?",
        "question": "How many credits does course CIS-220 have, and what its describing content?",
        "question_pl": "Ile punktów ma kurs CIS-220 i jaka jest jego zawartość?",
        "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'",
        "query_pl": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the description for the CIS-220 and how many credits does it have?",
        "question_original_pl": "Jaki jest opis przedmiotu CIS-220 i ile ma punktów?",
        "question": "What is the describing content for the CIS-220 and how many credits does it have?",
        "question_pl": "Jaka jest opisowa zawartość kursu CIS-220 i ile ma punktów?",
        "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'",
        "query_pl": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"
    },
    {
        "db_id": "college_1",
        "question_original": "what is the address of history department?",
        "question_original_pl": "Jaki jest adres wydziału historii?",
        "question": "what is the location of history department?",
        "question_pl": "Jaka jest lokalizacja wydziału historii?",
        "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'",
        "query_pl": "SELECT dept_address FROM department WHERE dept_name  =  'Historia'"
    },
    {
        "db_id": "college_1",
        "question_original": "Count different addresses of each school.",
        "question_original_pl": "Policz różne adresy każdej szkoły.",
        "question": "Count different locations of each school.",
        "question_pl": "Policz różne lokalizacje każdej szkoły.",
        "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code",
        "query_pl": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the description and credit for the course QM-261?",
        "question_original_pl": "Znajdź opis i zaliczenie kursu QM-261?",
        "question": "Find the describing content and credit for the course QM-261?",
        "question_pl": "Znajdź opis treści i zaliczenie kursu QM-261?",
        "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'",
        "query_pl": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the course description and number of credits for QM-261?",
        "question_original_pl": "Jaki jest opis kursu i liczba punktów dla QM-261?",
        "question": "What is the course describing content and number of credits for QM-261?",
        "question_pl": "Jaka jest treść i liczba punktów kursu QM-261?",
        "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'",
        "query_pl": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"
    },
    {
        "db_id": "college_1",
        "question_original": "How many sections does each course has?",
        "question_original_pl": "Ile sekcji ma każdy kurs?",
        "question": "How many parts does each course has?",
        "question_pl": "Ile części składa się na każdy kurs?",
        "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code",
        "query_pl": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
    },
    {
        "db_id": "college_1",
        "question_original": "How many sections does each course have?",
        "question_original_pl": "Ile sekcji ma każdy kurs?",
        "question": "How many parts does each course have?",
        "question_pl": "Ile części składa się na każdy kurs?",
        "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code",
        "query_pl": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the count and code of the job has most employees.",
        "question_original_pl": "Znajdź liczbę i kod miejsca pracy, które zatrudnia najwięcej pracowników.",
        "question": "Find the count and code of the job has most staffs.",
        "question_pl": "Znajdź liczbę i kod miejsca pracy z największą liczbą pracowników.",
        "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "How many courses are offered?",
        "question_original_pl": "Ile kursów jest oferowanych?",
        "question": "How many curriculum are offered?",
        "question_pl": "Ile programów nauczania jest oferowanych?",
        "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
        "query_pl": "SELECT count(DISTINCT crs_code) FROM CLASS"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the number of different course codes?",
        "question_original_pl": "Jaka jest liczba różnych kodów kursów?",
        "question": "What are the number of different curriculum codes?",
        "question_pl": "Jaka jest liczba różnych kodów programów nauczania?",
        "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
        "query_pl": "SELECT count(DISTINCT crs_code) FROM CLASS"
    },
    {
        "db_id": "college_1",
        "question_original": "How many courses are offered by the Computer Info. Systems department?",
        "question_original_pl": "Ile kursów oferuje dział Computer Info. Systems?",
        "question": "How many curriculum are offered by the Computer Info. Systems department?",
        "question_pl": "Ile programów nauczania oferuje dział Computer Info. Systems?",
        "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"",
        "query_pl": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Komputerowe systemy informacyjne\""
    },
    {
        "db_id": "college_1",
        "question_original": "How many courses does the department of Computer Information Systmes offer?",
        "question_original_pl": "Ile kierunków oferuje Wydział Informatyki?",
        "question": "How many curriculum does the division of Computer Information Systmes offer?",
        "question_pl": "Ile programów nauczania oferuje Wydział Informatyki?",
        "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"",
        "query_pl": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Komputerowe systemy informacyjne\""
    },
    {
        "db_id": "college_1",
        "question_original": "How many sections does course ACCT-211 has?",
        "question_original_pl": "Ile sekcji ma kurs ACCT-211?",
        "question": "How many parts does course ACCT-211 has?",
        "question_pl": "Z ilu części składa się kurs ACCT-211?",
        "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
        "query_pl": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the number of different class sections offered in the course ACCT-211?",
        "question_original_pl": "Jaka jest liczba różnych sekcji oferowanych w ramach kursu ACCT-211?",
        "question": "What is the number of different class sections offered in the curriculum ACCT-211?",
        "question_pl": "Jaka jest liczba różnych sekcji zajęć oferowanych w ramach programu nauczania ACCT-211?",
        "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
        "query_pl": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the total number of credits offered by each department?",
        "question_original_pl": "Jaka jest łączna liczba punktów oferowanych przez poszczególne wydziały?",
        "question": "What are the total number of credits offered by each division?",
        "question_pl": "Jaka jest łączna liczba punktów oferowanych przez poszczególne dywizje?",
        "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code",
        "query_pl": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the name of the department that offers the largest number of credits of all classes.",
        "question_original_pl": "Znajdź nazwę wydziału, który oferuje największą liczbę punktów ze wszystkich zajęć.",
        "question": "Find the name of the division that offers the largest number of credits of all classes.",
        "question_pl": "Znajdź nazwę oddziału, który oferuje największą liczbę punktów we wszystkich klasach.",
        "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1",
        "query_pl": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "Which department offers the most credits all together?",
        "question_original_pl": "Który wydział oferuje łącznie najwięcej kredytów?",
        "question": "Which division offers the most credits all together?",
        "question_pl": "Która dywizja oferuje łącznie najwięcej kredytów?",
        "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1",
        "query_pl": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "How many students enrolled in class ACCT-211?",
        "question_original_pl": "Ilu studentów zapisało się na zajęcia ACCT-211?",
        "question": "How many students are registered in class ACCT-211?",
        "question_pl": "Ilu studentów jest zarejestrowanych w klasie ACCT-211?",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the total number of students enrolled in ACCT-211?",
        "question_original_pl": "Jaka jest łączna liczba studentów zapisanych na kurs ACCT-211?",
        "question": "What are the total number of students are registered in ACCT-211?",
        "question_pl": "Jaka jest łączna liczba studentów zarejestrowanych w ACCT-211?",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first name of each student enrolled in class ACCT-211?",
        "question_original_pl": "Jakie jest imię każdego ucznia zapisanego na zajęcia ACCT-211?",
        "question": "What is the forename of each student are registered in class ACCT-211?",
        "question_pl": "Jakie jest imię każdego ucznia zarejestrowanego w klasie ACCT-211?",
        "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all students who took ACCT-211 and received a C?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich studentów, którzy wzięli udział w kursie ACCT-211 i otrzymali ocenę C?",
        "question": "What are the forename of all students who took ACCT-211 and received a C?",
        "question_pl": "Jak nazywają się wszyscy studenci, którzy wzięli udział w kursie ACCT-211 i otrzymali ocenę C?",
        "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'",
        "query_pl": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'"
    },
    {
        "db_id": "college_1",
        "question_original": "How many employees are there all together?",
        "question_original_pl": "Ilu pracowników zatrudniasz?",
        "question": "How many staffs are there all together?",
        "question_pl": "Ilu jest wszystkich pracowników?",
        "query": "SELECT count(*) FROM employee",
        "query_pl": "SELECT count(*) FROM employee"
    },
    {
        "db_id": "college_1",
        "question_original": "How many students are enrolled in the class taught by some professor from the accounting department?",
        "question_original_pl": "Ilu studentów uczęszcza na zajęcia prowadzone przez profesora z działu księgowości?",
        "question": "How many students are registered in the class taught by some professor from the accounting department?",
        "question_pl": "Ilu studentów jest zarejestrowanych na zajęciach prowadzonych przez profesora z działu księgowości?",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Księgowość'"
    },
    {
        "db_id": "college_1",
        "question_original": "How many students are enrolled in some classes that are taught by an accounting professor?",
        "question_original_pl": "Ilu studentów uczęszcza na zajęcia prowadzone przez profesora rachunkowości?",
        "question": "How many students are registered in some classes that are taught by an accounting professor?",
        "question_pl": "Ilu studentów jest zarejestrowanych na niektórych zajęciach prowadzonych przez profesora rachunkowości?",
        "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'",
        "query_pl": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Księgowość'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department that has the largest number of students enrolled?",
        "question_original_pl": "Jak nazywa się wydział z największą liczbą zapisanych studentów?",
        "question": "What is the name of the division that has the largest number of students enrolled?",
        "question_pl": "Jak nazywa się oddział z największą liczbą zapisanych studentów?",
        "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department with the most students enrolled?",
        "question_original_pl": "Jak nazywa się wydział z największą liczbą zapisanych studentów?",
        "question": "What is the name of the division with the most students registered?",
        "question_pl": "Jak nazywa się oddział z największą liczbą zarejestrowanych studentów?",
        "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "list names of all departments ordered by their names.",
        "question_original_pl": "Zwróć listę nazw wszystkich działów uporządkowana według ich nazw.",
        "question": "list names of all divisions ordered by their names.",
        "question_pl": "Zwróć listę nazw wszystkich oddziałów uporządkowanych według ich nazw.",
        "query": "SELECT dept_name FROM department ORDER BY dept_name",
        "query_pl": "SELECT dept_name FROM department ORDER BY dept_name"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the names of all departments in alphabetical order?",
        "question_original_pl": "Jak nazywają się wszystkie działy w kolejności alfabetycznej?",
        "question": "What are the names of all divisions in alphabetical order?",
        "question_pl": "Jak nazywają się wszystkie dywizje w kolejności alfabetycznej?",
        "query": "SELECT dept_name FROM department ORDER BY dept_name",
        "query_pl": "SELECT dept_name FROM department ORDER BY dept_name"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first and last name of the oldest employee?",
        "question_original_pl": "Jakie jest imię i nazwisko najstarszego pracownika?",
        "question": "What is the full name of the oldest employee?",
        "question_pl": "Jak brzmi pełne imię i nazwisko najstarszego pracownika?",
        "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
        "query_pl": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?",
        "question_original_pl": "Jakie jest imię, nazwisko, GPA najmłodszego z uczniów, którego GPA jest powyżej 3?",
        "question": "What is the forename, surname, gpa of the youngest one among students whose GPA is above 3?",
        "question_pl": "Jakie jest imię, nazwisko, gpa najmłodszego z uczniów, których GPA jest powyżej 3?",
        "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
        "query_pl": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first name of students who got grade C in any class?",
        "question_original_pl": "Jakie jest imię uczniów, którzy otrzymali ocenę C w dowolnej klasie?",
        "question": "What is the forename of students who got grade C in any class?",
        "question_pl": "Jak nazywają się uczniowie, którzy otrzymali ocenę C w dowolnej klasie?",
        "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'",
        "query_pl": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of department where has the smallest number of professors?",
        "question_original_pl": "Jak nazywa się wydział, na którym jest najmniej profesorów?",
        "question": "What is the name of division where has the smallest number of professors?",
        "question_pl": "Jak nazywa się wydział, w którym jest najmniej profesorów?",
        "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department with the fewest professors?",
        "question_original_pl": "Jak nazywa się wydział z najmniejszą liczbą profesorów?",
        "question": "What is the name of the division with the fewest professors?",
        "question_pl": "Jak nazywa się oddział z najmniejszą liczbą profesorów?",
        "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of the professors who do not teach a class.",
        "question_original_pl": "Jakie są imiona profesorów, którzy nie prowadzą zajęć.",
        "question": "What are the forename of the professors who do not teach a class.",
        "question_pl": "Jak nazywają się profesorowie, którzy nie prowadzą zajęć.",
        "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num",
        "query_pl": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first names of the professors from the history department who do not teach a class.",
        "question_original_pl": "Podaj imiona i nazwiska profesorów z wydziału historii, którzy nie prowadzą zajęć.",
        "question": "What is the forename of the professors from the history department who do not teach a class.",
        "question_pl": "Jak nazywają się profesorowie z wydziału historii, którzy nie prowadzą zajęć.",
        "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num",
        "query_pl": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'Historia' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all history professors who do not teach?",
        "question_original_pl": "Jakie są imiona wszystkich profesorów historii, którzy nie uczą?",
        "question": "What are the forename of all history professors who do not teach?",
        "question_pl": "Jak nazywają się wszyscy profesorowie historii, którzy nie uczą?",
        "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num",
        "query_pl": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'Historia' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department and office location for the professor with the last name of Heffington?",
        "question_original_pl": "Jak nazywa się wydział i biuro profesora o nazwisku Heffington?",
        "question": "What is the name of the division and office location for the professor with the last name of Heffington?",
        "question_pl": "Jak nazywa się oddział i lokalizacja biura profesora o nazwisku Heffington?",
        "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'",
        "query_pl": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the last name and hire date of the professor who is in office DRE 102.",
        "question_original_pl": "Znajdź nazwisko i datę zatrudnienia profesora, który pracuje w biurze DRE 102.",
        "question": "Find the family name and hire day of the professor who is in office DRE 102.",
        "question_pl": "Znajdź nazwisko i dzień zatrudnienia profesora, który pełni funkcję DRE 102.",
        "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'",
        "query_pl": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the code of the course which the student whose last name is Smithson took?",
        "question_original_pl": "Jaki jest kod przedmiotu, w którym uczestniczył student o nazwisku Smithson?",
        "question": "What is the code of the course which the student whose family name is Smithson took?",
        "question_pl": "Jaki jest kod kursu, w którym uczestniczył student o nazwisku Smithson?",
        "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'",
        "query_pl": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the course codes for every class that the student with the last name Smithson took?",
        "question_original_pl": "Jakie są kody przedmiotów dla wszystkich zajęć, w których uczestniczył student o nazwisku Smithson?",
        "question": "What are the course codes for every class that the student with the surname Smithson took?",
        "question_pl": "Jakie są kody przedmiotów dla każdej klasy, w której uczestniczył student o nazwisku Smithson?",
        "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'",
        "query_pl": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the description and credit of the course which the student whose last name is Smithson took?",
        "question_original_pl": "Jaki jest opis i zaliczenie przedmiotu, w którym uczestniczył student o nazwisku Smithson?",
        "question": "What are the describing content and credit of the course which the student whose last name is Smithson took?",
        "question_pl": "Jaka jest opisowa treść i zaliczenie przedmiotu, w którym uczestniczył student o nazwisku Smithson?",
        "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'",
        "query_pl": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"
    },
    {
        "db_id": "college_1",
        "question_original": "How many credits is the course that the student with the last name Smithson took, and what is its description?",
        "question_original_pl": "Ile punktów ma kurs, w którym uczestniczył student o nazwisku Smithson i jaki jest jego opis?",
        "question": "How many credits is the course that the student with the last name Smithson took, and what is its describing content?",
        "question_pl": "Ile punktów ma kurs, w którym uczestniczył student o nazwisku Smithson i jaka jest jego opisowa zawartość?",
        "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'",
        "query_pl": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first name of the professor who is teaching CIS-220 and QM-261?",
        "question_original_pl": "Jak nazywa się profesor, który wykłada CIS-220 i QM-261?",
        "question": "What is the forename of the professor who is teaching CIS-220 and QM-261?",
        "question_pl": "Jak ma na imię profesor, który uczy CIS-220 i QM-261?",
        "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'",
        "query_pl": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first name of student who is taking classes from accounting and Computer Info. Systems departments",
        "question_original_pl": "Znajdź imię studenta, który uczęszcza na zajęcia z działów Rachunkowość i Informatyka. Systems",
        "question": "Find the forename of student who is taking classes from accounting and Computer Info. Systems departments",
        "question_pl": "Znajdź imię studenta, który uczęszcza na zajęcia z działów Rachunkowość i Computer Info. Systems",
        "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'",
        "query_pl": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Księgowość' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Komputerowe systemy informacyjne'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all students taking accoutning and Computer Information Systems classes?",
        "question_original_pl": "Jakie są imiona wszystkich studentów uczęszczających na zajęcia z księgowości i komputerowych systemów informacyjnych?",
        "question": "What are the forename of all students taking accoutning and Computer Information Systems classes?",
        "question_pl": "Jak nazywają się wszyscy studenci uczęszczający na zajęcia z księgowości i komputerowych systemów informacyjnych?",
        "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'",
        "query_pl": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Księgowość' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Komputerowe systemy informacyjne'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the average gpa of the students enrolled in the course with code ACCT-211?",
        "question_original_pl": "Jaka jest średnia ocen studentów zapisanych na kurs z kodem ACCT-211?",
        "question": "What is the average gpa of the students registered in the course with code ACCT-211?",
        "question_pl": "Jaka jest średnia ocen studentów zarejestrowanych na kursie z kodem ACCT-211?",
        "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'",
        "query_pl": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first name, gpa and phone number of the top 5 students with highest gpa?",
        "question_original_pl": "Jakie jest imię, średnia ocen i numer telefonu 5 najlepszych studentów z najwyższą średnią ocen?",
        "question": "What is the forename, gpa and telephone number of the top 5 students with highest gpa?",
        "question_pl": "Jakie jest imię i nazwisko, średnia ocen i numer telefonu 5 najlepszych uczniów z najwyższą średnią ocen?",
        "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
        "query_pl": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?",
        "question_original_pl": "Jakie jest imię, GPA i numer telefonu studentów z 5 najlepszymi GPA?",
        "question": "What is the forename, GPA, and telephone number of the students with the top 5 GPAs?",
        "question_pl": "Jakie jest imię, GPA i numer telefonu uczniów z 5 najlepszymi GPA?",
        "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5",
        "query_pl": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the department name of the students with lowest gpa belongs to?",
        "question_original_pl": "Do jakiego wydziału należą studenci z najniższą średnią ocen?",
        "question": "What is the division name of the students with lowest gpa belongs to?",
        "question_pl": "Do jakiego oddziału należą uczniowie z najniższą średnią ocen?",
        "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1",
        "query_pl": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department with the student that has the lowest GPA?",
        "question_original_pl": "Jak nazywa się wydział, z którego student ma najniższy GPA?",
        "question": "What is the name of the division with the student that has the lowest GPA?",
        "question_pl": "Jak nazywa się oddział z uczniem, który ma najniższy GPA?",
        "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1",
        "query_pl": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the name and address of the department that has the highest number of students.",
        "question_original_pl": "Znajdź nazwę i adres wydziału, który ma największą liczbę studentów.",
        "question": "Find the name and location of the department that has the highest number of students.",
        "question_pl": "Znajdź nazwę i lokalizację wydziału, który ma największą liczbę studentów.",
        "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name and address of the department with the most students?",
        "question_original_pl": "Jaka jest nazwa i adres wydziału z największą liczbą studentów?",
        "question": "What is the name and location of the department with the most students?",
        "question_pl": "Jaka jest nazwa i lokalizacja wydziału z największą liczbą studentów?",
        "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the name, address, number of students in the departments that have the top 3 highest number of students.",
        "question_original_pl": "Znajdź nazwę, adres, liczbę studentów na wydziałach, które mają 3 najwyższe liczby studentów.",
        "question": "Find the name, location, number of students in the departments that have the top 3 highest number of students.",
        "question_pl": "Znajdź nazwę, lokalizację i liczbę studentów na wydziałach, które mają 3 najwyższe liczby studentów.",
        "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name, address, and number of students in the departments that have the 3 most students?",
        "question_original_pl": "Jaka jest nazwa, adres i liczba studentów na wydziałach, które mają 3 największe liczby studentów?",
        "question": "What is the name, location, and number of students in the departments that have the 3 most students?",
        "question_pl": "Jaka jest nazwa, lokalizacja i liczba studentów na wydziałach, które mają 3 największe liczby studentów?",
        "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.",
        "question_original_pl": "Znajdź imię i nazwisko oraz biuro profesora, który pracuje na wydziale historii i ma stopień doktora.",
        "question": "Find the forename and office of the professor who is in the history department and has a Ph.D. degree.",
        "question_pl": "Znajdź imię i nazwisko oraz stanowisko profesora, który pracuje na wydziale historii i ma stopień doktora.",
        "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'",
        "query_pl": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'Historia' AND T2.prof_high_degree  =  'Ph.D.'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all teachers who have taught a course and the corresponding course codes?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich nauczycieli, którzy prowadzili dany kurs oraz odpowiadające im kody kursów?",
        "question": "What are the forename of all teachers who have taught a course and the corresponding course codes?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich nauczycieli, którzy prowadzili kurs i odpowiadające im kody kursów?",
        "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num",
        "query_pl": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first names of all instructors who have taught some course and the course description.",
        "question_original_pl": "Znajdź imiona i nazwiska wszystkich instruktorów, którzy prowadzili dany kurs oraz jego opis.",
        "question": "Find the forename of all instructors who have taught some course and the course describing content.",
        "question_pl": "Znajdź imiona i nazwiska wszystkich instruktorów, którzy prowadzili dany kurs, oraz opis jego zawartości.",
        "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code",
        "query_pl": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all teachers who have taught a course and the corresponding descriptions?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich nauczycieli, którzy prowadzili dany kurs oraz odpowiadające im opisy?",
        "question": "What are the forename of all teachers who have taught a course and the corresponding descriptions?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich nauczycieli, którzy prowadzili kurs i odpowiadające im opisy?",
        "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code",
        "query_pl": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first names and offices of all instructors who have taught some course and also find the course description.",
        "question_original_pl": "Znajdź imiona i nazwiska oraz biura wszystkich instruktorów, którzy prowadzili dany kurs, a także jego opis.",
        "question": "Find the forename and offices of all instructors who have taught some course and also find the course describing content.",
        "question_pl": "Znajdź imiona i nazwiska oraz biura wszystkich instruktorów, którzy prowadzili dany kurs, a także znajdź kurs opisujący jego treść.",
        "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num",
        "query_pl": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach?",
        "question_original_pl": "Jak nazywają się wszyscy profesorowie rachunkowości, którzy prowadzą zajęcia i w jakich salach wykładają?",
        "question": "What are the forename of all Accounting professors who teach and what are the classrooms of the courses they teach?",
        "question_pl": "Jak nazywają się wszyscy profesorowie rachunkowości, którzy uczą i jakie są klasy kursów, które prowadzą?",
        "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'",
        "query_pl": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Księgowość'"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.",
        "question_original_pl": "Znajdź imiona i nazwiska oraz stopnie naukowe wszystkich profesorów, którzy prowadzą zajęcia na wydziale Computer Info. Systems.",
        "question": "Find the forename and degree of all professors who are teaching some class in Computer Info. Systems department.",
        "question_pl": "Znajdź imię i nazwisko oraz stopień naukowy wszystkich profesorów, którzy prowadzą zajęcia na wydziale Computer Info. Systems.",
        "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'",
        "query_pl": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Komputerowe systemy informacyjne'"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?",
        "question_original_pl": "Jakie są różne imiona i nazwiska oraz najwyższy uzyskany stopień naukowy profesorów wykładających na wydziale Komputerowych Systemów Informacyjnych?",
        "question": "What are the different forename and highest degree attained for professors teaching in the Computer Information Systems department?",
        "question_pl": "Jakie są różne imiona i najwyższe stopnie naukowe profesorów wykładających na wydziale komputerowych systemów informacyjnych?",
        "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'",
        "query_pl": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Komputerowe systemy informacyjne'"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the last name of the student who got a grade A in the class with code 10018.",
        "question_original_pl": "Jak nazywa się uczeń, który otrzymał ocenę A w klasie z kodem 10018.",
        "question": "What is the family name of the student who got a grade A in the class with code 10018.",
        "question_pl": "Jak nazywa się rodzina ucznia, który otrzymał ocenę A w klasie z kodem 10018.",
        "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018",
        "query_pl": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the last name of the student who received an A in the class with the code 10018?",
        "question_original_pl": "Jak nazywa się uczeń, który otrzymał piątkę w klasie z kodem 10018?",
        "question": "What is the family name of the student who received an A in the class with the code 10018?",
        "question_pl": "Jak nazywa się rodzina ucznia, który otrzymał piątkę w klasie z kodem 10018?",
        "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018",
        "query_pl": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
    },
    {
        "db_id": "college_1",
        "question_original": "Find the first names of professors who are teaching more than one class.",
        "question_original_pl": "Znajdź imiona i nazwiska profesorów, którzy prowadzą więcej niż jedne zajęcia.",
        "question": "Find the forename of professors who are teaching more than one class.",
        "question_pl": "Znajdź imiona profesorów, którzy prowadzą więcej niż jedną klasę.",
        "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1",
        "query_pl": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"
    },
    {
        "db_id": "college_1",
        "question_original": "What are the first names of student who only took one course?",
        "question_original_pl": "Jakie są imiona studentów, którzy uczestniczyli tylko w jednym kursie?",
        "question": "What are the forename of student who only took one course?",
        "question_pl": "Jak nazywają się studenci, którzy uczestniczyli tylko w jednym kursie?",
        "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1",
        "query_pl": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"
    },
    {
        "db_id": "college_1",
        "question_original": "What is the name of the department that offers a course that has a description including the word \"Statistics\"?",
        "question_original_pl": "Jak nazywa się wydział oferujący kurs, którego opis zawiera słowo \"Statystyka\"?",
        "question": "What is the name of the division that offers a course that has a description including the word \"Statistics\"?",
        "question_pl": "Jak nazywa się dział oferujący kurs, którego opis zawiera słowo \"Statystyka\"?",
        "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
        "query_pl": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statystyka%'"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the distinct region of clubs in ascending alphabetical order.",
        "question_original_pl": "Wymień różne regiony klubów w rosnącej kolejności alfabetycznej.",
        "question": "List the different district of clubs in ascending alphabetical order.",
        "question_pl": "Wymień różne dzielnice klubów w rosnącej kolejności alfabetycznej.",
        "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC",
        "query_pl": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the different regions of clubs in ascending alphabetical order?",
        "question_original_pl": "Jakie są różne regiony klubów w rosnącej kolejności alfabetycznej?",
        "question": "What are the different districts of clubs in ascending alphabetical order?",
        "question_pl": "Jakie są różne dzielnice klubów w rosnącej kolejności alfabetycznej?",
        "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC",
        "query_pl": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the types and countries of competitions?",
        "question_original_pl": "Jakie są rodzaje i kraje, w których odbywają się zawody?",
        "question": "What are the types and nations of competitions?",
        "question_pl": "Jakie są rodzaje i narody zawodów?",
        "query": "SELECT Competition_type ,  Country FROM competition",
        "query_pl": "SELECT Competition_type ,  Country FROM competition"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the distinct years in which the competitions type is not \"Tournament\"?",
        "question_original_pl": "Jakie są lata, w których typem zawodów nie jest \"Turniej\"?",
        "question": "What are the different years in which the match type is not \"Tournament\"?",
        "question_pl": "W jakich latach typem meczu nie jest \"Turniej\"?",
        "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"",
        "query_pl": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Turniej\""
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the different years for all competitions that are not of type equal to tournament?",
        "question_original_pl": "Jakie są różne lata dla wszystkich zawodów, które nie są typu równego turniejowi?",
        "question": "What are the different years for all match that are not of type equal to tournament?",
        "question_pl": "Jakie są różne lata dla wszystkich meczów, które nie są typu równego turniejowi?",
        "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"",
        "query_pl": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Turniej\""
    },
    {
        "db_id": "sports_competition",
        "question_original": "Please show the names and the players of clubs.",
        "question_original_pl": "Podaj nazwy i zawodników klubów.",
        "question": "Please show the names and the participants of clubs.",
        "question_pl": "Podaj nazwy i uczestników klubów.",
        "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
        "query_pl": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the names and players of all the clubs?",
        "question_original_pl": "Jakie są nazwy i zawodnicy wszystkich klubów?",
        "question": "What are the names and participants of all the clubs?",
        "question_pl": "Jakie są nazwy i uczestnicy wszystkich klubów?",
        "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
        "query_pl": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
    },
    {
        "db_id": "sports_competition",
        "question_original": "Show the names of clubs that have players with position \"Right Wing\".",
        "question_original_pl": "Pokaż nazwy klubów, które mają zawodników z pozycją \"Prawoskrzydłowy\".",
        "question": "Show the names of clubs that have participants with position \"Right Wing\".",
        "question_pl": "Pokaż nazwy klubów, które mają uczestników z pozycją \"Prawicowy\".",
        "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"",
        "query_pl": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Prawe skrzydło\""
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the names of the clubs that have players in the position of \"Right Wing\"?",
        "question_original_pl": "Jakie są nazwy klubów, które mają zawodników na pozycji \"Prawoskrzydłowy\"?",
        "question": "What are the names of the clubs that have participants in the position of \"Right Wing\"?",
        "question_pl": "Jakie są nazwy klubów, które mają uczestników na pozycji \"Prawego Skrzydła\"?",
        "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"",
        "query_pl": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Prawe skrzydło\""
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the position of players and the average number of points of players of each position.",
        "question_original_pl": "Wymień pozycje zawodników i średnią liczbę punktów zawodników na każdej pozycji.",
        "question": "List the location of players and the average number of points of players of each location.",
        "question_pl": "Podaj lokalizację graczy i średnią liczbę punktów graczy z każdej lokalizacji.",
        "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION",
        "query_pl": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
    },
    {
        "db_id": "sports_competition",
        "question_original": "For each position, what is the average number of points for players in that position?",
        "question_original_pl": "Dla każdej pozycji, jaka jest średnia liczba punktów zawodników na tej pozycji?",
        "question": "For each location, what is the average number of points for players in that location?",
        "question_pl": "Jaka jest średnia liczba punktów zdobytych przez graczy w danej lokalizacji?",
        "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION",
        "query_pl": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the position of players with average number of points scored by players of that position bigger than 20.",
        "question_original_pl": "Wymień pozycje zawodników ze średnią liczbą punktów zdobytych przez zawodników na tej pozycji większą niż 20.",
        "question": "List the location of participants with average number of points scored by players of that location bigger than 20.",
        "question_pl": "Wymień lokalizację uczestników ze średnią liczbą punktów zdobytych przez graczy z tej lokalizacji większą niż 20.",
        "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20",
        "query_pl": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the positions of players whose average number of points scored by that position is larger than 20?",
        "question_original_pl": "Na jakich pozycjach grają zawodnicy, których średnia liczba punktów zdobytych na tej pozycji jest większa niż 20?",
        "question": "What are the locations of participants whose average number of points scored by that location is larger than 20?",
        "question_pl": "Jakie są lokalizacje uczestników, których średnia liczba punktów zdobytych przez daną lokalizację jest większa niż 20?",
        "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20",
        "query_pl": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the types of competition and the number of competitions of each type.",
        "question_original_pl": "Wymień rodzaje zawodów i liczbę zawodów każdego rodzaju.",
        "question": "List the categories of match and the number of match of each category.",
        "question_pl": "Wymień kategorie meczów i liczbę meczów w każdej kategorii.",
        "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type",
        "query_pl": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the types of competition and number of competitions for that type?",
        "question_original_pl": "Jakie są rodzaje zawodów i liczba zawodów dla danego rodzaju?",
        "question": "What are the categories of match and number of match for that category?",
        "question_pl": "Jakie są kategorie meczów i liczba meczów w danej kategorii?",
        "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type",
        "query_pl": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the most common type of competition.",
        "question_original_pl": "Wymień najpopularniejsze rodzaje konkurencji.",
        "question": "List the most common category of match.",
        "question_pl": "Wymień najczęstsze kategorie meczów.",
        "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What is the most common competition type?",
        "question_original_pl": "Jaki jest najczęstszy typ konkurencji?",
        "question": "What is the most common match category?",
        "question_pl": "Jaka jest najczęstsza kategoria meczów?",
        "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the types of competition that have at most five competitions of that type.",
        "question_original_pl": "Wymień typy zawodów, które mają co najwyżej pięć zawodów tego typu.",
        "question": "List the categories of match that have at most five match of that category.",
        "question_pl": "Wymień kategorie meczów, które mają co najwyżej pięć meczów tej kategorii.",
        "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5",
        "query_pl": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the types of competition that have most 5 competitions for that type?",
        "question_original_pl": "Jakie są rodzaje zawodów, które mają najwięcej 5 zawodów dla tego typu?",
        "question": "What are the categories of match that have most 5 match for that category?",
        "question_pl": "Jakie kategorie meczów mają najwięcej 5 meczów w danej kategorii?",
        "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5",
        "query_pl": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
    },
    {
        "db_id": "sports_competition",
        "question_original": "List the names of clubs that do not have any players.",
        "question_original_pl": "Wymień nazwy klubów, które nie mają żadnego zawodnika.",
        "question": "List the names of clubs that do not have any participants.",
        "question_pl": "Wymień nazwy klubów, które nie mają żadnych uczestników.",
        "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
        "query_pl": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the names of all clubs that do not have any players?",
        "question_original_pl": "Jakie są nazwy wszystkich klubów, które nie mają żadnego zawodnika?",
        "question": "What are the names of all clubs that do not have any participants?",
        "question_pl": "Jakie są nazwy wszystkich klubów, które nie mają uczestników?",
        "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
        "query_pl": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the positions with both players having more than 20 points and less than 10 points.",
        "question_original_pl": "Jakie są pozycje, na których obaj gracze mają więcej niż 20 punktów i mniej niż 10 punktów.",
        "question": "What are the locations with both participants having more than 20 points and less than 10 points.",
        "question_pl": "Jakie są lokalizacje, w których obaj uczestnicy mają więcej niż 20 punktów i mniej niż 10 punktów?",
        "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10",
        "query_pl": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the positions of both players that have more than 20 20 points and less than 10 points?",
        "question_original_pl": "Na jakich pozycjach znajdują się obaj gracze, którzy mają więcej niż 20 20 punktów i mniej niż 10 punktów?",
        "question": "What are the locations of both players that have more than 20 20 points and less than 10 points?",
        "question_pl": "Jakie są lokalizacje obu graczy, którzy mają więcej niż 20 20 punktów i mniej niż 10 punktów?",
        "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10",
        "query_pl": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
    },
    {
        "db_id": "sports_competition",
        "question_original": "Show total points of all players.",
        "question_original_pl": "Pokaż łączną liczbę punktów wszystkich graczy.",
        "question": "Show total points of all participants.",
        "question_pl": "Pokaż łączną liczbę punktów wszystkich uczestników.",
        "query": "SELECT sum(Points) FROM player",
        "query_pl": "SELECT sum(Points) FROM player"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What is the total number of points for all players?",
        "question_original_pl": "Jaka jest łączna liczba punktów wszystkich graczy?",
        "question": "What is the total number of points for all participants?",
        "question_pl": "Jaka jest łączna liczba punktów wszystkich uczestników?",
        "query": "SELECT sum(Points) FROM player",
        "query_pl": "SELECT sum(Points) FROM player"
    },
    {
        "db_id": "sports_competition",
        "question_original": "how many different positions are there?",
        "question_original_pl": "Ile jest różnych pozycji?",
        "question": "how many different locations are there?",
        "question_pl": "Ile jest różnych lokalizacji?",
        "query": "SELECT count(DISTINCT POSITION) FROM player",
        "query_pl": "SELECT count(DISTINCT POSITION) FROM player"
    },
    {
        "db_id": "sports_competition",
        "question_original": "How many different position for players are listed?",
        "question_original_pl": "Ile różnych pozycji dla graczy jest wymienionych?",
        "question": "How many different location for players are listed?",
        "question_pl": "Ile różnych lokalizacji dla graczy znajduje się na liście?",
        "query": "SELECT count(DISTINCT POSITION) FROM player",
        "query_pl": "SELECT count(DISTINCT POSITION) FROM player"
    },
    {
        "db_id": "sports_competition",
        "question_original": "what are the name of players who get more than the average points.",
        "question_original_pl": "jak nazywają się gracze, którzy zdobywają więcej niż średnia punktów.",
        "question": "what are the name of participants who get more than the average points.",
        "question_pl": "jak nazywają się uczestnicy, którzy zdobyli więcej niż średnia punktów.",
        "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
        "query_pl": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the names of all players that got more than the average number of points?",
        "question_original_pl": "Jakie są nazwiska wszystkich graczy, którzy zdobyli więcej niż średnia liczba punktów?",
        "question": "What are the names of all participants that got more than the average number of points?",
        "question_pl": "Jak nazywają się wszyscy uczestnicy, którzy uzyskali więcej niż średnią liczbę punktów?",
        "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
        "query_pl": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
    },
    {
        "db_id": "sports_competition",
        "question_original": "find the number of players whose points are lower than 30 in each position.",
        "question_original_pl": "znajdź liczbę graczy, których liczba punktów jest niższa niż 30 na każdej pozycji.",
        "question": "find the number of participants whose points are lower than 30 in each location.",
        "question_pl": "znajdź liczbę uczestników, których punkty są niższe niż 30 w każdej lokalizacji.",
        "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION",
        "query_pl": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What is the number of players who have points less than 30 for each position?",
        "question_original_pl": "Jaka jest liczba graczy, którzy mają mniej niż 30 punktów na każdej pozycji?",
        "question": "What is the number of participants who have points less than 30 for each location?",
        "question_pl": "Jaka jest liczba uczestników, którzy mają mniej niż 30 punktów dla każdej lokalizacji?",
        "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION",
        "query_pl": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
    },
    {
        "db_id": "sports_competition",
        "question_original": "which country did participated in the most number of Tournament competitions?",
        "question_original_pl": "Który kraj brał udział w największej liczbie turniejów?",
        "question": "which nation did participated in the most number of Tournament competitions?",
        "question_pl": "Który naród brał udział w największej liczbie turniejów?",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  'Turniej' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sports_competition",
        "question_original": "what is the name of the country that participated in the most tournament competitions?",
        "question_original_pl": "Jak nazywa się kraj, który brał udział w największej liczbie turniejów?",
        "question": "what is the name of the nation that participated in the most tournament competitions?",
        "question_pl": "Jak nazywa się naród, który brał udział w największej liczbie turniejów?",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  'Turniej' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "sports_competition",
        "question_original": "which countries did participated in both Friendly and Tournament type competitions.",
        "question_original_pl": "które kraje brały udział zarówno w rozgrywkach towarzyskich, jak i turniejowych.",
        "question": "which nations did participated in both Friendly and Tournament type competitions.",
        "question_pl": "które narody brały udział zarówno w rozgrywkach towarzyskich, jak i turniejowych.",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  'Przyjazny' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Turniej'"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the countries that participated in both friendly and tournament type competitions?",
        "question_original_pl": "Jakie kraje brały udział zarówno w rozgrywkach towarzyskich, jak i turniejowych?",
        "question": "What are the nations that participated in both friendly and tournament type competitions?",
        "question_pl": "Jakie narody brały udział zarówno w rozgrywkach towarzyskich, jak i turniejowych?",
        "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'",
        "query_pl": "SELECT country FROM competition WHERE competition_type  =  'Przyjazny' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Turniej'"
    },
    {
        "db_id": "sports_competition",
        "question_original": "Find the countries that have never participated in any competition with Friendly type.",
        "question_original_pl": "Znajdź kraje, które nigdy nie brały udziału w zawodach typu Friendly.",
        "question": "Find the nations that have never participated in any match with Friendly type.",
        "question_pl": "Znajdź kraje, które nigdy nie brały udziału w żadnym meczu z typem Friendly.",
        "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
        "query_pl": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Przyjazny'"
    },
    {
        "db_id": "sports_competition",
        "question_original": "What are the countries that have never participated in any friendly-type competitions?",
        "question_original_pl": "Jakie są kraje, które nigdy nie brały udziału w zawodach towarzyskich?",
        "question": "What are the nations that have never participated in any friendly-type competitions?",
        "question_pl": "Jakie są narody, które nigdy nie brały udziału w żadnych zawodach towarzyskich?",
        "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
        "query_pl": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Przyjazny'"
    },
    {
        "db_id": "manufacturer",
        "question_original": "How many furniture components are there in total?",
        "question_original_pl": "Ile jest łącznie elementów mebli?",
        "question": "How many furnishing components are there in total?",
        "question_pl": "Ile jest łącznie elementów wyposażenia?",
        "query": "SELECT sum(num_of_component) FROM furniture",
        "query_pl": "SELECT sum(num_of_component) FROM furniture"
    },
    {
        "db_id": "manufacturer",
        "question_original": "Return the name and id of the furniture with the highest market rate.",
        "question_original_pl": "Zwróć nazwę i identyfikator mebla z najwyższą stawką rynkową.",
        "question": "Return the name and id of the furnishing with the highest market rate.",
        "question_pl": "Zwróć nazwę i identyfikator wyposażenia z najwyższą stawką rynkową.",
        "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
        "query_pl": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1"
    },
    {
        "db_id": "manufacturer",
        "question_original": "find the total market rate of the furnitures that have the top 2 market shares.",
        "question_original_pl": "Znajdź całkowitą stawkę rynkową mebli, które mają 2 największe udziały w rynku.",
        "question": "find the total market rate of the furnishings that have the top 2 market shares.",
        "question_pl": "znajdź całkowitą stawkę rynkową mebli, które mają 2 najwyższe udziały w rynku.",
        "query": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2",
        "query_pl": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2"
    },
    {
        "db_id": "manufacturer",
        "question_original": "Find the component amounts and names of all furnitures that have more than 10 components.",
        "question_original_pl": "Znajdź ilości komponentów i nazwy wszystkich mebli, które mają więcej niż 10 komponentów.",
        "question": "Find the component amounts and names of all furnishings that have more than 10 components.",
        "question_pl": "Znajdź ilości składników i nazwy wszystkich elementów wyposażenia, które mają więcej niż 10 składników.",
        "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10",
        "query_pl": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10"
    },
    {
        "db_id": "manufacturer",
        "question_original": "Find the name and component amount of the least popular furniture.",
        "question_original_pl": "Znajdź nazwę i ilość komponentów najmniej popularnego mebla.",
        "question": "Find the name and component amount of the least popular furnishing.",
        "question_pl": "Znajdź nazwę i ilość komponentów najmniej popularnego wyposażenia.",
        "query": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1",
        "query_pl": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1"
    },
    {
        "db_id": "manufacturer",
        "question_original": "Find the average number of factories for the manufacturers that have more than 20 shops.",
        "question_original_pl": "Znajdź średnią liczbę fabryk dla producentów, którzy mają więcej niż 20 sklepów.",
        "question": "Find the average number of manufactories for the manufacturers that have more than 20 shops.",
        "question_pl": "Znajdź średnią liczbę manufaktur dla producentów, którzy mają więcej niż 20 sklepów.",
        "query": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20",
        "query_pl": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20"
    },
    {
        "db_id": "manufacturer",
        "question_original": "Give me the names and prices of furnitures which some companies are manufacturing.",
        "question_original_pl": "Podaj mi nazwy i ceny mebli, które produkują niektóre firmy.",
        "question": "Give me the names and prices of furnishings which some companies are manufacturing.",
        "question_pl": "Podaj mi nazwy i ceny wyposażenia, które produkują niektóre firmy.",
        "query": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID",
        "query_pl": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the first name and department name of all employees?",
        "question_original_pl": "Jakie są imiona i nazwiska oraz nazwy działów wszystkich pracowników?",
        "question": "What are the forename and division name of all staffs?",
        "question_pl": "Jakie są imiona i nazwiska oraz nazwy oddziałów wszystkich pracowników?",
        "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id",
        "query_pl": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "List the full name (first and last name), and salary for those employees who earn below 6000.",
        "question_original_pl": "Podaj pełną nazwę (imię i nazwisko) oraz wynagrodzenie tych pracowników, którzy zarabiają poniżej 6000.",
        "question": "List the full name (first and last name), and wage for those employees who earn below 6000.",
        "question_pl": "Podaj pełną nazwę (imię i nazwisko) oraz wynagrodzenie dla tych pracowników, którzy zarabiają poniżej 6000.",
        "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names and salaries for any employees earning less than 6000?",
        "question_original_pl": "Jakie są pełne nazwiska i pensje pracowników zarabiających mniej niż 6000?",
        "question": "What are the full names and wages for any employees earning less than 6000?",
        "question_pl": "Jakie są pełne imiona i nazwiska oraz płace pracowników zarabiających mniej niż 6000?",
        "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
    },
    {
        "db_id": "hr_1",
        "question_original": "Display the first name, and department number for all employees whose last name is \"McEwen\".",
        "question_original_pl": "Wyświetl imię i numer działu dla wszystkich pracowników, których nazwisko brzmi \"McEwen\".",
        "question": "Display the forename, and division number for all employees whose last name is \"McEwen\".",
        "question_pl": "Wyświetl imię i numer oddziału dla wszystkich pracowników, których nazwisko brzmi \"McEwen\".",
        "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
        "query_pl": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the first names and department numbers for employees with last name McEwen?",
        "question_original_pl": "Jakie są imiona i numery działów pracowników o nazwisku McEwen?",
        "question": "What are the forename and division numbers for staffs with last name McEwen?",
        "question_pl": "Jakie są imiona i numery oddziałów pracowników o nazwisku McEwen?",
        "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
        "query_pl": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Return all the information for all employees without any department number.",
        "question_original_pl": "Zwróć wszystkie informacje dla wszystkich pracowników bez numeru działu.",
        "question": "Return all the information for all staffs without any division number.",
        "question_pl": "Zwróć wszystkie informacje dla wszystkich pracowników bez numeru oddziału.",
        "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
        "query_pl": "SELECT * FROM employees WHERE department_id  =  \"null\""
    },
    {
        "db_id": "hr_1",
        "question_original": "What are all the employees without a department number?",
        "question_original_pl": "Kim są wszyscy pracownicy bez numeru działu?",
        "question": "What are all the staffs without a division number?",
        "question_pl": "Czym są wszyscy pracownicy bez numeru oddziału?",
        "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
        "query_pl": "SELECT * FROM employees WHERE department_id  =  \"null\""
    },
    {
        "db_id": "hr_1",
        "question_original": "Display all the information about the department Marketing.",
        "question_original_pl": "Wyświetl wszystkie informacje o dziale Marketing.",
        "question": "Display all the information about the division Marketing.",
        "question_pl": "Wyświetl wszystkie informacje o dywizji Marketing.",
        "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
        "query_pl": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is all the information about the Marketing department?",
        "question_original_pl": "Jakie są wszystkie informacje o dziale marketingu?",
        "question": "What is all the information about the Marketing division?",
        "question_pl": "Jakie są wszystkie informacje na temat działu marketingu?",
        "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
        "query_pl": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
    },
    {
        "db_id": "hr_1",
        "question_original": "when is the hire date for those employees whose first name does not containing the letter M?",
        "question_original_pl": "Kiedy przypada data zatrudnienia pracowników, których imię nie zawiera litery M?",
        "question": "when is the day of hire for those staffs whose first name does not containing the letter M?",
        "question_pl": "Kiedy jest dzień zatrudnienia pracowników, których imię nie zawiera litery M?",
        "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "On what dates were employees without the letter M in their first names hired?",
        "question_original_pl": "W jakich dniach zatrudniano pracowników bez litery M w imieniu?",
        "question": "On what day were staffs without the letter M in their first names hired?",
        "question_pl": "W którym dniu zatrudniono pracowników bez litery M w imieniu?",
        "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.",
        "question_original_pl": "wyświetl pełne imię i nazwisko (imię i nazwisko), datę zatrudnienia, wynagrodzenie i numer działu dla tych pracowników, których imię nie zawiera litery M.",
        "question": "display the full name (first and last), day of hire, wage, and division number for those employees whose forename does not containing the letter M.",
        "question_pl": "wyświetl pełne imię i nazwisko (imię i nazwisko), dzień zatrudnienia, wynagrodzenie i numer działu dla tych pracowników, których imię nie zawiera litery M.",
        "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?",
        "question_original_pl": "Jakie są pełne imię i nazwisko, data zatrudnienia, wynagrodzenie i identyfikator działu dla pracowników bez litery M w imieniu?",
        "question": "What are the full name, day of hire, wage, and division id for employees without the letter M in their forename?",
        "question_pl": "Jakie są pełne imię i nazwisko, dzień zatrudnienia, wynagrodzenie i identyfikator działu dla pracowników bez litery M w imieniu?",
        "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.",
        "question_original_pl": "wyświetl pełne imię i nazwisko (imię i nazwisko), datę zatrudnienia, wynagrodzenie i numer działu dla tych pracowników, których imię i nazwisko nie zawiera litery M i uporządkuj wyniki rosnąco według numeru działu.",
        "question": "display the full name (first and last), day of hire, wage, and division number for those employees whose forename does not containing the letter M and make the result set in ascending order by division number.",
        "question_pl": "wyświetl pełne imię i nazwisko (imię i nazwisko), dzień zatrudnienia, wynagrodzenie i numer działu dla tych pracowników, których imię i nazwisko nie zawiera litery M i uporządkuj wyniki rosnąco według numeru działu.",
        "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?",
        "question_original_pl": "Jakie są pełne imię i nazwisko, dane dotyczące zatrudnienia, wynagrodzenie i identyfikator działu dla pracowników bez litery M w imieniu, uporządkowane według rosnącego identyfikatora działu?",
        "question": "What are the full name, day of hire, wage and division id for employees without the letter M in their forename, ordered by ascending division id?",
        "question_pl": "Jakie jest pełne imię i nazwisko, dzień zatrudnienia, wynagrodzenie i identyfikator działu dla pracowników bez litery M w imieniu, uporządkowane według rosnącego identyfikatora działu?",
        "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "Return the phone numbers of employees with salaries between 8000 and 12000.",
        "question_original_pl": "Zwróć numery telefonów pracowników z pensjami od 8000 do 12000.",
        "question": "Return the telephone numbers of staffs with salaries between 8000 and 12000.",
        "question_pl": "Zwróć numery telefonów pracowników z pensjami między 8000 a 12000.",
        "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000",
        "query_pl": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
    },
    {
        "db_id": "hr_1",
        "question_original": "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.",
        "question_original_pl": "Zwróć wszystkie informacje o pracownikach z wynagrodzeniem między 8000 a 12000, dla których prowizja nie jest równa null lub ich identyfikator działu nie jest równy 40.",
        "question": "Return all information about staffs with salaries between 8000 and 12000 for which commission is not null or where their division id is not 40.",
        "question_pl": "Zwróć wszystkie informacje o pracownikach z wynagrodzeniem od 8000 do 12000, dla których prowizja nie jest równa null lub ich identyfikator działu nie jest równy 40.",
        "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40",
        "query_pl": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40"
    },
    {
        "db_id": "hr_1",
        "question_original": "Return the full names and salaries of employees with null commissions.",
        "question_original_pl": "Zwróć pełne imiona i nazwiska oraz pensje pracowników z prowizjami zerowymi.",
        "question": "Return the full names and wages of employees with null commissions.",
        "question_pl": "Zwróć pełne imiona i nazwiska oraz płace pracowników z prowizjami zerowymi.",
        "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\""
    },
    {
        "db_id": "hr_1",
        "question_original": "Display the first and last name, and salary for those employees whose first name is ending with the letter m.",
        "question_original_pl": "Wyświetlaj imię i nazwisko oraz wynagrodzenie pracowników, których imię i nazwisko kończą się na literę m.",
        "question": "Display the forename and surname, and wage for those employees whose forename is ending with the letter m.",
        "question_pl": "Wyświetl imię i nazwisko oraz wynagrodzenie dla pracowników, których imię kończy się na literę m.",
        "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Return the full names and salaries for employees with first names that end with the letter m.",
        "question_original_pl": "Zwróć pełne imiona i nazwiska oraz wynagrodzenia pracowników, których imiona kończą się na literę m.",
        "question": "Return the full names and wages for employees with forename that end with the letter m.",
        "question_pl": "Zwróć pełne imiona i nazwiska oraz płace pracowników, których imiona kończą się na literę m.",
        "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.",
        "question_original_pl": "Znajdź identyfikator stanowiska i datę zatrudnienia dla pracowników, którzy zostali zatrudnieni w okresie od 5 listopada 2007 r. do 5 lipca 2009 r.",
        "question": "Find job id and day of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.",
        "question_pl": "Znajdź identyfikator stanowiska i dzień zatrudnienia dla pracowników, którzy zostali zatrudnieni między 5 listopada 2007 r. a 5 lipca 2009 r.",
        "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",
        "query_pl": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?",
        "question_original_pl": "Jakie są identyfikatory stanowisk i daty zatrudnienia pracowników zatrudnionych po 5 listopada 2007 r. i przed 5 lipca 2009 r.?",
        "question": "What are the job ids and day of hire for employees hired after November 5th, 2007 and before July 5th, 2009?",
        "question_pl": "Jakie są identyfikatory stanowisk i dzień zatrudnienia pracowników zatrudnionych po 5 listopada 2007 r. i przed 5 lipca 2009 r.?",
        "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'",
        "query_pl": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the salary and manager number for those employees who is working under a manager.",
        "question_original_pl": "Znajdź wynagrodzenie i numer kierownika dla tych pracowników, którzy pracują pod kierownikiem.",
        "question": "Find the wage and head number for those employees who is working under a manager.",
        "question_pl": "Znajdź wynagrodzenie i liczbę etatów dla tych pracowników, którzy pracują pod kierownikiem.",
        "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"",
        "query_pl": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the salaries and manager ids for employees who have managers?",
        "question_original_pl": "Jakie są wynagrodzenia i identyfikatory menedżerów dla pracowników, którzy mają menedżerów?",
        "question": "What are the wages and head ids for employees who have heads?",
        "question_pl": "Jakie są płace i identyfikatory pracowników, którzy mają szefów?",
        "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"",
        "query_pl": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""
    },
    {
        "db_id": "hr_1",
        "question_original": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
        "question_original_pl": "wyświetl wszystkie szczegóły z tabeli Pracownicy dla tych pracowników, którzy zostali zatrudnieni przed 2002-06-21.",
        "question": "display all the details from staffs table for those staffs who was hired before 2002-06-21.",
        "question_pl": "wyświetl wszystkie szczegóły z tabeli pracowników dla tych pracowników, którzy zostali zatrudnieni przed 2002-06-21.",
        "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'",
        "query_pl": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
    },
    {
        "db_id": "hr_1",
        "question_original": "display those employees who joined after 7th September, 1987.",
        "question_original_pl": "Wyświetlaj tych pracowników, którzy dołączyli po 7 września 1987 roku.",
        "question": "display those staffs who joined after 7th September, 1987.",
        "question_pl": "wyświetl tych pracowników, którzy dołączyli po 7 września 1987 r.",
        "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
        "query_pl": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Which employees were hired after September 7th, 1987?",
        "question_original_pl": "Którzy pracownicy zostali zatrudnieni po 7 września 1987 r.?",
        "question": "Which staffs were hired after September 7th, 1987?",
        "question_pl": "Którzy pracownicy zostali zatrudnieni po 7 września 1987 roku?",
        "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
        "query_pl": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the job title of jobs which minimum salary is greater than 9000.",
        "question_original_pl": "wyświetl nazwy stanowisk, których minimalne wynagrodzenie jest wyższe niż 9000.",
        "question": "display the occupation name of occupations which minimum salary is greater than 9000.",
        "question_pl": "wyświetla nazwy zawodów, których minimalne wynagrodzenie jest większe niż 9000.",
        "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
        "query_pl": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
    },
    {
        "db_id": "hr_1",
        "question_original": "Which job titles correspond to jobs with salaries over 9000?",
        "question_original_pl": "Które tytuły zawodowe odpowiadają stanowiskom z wynagrodzeniem powyżej 9000?",
        "question": "Which occupation name correspond to occupations with salaries over 9000?",
        "question_pl": "Które nazwy zawodów odpowiadają zawodom z wynagrodzeniem powyżej 9000?",
        "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
        "query_pl": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
    },
    {
        "db_id": "hr_1",
        "question_original": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.",
        "question_original_pl": "wyświetl tytuł stanowiska, różnicę między minimalnym i maksymalnym wynagrodzeniem dla tych stanowisk, których maksymalne wynagrodzenie mieści się w przedziale od 12000 do 18000.",
        "question": "display occupation name, the difference between minimum and maximum wage for those occupations which max wage within the range 12000 to 18000.",
        "question_pl": "wyświetl nazwę zawodu, różnicę między minimalnym a maksymalnym wynagrodzeniem dla tych zawodów, których maksymalne wynagrodzenie mieści się w przedziale od 12000 do 18000.",
        "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
        "query_pl": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?",
        "question_original_pl": "Jakie są nazwy stanowisk i zakres wynagrodzeń dla stanowisk z maksymalnym wynagrodzeniem między 12000 a 18000?",
        "question": "What are the occupation name, and range of wage for occupations with maximum wage between 12000 and 18000?",
        "question_pl": "Jaka jest nazwa zawodu i zakres wynagrodzenia dla zawodów z maksymalnym wynagrodzeniem między 12000 a 18000?",
        "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
        "query_pl": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.",
        "question_original_pl": "Wyświetl e-maile pracowników, którzy nie mają procentowej prowizji i wynagrodzenia w przedziale od 7000 do 12000 i pracują w tym dziale, którego liczba wynosi 50.",
        "question": "display the emails of the staffs who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.",
        "question_pl": "Wyświetl e-maile pracowników, którzy nie mają procentu prowizji i wynagrodzenia w przedziale od 7000 do 12000 i pracują w tym dziale, którego liczba wynosi 50.",
        "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
        "query_pl": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee ID for each employee and the date on which he ended his previous job.",
        "question_original_pl": "wyświetl identyfikator pracownika dla każdego pracownika i datę zakończenia przez niego poprzedniej pracy.",
        "question": "display the staffs ID for each staff and the date on which he ended his previous job.",
        "question_pl": "wyświetl identyfikator każdego pracownika i datę zakończenia przez niego poprzedniej pracy.",
        "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id",
        "query_pl": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the employee ids for each employee and final dates of employment at their last job?",
        "question_original_pl": "Jakie są identyfikatory pracowników dla każdego pracownika i ostateczne daty zatrudnienia w ostatnim miejscu pracy?",
        "question": "What are the staff ids for each staff and final dates of employment at their last job?",
        "question_pl": "Jakie są identyfikatory pracowników dla każdego z nich i ostateczne daty zatrudnienia w ostatnim miejscu pracy?",
        "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id",
        "query_pl": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the department ids for which more than 10 employees had a commission?",
        "question_original_pl": "Jakie są identyfikatory działów, w których ponad 10 pracowników otrzymało prowizję?",
        "question": "What are the division ids for which more than 10 staffs had a commission?",
        "question_pl": "Jakie są identyfikatory oddziałów, w których więcej niż 10 pracowników otrzymało prowizję?",
        "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10",
        "query_pl": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the ids of the departments where any manager is managing 4 or more employees.",
        "question_original_pl": "Znajdź identyfikatory działów, w których menedżer zarządza co najmniej 4 pracownikami.",
        "question": "Find the ids of the divisions where any manager is managing 4 or more staffs.",
        "question_pl": "Znajdź identyfikatory działów, w których dowolny menedżer zarządza 4 lub więcej pracownikami.",
        "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4",
        "query_pl": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are department ids for departments with managers managing more than 3 employees?",
        "question_original_pl": "Jakie są identyfikatory działów, w których kierownicy zarządzają więcej niż 3 pracownikami?",
        "question": "What are division ids for divisions with managers managing more than 3 staffs?",
        "question_pl": "Jakie są identyfikatory oddziałów dla oddziałów z menedżerami zarządzającymi więcej niż 3 pracownikami?",
        "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4",
        "query_pl": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
    },
    {
        "db_id": "hr_1",
        "question_original": "display job ID for those jobs that were done by two or more for more than 300 days.",
        "question_original_pl": "wyświetl identyfikator zadania dla tych zadań, które były wykonywane przez dwie lub więcej osób przez ponad 300 dni.",
        "question": "display occupation ID for those occupations that were done by two or more for more than 300 days.",
        "question_pl": "wyświetl identyfikator zawodu dla tych zawodów, które były wykonywane przez dwie lub więcej osób przez ponad 300 dni.",
        "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2",
        "query_pl": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the job ids for jobs done more than once for a period of more than 300 days?",
        "question_original_pl": "Jakie są identyfikatory zadań wykonywanych więcej niż jeden raz przez okres dłuższy niż 300 dni?",
        "question": "What are the occupation ids for occupations done more than once for a period of more than 300 days?",
        "question_pl": "Jakie są identyfikatory zawodów dla zawodów wykonywanych więcej niż jeden raz przez okres dłuższy niż 300 dni?",
        "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2",
        "query_pl": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the employee ids for employees who have held two or more jobs?",
        "question_original_pl": "Jakie są identyfikatory pracowników, którzy zajmowali co najmniej dwa stanowiska?",
        "question": "What are the staff ids for staffs who have held two or more jobs?",
        "question_pl": "Jakie są identyfikatory pracowników, którzy zajmowali dwa lub więcej stanowisk?",
        "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
        "query_pl": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
    },
    {
        "db_id": "hr_1",
        "question_original": "display job title and average salary of employees.",
        "question_original_pl": "Wyświetl nazwę stanowiska i średnie wynagrodzenie pracowników.",
        "question": "display occupation name and average wage of staffs.",
        "question_pl": "wyświetl nazwę zawodu i średnie wynagrodzenie pracowników.",
        "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title",
        "query_pl": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is the average salary for each job title?",
        "question_original_pl": "Jakie jest średnie wynagrodzenie na każdym stanowisku?",
        "question": "What is the average wage for each occupation name?",
        "question_pl": "Jaka jest średnia płaca dla każdej nazwy zawodu?",
        "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title",
        "query_pl": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?",
        "question_original_pl": "Jaka jest pełna nazwa (imię i nazwisko) tych pracowników, którzy otrzymują wyższe wynagrodzenie niż pracownik o identyfikatorze 163?",
        "question": "What is the full name ( first name and last name ) for those staffs who gets more salary than the staff whose id is 163?",
        "question_pl": "Jaka jest pełna nazwa (imię i nazwisko) tych pracowników, którzy otrzymują wyższe wynagrodzenie niż pracownicy o identyfikatorze 163?",
        "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
    },
    {
        "db_id": "hr_1",
        "question_original": "Provide the full names of employees earning more than the employee with id 163.",
        "question_original_pl": "Podaj pełne imiona i nazwiska pracowników zarabiających więcej niż pracownik o identyfikatorze 163.",
        "question": "Provide the full names of staffs earning more than the staff with id 163.",
        "question_pl": "Podaj pełne imiona i nazwiska pracowników zarabiających więcej niż pracownicy o identyfikatorze 163.",
        "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )",
        "query_pl": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
    },
    {
        "db_id": "hr_1",
        "question_original": "return the smallest salary for every departments.",
        "question_original_pl": "zwróć najmniejsze wynagrodzenie dla każdego działu.",
        "question": "return the smallest wage for every divisions.",
        "question_pl": "zwróć najmniejsze wynagrodzenie dla każdej dywizji.",
        "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id",
        "query_pl": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is the minimum salary in each department?",
        "question_original_pl": "Jakie jest minimalne wynagrodzenie w każdym dziale?",
        "question": "What is the minimum wage in each division?",
        "question_pl": "Jaka jest płaca minimalna w każdej dywizji?",
        "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id",
        "query_pl": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.",
        "question_original_pl": "Znajdź imię i nazwisko oraz identyfikator działu dla tych pracowników, którzy zarabiają taką kwotę wynagrodzenia, która jest najmniejszą pensją spośród wszystkich działów.",
        "question": "Find the forename and surname and division id for those employees who earn such amount of salary which is the smallest salary of any of the divisions.",
        "question_pl": "Znajdź imię, nazwisko i identyfikator działu dla tych pracowników, którzy zarabiają taką kwotę wynagrodzenia, która jest najmniejszą pensją w którymkolwiek z działów.",
        "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
        "query_pl": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names and department ids for the lowest paid employees across all departments.",
        "question_original_pl": "Podaj imiona i nazwiska oraz identyfikatory działów najniżej opłacanych pracowników we wszystkich działach.",
        "question": "What are the full names and division ids for the lowest paid employees across all divisions.",
        "question_pl": "Jakie są pełne nazwy i identyfikatory działów dla najniżej opłacanych pracowników we wszystkich działach.",
        "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
        "query_pl": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the employee id for all employees who earn more than the average salary.",
        "question_original_pl": "Znajdź identyfikator pracownika dla wszystkich pracowników, którzy zarabiają więcej niż średnia pensja.",
        "question": "Find the staff id for all staffs who earn more than the average salary.",
        "question_pl": "Znajdź identyfikatory wszystkich pracowników, którzy zarabiają więcej niż średnia pensja.",
        "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)",
        "query_pl": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the employee ids of employees who report to Payam, and what are their salaries?",
        "question_original_pl": "Jakie są identyfikatory pracowników, którzy raportują do Payam i jakie są ich wynagrodzenia?",
        "question": "What are the staff ids of staffs who report to Payam, and what are their wages?",
        "question_pl": "Jakie są identyfikatory pracowników, którzy zgłaszają się do Payam i jakie są ich zarobki?",
        "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )",
        "query_pl": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the names of departments that have at least one employee.",
        "question_original_pl": "Podaj nazwy działów, w których zatrudniony jest co najmniej jeden pracownik.",
        "question": "What are the names of divisions that have at least one employee.",
        "question_pl": "Jak nazywają się działy, w których zatrudniony jest co najmniej jeden pracownik.",
        "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id",
        "query_pl": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "get the details of employees who manage a department.",
        "question_original_pl": "uzyskaj szczegółowe informacje o pracownikach zarządzających działem.",
        "question": "get the information of staffs who manage a division.",
        "question_pl": "Uzyskaj informacje o pracownikach zarządzających działem.",
        "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id",
        "query_pl": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the unique ids of those departments where any manager is managing 4 or more employees.",
        "question_original_pl": "Jakie są unikalne identyfikatory działów, w których każdy kierownik zarządza 4 lub więcej pracownikami.",
        "question": "What are the unique ids of those divisions where any head is managing 4 or more staffs.",
        "question_pl": "Jakie są unikalne identyfikatory tych działów, w których każdy szef zarządza 4 lub więcej pracownikami.",
        "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4",
        "query_pl": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
    },
    {
        "db_id": "hr_1",
        "question_original": "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?",
        "question_original_pl": "Podaj odrębne identyfikatory działów, w których kierownik jest odpowiedzialny za 4 lub więcej pracowników?",
        "question": "Give the different division ids of divisions in which a head is in charge of 4 or more staffs?",
        "question_pl": "Podaj różne identyfikatory działów, w których kierownik jest odpowiedzialny za 4 lub więcej pracowników?",
        "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4",
        "query_pl": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the job ID for those jobs which average salary is above 8000.",
        "question_original_pl": "Znajdź identyfikator stanowisk, których średnie wynagrodzenie przekracza 8000.",
        "question": "Find the occupation ID for those occupations which average wage is above 8000.",
        "question_pl": "Znajdź identyfikator zawodu dla tych zawodów, w których średnie wynagrodzenie przekracza 8000.",
        "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000",
        "query_pl": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the job ids corresponding to jobs with average salary above 8000?",
        "question_original_pl": "Jakie są identyfikatory ofert pracy ze średnim wynagrodzeniem powyżej 8000?",
        "question": "What are the occupation ids corresponding to occupations with average wage above 8000?",
        "question_pl": "Jakie są identyfikatory zawodów odpowiadające zawodom ze średnim wynagrodzeniem powyżej 8000?",
        "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000",
        "query_pl": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee ID and job name for all those jobs in department 80.",
        "question_original_pl": "wyświetl identyfikator pracownika i nazwę zadania dla wszystkich zadań w dziale 80.",
        "question": "display the staff ID and occupation name for all those occupations in department 80.",
        "question_pl": "wyświetl identyfikator pracownika i nazwę zawodu dla wszystkich zawodów w dziale 80.",
        "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80",
        "query_pl": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
    },
    {
        "db_id": "hr_1",
        "question_original": "what are the employee ids and job titles for employees in department 80?",
        "question_original_pl": "Jakie są identyfikatory i nazwy stanowisk pracowników w dziale 80?",
        "question": "what are the staff ids and occupation name for staff in department 80?",
        "question_pl": "Jakie są identyfikatory pracowników i nazwy zawodów dla pracowników działu 80?",
        "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80",
        "query_pl": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is the first name and job id for all employees in the Finance department?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz identyfikator stanowiska wszystkich pracowników działu finansowego?",
        "question": "What is the forename and occupation id for all staffs in the Finance department?",
        "question_pl": "Jakie jest imię i nazwisko oraz identyfikator zawodu wszystkich pracowników działu finansowego?",
        "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'",
        "query_pl": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finanse'"
    },
    {
        "db_id": "hr_1",
        "question_original": "Give the first name and job id for all employees in the Finance department.",
        "question_original_pl": "Podaj imię i nazwisko oraz identyfikator stanowiska wszystkich pracowników działu finansowego.",
        "question": "Give the forename and occupation id for all staffs in the Finance department.",
        "question_pl": "Podaj imiona i nazwiska oraz identyfikatory zawodowe wszystkich pracowników działu finansowego.",
        "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'",
        "query_pl": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finanse'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is all the information regarding employees with salaries above the minimum and under 2500?",
        "question_original_pl": "Jakie są wszystkie informacje dotyczące pracowników z wynagrodzeniem powyżej minimalnego i poniżej 2500?",
        "question": "What is all the information regarding staffs with wages above the minimum and under 2500?",
        "question_pl": "Jakie są wszystkie informacje dotyczące pracowników z wynagrodzeniem powyżej minimum i poniżej 2500?",
        "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500",
        "query_pl": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"
    },
    {
        "db_id": "hr_1",
        "question_original": "Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.",
        "question_original_pl": "Znajdź identyfikatory pracowników, którzy nie pracują w tych działach, w których pracują pracownicy, których identyfikator kierownika mieści się w zakresie 100 i 200.",
        "question": "Find the ids of the staffs who does not work in those departments where some staffs works whose manager id within the range 100 and 200.",
        "question_pl": "Znajdź identyfikatory pracowników, którzy nie pracują w działach, w których pracują pracownicy o identyfikatorach kierowników z przedziału 100 i 200.",
        "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
        "query_pl": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.",
        "question_original_pl": "wyświetl nazwę pracownika (imię i nazwisko) oraz datę zatrudnienia dla wszystkich pracowników z tego samego działu co Clara.",
        "question": "display the staff name ( forename and surname ) and day of hire for all staffs in the same department as Clara.",
        "question_pl": "wyświetl nazwę pracownika (imię i nazwisko) oraz dzień zatrudnienia dla wszystkich pracowników w tym samym dziale co Clara.",
        "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Klara\")"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names and hire dates for employees in the same department as someone with the first name Clara?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska oraz daty zatrudnienia pracowników z tego samego działu co osoba o imieniu Clara?",
        "question": "What are the full names and day of hire  for employees in the same department as someone with the forename Clara?",
        "question_pl": "Jakie są pełne imiona i nazwiska oraz dzień zatrudnienia pracowników z tego samego działu co osoba o imieniu Clara?",
        "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Klara\")"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.",
        "question_original_pl": "wyświetl nazwę pracownika (imię i nazwisko) oraz datę zatrudnienia dla wszystkich pracowników z tego samego działu co Clara, z wyłączeniem Clary.",
        "question": "display the employee name ( forename and surname ) and day of hire for all employees in the same department as Clara excluding Clara.",
        "question_pl": "wyświetl nazwę pracownika (imię i nazwisko) oraz dzień zatrudnienia dla wszystkich pracowników w tym samym dziale co Clara, z wyłączeniem Clary.",
        "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Klara\") AND first_name != \"Klara\""
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska oraz daty zatrudnienia pracowników z tego samego działu co osoba o imieniu Clara, z wyłączeniem Clary?",
        "question": "What are the full names and day of hire for employees in the same department as someone with the forename Clara, not including Clara?",
        "question_pl": "Jakie są pełne imiona i nazwiska oraz dzień zatrudnienia pracowników z tego samego działu co osoba o imieniu Clara, z wyłączeniem Clary?",
        "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"",
        "query_pl": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Klara\") AND first_name != \"Klara\""
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.",
        "question_original_pl": "wyświetl numer i nazwisko pracownika (imię i nazwisko) dla wszystkich pracowników, którzy pracują w dziale z dowolnym pracownikiem, którego nazwisko zawiera literę \"T\".",
        "question": "display the staff number and name( forename and surname ) for all staffs who work in a department with any staff whose name contains a ’T’.",
        "question_pl": "wyświetl numer pracownika i nazwę (imię i nazwisko) dla wszystkich pracowników, którzy pracują w dziale z każdym pracownikiem, którego nazwa zawiera literę \"T\".",
        "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?",
        "question_original_pl": "Jakie są identyfikatory i pełne imiona i nazwiska pracowników, którzy pracują w dziale, w którym ktoś ma imię zawierające literę T?",
        "question": "What are the ids and full names for staffs who work in a department that has someone with a forename that contains the letter T?",
        "question_pl": "Jakie są identyfikatory i imiona pracowników, którzy pracują w dziale, w którym ktoś ma imię zawierające literę T?",
        "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.",
        "question_original_pl": "wyświetl numer pracownika, nazwę (imię i nazwisko) oraz wynagrodzenie dla wszystkich pracowników, którzy zarabiają więcej niż średnia pensja i którzy pracują w dziale z dowolnym pracownikiem z literą \"J\" w imieniu.",
        "question": "display the staff number, name( forename and family name ), and wage for all staffs who earn more than the average wage and who work in a department with any employee with a 'J' in their first name.",
        "question_pl": "wyświetl numer pracownika, nazwisko (imię i nazwisko rodowe) oraz wynagrodzenie dla wszystkich pracowników, którzy zarabiają więcej niż średnia płaca i którzy pracują w dziale z dowolnym pracownikiem z literą \"J\" w imieniu.",
        "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?",
        "question_original_pl": "Jakie są identyfikatory, imiona i nazwiska oraz pensje pracowników zarabiających więcej niż średnia i pracujących w dziale z pracownikami, którzy mają literę J w imieniu?",
        "question": "What are the ids, full names, and wage for staffs making more than average and who work in a department with staffs who have the letter J in their forename?",
        "question_pl": "Jakie są identyfikatory, imiona i nazwiska oraz płace pracowników zarabiających powyżej średniej i pracujących w dziale z pracownikami, którzy mają literę J w imieniu?",
        "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?",
        "question_original_pl": "Jakie są identyfikatory pracowników i stanowisk dla pracowników, którzy zarabiają mniej niż najmniej zarabiający pracownik z tytułem MK_MAN?",
        "question": "What are the staff ids and occupation ids for staffs who make less than the lowest earning staff with title MK_MAN?",
        "question_pl": "Jakie są identyfikatory pracowników i identyfikatory zawodów pracowników, którzy zarabiają mniej niż najmniej zarabiający pracownik z tytułem MK_MAN?",
        "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
        "query_pl": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.",
        "question_original_pl": "wyświetl numer pracownika, imię (imię i nazwisko) oraz stanowisko dla wszystkich pracowników, których wynagrodzenie jest wyższe niż wynagrodzenie pracowników, których stanowisko to PU_MAN.",
        "question": "display the staff number, name( forename and surname ) and occupation name for all staffs whose salary is more than any salary of those staffs whose occupation name is PU_MAN.",
        "question_pl": "wyświetl numer pracownika, imię (imię i nazwisko) oraz nazwę zawodu dla wszystkich pracowników, których wynagrodzenie jest wyższe niż wynagrodzenie pracowników, których nazwa zawodu to PU_MAN.",
        "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?",
        "question_original_pl": "Jakie są identyfikatory pracowników, imiona i nazwiska oraz identyfikatory stanowisk pracowników, którzy zarabiają więcej niż najlepiej zarabiający pracownik z tytułem PU_MAN?",
        "question": "What are the staff ids, full names, and occupation ids for staffs who make more than the highest earning staff with title PU_MAN?",
        "question_pl": "Jakie są identyfikatory pracowników, imiona i nazwiska oraz identyfikatory zawodów pracowników, którzy zarabiają więcej niż najlepiej zarabiający pracownik z tytułem PU_MAN?",
        "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )",
        "query_pl": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are total salaries and department id for each department that has more than 2 employees?",
        "question_original_pl": "Jakie są łączne wynagrodzenia i identyfikatory działów dla każdego działu zatrudniającego więcej niż 2 pracowników?",
        "question": "What are total wages and division id for each division that has more than 2 employees?",
        "question_pl": "Jakie są łączne wynagrodzenia i identyfikatory oddziałów dla każdego oddziału zatrudniającego więcej niż 2 pracowników?",
        "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2",
        "query_pl": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "hr_1",
        "question_original": "What is all the information about employees who have never had a job in the past?",
        "question_original_pl": "Jakie są wszystkie informacje o pracownikach, którzy nigdy wcześniej nie mieli pracy?",
        "question": "What is all the information about staffs who have never had a job in the past?",
        "question_pl": "Jakie są informacje o pracownikach, którzy nigdy wcześniej nie mieli pracy?",
        "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
        "query_pl": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the first and last name, department, city, and state province for each employee.",
        "question_original_pl": "wyświetl imię i nazwisko, dział, miasto i województwo dla każdego pracownika.",
        "question": "display the full name, division, city, and state province for each employee.",
        "question_pl": "wyświetl pełne imię i nazwisko, dział, miasto i województwo dla każdego pracownika.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names, departments, cities, and state provinces for each employee?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska, wydziały, miasta i prowincje każdego pracownika?",
        "question": "What are the full names, divisions, cities, and state provinces for each employee?",
        "question_pl": "Jakie są pełne imiona i nazwiska, oddziały, miasta i prowincje każdego pracownika?",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "display those employees who contain a letter z to their first name and also display their last name, city.",
        "question_original_pl": "wyświetl tych pracowników, których imię zawiera literę z, a także ich nazwisko i miasto.",
        "question": "display those staffs who contain a letter z to their forename and also display their family name, city.",
        "question_pl": "wyświetlaj tych pracowników, których imiona zawierają literę z, a także wyświetlaj ich nazwisko i miasto.",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the full names and cities of employees who have the letter Z in their first names?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska oraz miasta pracowników, którzy mają literę Z w swoich imionach?",
        "question": "What are the full names and cities of employees who have the letter Z in their forename?",
        "question_pl": "Jakie są pełne nazwiska i miasta pracowników, którzy mają literę Z w swoim imieniu?",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'",
        "query_pl": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
    },
    {
        "db_id": "hr_1",
        "question_original": "display the department name, city, and state province for each department.",
        "question_original_pl": "wyświetl nazwę działu, miasto i województwo dla każdego działu.",
        "question": "display the division name, town, and state province for each division.",
        "question_pl": "wyświetl nazwę dywizji, miasto i prowincję dla każdej dywizji.",
        "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id",
        "query_pl": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are the department names, cities, and state provinces for each department?",
        "question_original_pl": "Jakie są nazwy departamentów, miast i prowincji dla każdego departamentu?",
        "question": "What are the division names, towns, and state provinces for each division?",
        "question_pl": "Jakie są nazwy dywizji, miast i prowincji dla każdej dywizji?",
        "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id",
        "query_pl": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What the full names, ids of each employee and the name of the country they are in?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska, identyfikatory każdego pracownika i nazwa kraju, w którym przebywa?",
        "question": "What the full names, ids of each staff and the name of the country they are in?",
        "question_pl": "Jakie są pełne imiona i nazwiska, identyfikatory każdego pracownika i nazwa kraju, w którym się znajdują?",
        "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id",
        "query_pl": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
    },
    {
        "db_id": "hr_1",
        "question_original": "What are full names and salaries of employees working in the city of London?",
        "question_original_pl": "Jakie są pełne imiona i nazwiska oraz pensje pracowników zatrudnionych w mieście Londyn?",
        "question": "What are full names and wages of employees working in the city of London?",
        "question_pl": "Jakie są pełne imiona i nazwiska oraz płace pracowników zatrudnionych w mieście Londyn?",
        "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'",
        "query_pl": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'Londyn'"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the name of the song that was released in the most recent year?",
        "question_original_pl": "Jak nazywa się piosenka, która została wydana w ostatnim roku?",
        "question": "What is the title of the music that was released in the most recent year?",
        "question_pl": "Jaki tytuł nosi utwór muzyczny, który został wydany w ostatnim roku?",
        "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
        "query_pl": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the name of the song that was released most recently?",
        "question_original_pl": "Jak nazywa się utwór, który został ostatnio wydany?",
        "question": "What is the title of the music that was released most recently?",
        "question_pl": "Jaki jest tytuł muzyki, która została ostatnio wydana?",
        "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
        "query_pl": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the names of all English songs.",
        "question_original_pl": "Znajdź nazwy wszystkich angielskich piosenek.",
        "question": "Find the titles of all English musics.",
        "question_pl": "Znajdź tytuły wszystkich angielskich utworów muzycznych.",
        "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
        "query_pl": "SELECT song_name FROM song WHERE languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all songs in English?",
        "question_original_pl": "Jak nazywają się wszystkie piosenki w języku angielskim?",
        "question": "What are the titles of all musics in English?",
        "question_pl": "Jakie są tytuły wszystkich utworów muzycznych w języku angielskim?",
        "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
        "query_pl": "SELECT song_name FROM song WHERE languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the id of all the files in mp3 format?",
        "question_original_pl": "Jakie są identyfikatory wszystkich plików w formacie mp3?",
        "question": "What are the id of all the document in mp3 format?",
        "question_pl": "Jakie są identyfikatory wszystkich dokumentów w formacie mp3?",
        "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"",
        "query_pl": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
    },
    {
        "db_id": "music_1",
        "question_original": "List the name and country of origin for all singers who have produced songs with rating above 9.",
        "question_original_pl": "Wymień nazwisko i kraj pochodzenia wszystkich piosenkarzy, którzy wyprodukowali utwory z oceną powyżej 9.",
        "question": "List the name and nationality of origin for all singers who have produced songs with rating above 9.",
        "question_pl": "Wymień nazwisko i narodowość pochodzenia wszystkich piosenkarzy, którzy wyprodukowali utwory z oceną powyżej 9.",
        "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9",
        "query_pl": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"
    },
    {
        "db_id": "music_1",
        "question_original": "List the file size and format for all songs that have resolution lower than 800.",
        "question_original_pl": "Wyświetl rozmiar i format pliku dla wszystkich utworów, których rozdzielczość jest niższa niż 800.",
        "question": "List the document size and format for all songs that have resolution lower than 800.",
        "question_pl": "Wymień rozmiar i format dokumentu dla wszystkich utworów, których rozdzielczość jest niższa niż 800.",
        "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800",
        "query_pl": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the file sizes and formats for all songs with a resolution lower than 800?",
        "question_original_pl": "Jakie są rozmiary i formaty plików dla wszystkich utworów w rozdzielczości niższej niż 800?",
        "question": "What are the document sizes and formats for all songs with a resolution lower than 800?",
        "question_pl": "Jakie są rozmiary i formaty dokumentów dla wszystkich utworów o rozdzielczości niższej niż 800?",
        "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800",
        "query_pl": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the average rating of songs produced by female artists?",
        "question_original_pl": "Jaka jest średnia ocena utworów wyprodukowanych przez artystki?",
        "question": "What is the average score of songs produced by female artists?",
        "question_pl": "Jaki jest średni wynik piosenek wyprodukowanych przez artystki?",
        "query": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\"",
        "query_pl": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Kobieta\""
    },
    {
        "db_id": "music_1",
        "question_original": "What is the most popular file format?",
        "question_original_pl": "Jaki jest najpopularniejszy format plików?",
        "question": "What is the most popular document format?",
        "question_pl": "Jaki jest najpopularniejszy format dokumentów?",
        "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1",
        "query_pl": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the file format that is used by the most files.",
        "question_original_pl": "Znajdź format pliku, który jest używany przez większość plików.",
        "question": "Find the document format that is used by the most document.",
        "question_pl": "Znajdź format dokumentu, który jest używany przez większość dokumentów.",
        "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1",
        "query_pl": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?",
        "question_original_pl": "Jaki jest identyfikator plików, które są dostępne w formacie mp4 i rozdzielczości mniejszej niż 1000?",
        "question": "What is the id of the document that are available in the format of mp4 and a resolution smaller than 1000?",
        "question_pl": "Jaki jest identyfikator dokumentu, który jest dostępny w formacie mp4 i rozdzielczości mniejszej niż 1000?",
        "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000",
        "query_pl": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the country of origin of the artist who is female and produced a song in Bangla?",
        "question_original_pl": "Z jakiego kraju pochodzi artystka, która jest kobietą i wyprodukowała piosenkę w języku Bangla?",
        "question": "What is the nationality of origin of the artist who is female and produced a song in Bangla?",
        "question_pl": "Jakiej narodowości jest artystka, która jest kobietą i wyprodukowała piosenkę w języku Bangla?",
        "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"",
        "query_pl": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Kobieta\" AND T2.languages  =  \"bangla\""
    },
    {
        "db_id": "music_1",
        "question_original": "What countries are the female artists who sung in the language Bangla from?",
        "question_original_pl": "Z jakich krajów pochodzą artystki śpiewające w języku Bangla?",
        "question": "What nationalities are the female artists who sung in the language Bangla from?",
        "question_pl": "Z jakich narodowości pochodzą artystki śpiewające w języku Bangla?",
        "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"",
        "query_pl": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Kobieta\" AND T2.languages  =  \"bangla\""
    },
    {
        "db_id": "music_1",
        "question_original": "What is the average rating of songs for each language?",
        "question_original_pl": "Jaka jest średnia ocena utworów dla każdego języka?",
        "question": "What is the average score of songs for each language?",
        "question_pl": "Jaki jest średni wynik piosenek dla każdego języka?",
        "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages",
        "query_pl": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the average song rating for each language?",
        "question_original_pl": "Jaka jest średnia ocena piosenki dla każdego języka?",
        "question": "What is the average song score for each language?",
        "question_pl": "Jaki jest średni wynik piosenki dla każdego języka?",
        "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages",
        "query_pl": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
    },
    {
        "db_id": "music_1",
        "question_original": "For each file format, return the number of artists who released songs in that format.",
        "question_original_pl": "Dla każdego formatu pliku zwróć liczbę artystów, którzy wydali utwory w tym formacie.",
        "question": "For each document format, return the number of artists who released songs in that format.",
        "question_pl": "Dla każdego formatu dokumentu zwróć liczbę artystów, którzy wydali utwory w tym formacie.",
        "query": "SELECT count(*) ,  formats FROM files GROUP BY formats",
        "query_pl": "SELECT count(*) ,  formats FROM files GROUP BY formats"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the distinct names of all songs that have a higher resolution than some songs in English.",
        "question_original_pl": "Znajdź różne nazwy wszystkich utworów, które mają wyższą rozdzielczość niż niektóre utwory w języku angielskim.",
        "question": "Find the different titles of all musics that have a higher resolution than some musics in English.",
        "question_pl": "Znajdź różne tytuły wszystkich utworów muzycznych, które mają wyższą rozdzielczość niż niektóre utwory w języku angielskim.",
        "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
        "query_pl": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"angielski\")"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the different names for all songs that have a higher resolution than English songs?",
        "question_original_pl": "Jakie są inne nazwy dla wszystkich utworów, które mają wyższą rozdzielczość niż utwory w języku angielskim?",
        "question": "What are the different titles for all musics that have a higher resolution than English musics?",
        "question_pl": "Jakie są różne tytuły dla wszystkich utworów muzycznych, które mają wyższą rozdzielczość niż muzyka angielska?",
        "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
        "query_pl": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"angielski\")"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all songs that have a lower rating than some song of blues genre?",
        "question_original_pl": "Jak nazywają się wszystkie utwory, które mają niższą ocenę niż jakiś utwór z gatunku blues?",
        "question": "What are the titles of all musics that have a lower rating than some music of blues genre?",
        "question_pl": "Jakie są tytuły wszystkich utworów muzycznych, które mają niższą ocenę niż niektóre utwory z gatunku blues?",
        "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
        "query_pl": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of the songs that have a lower rating than at least one blues song?",
        "question_original_pl": "Jak nazywają się utwory, które mają niższą ocenę niż przynajmniej jeden utwór bluesowy?",
        "question": "What are the titles of the musics that have a lower rating than at least one blues music?",
        "question_pl": "Jakie są tytuły utworów, które mają niższą ocenę niż przynajmniej jeden utwór bluesowy?",
        "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
        "query_pl": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?",
        "question_original_pl": "Jak nazywa się i z jakiego kraju pochodzi artysta, który wydał piosenkę z \"miłość\" w tytule?",
        "question": "What is the name and nationality of origin of the artist who released a song that has \"love\" in its title?",
        "question_pl": "Jak nazywa się i jakiej narodowości jest artysta, który wydał piosenkę z \"miłością\" w tytule?",
        "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"",
        "query_pl": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%miłość%\""
    },
    {
        "db_id": "music_1",
        "question_original": "List the name and gender for all artists who released songs in March.",
        "question_original_pl": "Wymień imię i płeć wszystkich artystów, którzy wydali utwory w marcu.",
        "question": "List the name and sex for all artists who released songs in March.",
        "question_pl": "Wymień nazwiska i płeć wszystkich artystów, którzy wydali utwory w marcu.",
        "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"",
        "query_pl": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names and genders of all artists who released songs in the month of March?",
        "question_original_pl": "Jakie są nazwiska i płeć wszystkich artystów, którzy wydali piosenki w marcu?",
        "question": "What are the names and sex of all artists who released songs in the month of March?",
        "question_pl": "Jakie są imiona i płeć wszystkich artystów, którzy wydali piosenki w marcu?",
        "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"",
        "query_pl": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""
    },
    {
        "db_id": "music_1",
        "question_original": "List the names of all genres in alphabetical oder, together with its ratings.",
        "question_original_pl": "Wymień nazwy wszystkich gatunków w kolejności alfabetycznej, wraz z ich ocenami.",
        "question": "List the names of all genres in alphabetical oder, together with its score.",
        "question_pl": "Wymień nazwy wszystkich gatunków w kolejności alfabetycznej, wraz z ich punktacją.",
        "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name",
        "query_pl": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all genres in alphabetical order, combined with its ratings?",
        "question_original_pl": "Jakie są nazwy wszystkich gatunków w kolejności alfabetycznej w połączeniu z ich ocenami?",
        "question": "What are the names of all genres in alphabetical order, combined with its score?",
        "question_pl": "Jakie są nazwy wszystkich gatunków w kolejności alfabetycznej, w połączeniu z ich wynikiem?",
        "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name",
        "query_pl": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
    },
    {
        "db_id": "music_1",
        "question_original": "Give me a list of the names of all songs ordered by their resolution.",
        "question_original_pl": "Podaj mi listę nazw wszystkich utworów uporządkowanych według ich rozdzielczości.",
        "question": "Give me a list of the titles of all musics ordered by their resolution.",
        "question_pl": "Podaj mi listę tytułów wszystkich utworów muzycznych uporządkowanych według ich rozdzielczości.",
        "query": "SELECT song_name FROM song ORDER BY resolution",
        "query_pl": "SELECT song_name FROM song ORDER BY resolution"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all songs that are ordered by their resolution numbers?",
        "question_original_pl": "Jak nazywają się wszystkie utwory uporządkowane według numerów rozdzielczości?",
        "question": "What are the titles of all musics that are ordered by their resolution numbers?",
        "question_pl": "Jakie są tytuły wszystkich utworów uporządkowanych według numerów rozdzielczości?",
        "query": "SELECT song_name FROM song ORDER BY resolution",
        "query_pl": "SELECT song_name FROM song ORDER BY resolution"
    },
    {
        "db_id": "music_1",
        "question_original": "List the names of all songs that have 4 minute duration or are in English.",
        "question_original_pl": "Wymień nazwy wszystkich piosenek, które trwają 4 minuty lub są w języku angielskim.",
        "question": "List the titles of all musics that have 4 minute duration or are in English.",
        "question_pl": "Wymień tytuły wszystkich utworów muzycznych, które trwają 4 minuty lub są w języku angielskim.",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all songs that are approximately 4 minutes long or are in English?",
        "question_original_pl": "Jak nazywają się wszystkie piosenki, które trwają około 4 minut lub są w języku angielskim?",
        "question": "What are the titles of all musics that are approximately 4 minutes long or are in English?",
        "question_pl": "Jakie są tytuły wszystkich utworów muzycznych, które trwają około 4 minut lub są w języku angielskim?",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "Find the names of songs whose genre is modern or language is English.",
        "question_original_pl": "Znajdź nazwy piosenek, których gatunek jest nowoczesny lub język jest angielski.",
        "question": "Find the titles of musics whose genre is modern or language is English.",
        "question_pl": "Znajdź tytuły utworów muzycznych, których gatunek to muzyka współczesna lub język to angielski.",
        "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
        "query_pl": "SELECT song_name FROM song WHERE genre_is  =  \"nowoczesny\" OR languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of the songs that are modern or sung in English?",
        "question_original_pl": "Jak nazywają się piosenki, które są współczesne lub śpiewane po angielsku?",
        "question": "What are the titles of the musics that are modern or sung in English?",
        "question_pl": "Jakie są tytuły utworów muzycznych, które są nowoczesne lub śpiewane w języku angielskim?",
        "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
        "query_pl": "SELECT song_name FROM song WHERE genre_is  =  \"nowoczesny\" OR languages  =  \"angielski\""
    },
    {
        "db_id": "music_1",
        "question_original": "Return the names of songs for which format is mp3 and resolution is below 1000.",
        "question_original_pl": "Zwróć nazwy utworów, których format to mp3, a rozdzielczość jest mniejsza niż 1000.",
        "question": "Return the titles of musics for which format is mp3 and resolution is below 1000.",
        "question_pl": "Zwróć tytuły utworów, których format to mp3, a rozdzielczość jest mniejsza niż 1000.",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of all songs that are in mp3 format and have a resolution lower than 1000?",
        "question_original_pl": "Jakie są nazwy wszystkich utworów, które są w formacie mp3 i mają rozdzielczość mniejszą niż 1000?",
        "question": "What are the titles of all musics that are in mp3 format and have a resolution lower than 1000?",
        "question_pl": "Jakie są tytuły wszystkich utworów muzycznych, które są w formacie mp3 i mają rozdzielczość mniejszą niż 1000?",
        "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
        "query_pl": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the average rating and resolution of songs that are in Bangla?",
        "question_original_pl": "Jaka jest średnia ocena i rozdzielczość utworów w języku Bangla?",
        "question": "What are the average score and resolution of songs that are in Bangla?",
        "question_pl": "Jaki jest średni wynik i rozdzielczość utworów w języku Bangla?",
        "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"",
        "query_pl": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""
    },
    {
        "db_id": "music_1",
        "question_original": "What is the average rating and resolution of all bangla songs?",
        "question_original_pl": "Jaka jest średnia ocena i rozdzielczość wszystkich piosenek bangla?",
        "question": "What is the average score and resolution of all bangla songs?",
        "question_pl": "Jaki jest średni wynik i rozdzielczość wszystkich piosenek bangla?",
        "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"",
        "query_pl": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""
    },
    {
        "db_id": "music_1",
        "question_original": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?",
        "question_original_pl": "Jaki jest najkrótszy czas trwania i najniższa ocena utworów pogrupowanych według gatunku i uporządkowanych według gatunku?",
        "question": "What are the shortest duration and lowest score of songs grouped by genre and ordered by genre?",
        "question_pl": "Jaki jest najkrótszy czas trwania i najniższy wynik utworów pogrupowanych według gatunku i uporządkowanych według gatunku?",
        "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
        "query_pl": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.",
        "question_original_pl": "Znajdź nazwę i kraj pochodzenia wszystkich artystów, którzy wydali co najmniej jeden utwór o rozdzielczości powyżej 900.",
        "question": "Find the name and nationality of origin for all artists who have release at least one song of resolution above 900.",
        "question_pl": "Znajdź nazwę i narodowość pochodzenia wszystkich artystów, którzy wydali co najmniej jeden utwór o rozdzielczości powyżej 900.",
        "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",
        "query_pl": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?",
        "question_original_pl": "Jak nazywa się i z jakiego kraju pochodzi każdy artysta, który wydał utwór w rozdzielczości wyższej niż 900?",
        "question": "What is the name and nationality of origin for each artist who has released a song with a resolution higher than 900?",
        "question_pl": "Jak nazywa się i jakiej narodowości jest każdy artysta, który wydał utwór w rozdzielczości wyższej niż 900?",
        "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",
        "query_pl": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the country of origin for the artist who made the least number of songs?",
        "question_original_pl": "Znajdź kraj pochodzenia artysty, który nagrał najmniej piosenek?",
        "question": "Find the nationality of origin for the artist who made the least number of songs?",
        "question_pl": "Znajdź narodowość pochodzenia artysty, który stworzył najmniejszą liczbę piosenek?",
        "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "What country is the artist who made the fewest songs from?",
        "question_original_pl": "Z jakiego kraju pochodzi artysta, który stworzył najmniej piosenek?",
        "question": "What nationality is the artist who made the fewest songs from?",
        "question_pl": "Jakiej narodowości jest artysta, który stworzył najmniej piosenek?",
        "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of the songs whose rating is below the rating of all songs in English?",
        "question_original_pl": "Jak nazywają się utwory, których ocena jest niższa niż ocena wszystkich utworów w języku angielskim?",
        "question": "What are the titles of the musics whose score is below the score of all songs in English?",
        "question_pl": "Jakie są tytuły utworów muzycznych, których wynik jest niższy od wyniku wszystkich utworów w języku angielskim?",
        "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
        "query_pl": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'angielski')"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the song names for every song whose rating is less than the minimum rating for English songs?",
        "question_original_pl": "Jak nazywają się piosenki, których ocena jest niższa niż minimalna ocena dla piosenek anglojęzycznych?",
        "question": "What are the music titles for every music whose score is less than the minimum score for English musics?",
        "question_pl": "Jakie są tytuły muzyczne dla każdej muzyki, której wynik jest niższy niż minimalny wynik dla muzyki angielskiej?",
        "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
        "query_pl": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'angielski')"
    },
    {
        "db_id": "music_1",
        "question_original": "What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?",
        "question_original_pl": "Jakie są identyfikatory utworów, których rozdzielczość jest wyższa niż rozdzielczość utworów z oceną niższą niż 8?",
        "question": "What is ids of the musics whose resolution is higher than the resolution of any musics with score lower than 8?",
        "question_pl": "Jakie są identyfikatory utworów, których rozdzielczość jest wyższa niż rozdzielczość utworów z wynikiem niższym niż 8?",
        "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)",
        "query_pl": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the id of every song that has a resolution higher than that of a song with a rating below 8?",
        "question_original_pl": "Jaki jest identyfikator każdego utworu, którego rozdzielczość jest wyższa niż utworu z oceną poniżej 8?",
        "question": "What is the id of every music that has a resolution higher than that of a song with a score below 8?",
        "question_pl": "Jaki jest identyfikator każdego utworu muzycznego, który ma rozdzielczość wyższą niż utwór z wynikiem poniżej 8?",
        "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)",
        "query_pl": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
    },
    {
        "db_id": "music_1",
        "question_original": "What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?",
        "question_original_pl": "Jakie są identyfikatory utworów, których rozdzielczość jest wyższa niż średnia rozdzielczość utworów w nowoczesnym gatunku?",
        "question": "What is ids of the musics whose resolution is higher than the average resolution of songs in modern genre?",
        "question_pl": "Jakie są nazwy utworów muzycznych, których rozdzielczość jest wyższa niż średnia rozdzielczość utworów współczesnego gatunku?",
        "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")",
        "query_pl": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"nowoczesny\")"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the ids of all songs that have higher resolution of the average resolution in the modern genre?",
        "question_original_pl": "Jakie są identyfikatory wszystkich utworów, które mają wyższą rozdzielczość niż średnia rozdzielczość we współczesnym gatunku?",
        "question": "What are the ids of all musics that have higher resolution of the average resolution in the modern genre?",
        "question_pl": "Jakie są identyfikatory wszystkich utworów muzycznych, które mają wyższą rozdzielczość niż średnia rozdzielczość we współczesnym gatunku?",
        "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")",
        "query_pl": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"nowoczesny\")"
    },
    {
        "db_id": "music_1",
        "question_original": "List the id, genre and artist name of English songs ordered by rating.",
        "question_original_pl": "Wymień id, gatunek i nazwę wykonawcy angielskich piosenek uporządkowanych według oceny.",
        "question": "List the id, type and artist name of English songs ordered by score.",
        "question_pl": "Wyświetl identyfikator, typ i nazwę wykonawcy angielskich piosenek uporządkowanych według wyniku.",
        "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating",
        "query_pl": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"angielski\" ORDER BY rating"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?",
        "question_original_pl": "Jaki jest identyfikator, gatunek i nazwa wykonawcy każdej angielskiej piosenki uporządkowanej według rosnącej oceny?",
        "question": "What is the id, type, and name of the artist for every English song ordered by ascending rating?",
        "question_pl": "Jaki jest identyfikator, typ i nazwa wykonawcy dla każdej angielskiej piosenki uporządkowanej według rosnącej oceny?",
        "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating",
        "query_pl": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"angielski\" ORDER BY rating"
    },
    {
        "db_id": "music_1",
        "question_original": "List the duration, file size and format of songs whose genre is pop, ordered by title?",
        "question_original_pl": "Wymień czas trwania, rozmiar pliku i format utworów, których gatunek to pop, uporządkowanych według tytułu?",
        "question": "List the duration, document size and format of songs whose genre is pop, ordered by title?",
        "question_pl": "Wymień czas trwania, rozmiar dokumentu i format utworów z gatunku pop, uporządkowanych według tytułu?",
        "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name",
        "query_pl": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"
    },
    {
        "db_id": "music_1",
        "question_original": "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?",
        "question_original_pl": "Jaki jest czas trwania, rozmiar pliku i format utworu dla każdej piosenki pop uporządkowanej alfabetycznie według tytułu?",
        "question": "What is the duration, document size, and song format for every pop song, ordered by title alphabetically?",
        "question_pl": "Jaki jest czas trwania, rozmiar dokumentu i format utworu dla każdej piosenki pop, uporządkowane alfabetycznie według tytułu?",
        "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name",
        "query_pl": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"
    },
    {
        "db_id": "music_1",
        "question_original": "What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?",
        "question_original_pl": "Jak nazywają się różni artyści, którzy wyprodukowali piosenkę w języku angielskim, ale nigdy nie otrzymali oceny wyższej niż 8?",
        "question": "What are the names of the different artists that have produced a song in English but have never receieved a score higher than 8?",
        "question_pl": "Jak nazywają się różni artyści, którzy stworzyli piosenkę w języku angielskim, ale nigdy nie otrzymali oceny wyższej niż 8?",
        "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",
        "query_pl": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"angielski\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"
    },
    {
        "db_id": "music_1",
        "question_original": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7.",
        "question_original_pl": "Znajdź nazwiska artystów z Bangladeszu, którzy nigdy nie otrzymali oceny wyższej niż 7.",
        "question": "Find the names of the artists who are from Bangladesh and have never received score higher than 7.",
        "question_pl": "Znajdź nazwiska artystów, którzy pochodzą z Bangladeszu i nigdy nie otrzymali oceny wyższej niż 7.",
        "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7",
        "query_pl": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesz\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
    },
    {
        "db_id": "baseball_1",
        "question_original": "what is the full name and id of the college with the largest number of baseball players?",
        "question_original_pl": "Jaka jest pełna nazwa i identyfikator uczelni z największą liczbą graczy w baseball?",
        "question": "what is the forename, surname and id of the college with the largest number of baseball players?",
        "question_pl": "Jakie jest imię, nazwisko i identyfikator uczelni z największą liczbą graczy w baseball?",
        "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Find the full name and id of the college that has the most baseball players.",
        "question_original_pl": "Znajdź pełną nazwę i identyfikator uczelni, która ma najwięcej graczy w baseball.",
        "question": "Find the forename, surname and id of the college that has the most baseball players.",
        "question_pl": "Znajdź imię, nazwisko i identyfikator uczelni, która ma najwięcej graczy w baseball.",
        "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What is average salary of the players in the team named 'Boston Red Stockings' ?",
        "question_original_pl": "Jaka jest średnia pensja zawodników w drużynie o nazwie \"Czerwone pończochy Boston\"?",
        "question": "What is average wage of the players in the team named 'Boston Red Stockings' ?",
        "question_pl": "Jaka jest średnia płaca zawodników w drużynie o nazwie \"Czerwone pończochy Boston\"?",
        "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'",
        "query_pl": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Czerwone pończochy Boston'"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Compute the average salary of the players in the team called 'Boston Red Stockings'.",
        "question_original_pl": "Oblicz średnią pensję zawodników drużyny o nazwie \"Czerwone pończochy Boston\".",
        "question": "Compute the average wage of the players in the team called 'Boston Red Stockings'.",
        "question_pl": "Oblicz średnią płacę zawodników w drużynie o nazwie \"Czerwone pończochy Boston\".",
        "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'",
        "query_pl": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Czerwone pończochy Boston'"
    },
    {
        "db_id": "baseball_1",
        "question_original": "List the first and last name for players who participated in all star game in 1998.",
        "question_original_pl": "Wymień imię i nazwisko zawodników, którzy wzięli udział w meczu gwiazd w 1998 roku.",
        "question": "List the forename and family names for players who participated in all star game in 1998.",
        "question_pl": "Wymień imiona i nazwiska zawodników, którzy brali udział w Meczu Gwiazd w 1998 roku.",
        "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",
        "query_pl": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.",
        "question_original_pl": "Podaj imię, nazwisko i identyfikator gracza z największą liczbą występów w All Star Game? Podaj również liczbę.",
        "question": "What are the forename, family name and id of the player with the most all star game experiences? Also list the count.",
        "question_pl": "Podaj imię, nazwisko i identyfikator gracza z największą liczbą występów w Meczu Gwiazd? Wymień również liczbę.",
        "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "How many players enter hall of fame each year?",
        "question_original_pl": "Ilu graczy wchodzi co roku do galerii sław?",
        "question": "How many participants enter hall of fame each year?",
        "question_pl": "Ilu uczestników wchodzi co roku do Hall of Fame?",
        "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;",
        "query_pl": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Count the number of players who enter hall of fame for each year.",
        "question_original_pl": "Policz liczbę graczy, którzy weszli do galerii sław w każdym roku.",
        "question": "Count the number of participants who enter hall of fame for each year.",
        "question_pl": "Policz liczbę uczestników, którzy weszli do Hall of Fame w każdym roku.",
        "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;",
        "query_pl": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "For each year, return the year and the average number of attendance at home games.",
        "question_original_pl": "Dla każdego roku podaj rok i średnią liczbę widzów na meczach u siebie.",
        "question": "For each year, return the year and the average number of attendee at home games.",
        "question_pl": "Dla każdego roku podaj rok i średnią liczbę uczestników meczów u siebie.",
        "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;",
        "query_pl": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What are the manager's first name, last name and id who won the most manager award?",
        "question_original_pl": "Jakie jest imię, nazwisko i tożsamość menedżera, który zdobył nagrodę dla najlepszego menedżera?",
        "question": "What are the manager's full name and id who won the most manager award?",
        "question_pl": "Jakie jest pełne imię i nazwisko menedżera, który zdobył nagrodę dla najlepszego menedżera?",
        "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "List three countries which are the origins of the least players.",
        "question_original_pl": "Wymień trzy kraje, z których pochodzi najmniej graczy.",
        "question": "List three nations which are the origins of the least participants.",
        "question_pl": "Wymień trzy narody, z których pochodzi najmniej uczestników.",
        "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
        "query_pl": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What are the three countries that the least players are from?",
        "question_original_pl": "Z jakich trzech krajów pochodzi najmniej graczy?",
        "question": "What are the three nations that the least participants are from?",
        "question_pl": "Z jakich trzech narodów pochodzi najmniej uczestników?",
        "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
        "query_pl": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Find all the players' first name and last name who have empty death record.",
        "question_original_pl": "Znajdź imię i nazwisko wszystkich graczy, którzy mają pusty rekord śmierci.",
        "question": "Find all the players' forename and family name who have empty death record.",
        "question_pl": "Znajdź imiona i nazwiska wszystkich graczy, którzy mają pusty akt zgonu.",
        "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';",
        "query_pl": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"
    },
    {
        "db_id": "baseball_1",
        "question_original": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.",
        "question_original_pl": "Ilu zawodników urodzonych w USA jest praworęcznych? Oznacza to, że mają wartość pałkarza \"R\".",
        "question": "How many participants born in USA are right-handed batters? That is, have the batter value 'R'.",
        "question_pl": "Ilu uczestników urodzonych w USA jest praworęcznych? Oznacza to, że mają wartość pałkarza \"R\".",
        "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';",
        "query_pl": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Count the number of players who were born in USA and have bats information 'R'.",
        "question_original_pl": "Policz liczbę graczy, którzy urodzili się w USA i mają nietoperze z informacją \"R\".",
        "question": "Count the number of participants who were born in USA and have bats information 'R'.",
        "question_pl": "Policz liczbę uczestników, którzy urodzili się w USA i mają informacje o nietoperzach \"R\".",
        "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';",
        "query_pl": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What is the average height of the players from the college named 'Yale University'?",
        "question_original_pl": "Jaki jest średni wzrost zawodników z uczelni o nazwie \"Uniwersytet Yale\"?",
        "question": "What is the average stature of the participants from the college named 'Yale University'?",
        "question_pl": "Jaki jest średni wzrost uczestników z uczelni o nazwie \"Uniwersytet Yale\"?",
        "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';",
        "query_pl": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Uniwersytet Yale';"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Find the average height of the players who belong to the college called 'Yale University'.",
        "question_original_pl": "Znajdź średni wzrost zawodników należących do uczelni o nazwie \"Uniwersytet Yale\".",
        "question": "Find the average stature of the participants who belong to the college called 'Yale University'.",
        "question_pl": "Znajdź średnią wzrostu uczestników, którzy należą do uczelni o nazwie \"Uniwersytet Yale\".",
        "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';",
        "query_pl": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Uniwersytet Yale';"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What are the name and id of the team offering the lowest average salary?",
        "question_original_pl": "Jaka jest nazwa i id drużyny oferującej najniższą średnią pensję?",
        "question": "What are the name and id of the team offering the lowest average wage?",
        "question_pl": "Jaka jest nazwa i identyfikator drużyny oferującej najniższą średnią płacę?",
        "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
        "query_pl": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Which team offers the lowest average salary? Give me the name and id of the team.",
        "question_original_pl": "Która drużyna oferuje najniższą średnią pensję? Podaj nazwę i identyfikator drużyny.",
        "question": "Which team offers the lowest average wage? Give me the name and id of the team.",
        "question_pl": "Która drużyna oferuje najniższą średnią płacę? Podaj nazwę i identyfikator drużyny.",
        "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
        "query_pl": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Find the players' first name and last name who won award both in 1960 and in 1961.",
        "question_original_pl": "Znajdź imię i nazwisko gracza, który zdobył nagrodę w 1960 i 1961 roku.",
        "question": "Find the players' forename and family name who won award both in 1960 and in 1961.",
        "question_pl": "Znajdź imiona i nazwiska zawodników, którzy zdobyli nagrodę w 1960 i 1961 roku.",
        "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961",
        "query_pl": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"
    },
    {
        "db_id": "baseball_1",
        "question_original": "List players' first name and last name who have weight greater than 220 or height shorter than 75.",
        "question_original_pl": "Wymień imię i nazwisko gracza, którego waga jest większa niż 220 lub wzrost mniejszy niż 75.",
        "question": "List players' forename and family name who have weight greater than 220 or height shorter than 75.",
        "question_pl": "Wymień imiona i nazwiska zawodników, którzy mają wagę większą niż 220 lub wzrost mniejszy niż 75.",
        "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75",
        "query_pl": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"
    },
    {
        "db_id": "baseball_1",
        "question_original": "How many players were in the team Boston Red Stockings in 2000?",
        "question_original_pl": "Ilu zawodników grało w drużynie Boston Red Stockings w 2000 roku?",
        "question": "How many participants were in the team Boston Red Stockings in 2000?",
        "question_pl": "Ilu uczestników liczyła drużyna Boston Red Stockings w 2000 roku?",
        "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000",
        "query_pl": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Czerwone pończochy Boston' AND T1.year  =  2000"
    },
    {
        "db_id": "baseball_1",
        "question_original": "How many players did Boston Red Stockings have in 2000?",
        "question_original_pl": "Ilu zawodników miał Boston Red Stockings w 2000 roku?",
        "question": "How many participants did Boston Red Stockings have in 2000?",
        "question_pl": "Ilu uczestników liczyła drużyna Boston Red Stockings w 2000 roku?",
        "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000",
        "query_pl": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Czerwone pończochy Boston' AND T1.year  =  2000"
    },
    {
        "db_id": "baseball_1",
        "question_original": "How much salary did the top 3 well-paid players get in 2001?",
        "question_original_pl": "Ile pensji otrzymało 3 najlepiej opłacanych zawodników w 2001 roku?",
        "question": "How much wage did the top 3 well-paid players get in 2001?",
        "question_pl": "Ile zarabiało 3 najlepiej opłacanych zawodników w 2001 roku?",
        "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;",
        "query_pl": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What were all the salary values of players in 2010 and 2001?",
        "question_original_pl": "Jakie były wartości wynagrodzeń zawodników w 2010 i 2001 roku?",
        "question": "What were all the wage values of players in 2010 and 2001?",
        "question_pl": "Jakie były wartości płac zawodników w 2010 i 2001 roku?",
        "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001",
        "query_pl": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
    },
    {
        "db_id": "baseball_1",
        "question_original": "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?",
        "question_original_pl": "Jaka jest łączna frekwencja na meczach u siebie drużyny Boston Red Stockings w latach 2000-2010?",
        "question": "What is the total home game attendees of team Boston Red Stockings from 2000 to 2010?",
        "question_pl": "Jaka jest łączna liczba uczestników meczów u siebie drużyny Boston Red Stockings w latach 2000-2010?",
        "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;",
        "query_pl": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Czerwone pończochy Boston' AND T1.year BETWEEN 2000 AND 2010;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990.",
        "question_original_pl": "Oblicz całkowitą pensję zawodnika o imieniu Len i nazwisku Barker w latach 1985-1990.",
        "question": "Compute the total wage that the player with first name Len and last name Barker received between 1985 to 1990.",
        "question_pl": "Oblicz całkowitą pensję, jaką gracz o imieniu Len i nazwisku Barker otrzymał w latach 1985-1990.",
        "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;",
        "query_pl": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007.",
        "question_original_pl": "Wymień imię i nazwisko zawodników, którzy otrzymali wynagrodzenie od drużyny Washington Nationals w latach 2005 i 2007.",
        "question": "List players' forename and surname who received salary from team Washington Nationals in both 2005 and 2007.",
        "question_pl": "Wymień imiona i nazwiska zawodników, którzy otrzymali wynagrodzenie od drużyny Washington Nationals w latach 2005 i 2007.",
        "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",
        "query_pl": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Which team had the least number of attendances in home games in 1980?",
        "question_original_pl": "Która drużyna miała najmniejszą frekwencję na meczach u siebie w 1980 roku?",
        "question": "Which team had the least number of attendees in home games in 1980?",
        "question_pl": "Która drużyna miała najmniej widzów na meczach u siebie w 1980 roku?",
        "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;",
        "query_pl": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"
    },
    {
        "db_id": "baseball_1",
        "question_original": "Find all the cities that have 2 to 4 parks.",
        "question_original_pl": "Znajdź wszystkie miasta, które mają od 2 do 4 parków.",
        "question": "Find all the towns that have 2 to 4 parks.",
        "question_pl": "Znajdź wszystkie miasta, w których znajdują się od 2 do 4 parków.",
        "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;",
        "query_pl": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
    },
    {
        "db_id": "mountain_photos",
        "question_original": "List the id, color scheme, and name for all the photos.",
        "question_original_pl": "Podaj identyfikator, schemat kolorów i nazwę wszystkich zdjęć.",
        "question": "List the id, scheme of colour, and name for all the photos.",
        "question_pl": "Wymień identyfikator, schemat kolorów i nazwę wszystkich zdjęć.",
        "query": "SELECT id ,  color ,  name FROM photos",
        "query_pl": "SELECT id ,  color ,  name FROM photos"
    },
    {
        "db_id": "mountain_photos",
        "question_original": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.",
        "question_original_pl": "Podaj nazwę każdego obiektywu aparatu i liczbę wykonanych nim zdjęć. Uporządkuj wyniki według liczby zdjęć.",
        "question": "What is the name of each camera lens and the number of picture taken by it? Order the result by the count of photos.",
        "question_pl": "Jak nazywa się każdy obiektyw aparatu i ile zdjęć zostało nim zrobionych? Uporządkuj wyniki według liczby zdjęć.",
        "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
        "query_pl": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
    },
    {
        "db_id": "program_share",
        "question_original": "List all channel names ordered by their rating in percent from big to small.",
        "question_original_pl": "Wymień wszystkie nazwy kanałów uporządkowane według ich oceny w procentach od dużej do małej.",
        "question": "List all channel names ordered by their score in percent from big to small.",
        "question_pl": "Wymień wszystkie nazwy kanałów uporządkowane według ich wyniku procentowego od dużego do małego.",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "query_pl": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
    },
    {
        "db_id": "program_share",
        "question_original": "Give me a list of all the channel names sorted by the channel rating in descending order.",
        "question_original_pl": "Podaj mi listę wszystkich nazw kanałów posortowanych według oceny kanału w porządku malejącym.",
        "question": "Give me a list of all the channel names sorted by the channel score in descending order.",
        "question_pl": "Podaj listę wszystkich nazw kanałów posortowanych według wyniku kanału w porządku malejącym.",
        "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
        "query_pl": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
    },
    {
        "db_id": "program_share",
        "question_original": "Show me the owner of the channel with the highest rating.",
        "question_original_pl": "Pokaż mi właściciela kanału z najwyższą oceną.",
        "question": "Show me the owner of the channel with the highest score.",
        "question_pl": "Pokaż mi właściciela kanału z najwyższym wynikiem.",
        "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
        "query_pl": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
    },
    {
        "db_id": "program_share",
        "question_original": "find the name of the program that was launched most recently.",
        "question_original_pl": "znajdź nazwę programu, który został ostatnio uruchomiony.",
        "question": "find the name of the programme that was launched most recently.",
        "question_pl": "Znajdź nazwę programu, który został ostatnio uruchomiony.",
        "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
        "query_pl": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
    },
    {
        "db_id": "program_share",
        "question_original": "Which program was launched most recently? Return the program name.",
        "question_original_pl": "Który program został ostatnio uruchomiony? Zwróć nazwę programu.",
        "question": "Which programme was launched most recently? Return the programme name.",
        "question_pl": "Który program został uruchomiony ostatnio? Podaj nazwę programu.",
        "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
        "query_pl": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
    },
    {
        "db_id": "program_share",
        "question_original": "List all program origins in the alphabetical order.",
        "question_original_pl": "Wymień wszystkie początki programu w kolejności alfabetycznej.",
        "question": "List all programme origins in the alphabetical order.",
        "question_pl": "Wymień wszystkie początki programów w kolejności alfabetycznej.",
        "query": "SELECT origin FROM program ORDER BY origin",
        "query_pl": "SELECT origin FROM program ORDER BY origin"
    },
    {
        "db_id": "program_share",
        "question_original": "What is the list of program origins ordered alphabetically?",
        "question_original_pl": "Jak wygląda lista początków programu uporządkowana alfabetycznie?",
        "question": "What is the list of programme origins ordered alphabetically?",
        "question_pl": "Jak wygląda lista początków programów uporządkowana alfabetycznie?",
        "query": "SELECT origin FROM program ORDER BY origin",
        "query_pl": "SELECT origin FROM program ORDER BY origin"
    },
    {
        "db_id": "program_share",
        "question_original": "Count the number of distinct channel owners.",
        "question_original_pl": "Policz liczbę odrębnych właścicieli kanałów.",
        "question": "Count the number of different channel owners.",
        "question_pl": "Policz liczbę różnych właścicieli kanałów.",
        "query": "SELECT count(DISTINCT OWNER) FROM channel",
        "query_pl": "SELECT count(DISTINCT OWNER) FROM channel"
    },
    {
        "db_id": "program_share",
        "question_original": "Which programs' origins are not \"Beijing\"? Give me the program names.",
        "question_original_pl": "Które programy nie pochodzą z \"Pekinu\"? Podaj mi nazwy programów.",
        "question": "Which programmes' origins are not \"Beijing\"? Give me the programme names.",
        "question_pl": "Które programy nie pochodzą z Pekinu? Podaj mi nazwy programów.",
        "query": "SELECT name FROM program WHERE origin != 'Beijing'",
        "query_pl": "SELECT name FROM program WHERE origin != 'Pekin'"
    },
    {
        "db_id": "program_share",
        "question_original": "Find the total rating ratio for each channel owner.",
        "question_original_pl": "Znajdź całkowity współczynnik oglądalności dla każdego właściciela kanału.",
        "question": "Find the total score ratio for each channel owner.",
        "question_pl": "Znajdź całkowity współczynnik wyników dla każdego właściciela kanału.",
        "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER",
        "query_pl": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
    },
    {
        "db_id": "program_share",
        "question_original": "What is the total rating of channel for each channel owner?",
        "question_original_pl": "Jaka jest łączna ocena kanału dla każdego właściciela kanału?",
        "question": "What is the total score of channel for each channel owner?",
        "question_pl": "Jaki jest łączny wynik kanału dla każdego właściciela kanału?",
        "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER",
        "query_pl": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
    },
    {
        "db_id": "e_learning",
        "question_original": "How many courses are there in total?",
        "question_original_pl": "Ile jest w sumie kursów?",
        "question": "How many curriculum are there in total?",
        "question_pl": "Ile jest w sumie programów nauczania?",
        "query": "SELECT count(*) FROM COURSES",
        "query_pl": "SELECT count(*) FROM COURSES"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the total number of courses offered.",
        "question_original_pl": "Znajdź całkowitą liczbę oferowanych kursów.",
        "question": "Find the total number of curriculum offered.",
        "question_pl": "Znajdź całkowitą liczbę oferowanych programów nauczania.",
        "query": "SELECT count(*) FROM COURSES",
        "query_pl": "SELECT count(*) FROM COURSES"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the descriptions of the courses with name \"database\"?",
        "question_original_pl": "Jakie są opisy kursów o nazwie \"baza danych\"?",
        "question": "What are the describing contents of the curriculum with name \"database\"?",
        "question_pl": "Jaka jest opisowa zawartość programu nauczania o nazwie \"baza danych\"?",
        "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
        "query_pl": "SELECT course_description FROM COURSES WHERE course_name  =  \"baza danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Return the description for the courses named \"database\".",
        "question_original_pl": "Zwróć opis dla kursów o nazwie \"baza danych\".",
        "question": "Return the describing content for the curriculum named \"database\".",
        "question_pl": "Zwróć zawartość opisującą program nauczania o nazwie \"baza danych\".",
        "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
        "query_pl": "SELECT course_description FROM COURSES WHERE course_name  =  \"baza danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
        "question_original_pl": "Jakie są adresy autorów kursów lub opiekunów o imieniu \"Cathrine\"?",
        "question": "What are the locations of the course authors or tutors with personal name \"Cathrine\"",
        "question_pl": "Jakie są lokalizacje autorów kursów lub korepetytorów o imieniu \"Cathrine\"?",
        "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
        "query_pl": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
        "question_original_pl": "Zwróć adresy autorów kursów lub opiekunów, których imię brzmi \"Cathrine\".",
        "question": "Return the locations of the course authors or tutors whose personal name is \"Cathrine\".",
        "question_pl": "Zwróć lokalizacje autorów kursów lub opiekunów, których imię brzmi \"Cathrine\".",
        "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
        "query_pl": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
    },
    {
        "db_id": "e_learning",
        "question_original": "List the addresses of all the course authors or tutors.",
        "question_original_pl": "Wymień adresy wszystkich autorów kursów lub wykładowców.",
        "question": "List the locations of all the course authors or tutors.",
        "question_pl": "Wymień lokalizacje wszystkich autorów kursów lub korepetytorów.",
        "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
        "query_pl": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
    },
    {
        "db_id": "e_learning",
        "question_original": "What is the address of each course author or tutor?",
        "question_original_pl": "Jaki jest adres każdego autora kursu lub opiekuna?",
        "question": "What is the location of each course author or tutor?",
        "question_pl": "Jaka jest lokalizacja każdego autora kursu lub nauczyciela?",
        "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
        "query_pl": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
    },
    {
        "db_id": "e_learning",
        "question_original": "List all the dates of enrollment and completion of students.",
        "question_original_pl": "Wymień wszystkie daty zapisów i ukończenia nauki przez studentów.",
        "question": "List all the day of enrollment and completion of students.",
        "question_pl": "Wymień wszystkie dni zapisów i ukończeń uczniów.",
        "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment",
        "query_pl": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are all the dates of enrollment and completion in record?",
        "question_original_pl": "Jakie są wszystkie daty rejestracji i ukończenia w rejestrze?",
        "question": "What are all the day of enrollment and completion in record?",
        "question_pl": "Jakie są wszystkie dni rejestracji i ukończenia w rejestrze?",
        "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment",
        "query_pl": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "How many distinct students are enrolled in courses?",
        "question_original_pl": "Ilu różnych studentów jest zapisanych na kursy?",
        "question": "How many different students have registered for the courses?",
        "question_pl": "Ilu różnych studentów zarejestrowało się na kursy?",
        "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
        "query_pl": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the number of distinct students enrolled in courses.",
        "question_original_pl": "Znajdź liczbę różnych studentów zapisanych na kursy.",
        "question": "Find the number of different students enrolled in curriculum.",
        "question_pl": "Znajdź liczbę różnych studentów zapisanych do programu nauczania.",
        "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
        "query_pl": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "How many distinct courses are enrolled in by students?",
        "question_original_pl": "Na ile różnych kursów zapisują się studenci?",
        "question": "How many different curriculum are enrolled in by students?",
        "question_pl": "W ilu różnych programach nauczania uczestniczą studenci?",
        "query": "SELECT count(distinct course_id) FROM Student_Course_Enrolment",
        "query_pl": "SELECT count(course_id) FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the number of distinct courses that have enrolled students.",
        "question_original_pl": "Znajdź liczbę różnych kursów, na które zapisali się studenci.",
        "question": "Find the number of different curriculum that have enrolled students.",
        "question_pl": "Znajdź liczbę różnych programów nauczania, do których zapisali się studenci.",
        "query": "SELECT count(distinct course_id) FROM Student_Course_Enrolment",
        "query_pl": "SELECT count(course_id) FROM Student_Course_Enrolment"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the dates of the tests taken with result \"Pass\".",
        "question_original_pl": "Znajdź daty testów z wynikiem \"Pass\".",
        "question": "Find the day of the tests taken with result \"Pass\".",
        "question_pl": "Znajdź dzień testu z wynikiem \"Pass\".",
        "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
        "query_pl": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Przełęcz\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
        "question_original_pl": "Które testy zakończyły się wynikiem pozytywnym? Zwróć daty wykonania testów.",
        "question": "Which tests have \"Pass\" results? Return the day when the tests were taken.",
        "question_pl": "Które testy mają wynik \"Pass\"? Zwróć dzień, w którym przeprowadzono testy.",
        "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
        "query_pl": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Przełęcz\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Return the login names of the students whose family name is \"Ward\".",
        "question_original_pl": "Zwróć nazwy logowania uczniów, których nazwisko brzmi \"Ward\".",
        "question": "Return the login names of the students whose last name is \"Ward\".",
        "question_pl": "Zwróć nazwy logowania uczniów, których nazwisko to \"Ward\".",
        "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"",
        "query_pl": "SELECT login_name FROM Students WHERE family_name  =  \"Oddział\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
        "question_original_pl": "Jakie są daty ostatniego logowania uczniów o nazwisku \"Jaskólski\" lub \"Langosh\"?",
        "question": "What are the day of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?",
        "question_pl": "Jaki jest dzień ostatniego logowania uczniów o nazwisku \"Jaskólski\" lub \"Langosh\"?",
        "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"",
        "query_pl": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskólski\" OR family_name  =  \"Langosh\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".",
        "question_original_pl": "Znajdź datę ostatniego logowania uczniów, których nazwisko rodowe to \"Jaskólski\" lub \"Langosh\".",
        "question": "Find the latest logon day of the students whose family name is \"Jaskolski\" or \"Langosh\".",
        "question_pl": "Znajdź ostatni dzień logowania uczniów, których nazwisko rodowe to \"Jaskólski\" lub \"Langosh\".",
        "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"",
        "query_pl": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskólski\" OR family_name  =  \"Langosh\""
    },
    {
        "db_id": "e_learning",
        "question_original": "List all the information about course authors and tutors in alphabetical order of the personal name.",
        "question_original_pl": "Wymień wszystkie informacje o autorach kursów i wykładowcach w kolejności alfabetycznej nazwisk.",
        "question": "List all the information about curriculum authors and teachers in alphabetical order of the personal name.",
        "question_pl": "Wymień wszystkie informacje o autorach programów nauczania i nauczycielach w kolejności alfabetycznej nazwisk.",
        "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
        "query_pl": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
    },
    {
        "db_id": "e_learning",
        "question_original": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
        "question_original_pl": "Posortuj informacje o autorach kursów i wykładowcach w porządku alfabetycznym według nazwiska.",
        "question": "Sort the information about curriculum authors and teachers in alphabetical order of the personal name.",
        "question_pl": "Posortuj informacje o autorach programów nauczania i nauczycielach w kolejności alfabetycznej nazwisk.",
        "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
        "query_pl": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.",
        "question_original_pl": "Jakie są imiona i nazwiska oraz nazwiska rodowe uczniów? Posortuj wyniki w kolejności alfabetycznej według nazwisk.",
        "question": "What are the personal names and last names of the students? Sort the result in alphabetical order of the last name.",
        "question_pl": "Jakie są imiona i nazwiska uczniów? Posortuj wyniki w kolejności alfabetycznej według nazwiska.",
        "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name",
        "query_pl": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"
    },
    {
        "db_id": "e_learning",
        "question_original": "For each distinct test result, find the number of students who got the result.",
        "question_original_pl": "Dla każdego odrębnego wyniku testu znajdź liczbę uczniów, którzy uzyskali ten wynik.",
        "question": "For each different test outcome, find the number of students who got the outcome.",
        "question_pl": "Dla każdego wyniku testu znajdź liczbę uczniów, którzy uzyskali dany wynik.",
        "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the login name of the course author that teaches the course with name \"advanced database\".",
        "question_original_pl": "Znajdź nazwę logowania autora kursu, który prowadzi kurs o nazwie \"zaawansowana baza danych\".",
        "question": "Find the login name of the curriculum author that teaches the curriculum with name \"advanced database\".",
        "question_pl": "Znajdź nazwę logowania autora programu nauczania, który uczy programu nauczania o nazwie \"zaawansowana baza danych\".",
        "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"",
        "query_pl": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"zaawansowana baza danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Which course author teaches the \"advanced database\" course? Give me his or her login name.",
        "question_original_pl": "Który autor kursu prowadzi kurs \"zaawansowana baza danych\"? Podaj mi jego lub jej login.",
        "question": "Which curriculum author teaches the \"advanced database\" curriculum? Give me his or her login name.",
        "question_pl": "Który autor programu nauczania uczy \"zaawansowanej bazy danych\"? Podaj mi jego nazwę użytkownika.",
        "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"",
        "query_pl": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"zaawansowana baza danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".",
        "question_original_pl": "Znajdź adresy autorów kursów o nazwie \"system operacyjny\" lub \"struktura danych\".",
        "question": "Find the locations of the course authors who teach the course with name \"operating system\" or \"data structure\".",
        "question_pl": "Znajdź lokalizacje autorów kursów, którzy prowadzą kurs o nazwie \"system operacyjny\" lub \"struktura danych\".",
        "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"",
        "query_pl": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"system operacyjny\" OR T2.course_name  =  \"struktura danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.",
        "question_original_pl": "Jakie są adresy autorów kursów, którzy uczą \"system operacyjny\" lub \"struktura danych\".",
        "question": "What are the locations of the course authors who teach either \"operating system\" or \"data structure\" course.",
        "question_pl": "Jakie są lokalizacje autorów kursów, którzy prowadzą kurs \"system operacyjny\" lub \"struktura danych\".",
        "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"",
        "query_pl": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"system operacyjny\" OR T2.course_name  =  \"struktura danych\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the personal name, family name, and author ID of the course author that teaches the most courses.",
        "question_original_pl": "Znajdź imię i nazwisko, nazwisko rodowe i identyfikator autora kursu, który prowadzi najwięcej kursów.",
        "question": "Find the personal name, last name, and author ID of the course author that teaches the most courses.",
        "question_pl": "Znajdź imię, nazwisko i identyfikator autora kursu, który prowadzi najwięcej kursów.",
        "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the personal name, family name, and author ID of the course author who teaches the most courses?",
        "question_original_pl": "Jakie jest imię i nazwisko, nazwisko rodowe i identyfikator autora kursu, który prowadzi najwięcej kursów?",
        "question": "What are the personal name, last name, and author ID of the course author who teaches the most courses?",
        "question_pl": "Jakie jest imię, nazwisko i identyfikator autora kursu, który prowadzi najwięcej kursów?",
        "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the addresses and author IDs of the course authors that teach at least two courses.",
        "question_original_pl": "Znajdź adresy i identyfikatory autorów kursów, którzy prowadzą co najmniej dwa kursy.",
        "question": "Find the locations and author IDs of the course authors that teach at least two courses.",
        "question_pl": "Znajdź lokalizacje i identyfikatory autorów kursów, którzy prowadzą co najmniej dwa kursy.",
        "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2",
        "query_pl": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "Which course authors teach two or more courses? Give me their addresses and author IDs.",
        "question_original_pl": "Którzy autorzy kursów prowadzą dwa lub więcej kursów? Podaj mi ich adresy i identyfikatory autorów.",
        "question": "Which course authors teach two or more courses? Give me their locations and author IDs.",
        "question_pl": "Którzy autorzy kursów prowadzą dwa lub więcej kursów? Podaj mi ich lokalizacje i identyfikatory autorów.",
        "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2",
        "query_pl": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the names of courses taught by the tutor who has personal name \"Julio\".",
        "question_original_pl": "Znajdź nazwy kursów prowadzonych przez korepetytora o pseudonimie \"Julio\".",
        "question": "Find the names of curriculum taught by the teacher who has personal name \"Julio\".",
        "question_pl": "Znajdź nazwy programów nauczania prowadzonych przez nauczyciela o pseudonimie \"Julio\".",
        "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"",
        "query_pl": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?",
        "question_original_pl": "Jak nazywają się kursy prowadzone przez nauczyciela, którego imię brzmi \"Julio\"?",
        "question": "What are the names of the curriculum taught by the tutor whose personal name is \"Julio\"?",
        "question_pl": "Jak nazywa się program nauczania prowadzony przez nauczyciela o imieniu \"Julio\"?",
        "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"",
        "query_pl": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".",
        "question_original_pl": "Znajdź nazwy i opisy kursów, które należą do przedmiotu o nazwie \"Informatyka\".",
        "question": "Find the names and describing contents of curriculum that belong to the subject named \"Computer Science\".",
        "question_pl": "Znajdź nazwy i opis zawartości programów nauczania, które należą do przedmiotu o nazwie \"Informatyka\".",
        "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"",
        "query_pl": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Informatyka\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the names and descriptions of the all courses under the \"Computer Science\" subject?",
        "question_original_pl": "Jakie są nazwy i opisy wszystkich kursów w ramach przedmiotu \"Informatyka\"?",
        "question": "What are the names and describing contents of the all curriculum under the \"Computer Science\" subject?",
        "question_pl": "Jak nazywają się i opisują treści wszystkich programów nauczania w ramach przedmiotu \"Informatyka\"?",
        "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"",
        "query_pl": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Informatyka\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.",
        "question_original_pl": "Znajdź identyfikator przedmiotu, nazwę przedmiotu i odpowiednią liczbę dostępnych kursów dla każdego przedmiotu.",
        "question": "Find the subject ID, subject name, and the corresponding number of available curriculum for each subject.",
        "question_pl": "Znajdź identyfikator przedmiotu, nazwę przedmiotu i odpowiednią liczbę dostępnych programów nauczania dla każdego przedmiotu.",
        "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id",
        "query_pl": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the subject ID, subject name, and the number of available courses for each subject?",
        "question_original_pl": "Jaki jest identyfikator przedmiotu, nazwa przedmiotu i liczba dostępnych kursów dla każdego przedmiotu?",
        "question": "What are the subject ID, subject name, and the number of available curriculum for each subject?",
        "question_pl": "Jaki jest identyfikator przedmiotu, nazwa przedmiotu i liczba dostępnych programów nauczania dla każdego przedmiotu?",
        "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id",
        "query_pl": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.",
        "question_original_pl": "Znajdź identyfikator przedmiotu, nazwę przedmiotu i odpowiednią liczbę kursów dla każdego przedmiotu, a następnie posortuj według liczby kursów w porządku rosnącym.",
        "question": "Find the subject ID, name of subject and the corresponding number of curriculum for each subject, and sort by the curriculum count in ascending order.",
        "question_pl": "Znajdź identyfikator przedmiotu, nazwę przedmiotu i odpowiednią liczbę programów nauczania dla każdego przedmiotu i posortuj według liczby programów nauczania w porządku rosnącym.",
        "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "e_learning",
        "question_original": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.",
        "question_original_pl": "Wyświetl identyfikator przedmiotu, nazwę przedmiotu i liczbę kursów dostępnych dla każdego przedmiotu w kolejności rosnącej liczby kursów.",
        "question": "List the subject ID, name of subject and the number of curriculum available for each subject in ascending order of the curriculum counts.",
        "question_pl": "Wyświetl identyfikator przedmiotu, nazwę przedmiotu i liczbę programów nauczania dostępnych dla każdego przedmiotu w porządku rosnącym.",
        "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
        "query_pl": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
    },
    {
        "db_id": "e_learning",
        "question_original": "What is the date of enrollment of the course named \"Spanish\"?",
        "question_original_pl": "Jaka jest data zapisu na kurs o nazwie \"Hiszpański\"?",
        "question": "What is the day of enrollment of the curriculum named \"Spanish\"?",
        "question_pl": "Jaki jest dzień rozpoczęcia programu nauczania o nazwie \"Hiszpański\"?",
        "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"",
        "query_pl": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Hiszpański\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the the date of enrollment of the \"Spanish\" course.",
        "question_original_pl": "Znajdź datę zapisania się na kurs \"Hiszpański\".",
        "question": "Find the the day of enrollment of the \"Spanish\" curriculum.",
        "question_pl": "Znajdź dzień zapisania się do programu nauczania \"Hiszpański\".",
        "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"",
        "query_pl": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Hiszpański\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What is the name of the course that has the most student enrollment?",
        "question_original_pl": "Jak nazywa się kurs, na który zapisało się najwięcej studentów?",
        "question": "What is the name of the curriculum that has the most student enrollment?",
        "question_pl": "Jak nazywa się program nauczania, do którego zapisało się najwięcej studentów?",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "Which course is enrolled in by the most students? Give me the course name.",
        "question_original_pl": "Na który kurs zapisało się najwięcej studentów? Podaj nazwę kursu.",
        "question": "Which curriculum is enrolled in by the most students? Give me the curriculum name.",
        "question_pl": "Do którego programu nauczania zapisało się najwięcej uczniów? Podaj nazwę programu nauczania.",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the names of the courses that have exactly 1 student enrollment?",
        "question_original_pl": "Jak nazywają się kursy, na które zapisał się dokładnie 1 uczestnik?",
        "question": "What are the names of the curriculum that have exactly 1 student enrollment?",
        "question_pl": "Jak nazywają się programy nauczania, w których uczestniczy dokładnie 1 student?",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1",
        "query_pl": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the names of the courses that have just one student enrollment.",
        "question_original_pl": "Znajdź nazwy kursów, na które zapisał się tylko jeden uczestnik.",
        "question": "Find the names of the curriculum that have just one student enrollment.",
        "question_pl": "Znajdź nazwy programów nauczania, do których zapisany jest tylko jeden student.",
        "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1",
        "query_pl": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the descriptions and names of the courses that have student enrollment bigger than 2?",
        "question_original_pl": "Jakie są opisy i nazwy kursów, w których liczba studentów przekracza 2?",
        "question": "What are the descriptions and names of the curriculum that have student enrollment bigger than 2?",
        "question_pl": "Jakie są opisy i nazwy programów nauczania, w których liczba studentów przekracza 2?",
        "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2",
        "query_pl": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "Return the descriptions and names of the courses that have more than two students enrolled in.",
        "question_original_pl": "Zwróć opisy i nazwy kursów, na które zapisanych jest więcej niż dwóch studentów.",
        "question": "Return the describing contents and names of the curriculum that have more than two students enrolled in.",
        "question_pl": "Zwróć opis treści i nazwy programów nauczania, w których uczestniczy więcej niż dwóch uczniów.",
        "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2",
        "query_pl": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "What is the name of each course and the corresponding number of student enrollment?",
        "question_original_pl": "Jaka jest nazwa każdego kursu i odpowiadająca mu liczba zapisanych studentów?",
        "question": "What is the name of each curriculum and the corresponding number of student enrollment?",
        "question_pl": "Jaka jest nazwa każdego programu nauczania i odpowiadająca mu liczba zapisanych studentów?",
        "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name",
        "query_pl": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
    },
    {
        "db_id": "e_learning",
        "question_original": "List the name and the number of enrolled student for each course.",
        "question_original_pl": "Wymień imię i nazwisko oraz liczbę zapisanych studentów na każdy kurs.",
        "question": "List the name and the number of enrolled student for each curriculum.",
        "question_pl": "Wymień nazwę i liczbę zapisanych studentów dla każdego programu nauczania.",
        "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name",
        "query_pl": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the enrollment dates of all the tests that have result \"Pass\"?",
        "question_original_pl": "Jakie są daty zapisów do wszystkich testów z wynikiem \"Pass\"?",
        "question": "What are the enrollment day of all the tests that have result \"Pass\"?",
        "question_pl": "Jaki jest dzień zapisów do wszystkich testów z wynikiem \"Pass\"?",
        "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"",
        "query_pl": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Przełęcz\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the enrollment date for all the tests that have \"Pass\" result.",
        "question_original_pl": "Znajdź datę rejestracji dla wszystkich testów z wynikiem \"Pass\".",
        "question": "Find the enrollment day for all the tests that have \"Pass\" result.",
        "question_pl": "Znajdź dzień rejestracji dla wszystkich testów z wynikiem \"Pass\".",
        "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"",
        "query_pl": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Przełęcz\""
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the completion dates of all the tests that have result \"Fail\"?",
        "question_original_pl": "Jakie są daty zakończenia wszystkich testów, które zakończyły się wynikiem \"Fail\"?",
        "question": "What are the completion day of all the tests that have result \"Fail\"?",
        "question_pl": "Jaki jest dzień zakończenia wszystkich testów z wynikiem \"Fail\"?",
        "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"",
        "query_pl": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Niepowodzenie\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Return the completion date for all the tests that have \"Fail\" result.",
        "question_original_pl": "Zwróć datę ukończenia dla wszystkich testów z wynikiem \"Fail\".",
        "question": "Return the completion day for all the tests that have \"Fail\" result.",
        "question_pl": "Zwróć dzień ukończenia wszystkich testów z wynikiem \"Fail\".",
        "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"",
        "query_pl": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Niepowodzenie\""
    },
    {
        "db_id": "e_learning",
        "question_original": "List the dates of enrollment and completion of the student with personal name \"Karson\".",
        "question_original_pl": "Wymień daty zapisów i ukończenia studiów przez ucznia o imieniu \"Karson\".",
        "question": "List the day of enrollment and completion of the student with personal name \"Karson\".",
        "question_pl": "Podaj dzień zapisania i ukończenia studiów przez ucznia o imieniu \"Karson\".",
        "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"",
        "query_pl": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""
    },
    {
        "db_id": "e_learning",
        "question_original": "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?",
        "question_original_pl": "W jakich dniach student o imieniu i nazwisku \"Karson\" zapisał się na kursy i je ukończył?",
        "question": "On what day did the student whose personal name is \"Karson\" enroll in and complete the courses?",
        "question_pl": "W którym dniu student o imieniu i nazwisku \"Karson\" zapisał się na kursy i je ukończył?",
        "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"",
        "query_pl": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""
    },
    {
        "db_id": "e_learning",
        "question_original": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".",
        "question_original_pl": "Wymień daty zapisania i ukończenia kursu przez ucznia o nazwisku \"Zieme\" i imieniu \"Bernie\".",
        "question": "List the day of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".",
        "question_pl": "Podaj dzień zapisania i ukończenia kursu przez ucznia o nazwisku \"Zieme\" i imieniu \"Bernie\".",
        "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"",
        "query_pl": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
    },
    {
        "db_id": "e_learning",
        "question_original": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?",
        "question_original_pl": "W jakich dniach student o nazwisku \"Zieme\" i imieniu \"Bernie\" zapisał się na kursy i je ukończył?",
        "question": "On what day did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?",
        "question_pl": "W którym dniu student o nazwisku \"Zieme\" i imieniu \"Bernie\" zapisał się na kursy i je ukończył?",
        "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"",
        "query_pl": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the student ID and login name of the student with the most course enrollments",
        "question_original_pl": "Znajdź identyfikator studenta i nazwę logowania studenta z największą liczbą zapisów na kursy.",
        "question": "Find the student ID and login name of the student with the most curriculum enrollments",
        "question_pl": "Znajdź identyfikator studenta i nazwę logowania studenta z największą liczbą zapisów do programu nauczania.",
        "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the student ID and login name of the student who are enrolled in the most courses?",
        "question_original_pl": "Jaki jest identyfikator studenta i nazwa logowania studenta, który jest zapisany na większość kursów?",
        "question": "What are the student ID and login name of the student who are enrolled in the most curriculum?",
        "question_pl": "Jaki jest identyfikator studenta i nazwa logowania studenta, który jest zapisany do większości programów nauczania?",
        "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_learning",
        "question_original": "Which student are enrolled in at least two courses? Give me the student ID and personal name.",
        "question_original_pl": "Którzy studenci są zapisani na co najmniej dwa kursy? Podaj identyfikator studenta i imię i nazwisko.",
        "question": "Which student are enrolled in at least two curriculum? Give me the student ID and personal name.",
        "question_pl": "Którzy studenci są zapisani na co najmniej dwa programy nauczania? Podaj identyfikator studenta i imię i nazwisko.",
        "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the student IDs and middle names of the students enrolled in at most two courses?",
        "question_original_pl": "Jakie są identyfikatory i drugie imiona studentów zapisanych na co najwyżej dwa kursy?",
        "question": "What are the student IDs and middle names of the students enrolled in at most two curriculum?",
        "question_pl": "Jakie są identyfikatory studentów i drugie imiona studentów zapisanych na co najwyżej dwa programy nauczania?",
        "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2",
        "query_pl": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the personal names of students not enrolled in any course.",
        "question_original_pl": "Znajdź imiona i nazwiska studentów, którzy nie są zapisani na żaden kurs.",
        "question": "Find the personal names of students not enrolled in any curriculum.",
        "question_pl": "Znajdź imiona i nazwiska studentów, którzy nie są zapisani do żadnego programu nauczania.",
        "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id",
        "query_pl": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
    },
    {
        "db_id": "e_learning",
        "question_original": "Which students not enrolled in any course? Find their personal names.",
        "question_original_pl": "Którzy studenci nie zapisali się na żaden kurs? Znajdź ich imiona i nazwiska.",
        "question": "Which students not enrolled in any curriculum? Find their personal names.",
        "question_pl": "Którzy uczniowie nie są zapisani do żadnego programu nauczania? Znajdź ich imiona i nazwiska.",
        "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id",
        "query_pl": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
    },
    {
        "db_id": "e_learning",
        "question_original": "How many students did not have any course enrollment?",
        "question_original_pl": "Ilu studentów nie zapisało się na żaden kurs?",
        "question": "How many students did not have any curriculum enrollment?",
        "question_pl": "Ilu uczniów nie zapisało się na żaden program nauczania?",
        "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
        "query_pl": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
    },
    {
        "db_id": "e_learning",
        "question_original": "Count the number of students who did not enroll in any course.",
        "question_original_pl": "Policz liczbę studentów, którzy nie zapisali się na żaden kurs.",
        "question": "Count the number of students who did not enroll in any curriculum.",
        "question_pl": "Policz liczbę studentów, którzy nie zapisali się na żaden program nauczania.",
        "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
        "query_pl": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the common login name of course authors and students.",
        "question_original_pl": "Znajdź wspólny login autorów kursów i studentów.",
        "question": "Find the common login name of curriculum authors and students.",
        "question_pl": "Znajdź wspólny login autorów programów nauczania i studentów.",
        "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
        "query_pl": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the login names used both by some course authors and some students?",
        "question_original_pl": "Jakie są nazwy logowania używane zarówno przez niektórych autorów kursów, jak i niektórych studentów?",
        "question": "What are the login names used both by some curriculum authors and some students?",
        "question_pl": "Jakie są nazwy logowania używane zarówno przez niektórych autorów programów nauczania, jak i niektórych uczniów?",
        "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
        "query_pl": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
    },
    {
        "db_id": "e_learning",
        "question_original": "Find the common personal name of course authors and students.",
        "question_original_pl": "Znajdź wspólne imię i nazwisko autorów kursów i studentów.",
        "question": "Find the common personal name of curriculum authors and students.",
        "question_pl": "Znajdź wspólne imię i nazwisko autorów programów nauczania i uczniów.",
        "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
        "query_pl": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
    },
    {
        "db_id": "e_learning",
        "question_original": "What are the personal names used both by some course authors and some students?",
        "question_original_pl": "Jakich imion używają niektórzy autorzy kursów i niektórzy studenci?",
        "question": "What are the personal names used both by some curriculum authors and some students?",
        "question_pl": "Jakie są nazwy własne używane zarówno przez niektórych autorów programów nauczania, jak i niektórych uczniów?",
        "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students",
        "query_pl": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id.",
        "question_original_pl": "Które roszczenia spowodowały więcej niż 2 ugody lub mają maksymalną wartość roszczenia? Podaj datę zgłoszenia roszczenia i jego identyfikator.",
        "question": "Which claims caused more than 2 settlements or have the maximum claim value? List the day of the claim was made and the claim id.",
        "question_pl": "Które roszczenia spowodowały więcej niż 2 ugody lub mają maksymalną wartość roszczenia? Wymień dzień zgłoszenia roszczenia i jego identyfikator.",
        "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )",
        "query_pl": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim.",
        "question_original_pl": "Znajdź roszczenia, które doprowadziły do więcej niż dwóch ugód lub mają maksymalną wartość roszczenia. Dla każdego z nich podaj datę złożenia roszczenia i identyfikator roszczenia.",
        "question": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the day of the claim was made and the id of the claim.",
        "question_pl": "Znajdź roszczenia, które doprowadziły do więcej niż dwóch ugód lub mają maksymalną wartość roszczenia. Dla każdego z nich podaj dzień złożenia roszczenia i identyfikator roszczenia.",
        "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )",
        "query_pl": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which customer had at least 2 policies but did not file any claims? List the customer details and id.",
        "question_original_pl": "Który klient miał co najmniej 2 polisy, ale nie zgłosił żadnych roszczeń? Wymień dane klienta i jego identyfikator.",
        "question": "Which client had at least 2 policies but did not file any claims? List the client information and id.",
        "question_pl": "Który klient miał co najmniej 2 polisy, ale nie zgłosił żadnych roszczeń? Wymień informacje o kliencie i jego identyfikator.",
        "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id",
        "query_pl": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.",
        "question_original_pl": "Podaj mi dane klientów, którzy mieli dwie lub więcej polis, ale nie zgłosili żadnych roszczeń.",
        "question": "Give me the the client information and id for the client who had two or more policies but did not file any claims.",
        "question_pl": "Podaj mi informacje o kliencie i identyfikator klienta, który miał dwie lub więcej polis, ale nie zgłosił żadnych roszczeń.",
        "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id",
        "query_pl": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "List the method, date and amount of all the payments, in ascending order of date.",
        "question_original_pl": "Wyświetl metodę, datę i kwotę wszystkich płatności w kolejności rosnącej według daty.",
        "question": "List the type, day and amount of all the payments, in ascending order of day.",
        "question_pl": "Wyświetl typ, dzień i kwotę wszystkich płatności w kolejności rosnącej według dnia.",
        "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
        "query_pl": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "What are the method, date and amount of each payment? Sort the list in ascending order of date.",
        "question_original_pl": "Jaka jest metoda, data i kwota każdej płatności? Posortuj listę rosnąco według daty.",
        "question": "What are the type, day and amount of each payment? Sort the list in ascending order of day.",
        "question_pl": "Jaki jest typ, dzień i kwota każdej płatności? Posortuj listę rosnąco według dnia.",
        "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC",
        "query_pl": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.",
        "question_original_pl": "Spośród wszystkich roszczeń, które roszczenia mają kwotę wyższą niż średnia? Podaj datę zgłoszenia roszczenia i datę jego rozliczenia.",
        "question": "Among all the claims, which claims have a claimed amount larger than the average? List the day of the claim was made and the day it was settled.",
        "question_pl": "Które spośród wszystkich roszczeń mają kwotę wyższą niż średnia? Wymień dzień zgłoszenia roszczenia i dzień jego rozliczenia.",
        "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )",
        "query_pl": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.",
        "question_original_pl": "Podaj mi datę roszczenia, datę rozliczenia dla wszystkich roszczeń, których żądana kwota jest wyższa niż średnia.",
        "question": "Give me the day of claim , settlement for all the claims whose claimed amount is larger than the average.",
        "question_pl": "Podaj mi dzień zgłoszenia roszczenia, rozliczenia dla wszystkich roszczeń, których żądana kwota jest wyższa niż średnia.",
        "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )",
        "query_pl": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date.",
        "question_original_pl": "Spośród wszystkich roszczeń, które ugody mają kwotę roszczenia nie wyższą niż średnia? Podaj datę rozpoczęcia roszczenia.",
        "question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start day.",
        "question_pl": "Które spośród wszystkich roszczeń mają kwotę roszczenia nie wyższą niż średnia? Wymień dzień rozpoczęcia roszczenia.",
        "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )",
        "query_pl": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Return the claim start date for the claims whose claimed amount is no more than the average",
        "question_original_pl": "Zwróć datę rozpoczęcia roszczenia dla roszczeń, których wnioskowana kwota nie jest wyższa niż średnia.",
        "question": "Return the claim start day for the claims whose claimed amount is no more than the average",
        "question_pl": "Zwróć dzień rozpoczęcia roszczenia dla roszczeń, których kwota nie jest wyższa niż średnia.",
        "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )",
        "query_pl": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.",
        "question_original_pl": "Którego roszczenia dotyczyła największa liczba ugód? Wymień identyfikator roszczenia, datę jego złożenia i liczbę.",
        "question": "Which claim incurred the most number of settlements? List the claim id, the day of the claim was made, and the number.",
        "question_pl": "Które roszczenie miało największą liczbę rozliczeń? Wymień identyfikator roszczenia, dzień jego złożenia i liczbę.",
        "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.",
        "question_original_pl": "Znajdź identyfikator roszczenia i datę roszczenia, które przyniosło najwięcej rozliczeń. Podaj mi również liczbę.",
        "question": "Find the claim id and claim day of the claim that incurred the most settlement count. Also tell me the count.",
        "question_pl": "Znajdź identyfikator roszczenia i dzień roszczenia, w którym doszło do największej liczby rozliczeń. Podaj mi również liczbę.",
        "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Of all the claims, what was the earliest date when any claim was made?",
        "question_original_pl": "Jaka była najwcześniejsza data złożenia jakiegokolwiek roszczenia spośród wszystkich roszczeń?",
        "question": "Of all the claims, what was the earliest day when any claim was made?",
        "question_pl": "Spośród wszystkich roszczeń, którego dnia najwcześniej złożono jakiekolwiek roszczenie?",
        "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
        "query_pl": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Tell me the the date when the first claim was made.",
        "question_original_pl": "Podaj mi datę złożenia pierwszego wniosku.",
        "question": "Tell me the the day when the first claim was made.",
        "question_pl": "Powiedz mi, kiedy złożono pierwsze roszczenie.",
        "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
        "query_pl": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Who are the customers that had more than 1 policy? List the customer details and id.",
        "question_original_pl": "Kim są klienci, którzy mieli więcej niż 1 polisę? Wymień dane klientów i ich identyfikatory.",
        "question": "Who are the clients that had more than 1 policy? List the client information and id.",
        "question_pl": "Kim są klienci, którzy mieli więcej niż 1 polisę? Wymień informacje o kliencie i jego identyfikator.",
        "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Find the the customer details and id for the customers who had more than one policy.",
        "question_original_pl": "Znajdź dane klienta i identyfikator dla klientów, którzy mieli więcej niż jedną polisę.",
        "question": "Find the the client information and id for the client who had more than one policy.",
        "question_pl": "Znajdź informacje o kliencie i identyfikator klienta, który posiadał więcej niż jedną polisę.",
        "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "What are the claim dates and settlement dates of all the settlements?",
        "question_original_pl": "Jakie są daty roszczeń i daty rozliczenia wszystkich ugód?",
        "question": "What are the day of claim and settlement of all the settlements?",
        "question_pl": "Jaki jest dzień roszczenia i rozliczenia wszystkich rozliczeń?",
        "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements",
        "query_pl": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Tell me the the claim date and settlement date for each settlement case.",
        "question_original_pl": "Podaj mi datę roszczenia i datę rozliczenia dla każdego przypadku rozliczenia.",
        "question": "Tell me the day of claim and settlement for each settlement case.",
        "question_pl": "Podaj mi dzień zgłoszenia roszczenia i rozliczenia dla każdego przypadku rozliczenia.",
        "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements",
        "query_pl": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "What is the most popular payment method?",
        "question_original_pl": "Jaka jest najpopularniejsza metoda płatności?",
        "question": "What is the most popular payment type?",
        "question_pl": "Jaki jest najpopularniejszy rodzaj płatności?",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which payment method is used the most often?",
        "question_original_pl": "Która metoda płatności jest używana najczęściej?",
        "question": "Which payment type is used the most often?",
        "question_pl": "Który rodzaj płatności jest używany najczęściej?",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "With which kind of payment method were the least number of payments processed?",
        "question_original_pl": "Za pomocą jakiej metody płatności przetworzono najmniejszą liczbę płatności?",
        "question": "With which kind of payment type were the least number of payments processed?",
        "question_pl": "Za pomocą jakiego rodzaju płatności przetworzono najmniejszą liczbę płatności?",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "What is the payment method that were used the least often?",
        "question_original_pl": "Jaka metoda płatności była używana najrzadziej?",
        "question": "What is the payment type that were used the least often?",
        "question_pl": "Jaki rodzaj płatności był używany najrzadziej?",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "What are all the distinct details of the customers?",
        "question_original_pl": "Jakie są wszystkie szczegóły dotyczące klientów?",
        "question": "What are all the different information of the client?",
        "question_pl": "Jakie są różne informacje o kliencie?",
        "query": "SELECT DISTINCT customer_details FROM Customers",
        "query_pl": "SELECT DISTINCT customer_details FROM Customers"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Return the distinct customer details.",
        "question_original_pl": "Zwróć szczegółowe dane klienta.",
        "question": "Return the different client information.",
        "question_pl": "Zwróć różne informacje o kliencie.",
        "query": "SELECT DISTINCT customer_details FROM Customers",
        "query_pl": "SELECT DISTINCT customer_details FROM Customers"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which kind of policy type was chosen by the most customers?",
        "question_original_pl": "Który rodzaj polisy został wybrany przez największą liczbę klientów?",
        "question": "Which kind of insurance category was chosen by the most customers?",
        "question_pl": "Którą kategorię ubezpieczeń wybrało najwięcej klientów?",
        "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Find the policy type the most customers choose.",
        "question_original_pl": "Znajdź typ polisy wybierany przez większość klientów.",
        "question": "Find the insurance category the most customers choose.",
        "question_pl": "Znajdź kategorię ubezpieczenia, którą wybiera najwięcej klientów.",
        "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which Payments were processed with Visa? List the payment Id, the date and the amount.",
        "question_original_pl": "Które płatności zostały przetworzone przez Visa? Wymień identyfikator płatności, datę i kwotę.",
        "question": "Which Payments were processed with Visa? List the payment Id, the day and the amount.",
        "question_pl": "Które płatności zostały przetworzone przez Visa? Wymień identyfikator płatności, dzień i kwotę.",
        "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'",
        "query_pl": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Wiza'"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Give me the payment Id, the date and the amount for all the payments processed with Visa.",
        "question_original_pl": "Podaj mi identyfikator płatności, datę i kwotę wszystkich płatności przetworzonych przez Visa.",
        "question": "Give me the payment Id, the day and the amount for all the payments processed with Visa.",
        "question_pl": "Podaj mi identyfikator płatności, dzień i kwotę wszystkich płatności przetworzonych za pomocą Visa.",
        "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'",
        "query_pl": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Wiza'"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "List the details of the customers who do not have any policies.",
        "question_original_pl": "Wymień szczegóły klientów, którzy nie mają żadnych polis.",
        "question": "List the information of the client who do not have any policies.",
        "question_pl": "Wymień informacje o klientach, którzy nie posiadają żadnych polis.",
        "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which customers do not have any policies? Find the details of these customers.",
        "question_original_pl": "Którzy klienci nie mają żadnych polis? Znajdź szczegóły dotyczące tych klientów.",
        "question": "Which client do not have any policies? Find the information of these clients.",
        "question_pl": "Którzy klienci nie mają żadnych polis? Znajdź informacje o tych klientach.",
        "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.",
        "question_original_pl": "Wymień datę zgłoszenia roszczenia, datę jego rozliczenia i kwotę rozliczenia dla wszystkich roszczeń, które miały dokładnie jedno rozliczenie.",
        "question": "List the day the claim was made, the day it was settled and the amount settled for all the claims which had exactly one settlement.",
        "question_pl": "Wymień dzień zgłoszenia roszczenia, dzień jego rozliczenia i kwotę rozliczenia dla wszystkich roszczeń, które miały dokładnie jedno rozliczenie.",
        "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1",
        "query_pl": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
    },
    {
        "db_id": "insurance_policies",
        "question_original": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.",
        "question_original_pl": "Które roszczenia miały dokładnie jedną ugodę? Dla każdego z nich podaj datę zgłoszenia roszczenia, datę jego rozliczenia i kwotę rozliczenia.",
        "question": "Which claims had exactly one settlement? For each, tell me the the day the claim was made, the day it was settled and the amount settled.",
        "question_pl": "Które roszczenia miały dokładnie jedną ugodę? Dla każdego z nich podaj dzień zgłoszenia roszczenia, dzień jego rozliczenia i kwotę rozliczenia.",
        "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1",
        "query_pl": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the department with the most employees.",
        "question_original_pl": "Znajdź dział z największą liczbą pracowników.",
        "question": "Find the division with the most staffs.",
        "question_pl": "Znajdź oddział z największą liczbą pracowników.",
        "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
        "query_pl": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the employee id of the head whose department has the least number of employees?",
        "question_original_pl": "Jaki jest identyfikator pracownika kierownika, którego dział zatrudnia najmniejszą liczbę pracowników?",
        "question": "What is the staff id of the leader whose division has the least number of staffs?",
        "question_pl": "Jaki jest identyfikator pracownika lidera, którego oddział ma najmniej pracowników?",
        "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "query_pl": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Tell me the employee id of the head of the department with the least employees.",
        "question_original_pl": "Podaj mi identyfikator kierownika działu zatrudniającego najmniej pracowników.",
        "question": "Tell me the employee id of the leader of the division with the least employees.",
        "question_pl": "Podaj mi identyfikator pracownika lidera działu z najmniejszą liczbą pracowników.",
        "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "query_pl": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are names of patients who made an appointment?",
        "question_original_pl": "Jakie są nazwiska pacjentów, którzy umówili się na wizytę?",
        "question": "What are names of patients who made an reservation?",
        "question_pl": "Jakie są nazwiska pacjentów, którzy dokonali rezerwacji?",
        "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "query_pl": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the names of patients who have made appointments.",
        "question_original_pl": "Wymień nazwiska pacjentów, którzy umówili się na wizytę.",
        "question": "List the names of patients who have made reservation.",
        "question_pl": "Wymień nazwiska pacjentów, którzy dokonali rezerwacji.",
        "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "query_pl": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "question_original_pl": "Którzy pacjenci umówili się na więcej niż jedną wizytę? Podaj nazwisko i numer telefonu tych pacjentów.",
        "question": "Which patients made more than one reservation? Tell me the name and telephone number of these patients.",
        "question_pl": "Którzy pacjenci dokonali więcej niż jednej rezerwacji? Podaj nazwisko i numer telefonu tych pacjentów.",
        "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "query_pl": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the id of the appointment with the most recent start date?",
        "question_original_pl": "Znajdź identyfikator spotkania z najnowszą datą rozpoczęcia?",
        "question": "Find the id of the reservation with the most recent start date?",
        "question_pl": "Znajdź identyfikator rezerwacji z najnowszą datą rozpoczęcia?",
        "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
        "query_pl": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the id of the appointment that started most recently?",
        "question_original_pl": "Jaki jest identyfikator spotkania, które rozpoczęło się ostatnio?",
        "question": "What is the id of the reservation that started most recently?",
        "question_pl": "Jaki jest identyfikator rezerwacji, która rozpoczęła się ostatnio?",
        "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
        "query_pl": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the name of physicians who took some appointment.",
        "question_original_pl": "Wymień nazwiska lekarzy, którzy przyjęli niektóre wizyty.",
        "question": "List the name of doctor who took some reservation.",
        "question_pl": "Wymień nazwisko lekarza, który dokonał rezerwacji.",
        "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "query_pl": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of all the physicians who took appointments.",
        "question_original_pl": "Podaj nazwiska wszystkich lekarzy, którzy przyjmowali wizyty.",
        "question": "What are the names of all the doctor who took reservation.",
        "question_pl": "Jakie są nazwiska wszystkich lekarzy, którzy przyjęli rezerwację.",
        "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "query_pl": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the name of physicians who never took any appointment.",
        "question_original_pl": "Wymień nazwiska lekarzy, którzy nigdy nie przyjęli żadnej wizyty.",
        "question": "List the name of doctor who never took any reservation.",
        "question_pl": "Wymień nazwisko lekarza, który nigdy nie przyjął żadnej rezerwacji.",
        "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "query_pl": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which physicians have never taken any appointment? Find their names.",
        "question_original_pl": "Którzy lekarze nigdy nie przyjęli żadnej wizyty? Znajdź ich nazwiska.",
        "question": "Which doctor have never taken any reservation? Find their names.",
        "question_pl": "Który lekarz nigdy nie przyjął żadnej rezerwacji? Znajdź ich nazwiska.",
        "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "query_pl": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the name and primarily affiliated department name of each physician?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz nazwa oddziału każdego lekarza?",
        "question": "What are the name and primarily affiliated department name of each doctor?",
        "question_pl": "Jakie jest imię i nazwisko oraz nazwa oddziału każdego z lekarzy?",
        "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",
        "query_pl": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the name of the patient who made the most recent appointment?",
        "question_original_pl": "Jak nazywa się pacjent, który odbył ostatnią wizytę?",
        "question": "What is the name of the patient who made the most recent reservation?",
        "question_pl": "Jak nazywa się pacjent, który dokonał ostatniej rezerwacji?",
        "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of the patient who made the appointment with the most recent start date.",
        "question_original_pl": "Znajdź nazwisko pacjenta, który umówił się na wizytę z najnowszą datą rozpoczęcia.",
        "question": "Find the name of the sick people who made the reservation with the most recent start date.",
        "question_pl": "Znajdź nazwiska osób chorych, które dokonały rezerwacji z najnowszą datą rozpoczęcia.",
        "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "How many patients stay in room 112?",
        "question_original_pl": "Ilu pacjentów przebywa w pokoju 112?",
        "question": "How many sick people stay in room 112?",
        "question_pl": "Ilu chorych przebywa w pokoju 112?",
        "query": "SELECT count(distinct patient) FROM stay WHERE room  =  112",
        "query_pl": "SELECT count(patient) FROM stay WHERE room  =  112"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Count the number of patients who stayed in room 112.",
        "question_original_pl": "Policz liczbę pacjentów, którzy przebywali w pokoju 112.",
        "question": "Count the number of sick people who stayed in room 112.",
        "question_pl": "Policz liczbę chorych osób, które przebywały w pokoju 112.",
        "query": "SELECT count(distinct patient) FROM stay WHERE room  =  112",
        "query_pl": "SELECT count(patient) FROM stay WHERE room  =  112"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of medication used on the patient who stays in room 111?",
        "question_original_pl": "Znajdź nazwę leku zastosowanego u pacjenta przebywającego w pokoju 111?",
        "question": "Find the name of medication used on the sick people who stays in room 111?",
        "question_pl": "Znajdź nazwę leku stosowanego u chorych osób przebywających w pokoju 111?",
        "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "query_pl": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the name of the medication used for the patient staying in room 111?",
        "question_original_pl": "Jak nazywa się lek stosowany u pacjenta przebywającego w pokoju 111?",
        "question": "What is the name of the medication used for the sick people staying in room 111?",
        "question_pl": "Jak nazywa się lek stosowany u chorych osób przebywających w pokoju 111?",
        "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "query_pl": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the patient who most recently stayed in room 111.",
        "question_original_pl": "Znajdź pacjenta, który ostatnio przebywał w pokoju 111.",
        "question": "Find the sick people who most recently stayed in room 111.",
        "question_pl": "Znajdź chore osoby, które ostatnio przebywały w pokoju 111.",
        "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1",
        "query_pl": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the id of the patient who stayed in room 111 most recently?",
        "question_original_pl": "Jaki jest identyfikator pacjenta, który ostatnio przebywał w pokoju 111?",
        "question": "What is the id of the sick people who stayed in room 111 most recently?",
        "question_pl": "Jaki jest identyfikator chorych osób, które ostatnio przebywały w pokoju 111?",
        "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1",
        "query_pl": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the name of the nurse has the most appointments?",
        "question_original_pl": "Jak nazywa się pielęgniarka, która ma najwięcej wizyt?",
        "question": "What is the name of the nurse has the most reservation?",
        "question_pl": "Jak nazywa się pielęgniarka, która ma najwięcej zastrzeżeń?",
        "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of the nurse who has the largest number of appointments.",
        "question_original_pl": "Znajdź nazwisko pielęgniarki, która ma największą liczbę wizyt.",
        "question": "Find the name of the nurse who has the largest number of reservation.",
        "question_pl": "Znajdź nazwisko pielęgniarki, która ma największą liczbę rezerwacji.",
        "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "question_original_pl": "Iloma pacjentami opiekują się poszczególni lekarze? Wymień ich nazwiska i liczbę pacjentów, którymi się opiekują.",
        "question": "How many sick people do each doctor take care of? List their names and number of sick people they take care of.",
        "question_pl": "Iloma chorymi opiekują się poszczególni lekarze? Wymień ich nazwiska i liczbę chorych, którymi się opiekują.",
        "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "query_pl": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of physicians who are in charge of more than one patient.",
        "question_original_pl": "Znajdź nazwiska lekarzy, którzy zajmują się więcej niż jednym pacjentem.",
        "question": "Find the name of doctor who are in charge of more than one patient.",
        "question_pl": "Znajdź nazwisko lekarza, który zajmuje się więcej niż jednym pacjentem.",
        "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "query_pl": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "How many different types of rooms are there?",
        "question_original_pl": "Ile jest różnych rodzajów pokoi?",
        "question": "How many different categories of rooms are there?",
        "question_pl": "Ile jest różnych kategorii pokoi?",
        "query": "SELECT count(DISTINCT roomtype) FROM room",
        "query_pl": "SELECT count(DISTINCT roomtype) FROM room"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the number of distinct room types available.",
        "question_original_pl": "Sprawdź liczbę dostępnych typów pokoi.",
        "question": "Find the number of different room categories available.",
        "question_pl": "Sprawdź liczbę dostępnych kategorii pokoi.",
        "query": "SELECT count(DISTINCT roomtype) FROM room",
        "query_pl": "SELECT count(DISTINCT roomtype) FROM room"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the names of the physicians who prescribe medication Thesisin?",
        "question_original_pl": "Jak nazywają się lekarze, którzy przepisują lek Thesisin?",
        "question": "What is the names of the doctor who prescribe medication Thesisin?",
        "question_pl": "Jak nazywa się lekarz, który przepisuje lek Thesisin?",
        "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"",
        "query_pl": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name and position of physicians who prescribe some medication whose brand is X?",
        "question_original_pl": "Znajdź nazwiska i stanowiska lekarzy, którzy przepisują leki marki X?",
        "question": "Find the name and post of doctor who prescribe some medication whose brand is X?",
        "question_pl": "Znajdź nazwisko i stanowisko lekarza, który przepisał lek marki X?",
        "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.",
        "question_original_pl": "Którzy lekarze przepisują lek marki X? Podaj mi nazwiska i stanowiska tych lekarzy.",
        "question": "Which doctor prescribe a medication of brand X? Tell me the name and post of those doctor.",
        "question_pl": "Który lekarz przepisał lek marki X? Podaj mi nazwisko i stanowisko tego lekarza.",
        "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of physicians whose position title contains the word 'senior'.",
        "question_original_pl": "Znajdź nazwiska lekarzy, których nazwa stanowiska zawiera słowo \"senior\".",
        "question": "Find the name of doctor whose post title contains the word 'senior'.",
        "question_pl": "Znajdź nazwisko lekarza, którego tytuł stanowiska zawiera słowo \"senior\".",
        "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "query_pl": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of the physicians who have 'senior' in their titles.",
        "question_original_pl": "Jak nazywają się lekarze, którzy mają w tytule \"senior\".",
        "question": "What are the names of the doctor who have 'senior' in their titles.",
        "question_pl": "Jak nazywają się lekarze, którzy w tytule mają \"senior\".",
        "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "query_pl": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the patient who has the most recent undergoing treatment?",
        "question_original_pl": "Znajdź pacjenta, który był ostatnio leczony?",
        "question": "Find the sick people who has the most recent undergoing treatment?",
        "question_pl": "Znajdź osoby chore, które ostatnio przeszły leczenie?",
        "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "query_pl": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which patient is undergoing the most recent treatment?",
        "question_original_pl": "Który pacjent jest ostatnio leczony?",
        "question": "Which sick people is undergoing the most recent treatment?",
        "question_pl": "Który chory jest ostatnio leczony?",
        "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "query_pl": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "question_original_pl": "Znajdź nazwiska wszystkich pacjentów, którzy są w trakcie leczenia i przebywają w pokoju 111.",
        "question": "Find the names of all sick people who have an undergoing treatment and are staying in room 111.",
        "question_pl": "Znajdź nazwiska wszystkich chorych osób, które są w trakcie leczenia i przebywają w pokoju 111.",
        "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "query_pl": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "question_original_pl": "Jak nazywają się pacjenci, którzy przebywają w pokoju 111 i są w trakcie leczenia?",
        "question": "What are the names of sick people who are staying in room 111 and have an undergoing treatment?",
        "question_pl": "Jak nazywają się chorzy, którzy przebywają w pokoju 111 i są w trakcie leczenia?",
        "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "query_pl": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which nurses are in charge of patients undergoing treatments?",
        "question_original_pl": "Które pielęgniarki są odpowiedzialne za pacjentów poddawanych leczeniu?",
        "question": "Which nurses are in charge of sick people undergoing treatments?",
        "question_pl": "Które pielęgniarki są odpowiedzialne za chorych poddawanych leczeniu?",
        "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "query_pl": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the names of all distinct medications, ordered in an alphabetical order.",
        "question_original_pl": "Wymień nazwy wszystkich leków, uporządkowane w kolejności alfabetycznej.",
        "question": "List the names of all different medications, ordered in an alphabetical order.",
        "question_pl": "Wymień nazwy wszystkich leków w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT name FROM medication ORDER BY name",
        "query_pl": "SELECT DISTINCT name FROM medication ORDER BY name"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the physicians' employee ids together with their primary affiliation departments' ids.",
        "question_original_pl": "Wymień identyfikatory pracowników lekarzy wraz z identyfikatorami ich głównych oddziałów.",
        "question": "List the doctor' employee ids together with their primary affiliation departments' ids.",
        "question_pl": "Wyświetl identyfikatory pracowników lekarza wraz z identyfikatorami ich głównych oddziałów.",
        "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1",
        "query_pl": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of departments that have primarily affiliated physicians.",
        "question_original_pl": "Jak nazywają się oddziały, na których pracują głównie lekarze stowarzyszeni.",
        "question": "What are the names of divisions that have primarily affiliated doctor.",
        "question_pl": "Jak nazywają się oddziały, w których pracują głównie lekarze.",
        "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1",
        "query_pl": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the highest cost, lowest cost and average cost of procedures?",
        "question_original_pl": "Jakie są najwyższe, najniższe i średnie koszty procedur?",
        "question": "What are the highest price, lowest price and average price of procedures?",
        "question_pl": "Jaka jest najwyższa, najniższa i średnia cena zabiegów?",
        "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "query_pl": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Tell me the highest, lowest, and average cost of procedures.",
        "question_original_pl": "Podaj najwyższy, najniższy i średni koszt procedur.",
        "question": "Tell me the highest, lowest, and average price of procedures.",
        "question_pl": "Podaj najwyższą, najniższą i średnią cenę procedur.",
        "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "query_pl": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
    },
    {
        "db_id": "hospital_1",
        "question_original": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "question_original_pl": "Wyświetl nazwę i koszt wszystkich procedur posortowanych według kosztu od najwyższego do najniższego.",
        "question": "List the name and price of all procedures sorted by the price from the highest to the lowest.",
        "question_pl": "Wyświetl nazwę i cenę wszystkich procedur posortowanych według ceny od najwyższej do najniższej.",
        "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC",
        "query_pl": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "question_original_pl": "Posortuj listę nazw i kosztów wszystkich procedur w kolejności malejących kosztów.",
        "question": "Sort the list of names and price of all procedures in the descending order of price.",
        "question_pl": "Posortuj listę nazw i cen wszystkich procedur malejąco według ceny.",
        "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC",
        "query_pl": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "question_original_pl": "Znajdź lekarzy, którzy są przeszkoleni w procedurze, która kosztuje ponad 5000.",
        "question": "Find the doctor who are trained in a procedure that costs more than 5000.",
        "question_pl": "Znajdź lekarza, który jest przeszkolony w procedurze, która kosztuje ponad 5000.",
        "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "query_pl": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What is the average cost of procedures that physician John Wen was trained in?",
        "question_original_pl": "Jaki jest średni koszt procedur, w których lekarz John Wen został przeszkolony?",
        "question": "What is the average price of procedures that doctor John Wen was trained in?",
        "question_pl": "Jaka jest średnia cena procedur, w których uczestniczył lekarz John Wen?",
        "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Compute the mean price of procedures physician John Wen was trained in.",
        "question_original_pl": "Oblicz średnią cenę procedur, w których lekarz John Wen został przeszkolony.",
        "question": "Compute the mean price of procedures doctor John Wen was trained in.",
        "question_pl": "Oblicz średnią cenę procedur, w których został przeszkolony lekarz John Wen.",
        "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of procedures physician John Wen was trained in?",
        "question_original_pl": "Jak nazywają się procedury, w których został przeszkolony lekarz John Wen?",
        "question": "What are the names of procedures doctor John Wen was trained in?",
        "question_pl": "Jak nazywają się procedury, w których szkolił się lekarz John Wen?",
        "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the procedures that cost more than 1000 or are specialized in by physician John Wen?",
        "question_original_pl": "Jakie są procedury, które kosztują więcej niż 1000 lub w których specjalizuje się lekarz John Wen?",
        "question": "What are the procedures that price more than 1000 or are specialized in by physician John Wen?",
        "question_pl": "Które procedury kosztują więcej niż 1000 lub w których specjalizuje się lekarz John Wen?",
        "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?",
        "question_original_pl": "Znajdź nazwy wszystkich procedur, które kosztują więcej niż 1000, ale w których lekarz John Wen nie został przeszkolony?",
        "question": "Find the names of all procedures which price more than 1000 but which physician John Wen was not trained in?",
        "question_pl": "Znajdź nazwy wszystkich procedur, których cena przekracza 1000, ale w których lekarz John Wen nie został przeszkolony?",
        "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Among the procedures that cost more than 1000, which were not specialized in by physician John Wen?",
        "question_original_pl": "Wśród procedur kosztujących ponad 1000, w których nie specjalizował się lekarz John Wen?",
        "question": "Among the procedures that price more than 1000, which were not specialized in by physician John Wen?",
        "question_pl": "Wśród procedur, których cena przekracza 1000, w których nie specjalizował się lekarz John Wen?",
        "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.",
        "question_original_pl": "Znajdź nazwy wszystkich procedur, których koszt jest niższy niż 5000 i w których lekarz John Wen został przeszkolony.",
        "question": "Find the names of all procedures such that the price is less than 5000 and physician John Wen was trained in.",
        "question_pl": "Znajdź nazwy wszystkich procedur, których cena jest niższa niż 5000 i w których lekarz John Wen został przeszkolony.",
        "query": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "query_pl": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "question_original_pl": "Znajdź nazwiska lekarzy, którzy są powiązani z oddziałem chirurgii lub psychiatrii.",
        "question": "Find the name of doctor who are affiliated with Surgery or Psychiatry division.",
        "question_pl": "Znajdź nazwisko lekarza, który jest powiązany z oddziałem chirurgii lub psychiatrii.",
        "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "query_pl": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Chirurgia' OR T3.name  =  'Psychiatria'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "question_original_pl": "Którzy lekarze są związani z oddziałem chirurgii lub psychiatrii? Podaj ich nazwiska.",
        "question": "Which doctor are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "question_pl": "Którzy lekarze są związani z oddziałem chirurgii lub psychiatrii? Podaj mi ich nazwiska.",
        "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "query_pl": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Chirurgia' OR T3.name  =  'Psychiatria'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the names of patients who are not using the medication of Procrastin-X.",
        "question_original_pl": "Znajdź nazwiska pacjentów, którzy nie stosują leku Procrastin-X.",
        "question": "Find the names of sick people who are not using the medication of Procrastin-X.",
        "question_pl": "Znajdź nazwiska chorych osób, które nie stosują leku Procrastin-X.",
        "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'",
        "query_pl": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the names of patients who are not taking the medication of Procrastin-X.",
        "question_original_pl": "Jakie są nazwy pacjentów, którzy nie przyjmują leku Procrastin-X.",
        "question": "What are the names of sick people who are not taking the medication of Procrastin-X.",
        "question_pl": "Jak nazywają się osoby chore, które nie przyjmują leku Procrastin-X?",
        "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'",
        "query_pl": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Find the number of patients who are not using the medication of Procrastin-X.",
        "question_original_pl": "Znajdź liczbę pacjentów, którzy nie stosują leku Procrastin-X.",
        "question": "Find the number of sick people who are not using the medication of Procrastin-X.",
        "question_pl": "Znajdź liczbę chorych osób, które nie stosują leku Procrastin-X.",
        "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "query_pl": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
    },
    {
        "db_id": "hospital_1",
        "question_original": "How many patients are not using Procrastin-X as medication?",
        "question_original_pl": "Ilu pacjentów nie stosuje Procrastin-X jako leku?",
        "question": "How many sick people are not using Procrastin-X as medication?",
        "question_pl": "Ilu chorych ludzi nie używa Procrastin-X jako leku?",
        "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "query_pl": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
    },
    {
        "db_id": "hospital_1",
        "question_original": "How many appointments are there?",
        "question_original_pl": "Ile jest spotkań?",
        "question": "How many reservation are there?",
        "question_pl": "Ile jest rezerwacji?",
        "query": "SELECT count(*) FROM appointment",
        "query_pl": "SELECT count(*) FROM appointment"
    },
    {
        "db_id": "hospital_1",
        "question_original": "Count how many appointments have been made in total.",
        "question_original_pl": "Policz, ile spotkań zostało w sumie umówionych.",
        "question": "Count how many reservation have been made in total.",
        "question_pl": "Policz, ile rezerwacji zostało w sumie dokonanych.",
        "query": "SELECT count(*) FROM appointment",
        "query_pl": "SELECT count(*) FROM appointment"
    },
    {
        "db_id": "hospital_1",
        "question_original": "What are the distinct names of nurses on call?",
        "question_original_pl": "Jakie są nazwy pielęgniarek dyżurujących pod telefonem?",
        "question": "What are the different names of nurses on call?",
        "question_pl": "Jakie są różne nazwy pielęgniarek dyżurnych?",
        "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "query_pl": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the type and nationality of ships?",
        "question_original_pl": "Jaki jest typ i narodowość statków?",
        "question": "What are the category and nation of vessels?",
        "question_pl": "Jaka jest kategoria i kraj statków?",
        "query": "SELECT TYPE ,  Nationality FROM ship",
        "query_pl": "SELECT TYPE ,  Nationality FROM ship"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the types and nationalities of every ship?",
        "question_original_pl": "Jakie są typy i narodowości każdego statku?",
        "question": "What are the categories and nation of every vessel?",
        "question_pl": "Jakie są kategorie i narody każdego statku?",
        "query": "SELECT TYPE ,  Nationality FROM ship",
        "query_pl": "SELECT TYPE ,  Nationality FROM ship"
    },
    {
        "db_id": "ship_mission",
        "question_original": "List the name of ships whose nationality is not \"United States\".",
        "question_original_pl": "Wymień nazwy statków, których przynależność państwowa nie jest inna niż \"Stany Zjednoczone\".",
        "question": "List the name of vessels whose nation is not \"United States\".",
        "question_pl": "Wymień nazwy statków, których krajem nie są \"Stany Zjednoczone\".",
        "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"",
        "query_pl": "SELECT Name FROM ship WHERE Nationality != \"Stany Zjednoczone\""
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show the name of ships whose nationality is either United States or United Kingdom.",
        "question_original_pl": "Pokaż nazwy statków, których przynależność państwowa to Stany Zjednoczone lub Wielka Brytania.",
        "question": "Show the name of vessels whose nation is either United States or United Kingdom.",
        "question_pl": "Pokaż nazwy statków, których państwem są Stany Zjednoczone lub Wielka Brytania.",
        "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"",
        "query_pl": "SELECT Name FROM ship WHERE Nationality  =  \"Stany Zjednoczone\" OR Nationality  =  \"Wielka Brytania\""
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show different types of ships and the number of ships of each type.",
        "question_original_pl": "Pokaż różne typy statków i liczbę statków każdego typu.",
        "question": "Show different categories of vessels and the number of vessels of each category.",
        "question_pl": "Pokaż różne kategorie statków i liczbę statków każdej kategorii.",
        "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
    },
    {
        "db_id": "ship_mission",
        "question_original": "For each type, how many ships are there?",
        "question_original_pl": "Ile jest statków każdego typu?",
        "question": "For each category, how many vessels are there?",
        "question_pl": "Ile jest statków w każdej kategorii?",
        "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
    },
    {
        "db_id": "ship_mission",
        "question_original": "Please show the most common type of ships.",
        "question_original_pl": "Wskaż najpopularniejsze typy statków.",
        "question": "Please show the most common category of vessels.",
        "question_pl": "Wskaż najpopularniejszą kategorię statków.",
        "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What is the most common type of ships?",
        "question_original_pl": "Jaki jest najpopularniejszy typ statków?",
        "question": "What is the most common category of vessels?",
        "question_pl": "Jaka jest najpopularniejsza kategoria statków?",
        "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_mission",
        "question_original": "List the nations that have more than two ships.",
        "question_original_pl": "Wymień kraje, które mają więcej niż dwa statki.",
        "question": "List the nations that have more than two vessels.",
        "question_pl": "Wymień narody, które mają więcej niż dwa statki.",
        "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2",
        "query_pl": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the nations that have more than two ships?",
        "question_original_pl": "Które kraje mają więcej niż dwa statki?",
        "question": "What are the nations that have more than two vessels?",
        "question_pl": "Jakie narody mają więcej niż dwa statki?",
        "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2",
        "query_pl": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show different types of ships and the average tonnage of ships of each type.",
        "question_original_pl": "Pokaż różne typy statków i średni tonaż statków każdego typu.",
        "question": "Show different categories of vessels and the average tonnage of vessels of each category.",
        "question_pl": "Pokaż różne kategorie statków i średni tonaż statków każdej kategorii.",
        "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
    },
    {
        "db_id": "ship_mission",
        "question_original": "For each type, what is the average tonnage?",
        "question_original_pl": "Jaki jest średni tonaż dla każdego typu?",
        "question": "For each category, what is the average tonnage?",
        "question_pl": "Jaki jest średni tonaż dla każdej kategorii?",
        "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show codes and fates of missions, and names of ships involved.",
        "question_original_pl": "Pokaż kody i losy misji oraz nazwy zaangażowanych statków.",
        "question": "Show codes and destiny of missions, and names of ships involved.",
        "question_pl": "Pokaż kody i przeznaczenie misji oraz nazwy zaangażowanych statków.",
        "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID",
        "query_pl": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the mission codes, fates, and names of the ships involved?",
        "question_original_pl": "Jakie są kody misji, losy i nazwy zaangażowanych statków?",
        "question": "What are the mission codes, destiny, and names of the ships involved?",
        "question_pl": "Jakie są kody misji, przeznaczenie i nazwy zaangażowanych statków?",
        "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID",
        "query_pl": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show the distinct fate of missions that involve ships with nationality \"United States\"",
        "question_original_pl": "Pokaż losy misji, w których biorą udział statki o przynależności państwowej \"Stany Zjednoczone\".",
        "question": "Show the different destiny of missions that involve ships with nationality \"United States\"",
        "question_pl": "Pokaż różne przeznaczenie misji, w których biorą udział statki o przynależności państwowej \"Stany Zjednoczone\".",
        "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"",
        "query_pl": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"Stany Zjednoczone\""
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the different fates of the mission that involved ships from the United States?",
        "question_original_pl": "Jakie są różne losy misji z udziałem statków ze Stanów Zjednoczonych?",
        "question": "What are the different destiny of the mission that involved ships from the United States?",
        "question_pl": "Jakie są różne losy misji, w której uczestniczyły statki ze Stanów Zjednoczonych?",
        "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"",
        "query_pl": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"Stany Zjednoczone\""
    },
    {
        "db_id": "ship_mission",
        "question_original": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.",
        "question_original_pl": "Pokaż typy statków, które mają zarówno statki o tonażu większym niż 6000, jak i statki o tonażu mniejszym niż 4000.",
        "question": "Show the categories of vessel that have both vessel with tonnage larger than 6000 and vessel with tonnage smaller than 4000.",
        "question_pl": "Pokaż kategorie statków, które mają zarówno statki o tonażu większym niż 6000, jak i statki o tonażu mniejszym niż 4000.",
        "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000",
        "query_pl": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
    },
    {
        "db_id": "ship_mission",
        "question_original": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
        "question_original_pl": "Jakie są typy statków, które mają zarówno statki o tonażu większym niż 6000, jak i te o tonażu mniejszym niż 4000?",
        "question": "What are the categories of the vessel that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?",
        "question_pl": "Jakie są kategorie statków, które mają zarówno statki o tonażu większym niż 6000, jak i te o tonażu mniejszym niż 4000?",
        "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000",
        "query_pl": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
    },
    {
        "db_id": "student_1",
        "question_original": "What are the last names of students in room 111?",
        "question_original_pl": "Jak nazywają się uczniowie w pokoju 111?",
        "question": "What are the family names of students in room 111?",
        "question_pl": "Jakie są nazwiska uczniów w pokoju 111?",
        "query": "SELECT lastname FROM list WHERE classroom  =  111",
        "query_pl": "SELECT lastname FROM list WHERE classroom  =  111"
    },
    {
        "db_id": "student_1",
        "question_original": "What are the first names of students in room 108?",
        "question_original_pl": "Jakie są imiona uczniów w sali 108?",
        "question": "What are the forenames of students in room 108?",
        "question_pl": "Jakie są imiona uczniów w pokoju 108?",
        "query": "SELECT firstname FROM list WHERE classroom  =  108",
        "query_pl": "SELECT firstname FROM list WHERE classroom  =  108"
    },
    {
        "db_id": "student_1",
        "question_original": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.",
        "question_original_pl": "Dla każdej klasy podaj klasę, która jest w niej nauczana. Podaj tylko numer sali lekcyjnej i numer klasy.",
        "question": "For each class room report the grade that is taught in it. Report just the class room number and the grade number.",
        "question_pl": "Dla każdej sali lekcyjnej podaj klasę, która jest w niej nauczana. Podaj tylko numer sali lekcyjnej i numer klasy.",
        "query": "SELECT DISTINCT classroom ,  grade FROM list",
        "query_pl": "SELECT DISTINCT classroom ,  grade FROM list"
    },
    {
        "db_id": "student_1",
        "question_original": "Which grade is studying in classroom 103?",
        "question_original_pl": "Która klasa uczy się w klasie 103?",
        "question": "Which grade is studying in class room 103?",
        "question_pl": "Która klasa uczy się w sali lekcyjnej 103?",
        "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103",
        "query_pl": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
    },
    {
        "db_id": "student_1",
        "question_original": "Find the grade taught in classroom 103.",
        "question_original_pl": "Znajdź klasę nauczaną w klasie 103.",
        "question": "Find the grade taught in class room 103.",
        "question_pl": "Znajdź klasę nauczaną w sali lekcyjnej 103.",
        "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103",
        "query_pl": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
    },
    {
        "db_id": "student_1",
        "question_original": "Which classrooms are used by grade 4?",
        "question_original_pl": "Które sale lekcyjne są używane przez klasę 4?",
        "question": "Which schoolrooms are used by grade 4?",
        "question_pl": "Które sale szkolne są używane przez klasę 4?",
        "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4",
        "query_pl": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
    },
    {
        "db_id": "student_1",
        "question_original": "Find the classrooms in which grade 4 is studying.",
        "question_original_pl": "Znajdź klasy, w których uczy się klasa 4.",
        "question": "Find the schoolrooms in which grade 4 is studying.",
        "question_pl": "Znajdź sale szkolne, w których uczy się klasa 4.",
        "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4",
        "query_pl": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
    },
    {
        "db_id": "student_1",
        "question_original": "Which classrooms are used by grade 5?",
        "question_original_pl": "Które sale lekcyjne są używane przez klasę 5?",
        "question": "Which schoolrooms are used by grade 5?",
        "question_pl": "Które sale szkolne są używane przez klasę 5?",
        "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5",
        "query_pl": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
    },
    {
        "db_id": "student_1",
        "question_original": "Show me the classrooms grade 5 is using.",
        "question_original_pl": "Pokaż mi klasy, z których korzysta klasa 5.",
        "question": "Show me the schoolrooms grade 5 is using.",
        "question_pl": "Pokaż mi sale szkolne, z których korzysta klasa 5.",
        "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5",
        "query_pl": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
    },
    {
        "db_id": "student_1",
        "question_original": "what are the last names of the teachers who teach grade 5?",
        "question_original_pl": "Jak nazywają się nauczyciele, którzy uczą w klasie 5?",
        "question": "what are the family names of the teachers who teach grade 5?",
        "question_pl": "Jakie są nazwiska nauczycieli, którzy uczą w klasie 5?",
        "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5",
        "query_pl": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
    },
    {
        "db_id": "student_1",
        "question_original": "Which teachers teach in classroom 110? Give me their first names.",
        "question_original_pl": "Którzy nauczyciele uczą w klasie 110? Podaj ich imiona.",
        "question": "Which teachers teach in classroom 110? Give me their forenames.",
        "question_pl": "Którzy nauczyciele uczą w klasie 110? Podaj ich imiona i nazwiska.",
        "query": "SELECT firstname FROM teachers WHERE classroom  =  110",
        "query_pl": "SELECT firstname FROM teachers WHERE classroom  =  110"
    },
    {
        "db_id": "student_1",
        "question_original": "Report the first name and last name of all the students.",
        "question_original_pl": "Podaj imię i nazwisko wszystkich uczniów.",
        "question": "Report the forename and family name of all the students.",
        "question_pl": "Podaj imiona i nazwiska wszystkich uczniów.",
        "query": "SELECT DISTINCT firstname ,  lastname FROM list",
        "query_pl": "SELECT DISTINCT firstname ,  lastname FROM list"
    },
    {
        "db_id": "student_1",
        "question_original": "Show each student's first name and last name.",
        "question_original_pl": "Pokaż imię i nazwisko każdego ucznia.",
        "question": "Show each student's forename and family name.",
        "question_pl": "Pokaż imię i nazwisko oraz nazwisko rodowe każdego ucznia.",
        "query": "SELECT DISTINCT firstname ,  lastname FROM list",
        "query_pl": "SELECT DISTINCT firstname ,  lastname FROM list"
    },
    {
        "db_id": "student_1",
        "question_original": "Find all students taught by OTHA MOYER. Output the first and last names of the students.",
        "question_original_pl": "Znajdź wszystkich uczniów nauczanych przez OTHA MOYER. Wypisz imiona i nazwiska uczniów.",
        "question": "Find all students taught by OTHA MOYER. Output the full names of the students.",
        "question_pl": "Znajdź wszystkich uczniów nauczanych przez OTHA MOYER. Wypisz pełne imiona i nazwiska uczniów.",
        "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
        "query_pl": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
    },
    {
        "db_id": "student_1",
        "question_original": "Which students study under the teacher named OTHA MOYER? Give me the first and last names of the students.",
        "question_original_pl": "Którzy uczniowie uczą się pod kierunkiem nauczyciela o nazwisku OTHA MOYER? Podaj imiona i nazwiska uczniów.",
        "question": "Which students study under the teacher named OTHA MOYER? Give me the full names of the students.",
        "question_pl": "Którzy uczniowie uczą się pod kierunkiem nauczyciela o nazwisku OTHA MOYER? Podaj pełne imiona i nazwiska uczniów.",
        "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
        "query_pl": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
    },
    {
        "db_id": "student_1",
        "question_original": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name of the teachers.",
        "question_original_pl": "Którzy nauczyciele uczą ucznia o imieniu EVELINA BROMLEY? Podaj imię i nazwisko nauczyciela.",
        "question": "Which teachers teach the student named EVELINA BROMLEY? Give me the forename and surname of the teachers.",
        "question_pl": "Którzy nauczyciele uczą ucznia o imieniu EVELINA BROMLEY? Podaj imię i nazwisko nauczycieli.",
        "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""
    },
    {
        "db_id": "student_1",
        "question_original": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.",
        "question_original_pl": "Znajdź wszystkich uczniów pierwszej klasy, których NIE uczy OTHA MOYER. Podaj ich imiona i nazwiska.",
        "question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their forename and surname.",
        "question_pl": "Znajdź wszystkich uczniów pierwszej klasy, których NIE uczy OTHA MOYER. Podaj ich imię i nazwisko.",
        "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
        "query_pl": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
    },
    {
        "db_id": "student_1",
        "question_original": "Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students.",
        "question_original_pl": "Których uczniów w trzeciej klasie nie uczy nauczyciel COVIN JEROME? Podaj nazwiska uczniów.",
        "question": "Which students in third grade are not taught by teacher COVIN JEROME? Give me the family names of the students.",
        "question_pl": "Których uczniów w trzeciej klasie nie uczy nauczyciel COVIN JEROME? Podaj nazwiska tych uczniów.",
        "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"",
        "query_pl": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\""
    },
    {
        "db_id": "student_1",
        "question_original": "For each grade, report the grade, the number of classrooms in which it is taught and the total number of students in the grade.",
        "question_original_pl": "Dla każdej klasy podaj klasę, liczbę klas, w których jest ona nauczana oraz łączną liczbę uczniów w klasie.",
        "question": "For each grade, report the grade, the number of schoolrooms in which it is taught and the total number of students in the grade.",
        "question_pl": "Dla każdej klasy podaj klasę, liczbę sal szkolnych, w których jest nauczana, oraz łączną liczbę uczniów w klasie.",
        "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade",
        "query_pl": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
    },
    {
        "db_id": "student_1",
        "question_original": "For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.",
        "question_original_pl": "Dla każdej klasy zwróć numer klasy, liczbę sal lekcyjnych używanych dla danej klasy oraz łączną liczbę uczniów zapisanych do danej klasy.",
        "question": "For each grade, return the grade number, the number of schoolrooms used for the grade, and the total number of students enrolled in the grade.",
        "question_pl": "Dla każdej klasy zwróć numer klasy, liczbę sal szkolnych wykorzystywanych przez klasę oraz całkowitą liczbę uczniów zapisanych do klasy.",
        "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade",
        "query_pl": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
    },
    {
        "db_id": "student_1",
        "question_original": "For each classroom, report the classroom number and the number of grades using it.",
        "question_original_pl": "Dla każdej sali lekcyjnej podaj numer sali i liczbę klas, które z niej korzystają.",
        "question": "For each class room, report the class room number and the number of grades using it.",
        "question_pl": "Dla każdej sali lekcyjnej podaj jej numer i liczbę klas, które z niej korzystają.",
        "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom",
        "query_pl": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
    },
    {
        "db_id": "student_1",
        "question_original": "For each classroom, show the classroom number and count the number of distinct grades that use the room.",
        "question_original_pl": "Dla każdej sali lekcyjnej podaj jej numer i policz liczbę poszczególnych klas, które z niej korzystają.",
        "question": "For each class room, show the class room number and count the number of different grades that use the room.",
        "question_pl": "Dla każdej sali lekcyjnej podaj jej numer i policz liczbę różnych klas, które z niej korzystają.",
        "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom",
        "query_pl": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
    },
    {
        "db_id": "student_1",
        "question_original": "Find the classroom that the most students use.",
        "question_original_pl": "Znajdź klasę, z której korzysta najwięcej uczniów.",
        "question": "Find the class room that the most students use.",
        "question_pl": "Znajdź salę lekcyjną, z której korzysta najwięcej uczniów.",
        "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "student_1",
        "question_original": "Report the number of students in each classroom.",
        "question_original_pl": "Podaj liczbę uczniów w każdej klasie.",
        "question": "Report the number of students in each class room.",
        "question_pl": "Podaj liczbę uczniów w każdej sali lekcyjnej.",
        "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom",
        "query_pl": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"
    },
    {
        "db_id": "student_1",
        "question_original": "For each fourth-grade classroom, show the classroom number and the total number of students using it.",
        "question_original_pl": "Dla każdej klasy czwartej podaj numer klasy i łączną liczbę uczniów z niej korzystających.",
        "question": "For each fourth-grade class room, show the class room number and the total number of students using it.",
        "question_pl": "Dla każdej sali lekcyjnej w czwartej klasie podaj numer sali lekcyjnej i łączną liczbę uczniów z niej korzystających.",
        "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom",
        "query_pl": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"
    },
    {
        "db_id": "student_1",
        "question_original": "Find the number of students in one classroom.",
        "question_original_pl": "Znajdź liczbę uczniów w jednej klasie.",
        "question": "Find the number of students in one class room.",
        "question_pl": "Znajdź liczbę uczniów w jednej sali lekcyjnej.",
        "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom",
        "query_pl": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
    },
    {
        "db_id": "student_1",
        "question_original": "How many students does one classroom have?",
        "question_original_pl": "Ilu uczniów liczy jedna klasa?",
        "question": "How many students does one class room have?",
        "question_pl": "Ilu uczniów ma jedna sala lekcyjna?",
        "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom",
        "query_pl": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
    },
    {
        "db_id": "company_employee",
        "question_original": "How many companies are headquartered in the US?",
        "question_original_pl": "Ile firm ma siedzibę w Stanach Zjednoczonych?",
        "question": "How many enterprise are headquartered in the US?",
        "question_pl": "Ile przedsiębiorstw ma siedzibę w Stanach Zjednoczonych?",
        "query": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'",
        "query_pl": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'"
    },
    {
        "db_id": "company_employee",
        "question_original": "List the names of companies by ascending number of sales.",
        "question_original_pl": "Wymień nazwy firm według rosnącej liczby sprzedaży.",
        "question": "List the names of enterprise by ascending number of sales.",
        "question_pl": "Wymień nazwy przedsiębiorstw według rosnącej liczby sprzedaży.",
        "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC",
        "query_pl": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC"
    },
    {
        "db_id": "company_employee",
        "question_original": "What are the headquarters and industries of all companies?",
        "question_original_pl": "Jakie są siedziby i branże wszystkich firm?",
        "question": "What are the head office and industries of all enterprises?",
        "question_pl": "Jakie są siedziby i branże wszystkich przedsiębiorstw?",
        "query": "SELECT Headquarters ,  Industry FROM company",
        "query_pl": "SELECT Headquarters ,  Industry FROM company"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the names of companies in the banking or retailing industry?",
        "question_original_pl": "Pokaż nazwy firm z branży bankowej lub handlu detalicznego?",
        "question": "Show the names of enterprises in the banking or retailing industry?",
        "question_pl": "Pokaż nazwy przedsiębiorstw z branży bankowej lub handlu detalicznego?",
        "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"",
        "query_pl": "SELECT Name FROM company WHERE Industry  =  \"Bankowość\" OR Industry  =  \"Sprzedaż detaliczna\""
    },
    {
        "db_id": "company_employee",
        "question_original": "What is the maximum and minimum market value of companies?",
        "question_original_pl": "Jaka jest maksymalna i minimalna wartość rynkowa spółek?",
        "question": "What is the maximum and minimum market value of enterprises?",
        "question_pl": "Jaka jest maksymalna i minimalna wartość rynkowa przedsiębiorstw?",
        "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company",
        "query_pl": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company"
    },
    {
        "db_id": "company_employee",
        "question_original": "What is the headquarter of the company with the largest sales?",
        "question_original_pl": "Jaka jest siedziba firmy o największej sprzedaży?",
        "question": "What is the head office of the enterprise with the largest sales?",
        "question_pl": "Jaka jest siedziba główna przedsiębiorstwa o największej sprzedaży?",
        "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
        "query_pl": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the different headquarters and number of companies at each headquarter.",
        "question_original_pl": "Wskaż różne siedziby i liczbę spółek w każdej z nich.",
        "question": "Show the different head office and number of enterprises at each head office.",
        "question_pl": "Wskaż różne centrale i liczbę przedsiębiorstw w każdej z nich.",
        "query": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters",
        "query_pl": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the most common headquarter for companies.",
        "question_original_pl": "Pokaż najczęstsze siedziby firm.",
        "question": "Show the most common head office for enterprises.",
        "question_pl": "Wskaż najczęstszą siedzibę główną dla przedsiębiorstw.",
        "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the headquarters that have at least two companies.",
        "question_original_pl": "Wskaż centrale, które mają co najmniej dwie spółki.",
        "question": "Show the head office that have at least two enterprises.",
        "question_pl": "Pokaż centralę, która ma co najmniej dwa przedsiębiorstwa.",
        "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the headquarters that have both companies in banking industry and companies in oil and gas industry.",
        "question_original_pl": "Wskaż siedzibę, w której znajdują się zarówno firmy z branży bankowej, jak i firmy z branży naftowej i gazowej.",
        "question": "Show the head office that have both companies in banking industry and companies in oil and gas industry.",
        "question_pl": "Pokaż centralę, która ma zarówno firmy z branży bankowej, jak i firmy z branży naftowej i gazowej.",
        "query": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\"",
        "query_pl": "SELECT Headquarters FROM company WHERE Industry  =  \"Bankowość\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Ropa i gaz\""
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the names of companies and of employees.",
        "question_original_pl": "Pokaż nazwy firm i pracowników.",
        "question": "Show the names of enterprises and of staffs.",
        "question_pl": "Pokaż nazwy przedsiębiorstw i pracowników.",
        "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID",
        "query_pl": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID"
    },
    {
        "db_id": "company_employee",
        "question_original": "Show the names of companies and the number of employees they have",
        "question_original_pl": "Pokaż nazwy firm i liczbę zatrudnianych przez nie pracowników.",
        "question": "Show the names of enterprises and the number of staffs they have",
        "question_pl": "Pokaż nazwy przedsiębiorstw i liczbę zatrudnionych przez nie pracowników.",
        "query": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name",
        "query_pl": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name"
    },
    {
        "db_id": "company_employee",
        "question_original": "list the names of the companies with more than 200 sales in the descending order of sales and profits.",
        "question_original_pl": "Wymień nazwy firm z ponad 200 sprzedażami w kolejności malejącej pod względem sprzedaży i zysków.",
        "question": "list the names of the enterprises with more than 200 sales in the descending order of sales and profits.",
        "question_pl": "Wymień nazwy przedsiębiorstw z ponad 200 sprzedażami w porządku malejącym pod względem sprzedaży i zysków.",
        "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
        "query_pl": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
    },
    {
        "db_id": "film_rank",
        "question_original": "List the distinct director of all films.",
        "question_original_pl": "Wymień poszczególnych reżyserów wszystkich filmów.",
        "question": "List the different director of all movies.",
        "question_pl": "Wymień różnych reżyserów wszystkich filmów.",
        "query": "SELECT DISTINCT Director FROM film",
        "query_pl": "SELECT DISTINCT Director FROM film"
    },
    {
        "db_id": "film_rank",
        "question_original": "What is the average ticket sales gross in dollars of films?",
        "question_original_pl": "Jaka jest średnia sprzedaż biletów brutto filmów w dolarach?",
        "question": "What is the average ticket sales gross in dollars of movies?",
        "question_pl": "Jaka jest średnia sprzedaż biletów na filmy w dolarach?",
        "query": "SELECT avg(Gross_in_dollar) FROM film",
        "query_pl": "SELECT avg(Gross_in_dollar) FROM film"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the types of film market estimations in year 1995?",
        "question_original_pl": "Jakie są szacunki dotyczące rynku filmów w 1995 roku?",
        "question": "What are the categories of film market estimates in year 1995?",
        "question_pl": "Jakie są kategorie szacunków rynku filmowego w 1995 roku?",
        "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
        "query_pl": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
    },
    {
        "db_id": "film_rank",
        "question_original": "Return the types of film market estimations in 1995.",
        "question_original_pl": "Zwróć rodzaje szacunków rynku filmowego w 1995 roku.",
        "question": "Return the categories of film market estimates in 1995.",
        "question_pl": "Zwróć kategorie szacunków rynku filmowego w 1995 roku.",
        "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
        "query_pl": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the maximum and minimum number of cities in all markets.",
        "question_original_pl": "Jaka jest maksymalna i minimalna liczba miast na wszystkich rynkach?",
        "question": "What are the maximum and minimum number of towns in all markets.",
        "question_pl": "Jaka jest maksymalna i minimalna liczba miast na wszystkich rynkach.",
        "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market",
        "query_pl": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"
    },
    {
        "db_id": "film_rank",
        "question_original": "How many markets have number of cities smaller than 300?",
        "question_original_pl": "Na ilu rynkach liczba miast jest mniejsza niż 300?",
        "question": "How many markets have number of towns smaller than 300?",
        "question_pl": "Ile rynków ma liczbę miast mniejszą niż 300?",
        "query": "SELECT count(*) FROM market WHERE Number_cities  <  300",
        "query_pl": "SELECT count(*) FROM market WHERE Number_cities  <  300"
    },
    {
        "db_id": "film_rank",
        "question_original": "List all countries of markets in descending order of number of cities.",
        "question_original_pl": "Wymień wszystkie kraje rynków w porządku malejącym według liczby miast.",
        "question": "List all nations of markets in descending order of number of towns.",
        "question_pl": "Wymień wszystkie narody rynków w porządku malejącym według liczby miast.",
        "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
        "query_pl": "SELECT Country FROM market ORDER BY Number_cities DESC"
    },
    {
        "db_id": "film_rank",
        "question_original": "Please show the titles of films and the types of market estimations.",
        "question_original_pl": "Podaj tytuły filmów i rodzaje szacunków rynkowych.",
        "question": "Please show the names of movies and the types of market estimations.",
        "question_pl": "Podaj nazwy filmów i rodzaje szacunków rynkowych.",
        "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID",
        "query_pl": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the titles of films and corresponding types of market estimations?",
        "question_original_pl": "Jakie są tytuły filmów i odpowiadające im rodzaje szacunków rynkowych?",
        "question": "What are the names of movies and corresponding types of market estimations?",
        "question_pl": "Jakie są nazwy filmów i odpowiadające im rodzaje szacunków rynkowych?",
        "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID",
        "query_pl": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
    },
    {
        "db_id": "film_rank",
        "question_original": "What is the average number of cities of markets with low film market estimate bigger than 10000?",
        "question_original_pl": "Jaka jest średnia liczba miast na rynkach z niskimi szacunkami rynku filmowego większymi niż 10000?",
        "question": "What is the average number of towns of markets with low film market estimate bigger than 10000?",
        "question_pl": "Jaka jest średnia liczba miast z rynkami o niskim szacowanym rynku filmowym większym niż 10000?",
        "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000",
        "query_pl": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
    },
    {
        "db_id": "film_rank",
        "question_original": "Give the average number of cities within markets that had a low market estimation larger than 10000?",
        "question_original_pl": "Podaj średnią liczbę miast na rynkach, które miały niską estymację rynkową większą niż 10000?",
        "question": "Give the average number of towns within markets that had a low market estimation larger than 10000?",
        "question_pl": "Podaj średnią liczbę miast w obrębie rynków, które miały niskie szacunki rynkowe większe niż 10000?",
        "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000",
        "query_pl": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
    },
    {
        "db_id": "film_rank",
        "question_original": "Please list the countries and years of film market estimations.",
        "question_original_pl": "Wymień kraje i lata, dla których oszacowano rynek filmowy.",
        "question": "Please list the nations and years of movie market estimations.",
        "question_pl": "Wymień kraje i lata szacunków rynku filmowego.",
        "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID",
        "query_pl": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"
    },
    {
        "db_id": "film_rank",
        "question_original": "List the name of film studio that have the most number of films.",
        "question_original_pl": "Wymień nazwę studia filmowego, które ma na swoim koncie najwięcej filmów.",
        "question": "List the name of movie studio that have the most number of movies.",
        "question_pl": "Wymień nazwę studia filmowego, które ma najwięcej filmów.",
        "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "film_rank",
        "question_original": "List the title of films that do not have any market estimation.",
        "question_original_pl": "Wymień tytuły filmów, które nie mają żadnych szacunków rynkowych.",
        "question": "List the name of movies that do not have any market estimation.",
        "question_pl": "Wymień nazwy filmów, które nie mają żadnych szacunków rynkowych.",
        "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
        "query_pl": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the titles of films that do not have a film market estimation?",
        "question_original_pl": "Jakie są tytuły filmów, które nie mają oszacowania rynku filmowego?",
        "question": "What are the names of movies that do not have a movie market estimation?",
        "question_pl": "Jakie są nazwy filmów, które nie mają oszacowania rynku filmowego?",
        "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
        "query_pl": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?",
        "question_original_pl": "Jakie są nazwy studiów, które wyprodukowały filmy zarówno z Nicholasem Meyerem, jak i Walterem Hillem?",
        "question": "What are the names of studios that have produced movies with both Nicholas Meyer and Walter Hill?",
        "question_pl": "Jakie są nazwy studiów, które wyprodukowały filmy z Nicholasem Meyerem i Walterem Hillem?",
        "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"",
        "query_pl": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""
    },
    {
        "db_id": "film_rank",
        "question_original": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".",
        "question_original_pl": "Znajdź tytuły i studia filmów wyprodukowanych przez niektóre studia filmowe zawierające słowo \"Uniwersalny\".",
        "question": "Find the names and studios of the films that are produced by some movie studios that contained the word \"Universal\".",
        "question_pl": "Znajdź nazwy i studia filmów wyprodukowanych przez niektóre studia filmowe zawierające słowo \"Uniwersalny\".",
        "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"",
        "query_pl": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Uniwersalny%\""
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
        "question_original_pl": "Jakie są tytuły i studia filmów, które zostały wyprodukowane przez studio, którego nazwa zawiera słowo \"Uniwersalny\"?",
        "question": "What are the names and studios of movies that have been produced by a studio whose name contains \"Universal\"?",
        "question_pl": "Jakie są nazwy i studia filmów, które zostały wyprodukowane przez studio, którego nazwa zawiera słowo \"Uniwersalny\"?",
        "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"",
        "query_pl": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Uniwersalny%\""
    },
    {
        "db_id": "film_rank",
        "question_original": "What is the title of the film that has the highest high market estimation.",
        "question_original_pl": "Jaki tytuł nosi film, który cieszy się największą estymą na rynku.",
        "question": "What is the name of the movie that has the highest high market estimation.",
        "question_pl": "Jak nazywa się film, który ma najwyższą wycenę rynkową.",
        "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1",
        "query_pl": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
    },
    {
        "db_id": "film_rank",
        "question_original": "Return the title of the film with the highest high estimate?",
        "question_original_pl": "Zwróć tytuł filmu z najwyższą wyceną?",
        "question": "Return the name of the movie with the highest high estimate?",
        "question_pl": "Podaj nazwę filmu z najwyższą wyceną?",
        "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1",
        "query_pl": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
    },
    {
        "db_id": "film_rank",
        "question_original": "What are the titles and directors of the films were never presented in China?",
        "question_original_pl": "Jakie są tytuły i reżyserzy filmów, które nigdy nie były prezentowane w Chinach?",
        "question": "What are the names and directors of the movies were never presented in China?",
        "question_pl": "Jakie są nazwiska i reżyserzy filmów, które nigdy nie zostały zaprezentowane w Chinach?",
        "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')",
        "query_pl": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'Chiny')"
    },
    {
        "db_id": "film_rank",
        "question_original": "Return the titles and directors of films that were never in the market of China.",
        "question_original_pl": "Zwróć tytuły i reżyserów filmów, które nigdy nie pojawiły się na chińskim rynku.",
        "question": "Return the names and directors of movies that were never in the market of China.",
        "question_pl": "Zwróć nazwiska i reżyserów filmów, które nigdy nie pojawiły się na chińskim rynku.",
        "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')",
        "query_pl": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'Chiny')"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the number of document types.",
        "question_original_pl": "Pokaż liczbę typów dokumentów.",
        "question": "Show the number of file categories.",
        "question_pl": "Pokaż liczbę kategorii plików.",
        "query": "SELECT count(*) FROM Ref_document_types",
        "query_pl": "SELECT count(*) FROM Ref_document_types"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "How many document types are there?",
        "question_original_pl": "Ile jest typów dokumentów?",
        "question": "How many file categories are there?",
        "question_pl": "Ile jest kategorii plików?",
        "query": "SELECT count(*) FROM Ref_document_types",
        "query_pl": "SELECT count(*) FROM Ref_document_types"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "List all document type codes and document type names.",
        "question_original_pl": "Wymień wszystkie kody i nazwy typów dokumentów.",
        "question": "List all file category codes and file category names.",
        "question_pl": "Wyświetl wszystkie kody i nazwy kategorii plików.",
        "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types",
        "query_pl": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are all the document type codes and document type names?",
        "question_original_pl": "Jakie są kody i nazwy typów dokumentów?",
        "question": "What are all the file category codes and file category names?",
        "question_pl": "Jakie są kody i nazwy kategorii plików?",
        "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types",
        "query_pl": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the name and description for document type code RV?",
        "question_original_pl": "Jaka jest nazwa i opis kodu typu dokumentu RV?",
        "question": "What is the name and describing content for file category code RV?",
        "question_pl": "Jaka jest nazwa i opis zawartości dla kodu kategorii pliku RV?",
        "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"",
        "query_pl": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Give me the name and description of the document type code RV.",
        "question_original_pl": "Podaj nazwę i opis kodu typu dokumentu RV.",
        "question": "Give me the name and describing content of the file category code RV.",
        "question_pl": "Podaj nazwę i opis zawartości pliku o kodzie kategorii RV.",
        "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"",
        "query_pl": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the document type code for document type \"Paper\"?",
        "question_original_pl": "Jaki jest kod typu dokumentu dla typu dokumentu \"Papier\"?",
        "question": "What is the file category code for file category \"Paper\"?",
        "question_pl": "Jaki jest kod kategorii pliku dla kategorii pliku \"Papier\"?",
        "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
        "query_pl": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Papier\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the code of the document type \"Paper\".",
        "question_original_pl": "Znajdź kod dokumentu typu \"Papier\".",
        "question": "Find the code of the file category \"Paper\".",
        "question_pl": "Znajdź kod kategorii plików \"Papier\".",
        "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
        "query_pl": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Papier\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the number of documents with document type code CV or BK.",
        "question_original_pl": "Pokaż liczbę dokumentów z kodem typu dokumentu CV lub BK.",
        "question": "Show the number of files with file category code CV or BK.",
        "question_pl": "Pokaż liczbę plików z kodem kategorii CV lub BK.",
        "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"",
        "query_pl": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "How many documents have document type code CV or BK?",
        "question_original_pl": "Ile dokumentów ma kod typu dokumentu CV lub BK?",
        "question": "How many files have file category code CV or BK?",
        "question_pl": "Ile plików ma kod kategorii CV lub BK?",
        "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\"",
        "query_pl": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the date when the document \"Marry CV\" was stored?",
        "question_original_pl": "Jaka jest data zapisania dokumentu \"Poślub CV\"?",
        "question": "What is the day when the file \"Marry CV\" was stored?",
        "question_pl": "W którym dniu został zapisany plik \"Poślub CV\"?",
        "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
        "query_pl": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Poślub CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "When was the document named \"Marry CV\" stored? Give me the date.",
        "question_original_pl": "Kiedy został zapisany dokument o nazwie \"Poślub CV\"? Podaj datę.",
        "question": "When was the file named \"Marry CV\" stored? Give me the day.",
        "question_pl": "Kiedy został zapisany plik o nazwie \"Poślub CV\"? Podaj mi dzień.",
        "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
        "query_pl": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Poślub CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the day Number and date of all the documents?",
        "question_original_pl": "Jaki jest numer dzienny i data wszystkich dokumentów?",
        "question": "What is the day Number and date of all the files?",
        "question_pl": "Jaki jest numer dzienny i data wszystkich plików?",
        "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date",
        "query_pl": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Return the day Number and stored date for all the documents.",
        "question_original_pl": "Zwróć numer dnia i zapisaną datę dla wszystkich dokumentów.",
        "question": "Return the day Number and stored date for all the files.",
        "question_pl": "Zwróć numer dnia i zapisaną datę dla wszystkich plików.",
        "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date",
        "query_pl": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the document type name for the document with name \"How to read a book\"?",
        "question_original_pl": "Jaka jest nazwa typu dokumentu dla dokumentu o nazwie \"Jak czytać książkę\"?",
        "question": "What is the file category name for the file with name \"How to read a book\"?",
        "question_pl": "Jaka jest nazwa kategorii pliku o nazwie \"Jak czytać książkę\"?",
        "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"",
        "query_pl": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"Jak czytać książkę\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the document type name of the document named \"How to read a book\".",
        "question_original_pl": "Znajdź nazwę typu dokumentu o nazwie \"Jak czytać książkę\".",
        "question": "Find the file category name of the file named \"How to read a book\".",
        "question_pl": "Znajdź nazwę kategorii pliku o nazwie \"Jak czytać książkę\".",
        "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"",
        "query_pl": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"Jak czytać książkę\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the number of locations.",
        "question_original_pl": "Pokaż liczbę lokalizacji.",
        "question": "Show the number of cities.",
        "question_pl": "Pokaż liczbę miast.",
        "query": "SELECT count(*) FROM Ref_locations",
        "query_pl": "SELECT count(*) FROM Ref_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "How many locations are listed in the database?",
        "question_original_pl": "Ile lokalizacji znajduje się w bazie danych?",
        "question": "How many cities are listed in the database?",
        "question_pl": "Ile miast znajduje się w bazie danych?",
        "query": "SELECT count(*) FROM Ref_locations",
        "query_pl": "SELECT count(*) FROM Ref_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "List all location codes and location names.",
        "question_original_pl": "Wymień wszystkie kody i nazwy lokalizacji.",
        "question": "List all city codes and city names.",
        "question_pl": "Wymień wszystkie kody i nazwy miast.",
        "query": "SELECT location_code ,  location_name FROM Ref_locations",
        "query_pl": "SELECT location_code ,  location_name FROM Ref_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are all the location codes and location names?",
        "question_original_pl": "Jakie są kody i nazwy lokalizacji?",
        "question": "What are all the city codes and city names?",
        "question_pl": "Jakie są kody i nazwy miast?",
        "query": "SELECT location_code ,  location_name FROM Ref_locations",
        "query_pl": "SELECT location_code ,  location_name FROM Ref_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the name and description for location code x?",
        "question_original_pl": "Jaka jest nazwa i opis kodu lokalizacji x?",
        "question": "What are the name and describing content for city code x?",
        "question_pl": "Jaka jest nazwa i opis zawartości kodu miasta x?",
        "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"",
        "query_pl": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Give me the name and description of the location with code x.",
        "question_original_pl": "Podaj nazwę i opis lokalizacji z kodem x.",
        "question": "Give me the name and describing content of the city with code x.",
        "question_pl": "Podaj mi nazwę i opis zawartości miasta z kodem x.",
        "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"",
        "query_pl": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the location code for the country \"Canada\"?",
        "question_original_pl": "Jaki jest kod lokalizacji dla kraju \"Kanada\"?",
        "question": "What is the city code for the country \"Canada\"?",
        "question_pl": "Jaki jest kod miasta dla kraju \"Kanada\"?",
        "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
        "query_pl": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Kanada\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location code of the country \"Canada\".",
        "question_original_pl": "Pokaż kod lokalizacji kraju \"Kanada\".",
        "question": "Show the city code of the country \"Canada\".",
        "question_pl": "Pokaż kod miasta w kraju \"Kanada\".",
        "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
        "query_pl": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Kanada\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "List all role codes, role names, and role descriptions.",
        "question_original_pl": "Wymień wszystkie kody ról, nazwy ról i opisy ról.",
        "question": "List all role codes, role names, and role describing contents.",
        "question_pl": "Wymień wszystkie kody ról, nazwy ról i treści opisujące role.",
        "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES",
        "query_pl": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are all the role codes, role names, and role descriptions?",
        "question_original_pl": "Jakie są wszystkie kody ról, nazwy ról i opisy ról?",
        "question": "What are all the role codes, role names, and role describing contents?",
        "question_pl": "Jakie są kody ról, nazwy ról i zawartość opisująca role?",
        "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES",
        "query_pl": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the name and description for role code \"MG\"?",
        "question_original_pl": "Jaka jest nazwa i opis kodu roli \"MG\"?",
        "question": "What are the name and describing content for role code \"MG\"?",
        "question_pl": "Jaka jest nazwa i opis zawartości dla kodu roli \"MG\"?",
        "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"",
        "query_pl": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the name and description of the role with code \"MG\".",
        "question_original_pl": "Znajdź nazwę i opis roli z kodem \"MG\".",
        "question": "Find the name and describing content of the role with code \"MG\".",
        "question_pl": "Znajdź nazwę i opis zawartości roli z kodem \"MG\".",
        "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"",
        "query_pl": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the description for role name \"Proof Reader\".",
        "question_original_pl": "Pokaż opis dla roli \"Proof Reader\".",
        "question": "Show the describing content for role name \"Proof Reader\".",
        "question_pl": "Pokaż zawartość opisującą rolę o nazwie \"Proof Reader\".",
        "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
        "query_pl": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the description of the role named \"Proof Reader\"?",
        "question_original_pl": "Jaki jest opis roli o nazwie \"Proof Reader\"?",
        "question": "What is the describing content of the role named \"Proof Reader\"?",
        "question_pl": "Jaka jest opisowa zawartość roli o nazwie \"Proof Reader\"?",
        "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
        "query_pl": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the number of employees we have.",
        "question_original_pl": "Znajdź liczbę pracowników, których zatrudniamy.",
        "question": "Find the number of staffs we have.",
        "question_pl": "Znajdź liczbę naszych pracowników.",
        "query": "SELECT count(*) FROM Employees",
        "query_pl": "SELECT count(*) FROM Employees"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the name, role code, and date of birth for the employee with name 'Armani'.",
        "question_original_pl": "Pokaż imię i nazwisko, kod roli i datę urodzenia pracownika o imieniu i nazwisku \"Armani\".",
        "question": "Show the name, role code, and birthday for the staff with name 'Armani'.",
        "question_pl": "Pokaż imię i nazwisko, kod roli i datę urodzenia pracownika o imieniu \"Armani\".",
        "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'",
        "query_pl": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the name, role code, and date of birth of the employee named 'Armani'?",
        "question_original_pl": "Jakie jest imię i nazwisko, kod roli i data urodzenia pracownika o imieniu \"Armani\"?",
        "question": "What are the name, role code, and birthday of the staff named 'Armani'?",
        "question_pl": "Jakie jest imię, kod roli i data urodzenia pracownika o imieniu \"Armani\"?",
        "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'",
        "query_pl": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the roles with three or more employees? Give me the role codes.",
        "question_original_pl": "Jakie są role z co najmniej trzema pracownikami? Podaj kody ról.",
        "question": "What are the roles with three or more staffs? Give me the role codes.",
        "question_pl": "Jakie są role z co najmniej trzema pracownikami? Podaj mi kody ról.",
        "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3",
        "query_pl": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the role name and role description for employee called Ebba?",
        "question_original_pl": "Jaka jest nazwa roli i opis roli pracownika o imieniu Ebba?",
        "question": "What is the role name and role describing content for staff called Ebba?",
        "question_pl": "Jaka jest nazwa roli i treść opisująca rolę pracownika o imieniu Ebba?",
        "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"",
        "query_pl": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the name and description of the role played by the employee named Ebba.",
        "question_original_pl": "Wskaż nazwę i opis roli odgrywanej przez pracownika o imieniu Ebba.",
        "question": "Show the name and describing content of the role played by the staff named Ebba.",
        "question_pl": "Pokaż nazwę i opis roli odgrywanej przez pracownika o imieniu Ebba.",
        "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"",
        "query_pl": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the names of employees with role name Editor.",
        "question_original_pl": "Pokaż nazwiska pracowników z nazwą roli Edytor.",
        "question": "Show the names of staffs with role name Editor.",
        "question_pl": "Pokaż nazwy pracowników z nazwą roli Edytor.",
        "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"",
        "query_pl": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Edytor\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the different location codes for documents?",
        "question_original_pl": "Jakie są różne kody lokalizacji dokumentów?",
        "question": "What are the different city codes for files?",
        "question_pl": "Jakie są różne kody miejskie dla plików?",
        "query": "SELECT DISTINCT location_code FROM Document_locations",
        "query_pl": "SELECT DISTINCT location_code FROM Document_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Give me all the distinct location codes for documents.",
        "question_original_pl": "Podaj mi wszystkie odrębne kody lokalizacji dla dokumentów.",
        "question": "Give me all the different city codes for files.",
        "question_pl": "Podaj mi wszystkie różne kody miast dla plików.",
        "query": "SELECT DISTINCT location_code FROM Document_locations",
        "query_pl": "SELECT DISTINCT location_code FROM Document_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location name for document \"Robin CV\".",
        "question_original_pl": "Pokaż nazwę lokalizacji dla dokumentu \"Robin CV\".",
        "question": "Show the city name for file \"Robin CV\".",
        "question_pl": "Pokaż nazwę miasta dla pliku \"Robin CV\".",
        "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"",
        "query_pl": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the location name of the document \"Robin CV\"?",
        "question_original_pl": "Jaka jest nazwa lokalizacji dokumentu \"Robin CV\"?",
        "question": "What is the city name of the file \"Robin CV\"?",
        "question_pl": "Jak nazywa się miasto w pliku \"Robin CV\"?",
        "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"",
        "query_pl": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location code, the starting date and ending data in that location for all the documents.",
        "question_original_pl": "Pokaż kod lokalizacji, datę początkową i datę końcową w tej lokalizacji dla wszystkich dokumentów.",
        "question": "Show the city code, the starting day and ending data in that city for all the files.",
        "question_pl": "Pokaż kod miasta, dzień rozpoczęcia i zakończenia w tym mieście dla wszystkich plików.",
        "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations",
        "query_pl": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are each document's location code, and starting date and ending data in that location?",
        "question_original_pl": "Jaki jest kod lokalizacji każdego dokumentu oraz data początkowa i końcowa w tej lokalizacji?",
        "question": "What are each document's city code, and starting day and ending data in that city?",
        "question_pl": "Jaki jest kod miasta każdego dokumentu oraz dane początkowe i końcowe w tym mieście?",
        "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations",
        "query_pl": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?",
        "question_original_pl": "Jaka jest \"dane w lokalizacji od\" i \"dane w lokalizacji do\" dla dokumentu o nazwie \"Robin CV\"?",
        "question": "What is \"the date in city from\" and \"the date in city to\" for the document with name \"Robin CV\"?",
        "question_pl": "Jaka jest \"dane w mieście od\" i \"dane w mieście do\" dla dokumentu o nazwie \"Robin CV\"?",
        "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"",
        "query_pl": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the starting date and ending data in location for the document named \"Robin CV\".",
        "question_original_pl": "Znajdź datę początkową i końcową w lokalizacji dla dokumentu o nazwie \"Robin CV\".",
        "question": "Find the starting day and ending data in city for the document named \"Robin CV\".",
        "question_pl": "Znajdź datę początkową i końcową w mieście dla dokumentu o nazwie \"Robin CV\".",
        "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"",
        "query_pl": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location codes and the number of documents in each location.",
        "question_original_pl": "Pokaż kody lokalizacji i liczbę dokumentów w każdej lokalizacji.",
        "question": "Show the city codes and the number of documents in each city.",
        "question_pl": "Pokaż kody miast i liczbę dokumentów w każdym mieście.",
        "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code",
        "query_pl": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the code of each location and the number of documents in that location?",
        "question_original_pl": "Jaki jest kod każdej lokalizacji i liczba dokumentów w tej lokalizacji?",
        "question": "What is the code of each city and the number of documents in that city?",
        "question_pl": "Jaki jest kod każdego miasta i liczba dokumentów w tym mieście?",
        "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code",
        "query_pl": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What is the location code with the most documents?",
        "question_original_pl": "Jaki jest kod lokalizacji z największą liczbą dokumentów?",
        "question": "What is the city code with the most files?",
        "question_pl": "Jaki jest kod miasta z największą liczbą plików?",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Find the code of the location with the largest number of documents.",
        "question_original_pl": "Znajdź kod lokalizacji z największą liczbą dokumentów.",
        "question": "Find the code of the city with the largest number of files.",
        "question_pl": "Znajdź kod miasta z największą liczbą plików.",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location codes with at least 3 documents.",
        "question_original_pl": "Pokaż kody lokalizacji w co najmniej 3 dokumentach.",
        "question": "Show the city codes with at least 3 files.",
        "question_pl": "Pokaż kody miast z co najmniej 3 plikami.",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the codes of the locations with at least three documents?",
        "question_original_pl": "Jakie są kody lokalizacji z co najmniej trzema dokumentami?",
        "question": "What are the codes of the cities with at least three files?",
        "question_pl": "Jakie są kody miast z co najmniej trzema plikami?",
        "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3",
        "query_pl": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the location name and code with the least documents.",
        "question_original_pl": "Pokaż nazwę i kod lokalizacji z najmniejszą liczbą dokumentów.",
        "question": "Show the city name and code with the least files.",
        "question_pl": "Pokaż nazwę i kod miasta z najmniejszą liczbą plików.",
        "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the name and code of the location with the smallest number of documents?",
        "question_original_pl": "Jaka jest nazwa i kod lokalizacji z najmniejszą liczbą dokumentów?",
        "question": "What are the name and code of the city with the smallest number of files?",
        "question_pl": "Jaka jest nazwa i kod miasta z najmniejszą liczbą plików?",
        "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?",
        "question_original_pl": "Jakie są nazwiska pracowników, którzy autoryzowali zniszczenie i pracowników, którzy zniszczyli odpowiednie dokumenty?",
        "question": "What are the names of the staffs who authorised the destruction and the staffs who destroyed the corresponding documents?",
        "question_pl": "Jakie są nazwiska pracowników, którzy zatwierdzili zniszczenie i pracowników, którzy zniszczyli odpowiednie dokumenty?",
        "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;",
        "query_pl": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "What are the id of each employee and the number of document destruction authorised by that employee?",
        "question_original_pl": "Jaki jest identyfikator każdego pracownika i liczba zniszczonych przez niego dokumentów?",
        "question": "What are the id of each staff and the number of document destruction authorised by that staff?",
        "question_pl": "Jaki jest identyfikator każdego pracownika i liczba zniszczeń dokumentów autoryzowanych przez tego pracownika?",
        "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
        "query_pl": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Which employees do not authorize destruction for any document? Give me their employee ids.",
        "question_original_pl": "Którzy pracownicy nie autoryzują niszczenia dokumentów? Podaj mi ich identyfikatory.",
        "question": "Which staffs do not authorize destruction for any document? Give me their staff ids.",
        "question_pl": "Którzy pracownicy nie autoryzują zniszczenia żadnego dokumentu? Podaj mi ich identyfikatory.",
        "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_pl": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.",
        "question_original_pl": "Pokaż identyfikatory wszystkich pracowników, którzy zniszczyli dokument lub upoważnili się do tego.",
        "question": "Show the ids of all staffs who have either destroyed a document or made an authorization to do this.",
        "question_pl": "Pokaż identyfikatory wszystkich pracowników, którzy zniszczyli dokument lub autoryzowali jego zniszczenie.",
        "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_pl": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "question_original": "Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.",
        "question_original_pl": "Którzy pracownicy zniszczyli dokument lub upoważnili się do tego? Zwróć ich identyfikatory pracowników.",
        "question": "Which staffs have either destroyed a document or made an authorization to do so? Return their staff ids.",
        "question_pl": "Którzy pracownicy zniszczyli dokument lub wydali upoważnienie do jego zniszczenia? Zwróć ich identyfikatory pracowników.",
        "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_pl": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
    },
    {
        "db_id": "club_1",
        "question_original": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.",
        "question_original_pl": "Kim są członkowie klubu o nazwie \"Bootup Baltimore\"? Podaj ich nazwiska.",
        "question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their family names.",
        "question_pl": "Kim są członkowie klubu o nazwie \"Bootup Baltimore\"? Podaj mi ich nazwiska.",
        "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"",
        "query_pl": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
    },
    {
        "db_id": "club_1",
        "question_original": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.",
        "question_original_pl": "Kim są członkowie klubu o nazwie \"Hopkins Student Enterprises\"? Wskaż nazwisko.",
        "question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the family name.",
        "question_pl": "Kim są członkowie klubu o nazwie \"Hopkins Student Enterprises\"? Pokaż nazwisko rodziny.",
        "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"",
        "query_pl": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
    },
    {
        "db_id": "club_1",
        "question_original": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".",
        "question_original_pl": "Zwróć nazwisko członków klubu o nazwie \"Hopkins Student Enterprises\".",
        "question": "Return the family name for the members of the club named \"Hopkins Student Enterprises\".",
        "question_pl": "Zwróć nazwę rodziny dla członków klubu o nazwie \"Hopkins Student Enterprises\".",
        "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"",
        "query_pl": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
    },
    {
        "db_id": "club_1",
        "question_original": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.",
        "question_original_pl": "Znajdź wszystkie członkinie klubu \"Bootup Baltimore\". Pokaż imię i nazwisko.",
        "question": "Find all the female members of club \"Bootup Baltimore\". Show the full name.",
        "question_pl": "Znajdź wszystkie członkinie klubu \"Bootup Baltimore\". Pokaż pełną nazwę.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""
    },
    {
        "db_id": "club_1",
        "question_original": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".",
        "question_original_pl": "Podaj mi imię i nazwisko wszystkich członkiń klubu \"Bootup Baltimore\".",
        "question": "Give me the forename and family name for all the female members of the club \"Bootup Baltimore\".",
        "question_pl": "Podaj mi imiona i nazwiska wszystkich członkiń klubu \"Bootup Baltimore\".",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""
    },
    {
        "db_id": "club_1",
        "question_original": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.",
        "question_original_pl": "Znajdź wszystkich męskich członków klubu \"Hopkins Student Enterprises\". Pokaż imię i nazwisko.",
        "question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the forename and family name.",
        "question_pl": "Znajdź wszystkich męskich członków klubu \"Hopkins Student Enterprises\". Pokaż imiona i nazwiska.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\""
    },
    {
        "db_id": "club_1",
        "question_original": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.",
        "question_original_pl": "Znajdź wszystkich członków \"Bootup Baltimore\", których major to \"600\". Pokaż imię i nazwisko.",
        "question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the forename and family name.",
        "question_pl": "Znajdź wszystkich członków \"Bootup Baltimore\", których major to \"600\". Pokaż imię i nazwisko oraz nazwę rodziny.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""
    },
    {
        "db_id": "club_1",
        "question_original": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.",
        "question_original_pl": "Którzy członkowie \"Bootup Baltimore\" specjalizują się w \"600\"? Podaj ich imiona i nazwiska.",
        "question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their forename and family name.",
        "question_pl": "Którzy członkowie \"Bootup Baltimore\" ukończyli \"600\"? Podaj ich imiona i nazwiska.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""
    },
    {
        "db_id": "club_1",
        "question_original": "What is the description of the club named \"Tennis Club\"?",
        "question_original_pl": "Jaki jest opis klubu o nazwie \"Klub tenisowy\"?",
        "question": "What is the describing content of the club named \"Tennis Club\"?",
        "question_pl": "Jaka jest opisowa zawartość klubu o nazwie \"Klub tenisowy\"?",
        "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
        "query_pl": "SELECT clubdesc FROM club WHERE clubname  =  \"Klub tenisowy\""
    },
    {
        "db_id": "club_1",
        "question_original": "Find the description of the club called \"Tennis Club\".",
        "question_original_pl": "Znajdź opis klubu o nazwie \"Klub tenisowy\".",
        "question": "Find the describing content of the club called \"Tennis Club\".",
        "question_pl": "Znajdź opis zawartości klubu o nazwie \"Klub tenisowy\".",
        "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
        "query_pl": "SELECT clubdesc FROM club WHERE clubname  =  \"Klub tenisowy\""
    },
    {
        "db_id": "club_1",
        "question_original": "Find the description of the club \"Pen and Paper Gaming\".",
        "question_original_pl": "Znajdź opis klubu \"Pen and Paper Gaming\".",
        "question": "Find the describing content of the club \"Pen and Paper Gaming\".",
        "question_pl": "Znajdź opisującą zawartość klubu \"Pen and Paper Gaming\".",
        "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
        "query_pl": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
    },
    {
        "db_id": "club_1",
        "question_original": "What is the description of the club \"Pen and Paper Gaming\"?",
        "question_original_pl": "Jaki jest opis klubu \"Pen and Paper Gaming\"?",
        "question": "What is the describing content of the club \"Pen and Paper Gaming\"?",
        "question_pl": "Jaka jest opisowa zawartość klubu \"Pen and Paper Gaming\"?",
        "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"",
        "query_pl": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
    },
    {
        "db_id": "club_1",
        "question_original": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.",
        "question_original_pl": "Kto jest prezesem klubu \"Bootup Baltimore\"? Podaj imię i nazwisko.",
        "question": "Who is the president of the club \"Bootup Baltimore\"? Give me the forename and family name.",
        "question_pl": "Kto jest prezesem klubu \"Bootup Baltimore\"? Podaj imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"Prezes\""
    },
    {
        "db_id": "club_1",
        "question_original": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.",
        "question_original_pl": "Kto jest \"CTO\" klubu \"Hopkins Student Enterprises\"? Podaj imię i nazwisko.",
        "question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the forename and family name.",
        "question_pl": "Kto jest \"CTO\" klubu \"Hopkins Student Enterprises\"? Podaj imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"",
        "query_pl": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\""
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?",
        "question_original_pl": "Jaka jest odrębna kwota dotacji dla dotacji, w przypadku których dokumenty zostały wysłane przed \"1986-08-26 20:49:27\", a dotacja została zakończona po \"1989-03-16 18:27:16\"?",
        "question": "What are the distinct grant amount for the grants where the files were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?",
        "question_pl": "Jaka jest odrębna kwota dotacji dla dotacji, w przypadku których pliki zostały wysłane przed \"1986-08-26 20:49:27\", a dotacja została zakończona po \"1989-03-16 18:27:16\"?",
        "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'",
        "query_pl": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the project details of the project both producing patent and paper as outcomes.",
        "question_original_pl": "Wymień szczegóły projektu, zarówno patent, jak i papier jako wyniki.",
        "question": "List the project information of the project both producing patent and paper as outcomes.",
        "question_pl": "Wymień informacje o projekcie, zarówno patent, jak i papier jako wyniki.",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Papier' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details of the project that is producing both patents and papers as outcomes?",
        "question_original_pl": "Jakie są szczegóły projektu, którego rezultatem są zarówno patenty, jak i dokumenty?",
        "question": "What are the information of the project that is producing both patents and papers as outcomes?",
        "question_pl": "Jakie są informacje o projekcie, którego rezultatem są zarówno patenty, jak i dokumenty?",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Papier' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List from which date and to which date these staff work: project staff of the project which hires the most staffs",
        "question_original_pl": "Wymień, od kiedy i do kiedy pracuje ten personel: personel projektu, który zatrudnia najwięcej pracowników",
        "question": "List from which day and to which date these member work: project member of the project which hires the most employee",
        "question_pl": "Wymień, od którego dnia i do której daty ci członkowie pracują: członek projektu, który zatrudnia najwięcej pracowników",
        "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'",
        "query_pl": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'lider'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "From what date and to what date do the staff work on a project that has the most staff and has staff in a leader role?",
        "question_original_pl": "Od kiedy i do kiedy pracownicy pracują nad projektem, w którym jest najwięcej pracowników i w którym pracownicy pełnią rolę liderów?",
        "question": "From what day and to what day do the member work on a project that has the most employee and has member in a leader role?",
        "question_pl": "Od którego dnia do którego dnia członek pracuje nad projektem, w którym jest najwięcej pracowników i w którym członek pełni rolę lidera?",
        "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'",
        "query_pl": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'lider'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Find the organisation ids and details of the organisations which are involved in",
        "question_original_pl": "Znajdź identyfikatory i szczegóły organizacji, które są zaangażowane w",
        "question": "Find the organisation ids and information of the organisations which are involved in",
        "question_pl": "Znajdź identyfikatory organizacji i informacje o organizacjach, które są zaangażowane w",
        "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000",
        "query_pl": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the ids and details for all organizations that have grants of more than 6000 dollars?",
        "question_original_pl": "Jakie są identyfikatory i szczegóły wszystkich organizacji, które otrzymały dotacje w wysokości ponad 6000 dolarów?",
        "question": "What are the ids and information for all organizations that have grants of more than 6000 dollars?",
        "question_pl": "Jakie są identyfikatory i informacje o wszystkich organizacjach, które otrzymały dotacje w wysokości ponad 6000 dolarów?",
        "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000",
        "query_pl": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the organisation type and id of the organisation which has the most number of research staff?",
        "question_original_pl": "Jaki jest typ i identyfikator organizacji, która zatrudnia najwięcej pracowników naukowych?",
        "question": "What is the organisation type and id of the organisation which has the most number of research member?",
        "question_pl": "Jaki jest typ organizacji i identyfikator organizacji, która ma największą liczbę członków badawczych?",
        "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the type and id of the organization that has the most research staff?",
        "question_original_pl": "Jaki jest typ i identyfikator organizacji, która zatrudnia najwięcej pracowników naukowych?",
        "question": "What is the type and id of the organization that has the most research member?",
        "question_pl": "Jaki jest typ i identyfikator organizacji, która ma najwięcej członków-badaczy?",
        "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the type of the organization with the most research staff?",
        "question_original_pl": "Jaki jest typ organizacji z największą liczbą pracowników naukowych?",
        "question": "What is the type of the organization with the most research member?",
        "question_pl": "Jaki jest typ organizacji z największą liczbą członków badawczych?",
        "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described",
        "question_original_pl": "Sprawdź daty wysłania dokumentów z kwotą dotacji powyżej 5000, które zostały przyznane według opisanego typu organizacji.",
        "question": "Find out the send day of the files with the grant amount of more than 5000 were granted by organisation type described",
        "question_pl": "Znajdź dzień wysłania plików z kwotą dotacji przekraczającą 5000, które zostały przyznane według opisanego typu organizacji",
        "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'",
        "query_pl": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Badania'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the send dates for all documents that have a grant amount of more than 5000 and are involved in research?",
        "question_original_pl": "Jakie są daty wysyłania wszystkich dokumentów, które mają kwotę dotacji przekraczającą 5000 i są związane z badaniami?",
        "question": "What are the send day for all documents that have a grant amount of more than 5000 and are involved in research?",
        "question_pl": "Jaki jest dzień wysłania wszystkich dokumentów, które mają kwotę dotacji przekraczającą 5000 i są związane z badaniami?",
        "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'",
        "query_pl": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Badania'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?",
        "question_original_pl": "Jakie są daty otrzymania odpowiedzi dla dokumentów opisanych jako \"Regularne\" lub przyznanych z liczbą ponad 100?",
        "question": "What are the response receipt day for the documents described as 'Regular' or granted with more than 100?",
        "question_pl": "Jaki jest dzień otrzymania odpowiedzi dla dokumentów opisanych jako \"Regularne\" lub przyznanych powyżej 100?",
        "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100",
        "query_pl": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regularny' OR T3.grant_amount  >  100"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the response received date for the document described as Regular that was granted more than 100 dollars?",
        "question_original_pl": "Jaka jest data otrzymania odpowiedzi dla dokumentu opisanego jako Regular, który został przyznany powyżej 100 dolarów?",
        "question": "What is the response receipt day for the document described as Regular that was granted more than 100 dollars?",
        "question_pl": "Jaki jest dzień otrzymania odpowiedzi dla dokumentu opisanego jako Regular, który został przyznany powyżej 100 dolarów?",
        "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100",
        "query_pl": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regularny' OR T3.grant_amount  >  100"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the project details of the projects which did not hire any staff for a researcher role.",
        "question_original_pl": "Wymień szczegóły projektów, w których nie zatrudniono żadnego pracownika na stanowisku badacza.",
        "question": "List the project information of the projects which did not hire any staff for a researcher role.",
        "question_pl": "Wymień informacje o projektach, w których nie zatrudniono żadnego pracownika na stanowisku badacza.",
        "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
        "query_pl": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'badacz' )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details for all projects that did not hire any staff in a research role?",
        "question_original_pl": "Jakie są szczegóły dotyczące wszystkich projektów, w których nie zatrudniono żadnego pracownika na stanowisku badawczym?",
        "question": "What are the information for all projects that did not hire any staff in a research role?",
        "question_pl": "Jakie są informacje na temat wszystkich projektów, w których nie zatrudniono żadnego pracownika na stanowisku badawczym?",
        "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
        "query_pl": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'badacz' )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?",
        "question_original_pl": "Jakie są szczegóły zadania, identyfikator zadania i identyfikator projektu dla projektów, które są wyszczególnione jako \"omnis\" lub mają więcej niż 2 wyniki?",
        "question": "What are the task information, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?",
        "question_pl": "Jakie są informacje o zadaniu, identyfikator zadania i identyfikator projektu dla projektów, które są wyszczególnione jako \"omnis\" lub mają więcej niż 2 wyniki?",
        "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the task details, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?",
        "question_original_pl": "Jakie są szczegóły zadań, identyfikatory zadań i identyfikatory projektów dla postępów, które są wyszczególnione jako \"omnis\" lub mają co najmniej 3 wyniki?",
        "question": "What are the task information, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?",
        "question_pl": "Jakie są informacje o zadaniach, identyfikatory zadań i identyfikatory projektów dla postępów, które są wyszczególnione jako \"omnis\" lub mają co najmniej 3 wyniki?",
        "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "When do all the researcher role staff start to work, and when do they stop working?",
        "question_original_pl": "Kiedy wszyscy pracownicy pełniący rolę badaczy zaczynają pracować, a kiedy przestają?",
        "question": "When do all the researcher role member start to work, and when do they stop working?",
        "question_pl": "Kiedy wszyscy członkowie roli badacza zaczynają działać, a kiedy przestają?",
        "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",
        "query_pl": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'badacz'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many kinds of roles are there for the staff?",
        "question_original_pl": "Ile jest rodzajów ról dla pracowników?",
        "question": "How many kinds of roles are there for the member?",
        "question_pl": "Ile jest rodzajów ról dla członka?",
        "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
        "query_pl": "SELECT count(DISTINCT role_code) FROM Project_Staff"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many different roles are there on the project staff?",
        "question_original_pl": "Ile różnych ról pełni personel projektu?",
        "question": "How many different roles are there on the project member?",
        "question_pl": "Ile różnych ról pełni członek projektu?",
        "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
        "query_pl": "SELECT count(DISTINCT role_code) FROM Project_Staff"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the project details of the projects with the research outcome described with the substring 'Published'.",
        "question_original_pl": "Wymień szczegóły projektów z wynikami badań opisanymi za pomocą podciągu \"Opublikowane\".",
        "question": "List the project information of the projects with the research outcome described with the substring 'Published'.",
        "question_pl": "Wymień informacje o projektach z wynikami badań opisanymi za pomocą podciągu \"Opublikowano\".",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Opublikowane%'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details for the project whose research has been published?",
        "question_original_pl": "Jakie są szczegóły dotyczące projektu, którego badania zostały opublikowane?",
        "question": "What are the information for the project whose research has been published?",
        "question_pl": "Jakie są informacje o projekcie, którego badania zostały opublikowane?",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Opublikowane%'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many staff does each project has? List the project id and the number in an ascending order.",
        "question_original_pl": "Ilu pracowników ma każdy projekt? Wymień identyfikator projektu i liczbę w porządku rosnącym.",
        "question": "How many member does each project has? List the project id and the number in an ascending order.",
        "question_pl": "Ilu członków ma każdy projekt? Wymień identyfikator projektu i liczbę w porządku rosnącym.",
        "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",
        "query_pl": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For each project id, how many staff does it have? List them in increasing order.",
        "question_original_pl": "Ilu pracowników ma każdy identyfikator projektu? Wymień ich w kolejności rosnącej.",
        "question": "For each project id, how many member does it have? List them in increasing order.",
        "question_pl": "Ilu członków ma każdy identyfikator projektu? Wymień je w kolejności rosnącej.",
        "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",
        "query_pl": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the complete description of the researcher role.",
        "question_original_pl": "Jaki jest pełny opis roli badacza.",
        "question": "What is the complete describing content of the researcher role.",
        "question_pl": "Jaka jest pełna treść opisująca rolę badacza.",
        "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
        "query_pl": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'badacz'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the complete description of the job of a researcher?",
        "question_original_pl": "Jaki jest pełny opis pracy badacza?",
        "question": "What is the complete describing content of the job of a researcher?",
        "question_pl": "Jaka jest pełna treść opisująca pracę badacza?",
        "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
        "query_pl": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'badacz'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "When did the first staff for the projects started working?",
        "question_original_pl": "Kiedy zaczęli pracować pierwsi pracownicy projektu?",
        "question": "When did the first member for the projects started working?",
        "question_pl": "Kiedy pierwszy członek projektu rozpoczął pracę?",
        "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
        "query_pl": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Which project made the most number of outcomes? List the project details and the project id.",
        "question_original_pl": "Który projekt osiągnął największą liczbę wyników? Wymień szczegóły projektu i jego identyfikator.",
        "question": "Which project made the most number of outcomes? List the project information and the project id.",
        "question_pl": "Który projekt osiągnął największą liczbę wyników? Wymień informacje o projekcie i jego identyfikator.",
        "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details and id of the project with the most outcomes?",
        "question_original_pl": "Jakie są szczegóły i id projektu z największą liczbą wyników?",
        "question": "What are the information and id of the project with the most outcomes?",
        "question_pl": "Jakie informacje i id projektu przynoszą największe rezultaty?",
        "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Which projects have no outcome? List the project details.",
        "question_original_pl": "Które projekty nie mają wyników? Wymień szczegóły projektu.",
        "question": "Which projects have no outcome? List the project information.",
        "question_pl": "Które projekty nie mają wyników? Wymień informacje o projekcie.",
        "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
        "query_pl": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details of the project with no outcomes?",
        "question_original_pl": "Jakie są szczegóły projektu bez wyników?",
        "question": "What are the information of the project with no outcomes?",
        "question_pl": "Jakie są informacje o projekcie bez wyników?",
        "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
        "query_pl": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
        "question_original_pl": "Która organizacja zatrudniła najwięcej pracowników naukowych? Wymień identyfikator, typ i szczegóły organizacji.",
        "question": "Which organisation hired the most number of research member? List the organisation id, type and information.",
        "question_pl": "Która organizacja zatrudniła najwięcej pracowników naukowych? Wymień identyfikator, typ i informacje o organizacji.",
        "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the ids, types, and details of the organization with the most research staff?",
        "question_original_pl": "Jakie są identyfikatory, typy i szczegóły organizacji z największą liczbą pracowników naukowych?",
        "question": "What are the ids, types, and information of the organization with the most research staff?",
        "question_pl": "Jakie są identyfikatory, typy i informacje o organizacji z największą liczbą pracowników naukowych?",
        "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Show the role description and the id of the project staff involved in most number of project outcomes?",
        "question_original_pl": "Pokaż opis roli i identyfikator personelu projektu zaangażowanego w największą liczbę rezultatów projektu?",
        "question": "Show the role describing content and the id of the project employee involved in most number of project outcomes?",
        "question_pl": "Pokaż rolę opisującą treść i identyfikator pracownika projektu zaangażowanego w największą liczbę rezultatów projektu?",
        "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For each staff id, what is the description of the role that is involved with the most number of projects?",
        "question_original_pl": "Dla każdego identyfikatora pracownika, jaki jest opis roli, która jest zaangażowana w największą liczbę projektów?",
        "question": "For each member id, what is the describing content of the role that is involved with the most number of projects?",
        "question_pl": "Dla każdego identyfikatora członka, jaka jest opisująca zawartość rola, która jest zaangażowana w największą liczbę projektów?",
        "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Which document type is described with the prefix 'Initial'?",
        "question_original_pl": "Który typ dokumentu jest opisany przedrostkiem \"Początkowy\"?",
        "question": "Which file category is described with the prefix 'Initial'?",
        "question_pl": "Która kategoria plików jest opisana przedrostkiem \"Początkowy\"?",
        "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
        "query_pl": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Początkowy%'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the type of the document whose description starts with the word 'Initial'?",
        "question_original_pl": "Jaki jest typ dokumentu, którego opis zaczyna się od słowa \"Początkowy\"?",
        "question": "What is the category of the file whose describing content starts with the word 'Initial'?",
        "question_pl": "Jaka jest kategoria pliku, którego zawartość opisowa zaczyna się od słowa \"Początkowy\"?",
        "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
        "query_pl": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Początkowy%'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.",
        "question_original_pl": "W przypadku dotacji z dokumentami opisanymi jako \"Regularne\" i dokumentami opisanymi jako \"Wstępny wniosek\", podaj datę ich rozpoczęcia.",
        "question": "For grants with both files described as 'Regular' and files described as 'Initial Application', list its start day.",
        "question_pl": "W przypadku dotacji z plikami opisanymi jako \"Regularny\" i plikami opisanymi jako \"Aplikacja początkowa\", podaj dzień rozpoczęcia.",
        "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'",
        "query_pl": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regularny' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Aplikacja początkowa'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?",
        "question_original_pl": "Jakie są daty rozpoczęcia grantów opisanych jako wnioski regularne i wstępne?",
        "question": "For grants that have descriptions of Regular and Initial Applications, what are their start day?",
        "question_pl": "Jaki jest dzień rozpoczęcia w przypadku dotacji opisanych jako zwykłe i wstępne wnioski?",
        "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'",
        "query_pl": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regularny' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Aplikacja początkowa'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many documents can one grant have at most? List the grant id and number.",
        "question_original_pl": "Ile dokumentów może zawierać jedna dotacja? Wymień identyfikator i numer grantu.",
        "question": "How many files can one grant have at most? List the grant id and number.",
        "question_pl": "Ile plików może mieć maksymalnie jeden grant? Wymień identyfikator i numer grantu.",
        "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For each grant id, how many documents does it have, and which one has the most?",
        "question_original_pl": "Ile dokumentów ma każdy identyfikator dotacji i który z nich ma ich najwięcej?",
        "question": "For each grant id, how many files does it have, and which one has the most?",
        "question_pl": "Ile plików ma każdy identyfikator grantu i który z nich ma ich najwięcej?",
        "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the type description of the organization whose detail is listed as 'quo'?",
        "question_original_pl": "Jaki jest opis typu organizacji, której dane są wymienione jako \"quo\"?",
        "question": "What is the type description of the organization whose information is listed as 'quo'?",
        "question_pl": "Jaki jest opis typu organizacji, której informacje są wymienione jako \"quo\"?",
        "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'",
        "query_pl": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.",
        "question_original_pl": "Jakie są wszystkie szczegóły organizacji opisanych jako \"Sponsor\"? Posortuj wyniki w porządku rosnącym.",
        "question": "What are all the information of the organisations described as 'Sponsor'? Sort the result in an ascending order.",
        "question_pl": "Jakie są wszystkie informacje o organizacjach opisanych jako \"Sponsor\"? Posortuj wyniki w porządku rosnącym.",
        "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details",
        "query_pl": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details of all organizations that are described as Sponsors and sort the results in ascending order?",
        "question_original_pl": "Jakie są szczegóły wszystkich organizacji, które są opisane jako Sponsorzy i posortuj wyniki w porządku rosnącym?",
        "question": "What are the information of all organizations that are described as Sponsors and sort the results in ascending order?",
        "question_pl": "Jakie są informacje o wszystkich organizacjach określanych jako Sponsorzy i posortuj wyniki w porządku rosnącym?",
        "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details",
        "query_pl": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?",
        "question_original_pl": "Ilu pracowników projektu pracowało jako liderzy lub rozpoczęło pracę przed \"1989-04-24 23:51:54\"?",
        "question": "How many project member worked as leaders or started working before '1989-04-24 23:51:54'?",
        "question_pl": "Ilu członków projektu pracowało jako liderzy lub rozpoczęło pracę przed '1989-04-24 23:51:54'?",
        "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'",
        "query_pl": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'lider' OR date_from  <  '1989-04-24 23:51:54'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the last date of the staff leaving the projects?",
        "question_original_pl": "Jaka jest ostatnia data odejścia pracowników z projektów?",
        "question": "What is the last date of the member leaving the projects?",
        "question_pl": "Jaka jest ostatnia data opuszczenia projektów przez członka?",
        "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
        "query_pl": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the result description of the project whose detail is 'sint'?",
        "question_original_pl": "Jaki jest opis wyników projektu, którego szczegółem jest \"sint\"?",
        "question": "What are the result describing content of the project whose detail is 'sint'?",
        "question_pl": "Jakie są wyniki opisujące zawartość projektu, którego szczegółem jest \"sint\"?",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'",
        "query_pl": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the description for the results whose project detail is 'sint'?",
        "question_original_pl": "Jaki jest opis wyników, których szczegółem projektu jest \"sint\"?",
        "question": "What is the describing content for the results whose project detail is 'sint'?",
        "question_pl": "Jaka jest zawartość opisująca wyniki, których szczegółem projektu jest \"sint\"?",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'",
        "query_pl": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the project details of the projects launched by the organisation",
        "question_original_pl": "Wymień szczegóły projektów uruchomionych przez organizację",
        "question": "List the project information of the projects launched by the organisation",
        "question_pl": "Wymień informacje o projektach uruchomionych przez organizację",
        "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
        "query_pl": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the details for the projects which were launched by the organization with the most projects?",
        "question_original_pl": "Jakie są szczegóły dotyczące projektów, które zostały uruchomione przez organizację z największą liczbą projektów?",
        "question": "What are the information for the projects which were launched by the organization with the most projects?",
        "question_pl": "Jakie są informacje na temat projektów, które zostały uruchomione przez organizację z największą liczbą projektów?",
        "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
        "query_pl": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the research staff details, and order in ascending order.",
        "question_original_pl": "Wymień dane personelu badawczego i uporządkuj je w kolejności rosnącej.",
        "question": "List the research employee information, and order in ascending order.",
        "question_pl": "Wymień informacje o pracownikach badawczych i uporządkuj je w kolejności rosnącej.",
        "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
        "query_pl": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What details are there on the research staff? List the result in ascending alphabetical order.",
        "question_original_pl": "Jakie są szczegóły dotyczące personelu badawczego? Wymień wyniki w rosnącej kolejności alfabetycznej.",
        "question": "What information are there on the research member? List the result in ascending alphabetical order.",
        "question_pl": "Jakie informacje są dostępne na temat członka zespołu badawczego? Wymień wyniki w rosnącej kolejności alfabetycznej.",
        "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
        "query_pl": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many tasks are there?",
        "question_original_pl": "Ile jest zadań?",
        "question": "How many mission are there?",
        "question_pl": "Ile jest tych misji?",
        "query": "SELECT count(*) FROM Tasks",
        "query_pl": "SELECT count(*) FROM Tasks"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "How many tasks does each project have? List the task count and the project detail.",
        "question_original_pl": "Ile zadań ma każdy projekt? Wymień liczbę zadań i szczegóły projektu.",
        "question": "How many mission does each project have? List the mission count and the project information.",
        "question_pl": "Ile misji ma każdy projekt? Wymień liczbę misji i informacje o projekcie.",
        "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id",
        "query_pl": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "For each project id, how many tasks are there?",
        "question_original_pl": "Ile jest zadań dla każdego identyfikatora projektu?",
        "question": "For each project id, how many mission are there?",
        "question_pl": "Ile jest misji dla każdego identyfikatora projektu?",
        "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id",
        "query_pl": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the staff roles of the staff who",
        "question_original_pl": "Jakie są role pracowników, którzy",
        "question": "What are the member roles of the member who",
        "question_pl": "Jakie są role członka, który",
        "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'",
        "query_pl": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?",
        "question_original_pl": "Jakie role pełnili pracownicy w okresie od \"2003-04-19 15:06:20\" do \"2016-03-15 00:33:18\"?",
        "question": "What roles did members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?",
        "question_pl": "Jakie role odgrywali członkowie między \"2003-04-19 15:06:20\" a \"2016-03-15 00:33:18\"?",
        "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'",
        "query_pl": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What are the descriptions of all the project outcomes?",
        "question_original_pl": "Jakie są opisy wszystkich wyników projektu?",
        "question": "What are the describing contents of all the project results?",
        "question_pl": "Jaka jest opisowa zawartość wszystkich wyników projektu?",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code",
        "query_pl": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "List the description of the outcomes for all projects.",
        "question_original_pl": "Wymień opis wyników dla wszystkich projektów.",
        "question": "List the describing content of the results for all projects.",
        "question_pl": "Wymień opisującą treść wyników dla wszystkich projektów.",
        "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code",
        "query_pl": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "Which role is most common for the staff?",
        "question_original_pl": "Która rola jest najczęściej pełniona przez pracowników?",
        "question": "Which role is most common for the member?",
        "question_pl": "Która rola jest najbardziej powszechna dla członka?",
        "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_grants_for_research",
        "question_original": "What is the most common role for the staff?",
        "question_original_pl": "Jaka jest najczęstsza rola pracowników?",
        "question": "What is the most common role for the member?",
        "question_pl": "Jaka jest najczęstsza rola członka?",
        "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "network_2",
        "question_original": "How many type of jobs do they have?",
        "question_original_pl": "Ile masz rodzajów pracy?",
        "question": "How many type of occupation do they have?",
        "question_pl": "Ile mają rodzajów zawodów?",
        "query": "SELECT count(DISTINCT job) FROM Person",
        "query_pl": "SELECT count(DISTINCT job) FROM Person"
    },
    {
        "db_id": "network_2",
        "question_original": "How many different jobs are listed?",
        "question_original_pl": "Ile różnych stanowisk znajduje się na liście?",
        "question": "How many different occupation are listed?",
        "question_pl": "Ile różnych zawodów znajduje się na liście?",
        "query": "SELECT count(DISTINCT job) FROM Person",
        "query_pl": "SELECT count(DISTINCT job) FROM Person"
    },
    {
        "db_id": "network_2",
        "question_original": "Who is the oldest person whose job is student?",
        "question_original_pl": "Kto jest najstarszą osobą, która pracuje jako student?",
        "question": "Who is the oldest person whose occupation is student?",
        "question_pl": "Kto jest najstarszą osobą, której zawód to student?",
        "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )",
        "query_pl": "SELECT name FROM Person WHERE job  =  'uczeń' AND age  =  (SELECT max(age) FROM person WHERE job  =  'uczeń' )"
    },
    {
        "db_id": "network_2",
        "question_original": "What is the age of the doctor named Zach?",
        "question_original_pl": "W jakim wieku jest lekarz o imieniu Zach?",
        "question": "What is the age of the physician named Zach?",
        "question_pl": "Jaki jest wiek lekarza o imieniu Zach?",
        "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'",
        "query_pl": "SELECT age FROM Person WHERE job  =  'lekarz' AND name  =  'Zach'"
    },
    {
        "db_id": "network_2",
        "question_original": "How old is each gender, on average?",
        "question_original_pl": "Ile średnio lat ma każda z płci?",
        "question": "How old is each sex, on average?",
        "question_pl": "Ile średnio lat ma każda płeć?",
        "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender",
        "query_pl": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"
    },
    {
        "db_id": "network_2",
        "question_original": "What is average age for different job title?",
        "question_original_pl": "Jaki jest średni wiek dla różnych stanowisk?",
        "question": "What is average age for different occupation name?",
        "question_pl": "Jaki jest średni wiek dla różnych nazw zawodów?",
        "query": "SELECT avg(age) ,  job FROM Person GROUP BY job",
        "query_pl": "SELECT avg(age) ,  job FROM Person GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "How old is the average person for each job?",
        "question_original_pl": "Ile lat ma przeciętna osoba na każdym stanowisku?",
        "question": "How old is the average person for each occupation?",
        "question_pl": "Ile lat ma przeciętna osoba w każdym zawodzie?",
        "query": "SELECT avg(age) ,  job FROM Person GROUP BY job",
        "query_pl": "SELECT avg(age) ,  job FROM Person GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "What is average age of male for different job title?",
        "question_original_pl": "Jaki jest średni wiek mężczyzn na różnych stanowiskach?",
        "question": "What is average age of male for different occupation title?",
        "question_pl": "Jaki jest średni wiek mężczyzny dla różnych zawodów?",
        "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job",
        "query_pl": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'mężczyzna' GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "What is the average age for a male in each job?",
        "question_original_pl": "Jaki jest średni wiek mężczyzny na każdym stanowisku?",
        "question": "What is the average age for a male in each occupation?",
        "question_pl": "Jaki jest średni wiek mężczyzny w każdym zawodzie?",
        "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job",
        "query_pl": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'mężczyzna' GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "What is minimum age for different job title?",
        "question_original_pl": "Jaki jest minimalny wiek dla różnych stanowisk?",
        "question": "What is minimum age for different occupation title?",
        "question_pl": "Jaki jest minimalny wiek dla różnych zawodów?",
        "query": "SELECT min(age) ,  job FROM Person GROUP BY job",
        "query_pl": "SELECT min(age) ,  job FROM Person GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "How old is the youngest person for each job?",
        "question_original_pl": "Ile lat ma najmłodsza osoba na każdym stanowisku?",
        "question": "How old is the youngest person for each occupation?",
        "question_pl": "Ile lat ma najmłodsza osoba w każdym zawodzie?",
        "query": "SELECT min(age) ,  job FROM Person GROUP BY job",
        "query_pl": "SELECT min(age) ,  job FROM Person GROUP BY job"
    },
    {
        "db_id": "network_2",
        "question_original": "list the name, job title of all people ordered by their names.",
        "question_original_pl": "wymień imiona i nazwiska oraz stanowiska wszystkich osób uporządkowane według ich imion i nazwisk.",
        "question": "list the name, occupation title of all people ordered by their names.",
        "question_pl": "Wymień nazwiska, tytuły zawodowe wszystkich osób uporządkowane według ich nazwisk.",
        "query": "SELECT name ,  job FROM Person ORDER BY name",
        "query_pl": "SELECT name ,  job FROM Person ORDER BY name"
    },
    {
        "db_id": "network_2",
        "question_original": "What are the names and job titles of every person ordered alphabetically by name?",
        "question_original_pl": "Jakie są imiona i nazwiska oraz stanowiska każdej osoby uporządkowane alfabetycznie według nazwisk?",
        "question": "What are the names and occupation titles of every person ordered alphabetically by name?",
        "question_pl": "Jakie są imiona i nazwiska oraz nazwy zawodów każdej osoby uporządkowane alfabetycznie według imion i nazwisk?",
        "query": "SELECT name ,  job FROM Person ORDER BY name",
        "query_pl": "SELECT name ,  job FROM Person ORDER BY name"
    },
    {
        "db_id": "network_2",
        "question_original": "What are the names and ages of every person who is a friend of both Dan and Alice?",
        "question_original_pl": "Podaj imiona i wiek wszystkich osób, które są przyjaciółmi Dana i Alice.",
        "question": "What are the names and ages of every people who is a friend of both Dan and Alice?",
        "question_pl": "Jakie są imiona i wiek wszystkich osób, które są przyjaciółmi Dana i Alice?",
        "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'",
        "query_pl": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the name of the person who has friends with age above 40 and under age 30?",
        "question_original_pl": "Znajdź imię osoby, która ma znajomych w wieku powyżej 40 lat i poniżej 30 lat?",
        "question": "Find the name of the people who has friends with age above 40 and under age 30?",
        "question_pl": "Znajdź nazwiska osób, które mają znajomych w wieku powyżej 40 lat i poniżej 30 lat?",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the name of the person who has friends with age above 40 but not under age 30?",
        "question_original_pl": "Znajdź imię osoby, która ma znajomych w wieku powyżej 40 lat, ale nie poniżej 30 lat?",
        "question": "Find the name of the people who has friends with age above 40 but not under age 30?",
        "question_pl": "Znajdź nazwiska osób, które mają znajomych w wieku powyżej 40 lat, ale nie poniżej 30 lat?",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the person who has exactly one friend.",
        "question_original_pl": "Znajdź osobę, która ma dokładnie jednego przyjaciela.",
        "question": "Find the people who has exactly one friend.",
        "question_pl": "Znajdź osoby, które mają dokładnie jednego znajomego.",
        "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1",
        "query_pl": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the name of persons who are friends with Bob.",
        "question_original_pl": "Znajdź nazwiska osób, które są przyjaciółmi Boba.",
        "question": "Find the name of people who are friends with Bob.",
        "question_pl": "Znajdź nazwiska osób zaprzyjaźnionych z Bobem.",
        "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'",
        "query_pl": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the male friend of Alice whose job is a doctor?",
        "question_original_pl": "Znajdź męskiego przyjaciela Alice, który jest lekarzem?",
        "question": "Find the male friend of Alice whose occupation is a doctor?",
        "question_pl": "Znajdź przyjaciela Alice, który jest lekarzem?",
        "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'",
        "query_pl": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'mężczyzna' AND T1.job  =  'lekarz'"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the name of persons who are friends with Alice for the shortest years.",
        "question_original_pl": "Znajdź nazwiska osób, które przyjaźnią się z Alicją najkrócej.",
        "question": "Find the name of people who are friends with Alice for the shortest years.",
        "question_pl": "Znajdź nazwiska osób, które przyjaźnią się z Alice najkrócej.",
        "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
        "query_pl": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
    },
    {
        "db_id": "network_2",
        "question_original": "Find the name, age, and job title of persons who are friends with Alice for the longest years.",
        "question_original_pl": "Znajdź imię i nazwisko, wiek i stanowisko osób, które przyjaźnią się z Alice najdłużej.",
        "question": "Find the name, age, and occupation title of people who are friends with Alice for the longest years.",
        "question_pl": "Znajdź imię, wiek i zawód osób, które przyjaźnią się z Alice najdłużej.",
        "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
        "query_pl": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
    },
    {
        "db_id": "network_2",
        "question_original": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?",
        "question_original_pl": "Jakie są imiona, wiek i zawody wszystkich osób, które przyjaźnią się z Alice przez najdłuższy czas?",
        "question": "What are the names, ages, and occupation of all people who are friends with Alice for the longest amount of time?",
        "question_pl": "Jakie są imiona, wiek i zawód wszystkich osób, które przyjaźnią się z Alicją przez najdłuższy czas?",
        "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
        "query_pl": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
    },
    {
        "db_id": "network_2",
        "question_original": "Who is the person that has no friend?",
        "question_original_pl": "Kim jest osoba, która nie ma przyjaciela?",
        "question": "Who is the people that has no friend?",
        "question_pl": "Kim są ludzie, którzy nie mają przyjaciół?",
        "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
        "query_pl": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
    },
    {
        "db_id": "network_2",
        "question_original": "Which person whose friends have the oldest average age?",
        "question_original_pl": "Która osoba, której znajomi mają najstarszą średnią wieku?",
        "question": "Which people whose friends have the oldest average age?",
        "question_pl": "Które osoby, których znajomi mają najstarszą średnią wieku?",
        "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1",
        "query_pl": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
    },
    {
        "db_id": "network_2",
        "question_original": "What is the name of the person who has the oldest average age for their friends, and what is that average age?",
        "question_original_pl": "Jak nazywa się osoba, która ma najstarszą średnią wieku wśród swoich znajomych i jaki jest jej średni wiek?",
        "question": "What is the name of the people who has the oldest average age for their friends, and what is that average age?",
        "question_pl": "Jak nazywa się osoba, która ma najstarszy średni wiek wśród swoich znajomych i jaki jest ten średni wiek?",
        "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1",
        "query_pl": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "What are the names and countries of members?",
        "question_original_pl": "Jakie są nazwy i kraje członków?",
        "question": "What are the names and nations of members?",
        "question_pl": "Jakie są nazwy i narodowości członków?",
        "query": "SELECT Name ,  Country FROM member",
        "query_pl": "SELECT Name ,  Country FROM member"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the names of members whose country is \"United States\" or \"Canada\".",
        "question_original_pl": "Pokaż nazwiska członków, których kraj to \"Stany Zjednoczone\" lub \"Kanada\".",
        "question": "Show the names of members whose nation is \"United States\" or \"Canada\".",
        "question_pl": "Pokaż nazwiska członków, których narodowość to \"Stany Zjednoczone\" lub \"Kanada\".",
        "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"",
        "query_pl": "SELECT Name FROM member WHERE Country  =  \"Stany Zjednoczone\" OR Country  =  \"Kanada\""
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the different countries and the number of members from each.",
        "question_original_pl": "Pokaż różne kraje i liczbę członków z każdego z nich.",
        "question": "Show the different nations and the number of members from each.",
        "question_pl": "Pokaż różne narody i liczbę członków każdego z nich.",
        "query": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country",
        "query_pl": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the most common country across members.",
        "question_original_pl": "Pokaż najpopularniejszy kraj wśród członków.",
        "question": "Show the most common nation across members.",
        "question_pl": "Pokaż najpopularniejszy naród wśród członków.",
        "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Which countries have more than two members?",
        "question_original_pl": "Które kraje mają więcej niż dwóch członków?",
        "question": "Which nations have more than two members?",
        "question_pl": "Które narody mają więcej niż dwóch członków?",
        "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2",
        "query_pl": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the leader names and locations of colleges.",
        "question_original_pl": "Pokaż liderom nazwy i lokalizacje uczelni.",
        "question": "Show the leader names and addresses of school.",
        "question_pl": "Pokaż liderowi nazwy i adresy szkół.",
        "query": "SELECT Leader_Name ,  College_Location FROM college",
        "query_pl": "SELECT Leader_Name ,  College_Location FROM college"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the names of members and names of colleges they go to.",
        "question_original_pl": "Pokaż nazwiska członków i nazwy uczelni, do których uczęszczają.",
        "question": "Show the names of members and names of school they go to.",
        "question_pl": "Pokaż nazwiska członków i nazwy szkół, do których chodzą.",
        "query": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID",
        "query_pl": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.",
        "question_original_pl": "Pokaż nazwiska członków i lokalizacje uczelni, do których uczęszczają, w kolejności alfabetycznej rosnącej od nazwisk członków.",
        "question": "Show the names of members and the addresses of school they go to in ascending alphabetical order of member names.",
        "question_pl": "Pokaż imiona i nazwiska członków oraz adresy szkół, do których uczęszczają, w kolejności alfabetycznej.",
        "query": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC",
        "query_pl": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC"
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the distinct leader names of colleges associated with members from country \"Canada\".",
        "question_original_pl": "Pokaż różne nazwy liderów uczelni powiązanych z członkami z kraju \"Kanada\".",
        "question": "Show the different leader names of school associated with members from country \"Canada\".",
        "question_pl": "Pokaż różne nazwy liderów szkół powiązanych z członkami z kraju \"Kanada\".",
        "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\"",
        "query_pl": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Kanada\""
    },
    {
        "db_id": "decoration_competition",
        "question_original": "Show the names of members and the decoration themes they have.",
        "question_original_pl": "Pokaż imiona członków i motywy dekoracji, które posiadają.",
        "question": "Show the names of members and the decoration topic they have.",
        "question_pl": "Pokaż imiona członków i temat dekoracji, który posiadają.",
        "query": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID",
        "query_pl": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the name and access counts of all documents, in alphabetic order of the document name.",
        "question_original_pl": "Znajdź nazwę i liczbę dostępów do wszystkich dokumentów, w kolejności alfabetycznej nazwy dokumentu.",
        "question": "Find the name and access counts of all files, in alphabetic order of the file name.",
        "question_pl": "Znajdź nazwę i liczbę dostępów do wszystkich plików, w kolejności alfabetycznej nazwy pliku.",
        "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name",
        "query_pl": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names of all the documents, as well as the access counts of each, ordered alphabetically?",
        "question_original_pl": "Jakie są nazwy wszystkich dokumentów, a także liczba dostępów do każdego z nich, uporządkowane alfabetycznie?",
        "question": "What are the names of all the files, as well as the access counts of each, ordered alphabetically?",
        "question_pl": "Jakie są nazwy wszystkich plików, a także liczba dostępów do każdego z nich, uporządkowane alfabetycznie?",
        "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name",
        "query_pl": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
        "question_original_pl": "Znajdź nazwę dokumentu, do którego uzyskano dostęp największą liczbę razy, a także policz, ile razy uzyskano do niego dostęp?",
        "question": "Find the name of the file that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?",
        "question_pl": "Znajdź nazwę pliku, do którego uzyskano dostęp największą liczbę razy, a także policz, ile razy uzyskano do niego dostęp?",
        "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1",
        "query_pl": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?",
        "question_original_pl": "Jak nazywa się dokument, do którego uzyskano dostęp najwięcej razy, a także ile razy uzyskano do niego dostęp?",
        "question": "What is the name of the file which has been accessed the most times, as well as the number of times it has been accessed?",
        "question_pl": "Jak nazywa się plik, do którego uzyskano dostęp najwięcej razy, a także ile razy był on otwierany?",
        "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1",
        "query_pl": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the types of documents with more than 4 documents.",
        "question_original_pl": "Znajdź typy dokumentów zawierające więcej niż 4 dokumenty.",
        "question": "Find the types of files with more than 4 files.",
        "question_pl": "Znajdź typy plików zawierające więcej niż 4 pliki.",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the codes of types of documents of which there are for or more?",
        "question_original_pl": "Jakie są kody typów dokumentów, których jest co najmniej jeden?",
        "question": "What are the codes of categories of files of which there are for or more?",
        "question_pl": "Jakie są kody kategorii plików, których jest cztery lub więcej?",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the total access count of all documents in the most popular document type.",
        "question_original_pl": "Znajdź całkowitą liczbę dostępów do wszystkich dokumentów w najpopularniejszym typie dokumentu.",
        "question": "Find the total access count of all files in the most popular file category.",
        "question_pl": "Znajdź całkowitą liczbę dostępów do wszystkich plików w najpopularniejszej kategorii plików.",
        "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the total access count of documents that are of the most common document type?",
        "question_original_pl": "Jaka jest całkowita liczba dostępów do dokumentów, które należą do najpopularniejszego typu dokumentów?",
        "question": "What is the total access count of files that are of the most common file category?",
        "question_pl": "Jaka jest łączna liczba dostępów do plików należących do najpopularniejszej kategorii plików?",
        "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the average access count of documents?",
        "question_original_pl": "Jaka jest średnia liczba dostępów do dokumentów?",
        "question": "What is the average access count of files?",
        "question_pl": "Jaka jest średnia liczba dostępów do plików?",
        "query": "SELECT avg(access_count) FROM documents",
        "query_pl": "SELECT avg(access_count) FROM documents"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the average access count across all documents?",
        "question_original_pl": "Znajdź średnią liczbę dostępów we wszystkich dokumentach?",
        "question": "Find the average access count across all files?",
        "question_pl": "Znajdź średnią liczbę dostępów do wszystkich plików?",
        "query": "SELECT avg(access_count) FROM documents",
        "query_pl": "SELECT avg(access_count) FROM documents"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the structure of the document with the least number of accesses?",
        "question_original_pl": "Jaka jest struktura dokumentu z najmniejszą liczbą dostępów?",
        "question": "What is the structure of the file with the least number of accesses?",
        "question_pl": "Jaka jest struktura pliku z najmniejszą liczbą dostępów?",
        "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "Return the structure description of the document that has been accessed the fewest number of times.",
        "question_original_pl": "Zwraca opis struktury dokumentu, do którego uzyskano dostęp najmniejszą liczbę razy.",
        "question": "Return the structure describing content of the file that has been accessed the fewest number of times.",
        "question_pl": "Zwraca strukturę opisującą zawartość pliku, do którego uzyskano dostęp najmniejszą liczbę razy.",
        "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the type of the document named \"David CV\"?",
        "question_original_pl": "Jaki jest typ dokumentu o nazwie \"David CV\"?",
        "question": "What is the category of the file named \"David CV\"?",
        "question_pl": "Jaka jest kategoria pliku o nazwie \"David CV\"?",
        "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
        "query_pl": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
    },
    {
        "db_id": "document_management",
        "question_original": "Return the type code of the document named \"David CV\".",
        "question_original_pl": "Zwróć kod typu dokumentu o nazwie \"David CV\".",
        "question": "Return the category code of the file named \"David CV\".",
        "question_pl": "Zwróć kod kategorii pliku o nazwie \"David CV\".",
        "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
        "query_pl": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
    },
    {
        "db_id": "document_management",
        "question_original": "Find the list of documents that are both in the most three popular type and have the most three popular structure.",
        "question_original_pl": "Znajdź listę dokumentów, które należą do trzech najpopularniejszych typów i mają trzy najpopularniejsze struktury.",
        "question": "Find the list of files that are both in the most three popular type and have the most three popular structure.",
        "question_pl": "Znajdź listę plików, które należą do trzech najpopularniejszych typów i mają trzy najpopularniejsze struktury.",
        "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names of documents that have both one of the three most common types and one of three most common structures?",
        "question_original_pl": "Jak nazywają się dokumenty, które mają zarówno jeden z trzech najpopularniejszych typów, jak i jedną z trzech najpopularniejszych struktur?",
        "question": "What are the names of files that have both one of the three most common types and one of three most common structures?",
        "question_pl": "Jakie są nazwy plików, które mają zarówno jeden z trzech najpopularniejszych typów, jak i jedną z trzech najpopularniejszych struktur?",
        "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "document_management",
        "question_original": "What document types do have more than 10000 total access number.",
        "question_original_pl": "Jakie typy dokumentów mają łącznie ponad 10000 numerów dostępu.",
        "question": "What file categories do have more than 10000 total access number.",
        "question_pl": "Jakie kategorie plików mają więcej niż 10000 całkowitych numerów dostępu.",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
    },
    {
        "db_id": "document_management",
        "question_original": "Return the codes of the document types that do not have a total access count of over 10000.",
        "question_original_pl": "Zwróć kody typów dokumentów, których łączna liczba dostępów nie przekracza 10000.",
        "question": "Return the codes of the file categories that do not have a total access count of over 10000.",
        "question_pl": "Zwróć kody kategorii plików, które nie mają łącznej liczby dostępów przekraczającej 10000.",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
    },
    {
        "db_id": "document_management",
        "question_original": "What are all the section titles of the document named \"David CV\"?",
        "question_original_pl": "Jakie są tytuły wszystkich sekcji dokumentu o nazwie \"David CV\"?",
        "question": "What are all the chapter names of the document named \"David CV\"?",
        "question_pl": "Jakie są nazwy wszystkich rozdziałów dokumentu o nazwie \"David CV\"?",
        "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"",
        "query_pl": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""
    },
    {
        "db_id": "document_management",
        "question_original": "Give the section titles of the document with the name \"David CV\".",
        "question_original_pl": "Podaj tytuły sekcji dokumentu z nazwą \"David CV\".",
        "question": "Give the chapter names of the document with the name \"David CV\".",
        "question_pl": "Podaj nazwy rozdziałów dokumentu o nazwie \"David CV\".",
        "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"",
        "query_pl": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""
    },
    {
        "db_id": "document_management",
        "question_original": "Find all the name of documents without any sections.",
        "question_original_pl": "Znajdź wszystkie nazwy dokumentów bez żadnych sekcji.",
        "question": "Find all the name of files without any sections.",
        "question_pl": "Znajdź wszystkie nazwy plików bez żadnych sekcji.",
        "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)",
        "query_pl": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names of documents that do not have any sections?",
        "question_original_pl": "Jak nazywają się dokumenty, które nie mają żadnych sekcji?",
        "question": "What are the names of files that do not have any sections?",
        "question_pl": "Jak nazywają się pliki, które nie mają żadnych sekcji?",
        "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)",
        "query_pl": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
    },
    {
        "db_id": "document_management",
        "question_original": "Find the average access counts of documents with functional area \"Acknowledgement\".",
        "question_original_pl": "Znajdź średnią liczbę dostępów do dokumentów z obszaru funkcjonalnego \"Potwierdzenie\".",
        "question": "Find the average access counts of files with functional area \"Acknowledgement\".",
        "question_pl": "Znajdź średnią liczbę dostępów do plików z obszarem funkcjonalnym \"Potwierdzenie\".",
        "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"",
        "query_pl": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Potwierdzenie\""
    },
    {
        "db_id": "document_management",
        "question_original": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?",
        "question_original_pl": "Jaka jest średnia liczba dostępów do dokumentów z opisem obszaru funkcjonalnego \"Potwierdzenie\"?",
        "question": "What are the average access counts of files that have the functional area description \"Acknowledgement\"?",
        "question_pl": "Jaka jest średnia liczba dostępów do plików z opisem obszaru funkcjonalnego \"Potwierdzenie\"?",
        "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\"",
        "query_pl": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Potwierdzenie\""
    },
    {
        "db_id": "document_management",
        "question_original": "Find names of the document without any images.",
        "question_original_pl": "Znajdź nazwy dokumentów bez żadnych obrazów.",
        "question": "Find names of the file without any images.",
        "question_pl": "Znajdź nazwy plików bez żadnych obrazów.",
        "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id",
        "query_pl": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names of documents that do not have any images?",
        "question_original_pl": "Jak nazywają się dokumenty, które nie mają żadnych obrazów?",
        "question": "What are the names of files that do not have any images?",
        "question_pl": "Jak nazywają się pliki, które nie zawierają żadnych obrazów?",
        "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id",
        "query_pl": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the name of the document with the most number of sections?",
        "question_original_pl": "Jak nazywa się dokument z największą liczbą sekcji?",
        "question": "What is the name of the file with the most number of sections?",
        "question_pl": "Jak nazywa się plik z największą liczbą sekcji?",
        "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "Return the name of the document that has the most sections.",
        "question_original_pl": "Zwróć nazwę dokumentu, który ma najwięcej sekcji.",
        "question": "Return the name of the file that has the most sections.",
        "question_pl": "Zwróć nazwę pliku, który ma najwięcej sekcji.",
        "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "List all the document names which contains \"CV\".",
        "question_original_pl": "Wymień wszystkie nazwy dokumentów, które zawierają \"CV\".",
        "question": "List all the file names which contains \"CV\".",
        "question_pl": "Wymień wszystkie nazwy plików, które zawierają \"CV\".",
        "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
        "query_pl": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names of documents that contain the substring \"CV\"?",
        "question_original_pl": "Jakie są nazwy dokumentów, które zawierają podciąg \"CV\"?",
        "question": "What are the names of files that contain the substring \"CV\"?",
        "question_pl": "Jakie nazwy plików zawierają podciąg \"CV\"?",
        "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
        "query_pl": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
    },
    {
        "db_id": "document_management",
        "question_original": "Find the description of the most popular role among the users that have logged in.",
        "question_original_pl": "Znajdź opis najpopularniejszej roli wśród zalogowanych użytkowników.",
        "question": "Find the describing content of the most popular role among the users that have logged in.",
        "question_pl": "Znajdź zawartość opisującą najpopularniejszą rolę wśród zalogowanych użytkowników.",
        "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the description of the most popular role among users that have logged in?",
        "question_original_pl": "Jaki jest opis najpopularniejszej roli wśród zalogowanych użytkowników?",
        "question": "What is the describing content of the most popular role among users that have logged in?",
        "question_pl": "Jaka jest opisowa zawartość najpopularniejszej roli wśród zalogowanych użytkowników?",
        "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "document_management",
        "question_original": "What is the average access count of documents that have the least common structure?",
        "question_original_pl": "Jaka jest średnia liczba dostępów do dokumentów, które mają najmniej wspólną strukturę?",
        "question": "What is the average access count of files that have the least common structure?",
        "question_pl": "Jaka jest średnia liczba dostępów do plików o najmniej wspólnej strukturze?",
        "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "document_management",
        "question_original": "What are the names and urls of images, sorted alphabetically?",
        "question_original_pl": "Jakie są nazwy i adresy URL obrazów, posortowane alfabetycznie?",
        "question": "What are the names and urls of pictures, sorted alphabetically?",
        "question_pl": "Jakie są nazwy i adresy URL zdjęć, posortowane alfabetycznie?",
        "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name",
        "query_pl": "SELECT image_name ,  image_url FROM images ORDER BY image_name"
    },
    {
        "db_id": "document_management",
        "question_original": "What document types have more than 2 corresponding documents?",
        "question_original_pl": "Jakie typy dokumentów mają więcej niż 2 odpowiadające im dokumenty?",
        "question": "What file categories have more than 2 corresponding files?",
        "question_pl": "Jakie kategorie plików mają więcej niż 2 odpowiadające im pliki?",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
    },
    {
        "db_id": "document_management",
        "question_original": "Give the codes of document types that have more than 2 corresponding documents.",
        "question_original_pl": "Podaj kody typów dokumentów, które mają więcej niż 2 odpowiadające im dokumenty.",
        "question": "Give the codes of file categories that have more than 2 corresponding files.",
        "question_pl": "Podaj kody kategorii plików, które mają więcej niż 2 odpowiadające im pliki.",
        "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
        "query_pl": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
    },
    {
        "db_id": "company_office",
        "question_original": "How many companies are there?",
        "question_original_pl": "Ile jest takich firm?",
        "question": "How many enterprises are there?",
        "question_pl": "Ile jest przedsiębiorstw?",
        "query": "SELECT count(*) FROM Companies",
        "query_pl": "SELECT count(*) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "Count the number of companies.",
        "question_original_pl": "Policz liczbę firm.",
        "question": "Count the number of enterprises.",
        "question_pl": "Policz liczbę przedsiębiorstw.",
        "query": "SELECT count(*) FROM Companies",
        "query_pl": "SELECT count(*) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "List the names of companies in descending order of market value.",
        "question_original_pl": "Wymień nazwy spółek w porządku malejącym według wartości rynkowej.",
        "question": "List the names of enterprises in descending order of market value.",
        "question_pl": "Wymień nazwy przedsiębiorstw w porządku malejącym według wartości rynkowej.",
        "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
        "query_pl": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
    },
    {
        "db_id": "company_office",
        "question_original": "Sort the company names in descending order of the company's market value.",
        "question_original_pl": "Posortuj nazwy spółek w porządku malejącym według ich wartości rynkowej.",
        "question": "Sort the enterprise names in descending order of the enterprise's market value.",
        "question_pl": "Posortuj nazwy przedsiębiorstw w porządku malejącym według ich wartości rynkowej.",
        "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
        "query_pl": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
    },
    {
        "db_id": "company_office",
        "question_original": "What are the names of companies whose headquarters are not \"USA\"?",
        "question_original_pl": "Jakie są nazwy firm, których siedziba nie znajduje się w USA?",
        "question": "What are the names of enterprises whose headquarters are not \"USA\"?",
        "question_pl": "Jakie są nazwy przedsiębiorstw, których siedziba nie znajduje się w USA?",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "query_pl": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
    },
    {
        "db_id": "company_office",
        "question_original": "Find the names of the companies whose headquarters are not located in \"USA\".",
        "question_original_pl": "Znajdź nazwy firm, których siedziba główna nie znajduje się w \"USA\".",
        "question": "Find the names of the enterprises whose headquarters are not located in \"USA\".",
        "question_pl": "Znajdź nazwy przedsiębiorstw, których siedziba główna nie znajduje się w \"USA\".",
        "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
        "query_pl": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
    },
    {
        "db_id": "company_office",
        "question_original": "What are the name and assets of each company, sorted in ascending order of company name?",
        "question_original_pl": "Jaka jest nazwa i aktywa każdej firmy, posortowane rosnąco według nazwy firmy?",
        "question": "What are the name and assets of each enterprise, sorted in ascending order of enterprise name?",
        "question_pl": "Jaka jest nazwa i aktywa każdego przedsiębiorstwa, posortowane rosnąco według nazwy przedsiębiorstwa?",
        "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC",
        "query_pl": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
    },
    {
        "db_id": "company_office",
        "question_original": "List the name and assets of each company in ascending order of company name.",
        "question_original_pl": "Wymień nazwę i aktywa każdej spółki w porządku rosnącym według nazwy spółki.",
        "question": "List the name and assets of each enterprise in ascending order of enterprise name.",
        "question_pl": "Wymień nazwę i aktywa każdego przedsiębiorstwa w porządku rosnącym według nazwy przedsiębiorstwa.",
        "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC",
        "query_pl": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
    },
    {
        "db_id": "company_office",
        "question_original": "What are the average profits of companies?",
        "question_original_pl": "Jakie są średnie zyski firm?",
        "question": "What are the average profits of enterprises?",
        "question_pl": "Jakie są średnie zyski przedsiębiorstw?",
        "query": "SELECT avg(Profits_billion) FROM Companies",
        "query_pl": "SELECT avg(Profits_billion) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "Compute the average profits companies make.",
        "question_original_pl": "Oblicz średnie zyski osiągane przez firmy.",
        "question": "Compute the average profits enterprises make.",
        "question_pl": "Oblicz średnie zyski osiągane przez przedsiębiorstwa.",
        "query": "SELECT avg(Profits_billion) FROM Companies",
        "query_pl": "SELECT avg(Profits_billion) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".",
        "question_original_pl": "Jaka jest maksymalna i minimalna sprzedaż firm, których branże nie są \"bankowe\".",
        "question": "What are the maximum and minimum saleroom of the enterprises whose industries are not \"Banking\".",
        "question_pl": "Jakie są maksymalne i minimalne saldo sprzedaży przedsiębiorstw, których branże nie są \"bankowe\".",
        "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
        "query_pl": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Bankowość\""
    },
    {
        "db_id": "company_office",
        "question_original": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.",
        "question_original_pl": "Znajdź maksymalną i minimalną sprzedaż firm spoza branży bankowej.",
        "question": "Find the maximum and minimum saleroom of the enterprises that are not in the \"Banking\" industry.",
        "question_pl": "Znajdź maksymalną i minimalną salę sprzedaży przedsiębiorstw, które nie należą do branży \"bankowej\".",
        "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
        "query_pl": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Bankowość\""
    },
    {
        "db_id": "company_office",
        "question_original": "How many different industries are the companies in?",
        "question_original_pl": "W ilu różnych branżach działają firmy?",
        "question": "How many different industries are the enterprises in?",
        "question_pl": "W ilu różnych branżach działają przedsiębiorstwa?",
        "query": "SELECT count(DISTINCT Industry) FROM Companies",
        "query_pl": "SELECT count(DISTINCT Industry) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "Count the number of distinct company industries.",
        "question_original_pl": "Policz liczbę różnych branż firmy.",
        "question": "Count the number of different enterprise industries.",
        "question_pl": "Policz liczbę różnych branż przedsiębiorstw.",
        "query": "SELECT count(DISTINCT Industry) FROM Companies",
        "query_pl": "SELECT count(DISTINCT Industry) FROM Companies"
    },
    {
        "db_id": "company_office",
        "question_original": "Find the stories of the building with the largest height.",
        "question_original_pl": "Znajdź piętra budynku o największej wysokości.",
        "question": "Find the floor of the building with the largest height.",
        "question_pl": "Znajdź piętro budynku o największej wysokości.",
        "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
        "query_pl": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
    },
    {
        "db_id": "company_office",
        "question_original": "What is the stories of highest building?",
        "question_original_pl": "Jakie są historie najwyższych budynków?",
        "question": "What is the floor of highest building?",
        "question_pl": "Jakie jest piętro najwyższego budynku?",
        "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
        "query_pl": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
    },
    {
        "db_id": "company_office",
        "question_original": "For each company, return the company name and the name of the building its office is located in.",
        "question_original_pl": "Dla każdej firmy zwróć nazwę firmy i nazwę budynku, w którym znajduje się jej biuro.",
        "question": "For each enterprise, return the enterprise name and the name of the building its office is located in.",
        "question_pl": "Dla każdego przedsiębiorstwa zwróć nazwę przedsiębiorstwa i nazwę budynku, w którym znajduje się jego biuro.",
        "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id",
        "query_pl": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"
    },
    {
        "db_id": "company_office",
        "question_original": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.",
        "question_original_pl": "Podaj nazwy budynków, których status jest \"wstrzymany\", w kolejności rosnącej według kondygnacji.",
        "question": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of floor.",
        "question_pl": "Podaj nazwy budynków, których status jest \"wstrzymany\", w kolejności rosnącej od piętra.",
        "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
        "query_pl": "SELECT name FROM buildings WHERE Status  =  \"wstrzymany\" ORDER BY Stories ASC"
    },
    {
        "db_id": "company_office",
        "question_original": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.",
        "question_original_pl": "Znajdź nazwy budynków o statusie \"wstrzymany\" i posortuj je rosnąco według kondygnacji.",
        "question": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building floor.",
        "question_pl": "Znajdź nazwy budynków o statusie \"wstrzymany\" i posortuj je rosnąco według kondygnacji budynku.",
        "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
        "query_pl": "SELECT name FROM buildings WHERE Status  =  \"wstrzymany\" ORDER BY Stories ASC"
    },
    {
        "db_id": "company_office",
        "question_original": "Please show each industry and the corresponding number of companies in that industry.",
        "question_original_pl": "Wskaż każdą branżę i odpowiadającą jej liczbę firm.",
        "question": "Please show each industry and the corresponding number of enterprise in that industry.",
        "question_pl": "Wskaż każdą branżę i odpowiadającą jej liczbę przedsiębiorstw.",
        "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry",
        "query_pl": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
    },
    {
        "db_id": "company_office",
        "question_original": "Whah are the name of each industry and the number of companies in that industry?",
        "question_original_pl": "Jak nazywają się poszczególne branże i ile jest w nich firm?",
        "question": "Whah are the name of each industry and the number of enterprise in that industry?",
        "question_pl": "Jaka jest nazwa każdej branży i liczba przedsiębiorstw w tej branży?",
        "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry",
        "query_pl": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
    },
    {
        "db_id": "company_office",
        "question_original": "Please show the industries of companies in descending order of the number of companies.",
        "question_original_pl": "Pokaż branże firm w porządku malejącym według liczby firm.",
        "question": "Please show the industries of enterprise in descending order of the number of enterprises.",
        "question_pl": "Wskaż branże przedsiębiorstw w porządku malejącym według liczby przedsiębiorstw.",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "company_office",
        "question_original": "Sort all the industries in descending order of the count of companies in each industry",
        "question_original_pl": "Posortuj wszystkie branże malejąco według liczby firm w każdej z nich.",
        "question": "Sort all the industries in descending order of the count of enterprises in each industry",
        "question_pl": "Posortuj wszystkie branże w porządku malejącym według liczby przedsiębiorstw w każdej branży.",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "company_office",
        "question_original": "List the industry shared by the most companies.",
        "question_original_pl": "Wymień branżę, w której działa najwięcej firm.",
        "question": "List the industry shared by the most enterprises.",
        "question_pl": "Wymień branżę, w której działa najwięcej przedsiębiorstw.",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "company_office",
        "question_original": "Which industry has the most companies?",
        "question_original_pl": "Która branża ma najwięcej firm?",
        "question": "Which industry has the most enterprises?",
        "question_pl": "Która branża ma najwięcej przedsiębiorstw?",
        "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "company_office",
        "question_original": "List the names of buildings that have no company office.",
        "question_original_pl": "Wymień nazwy budynków, w których nie ma biura firmy.",
        "question": "List the names of buildings that have no enterprise office.",
        "question_pl": "Wymień nazwy budynków, w których nie ma biura przedsiębiorstwa.",
        "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)",
        "query_pl": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
    },
    {
        "db_id": "company_office",
        "question_original": "Which buildings do not have any company office? Give me the building names.",
        "question_original_pl": "W których budynkach nie ma biura firmy? Podaj nazwy budynków.",
        "question": "Which buildings do not have any enterprise office? Give me the building names.",
        "question_pl": "W których budynkach nie ma biura przedsiębiorstwa? Podaj nazwy budynków.",
        "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)",
        "query_pl": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
    },
    {
        "db_id": "company_office",
        "question_original": "Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\".",
        "question_original_pl": "Pokaż branże wspólne dla firm z siedzibą w USA i firm z siedzibą w Chinach.",
        "question": "Show the industries shared by enterprises whose headquarters are \"USA\" and enterprises whose headquarters are \"China\".",
        "question_pl": "Pokaż branże wspólne dla przedsiębiorstw z siedzibą w USA i przedsiębiorstw z siedzibą w Chinach.",
        "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"",
        "query_pl": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"Chiny\""
    },
    {
        "db_id": "company_office",
        "question_original": "Which industries have both companies with headquarter in \"USA\" and companies with headquarter in \"China\"?",
        "question_original_pl": "W których branżach działają zarówno firmy z siedzibą w USA, jak i firmy z siedzibą w Chinach?",
        "question": "Which industries have both enterprises with headquarter in \"USA\" and enterprises with headquarter in \"China\"?",
        "question_pl": "Które branże mają zarówno przedsiębiorstwa z siedzibą główną w USA, jak i przedsiębiorstwa z siedzibą główną w Chinach?",
        "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"",
        "query_pl": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"Chiny\""
    },
    {
        "db_id": "company_office",
        "question_original": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",",
        "question_original_pl": "Znajdź liczbę firm, których branża to \"Bankowość\" lub \"Konglomerat\",",
        "question": "Find the number of enterprises whose industry is \"Banking\" or \"Conglomerate\",",
        "question_pl": "Znajdź liczbę przedsiębiorstw, których branża to \"Bankowość\" lub \"Konglomerat\",",
        "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"",
        "query_pl": "SELECT count(*) FROM Companies WHERE Industry  =  \"Bankowość\" OR Industry  =  \"Konglomerat\""
    },
    {
        "db_id": "company_office",
        "question_original": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?",
        "question_original_pl": "Ile firm należy do branży \"Bankowość\" lub \"Konglomerat\"?",
        "question": "How many enterprises are in either \"Banking\" industry or \"Conglomerate\" industry?",
        "question_pl": "Ile przedsiębiorstw należy do branży \"bankowej\" lub \"konglomeratowej\"?",
        "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"",
        "query_pl": "SELECT count(*) FROM Companies WHERE Industry  =  \"Bankowość\" OR Industry  =  \"Konglomerat\""
    },
    {
        "db_id": "company_office",
        "question_original": "Show the headquarters shared by more than two companies.",
        "question_original_pl": "Pokaż siedzibę wspólną dla więcej niż dwóch firm.",
        "question": "Show the head office shared by more than two enterprises.",
        "question_pl": "Pokaż siedzibę główną wspólną dla więcej niż dwóch przedsiębiorstw.",
        "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2",
        "query_pl": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "How many products are there?",
        "question_original_pl": "Ile jest produktów?",
        "question": "How many goods are there?",
        "question_pl": "Ile jest towarów?",
        "query": "SELECT count(*) FROM Products",
        "query_pl": "SELECT count(*) FROM Products"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "List the name of products in ascending order of price.",
        "question_original_pl": "Wymień nazwy produktów w kolejności rosnącej według ceny.",
        "question": "List the name of goods in ascending order of price.",
        "question_pl": "Wymień nazwy towarów w porządku rosnącym według ceny.",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
        "query_pl": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "What are the names and type codes of products?",
        "question_original_pl": "Jakie są nazwy i kody typów produktów?",
        "question": "What are the names and type codes of goods?",
        "question_pl": "Jakie są nazwy i kody typów towarów?",
        "query": "SELECT Product_Name ,  Product_Type_Code FROM Products",
        "query_pl": "SELECT Product_Name ,  Product_Type_Code FROM Products"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the prices of the products named \"Dining\" or \"Trading Policy\".",
        "question_original_pl": "Pokaż ceny produktów o nazwie \"Jadalnia\" lub \"Polityka handlowa\".",
        "question": "Show the prices of the goods named \"Dining\" or \"Trading Policy\".",
        "question_pl": "Pokaż ceny towarów o nazwie \"Wyżywienie\" lub \"Polityka handlowa\".",
        "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"",
        "query_pl": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Jadalnia\" OR Product_Name  =  \"Polityka handlowa\""
    },
    {
        "db_id": "solvency_ii",
        "question_original": "What is the average price for products?",
        "question_original_pl": "Jaka jest średnia cena produktów?",
        "question": "What is the average price for goods?",
        "question_pl": "Jaka jest średnia cena towarów?",
        "query": "SELECT avg(Product_Price) FROM Products",
        "query_pl": "SELECT avg(Product_Price) FROM Products"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "What is the name of the product with the highest price?",
        "question_original_pl": "Jak nazywa się produkt o najwyższej cenie?",
        "question": "What is the name of the goods with the highest price?",
        "question_pl": "Jak nazywa się towar o najwyższej cenie?",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
        "query_pl": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show different type codes of products and the number of products with each type code.",
        "question_original_pl": "Pokaż różne kody typu produktów i liczbę produktów z każdym kodem typu.",
        "question": "Show different type codes of goods and the number of goods with each type code.",
        "question_pl": "Pokaż różne kody typów towarów i liczbę towarów z każdym kodem typu.",
        "query": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code",
        "query_pl": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the most common type code across products.",
        "question_original_pl": "Pokaż najczęstszy kod typu w różnych produktach.",
        "question": "Show the most common type code across goods.",
        "question_pl": "Pokaż najczęstszy kod typu dla różnych towarów.",
        "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the product type codes that have at least two products.",
        "question_original_pl": "Pokaż kody typów produktów, które mają co najmniej dwa produkty.",
        "question": "Show the goods type codes that have at least two goods.",
        "question_pl": "Pokaż kody typów towarów, które zawierają co najmniej dwa towary.",
        "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.",
        "question_original_pl": "Pokaż kody typów produktów, które zawierają zarówno produkty z ceną wyższą niż 4500, jak i produkty z ceną niższą niż 3000.",
        "question": "Show the goods type codes that have both goods with price higher than 4500 and goods with price lower than 3000.",
        "question_pl": "Pokaż kody typów towarów, które mają zarówno towary z ceną wyższą niż 4500, jak i towary z ceną niższą niż 3000.",
        "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000",
        "query_pl": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the names of products and the number of events they are in.",
        "question_original_pl": "Pokaż nazwy produktów i liczbę wydarzeń, w których biorą udział.",
        "question": "Show the names of goods and the number of events they are in.",
        "question_pl": "Pokaż nazwy towarów i liczbę wydarzeń, w których biorą udział.",
        "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name",
        "query_pl": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the names of products and the number of events they are in, sorted by the number of events in descending order.",
        "question_original_pl": "Pokaż nazwy produktów i liczbę wydarzeń, w których biorą udział, posortowane według liczby wydarzeń w porządku malejącym.",
        "question": "Show the names of goods and the number of events they are in, sorted by the number of events in descending order.",
        "question_pl": "Pokaż nazwy towarów i liczbę wydarzeń, w których biorą udział, posortowane według liczby wydarzeń w porządku malejącym.",
        "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the names of products that are in at least two events.",
        "question_original_pl": "Pokaż nazwy produktów, które biorą udział w co najmniej dwóch wydarzeniach.",
        "question": "Show the names of goods that are in at least two events.",
        "question_pl": "Pokaż nazwy towarów, które biorą udział w co najmniej dwóch wydarzeniach.",
        "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "Show the names of products that are in at least two events in ascending alphabetical order of product name.",
        "question_original_pl": "Pokaż nazwy produktów, które biorą udział w co najmniej dwóch wydarzeniach, w porządku alfabetycznym rosnąco według nazwy produktu.",
        "question": "Show the names of goods that are in at least two events in ascending alphabetical order of goods name.",
        "question_pl": "Pokaż nazwy towarów, które biorą udział w co najmniej dwóch wydarzeniach w porządku alfabetycznym rosnąco według nazwy towaru.",
        "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name",
        "query_pl": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name"
    },
    {
        "db_id": "solvency_ii",
        "question_original": "List the names of products that are not in any event.",
        "question_original_pl": "Wymień nazwy produktów, które nie biorą udziału w żadnym wydarzeniu.",
        "question": "List the names of goods that are not in any event.",
        "question_pl": "Wymień nazwy towarów, które nie są w żadnym wypadku.",
        "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)",
        "query_pl": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "List the name of artworks in ascending alphabetical order.",
        "question_original_pl": "Wymień nazwy dzieł sztuki w rosnącej kolejności alfabetycznej.",
        "question": "List the name of work of art in ascending alphabetical order.",
        "question_pl": "Wymień nazwę dzieła sztuki w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Name FROM artwork ORDER BY Name ASC",
        "query_pl": "SELECT Name FROM artwork ORDER BY Name ASC"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "List the name of artworks whose type is not \"Program Talent Show\".",
        "question_original_pl": "Wymień nazwy dzieł sztuki, których typem nie jest \"Program Talent Show\".",
        "question": "List the name of work of art whose type is not \"Program Talent Show\".",
        "question_pl": "Wymień nazwę dzieła sztuki, którego typem nie jest \"Program Talent Show\".",
        "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"",
        "query_pl": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\""
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "What are the names and locations of festivals?",
        "question_original_pl": "Jakie są nazwy i lokalizacje festiwali?",
        "question": "What are the names and country of festivals?",
        "question_pl": "Jakie są nazwy i kraje, w których odbywają się festiwale?",
        "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail",
        "query_pl": "SELECT Festival_Name ,  LOCATION FROM festival_detail"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "What is the location of the festival with the largest number of audience?",
        "question_original_pl": "Jaka jest lokalizacja festiwalu z największą liczbą widzów?",
        "question": "What is the country of the festival with the largest number of audience?",
        "question_pl": "Z jakiego kraju pochodzi festiwal z największą liczbą widzów?",
        "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "What is the average number of audience for festivals?",
        "question_original_pl": "Jaka jest średnia liczba widzów na festiwalach?",
        "question": "What is the average number of attendees for festivals?",
        "question_pl": "Jaka jest średnia liczba uczestników festiwali?",
        "query": "SELECT avg(Num_of_Audience) FROM festival_detail",
        "query_pl": "SELECT avg(Num_of_Audience) FROM festival_detail"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "Show distinct types of artworks that are nominated in festivals in 2007.",
        "question_original_pl": "Pokaż różne rodzaje dzieł sztuki, które są nominowane na festiwalach w 2007 roku.",
        "question": "Show different categories of artworks that are nominated in festivals in 2007.",
        "question_pl": "Pokaż różne kategorie dzieł sztuki nominowanych na festiwalach w 2007 roku.",
        "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007",
        "query_pl": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "Please show different types of artworks with the corresponding number of artworks of each type.",
        "question_original_pl": "Pokaż różne rodzaje dzieł sztuki z odpowiednią liczbą dzieł każdego rodzaju.",
        "question": "Please show different categories of artworks with the corresponding number of work of art of each category.",
        "question_pl": "Pokaż różne kategorie dzieł sztuki z odpowiednią liczbą dzieł sztuki w każdej kategorii.",
        "query": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "List the most common type of artworks.",
        "question_original_pl": "Wymień najpopularniejsze rodzaje dzieł sztuki.",
        "question": "List the most common category of artworks.",
        "question_pl": "Wymień najpopularniejsze kategorie dzieł sztuki.",
        "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "Show the number of audience in year 2008 or 2010.",
        "question_original_pl": "Pokaż liczbę widzów w roku 2008 lub 2010.",
        "question": "Show the number of attendees in year 2008 or 2010.",
        "question_pl": "Pokaż liczbę uczestników w roku 2008 lub 2010.",
        "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
        "query_pl": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
    },
    {
        "db_id": "entertainment_awards",
        "question_original": "What are the total number of the audiences who visited any of the festivals?",
        "question_original_pl": "Jaka jest łączna liczba widzów, którzy odwiedzili którykolwiek z festiwali?",
        "question": "What are the total number of the attendees who visited any of the festivals?",
        "question_pl": "Jaka jest łączna liczba uczestników, którzy odwiedzili którykolwiek z festiwali?",
        "query": "SELECT sum(Num_of_Audience) FROM festival_detail",
        "query_pl": "SELECT sum(Num_of_Audience) FROM festival_detail"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "What are all the distinct premise types?",
        "question_original_pl": "Jakie są poszczególne typy przesłanek?",
        "question": "What are all the different premise categories?",
        "question_pl": "Jakie są różne kategorie przesłanek?",
        "query": "SELECT DISTINCT premises_type FROM premises",
        "query_pl": "SELECT DISTINCT premises_type FROM premises"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Find the types and details for all premises and order by the premise type.",
        "question_original_pl": "Znajdź typy i szczegóły dla wszystkich lokali i zamów według typu lokalu.",
        "question": "Find the categories and information for all premises and order by the premise category.",
        "question_pl": "Znajdź kategorie i informacje dla wszystkich lokali i zamów według kategorii lokalu.",
        "query": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type",
        "query_pl": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show each premise type and the number of premises in that type.",
        "question_original_pl": "Pokaż każdy typ lokalu i liczbę lokali w danym typie.",
        "question": "Show each premise category and the number of premises in that category.",
        "question_pl": "Pokaż każdą kategorię lokalu i liczbę lokali w tej kategorii.",
        "query": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type",
        "query_pl": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show all distinct product categories along with the number of mailshots in each category.",
        "question_original_pl": "Pokaż wszystkie odrębne kategorie produktów wraz z liczbą wiadomości e-mail w każdej kategorii.",
        "question": "Show all different goods type along with the number of mailshots in each type.",
        "question_pl": "Pokaż wszystkie różne typy towarów wraz z liczbą wiadomości e-mail w każdym typie.",
        "query": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category",
        "query_pl": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show the name and phone of the customer without any mailshot.",
        "question_original_pl": "Pokaż imię i nazwisko oraz telefon klienta bez wysyłania wiadomości e-mail.",
        "question": "Show the name and telephone of the client without any mailshot.",
        "question_pl": "Pokaż nazwę i telefon klienta bez wysyłania wiadomości e-mail.",
        "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)",
        "query_pl": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show the name and phone for customers with a mailshot with outcome code 'No Response'.",
        "question_original_pl": "Pokaż imię i nazwisko oraz numer telefonu dla klientów, którzy otrzymali wiadomość e-mail z kodem wyniku \"Brak odpowiedzi\".",
        "question": "Show the name and telephone for clients with a mailshot with outcome code 'No Response'.",
        "question_pl": "Pokaż imię i nazwisko oraz numer telefonu klientów, którzy otrzymali wiadomość e-mail z kodem wyniku \"Brak odpowiedzi\".",
        "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'",
        "query_pl": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'Brak odpowiedzi'"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.",
        "question_original_pl": "Jaka jest nazwa i metoda płatności klientów, którzy mają zarówno wiadomości e-mail w wyniku \"Zamówienia\", jak i wiadomości e-mail w wyniku \"Brak odpowiedzi\".",
        "question": "What are the name and payment method of clients who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.",
        "question_pl": "Jakie są nazwy i metody płatności klientów, którzy mają zarówno wiadomości e-mail z wynikiem \"Zamówienie\", jak i wiadomości e-mail z wynikiem \"Brak odpowiedzi\".",
        "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'",
        "query_pl": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Zamówienie' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Brak odpowiedzi'"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show the premise type and address type code for all customer addresses.",
        "question_original_pl": "Pokaż typ lokalu i kod typu adresu dla wszystkich adresów klientów.",
        "question": "Show the premise type and location type code for all client locations.",
        "question_pl": "Pokaż typ lokalu i kod typu lokalizacji dla wszystkich lokalizacji klienta.",
        "query": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id",
        "query_pl": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "What are the distinct address type codes for all customer addresses?",
        "question_original_pl": "Jakie są odrębne kody typu adresu dla wszystkich adresów klientów?",
        "question": "What are the different location type codes for all client locations?",
        "question_pl": "Jakie są różne kody typu lokalizacji dla wszystkich lokalizacji klienta?",
        "query": "SELECT DISTINCT address_type_code FROM customer_addresses",
        "query_pl": "SELECT DISTINCT address_type_code FROM customer_addresses"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.",
        "question_original_pl": "Pokaż opłatę za wysyłkę i identyfikator klienta dla zamówień klientów ze statusem zamówienia Anulowane lub Opłacone.",
        "question": "Show the shipping charge and client id for client orders with order status Cancelled or Paid.",
        "question_pl": "Pokaż opłatę za wysyłkę i identyfikator klienta dla zamówień klientów o statusie Anulowane lub Opłacone.",
        "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'",
        "query_pl": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Anulowane' OR order_status_code  =  'Płatne'"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "question_original": "Show the names of customers having an order with shipping method FedEx and order status Paid.",
        "question_original_pl": "Pokaż nazwy klientów, którzy złożyli zamówienie z metodą wysyłki FedEx i statusem zamówienia Opłacone.",
        "question": "Show the names of clients having an order with shipping method FedEx and order status Paid.",
        "question_pl": "Pokaż nazwy klientów mających zamówienie z metodą wysyłki FedEx i statusem zamówienia Opłacone.",
        "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'",
        "query_pl": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Płatne'"
    },
    {
        "db_id": "college_3",
        "question_original": "How many courses are there in total?",
        "question_original_pl": "Ile jest w sumie kursów?",
        "question": "How many curriculum are there in total?",
        "question_pl": "Ile jest w sumie programów nauczania?",
        "query": "SELECT count(*) FROM COURSE",
        "query_pl": "SELECT count(*) FROM COURSE"
    },
    {
        "db_id": "college_3",
        "question_original": "Count the number of courses.",
        "question_original_pl": "Policz liczbę kursów.",
        "question": "Count the number of curriculum.",
        "question_pl": "Policz liczbę programów nauczania.",
        "query": "SELECT count(*) FROM COURSE",
        "query_pl": "SELECT count(*) FROM COURSE"
    },
    {
        "db_id": "college_3",
        "question_original": "How many courses have more than 2 credits?",
        "question_original_pl": "Ile kursów ma więcej niż 2 punkty?",
        "question": "How many curriculum have more than 2 credits?",
        "question_pl": "Ile programów nauczania ma więcej niż 2 punkty?",
        "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
        "query_pl": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
    },
    {
        "db_id": "college_3",
        "question_original": "Count the number of courses with more than 2 credits.",
        "question_original_pl": "Policz liczbę kursów z więcej niż 2 punktami.",
        "question": "Count the number of curriculum with more than 2 credits.",
        "question_pl": "Policz liczbę programów nauczania z więcej niż 2 punktami.",
        "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
        "query_pl": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
    },
    {
        "db_id": "college_3",
        "question_original": "List all names of courses with 1 credit?",
        "question_original_pl": "Wymień wszystkie nazwy kursów z 1 punktem?",
        "question": "List all names of curriculum with 1 credit?",
        "question_pl": "Wymień wszystkie nazwy programów nauczania z 1 zaliczeniem?",
        "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
        "query_pl": "SELECT CName FROM COURSE WHERE Credits  =  1"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the names of courses with 1 credit?",
        "question_original_pl": "Jak nazywają się kursy z 1 punktem?",
        "question": "What are the names of curriculum with 1 credit?",
        "question_pl": "Jak nazywają się programy nauczania z 1 kredytem?",
        "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
        "query_pl": "SELECT CName FROM COURSE WHERE Credits  =  1"
    },
    {
        "db_id": "college_3",
        "question_original": "Which courses are taught on days MTW?",
        "question_original_pl": "Które kursy są prowadzone w dni MTW?",
        "question": "Which curriculum are taught on days MTW?",
        "question_pl": "Które programy nauczania są realizowane w dni MTW?",
        "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
        "query_pl": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
    },
    {
        "db_id": "college_3",
        "question_original": "What are the course names for courses taught on MTW?",
        "question_original_pl": "Jakie są nazwy kursów prowadzonych w MTW?",
        "question": "What are the curriculum names for curriculum taught on MTW?",
        "question_pl": "Jakie są nazwy programów nauczania w MTW?",
        "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
        "query_pl": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
    },
    {
        "db_id": "college_3",
        "question_original": "Give the phones for departments in room 268.",
        "question_original_pl": "Przekaż telefony do działów w pokoju 268.",
        "question": "Give the telephones for departments in room 268.",
        "question_pl": "Podaj telefony do działów w pokoju 268.",
        "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268",
        "query_pl": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
    },
    {
        "db_id": "college_3",
        "question_original": "List all information about courses sorted by credits in the ascending order.",
        "question_original_pl": "Wyświetl wszystkie informacje o kursach posortowane według punktów w kolejności rosnącej.",
        "question": "List all detail about curriculum sorted by credits in the ascending order.",
        "question_pl": "Wyświetl wszystkie szczegóły dotyczące programu nauczania posortowane według punktów w porządku rosnącym.",
        "query": "SELECT * FROM COURSE ORDER BY Credits",
        "query_pl": "SELECT * FROM COURSE ORDER BY Credits"
    },
    {
        "db_id": "college_3",
        "question_original": "What is all the information about courses, ordered by credits ascending?",
        "question_original_pl": "Jakie są wszystkie informacje o kursach, uporządkowane według rosnącej liczby punktów?",
        "question": "What is all the detail about curriculum, ordered by credits ascending?",
        "question_pl": "Jakie są wszystkie szczegóły dotyczące programu nauczania, uporządkowane według rosnącej liczby punktów?",
        "query": "SELECT * FROM COURSE ORDER BY Credits",
        "query_pl": "SELECT * FROM COURSE ORDER BY Credits"
    },
    {
        "db_id": "college_3",
        "question_original": "List the course name of courses sorted by credits.",
        "question_original_pl": "Wyświetl nazwy kursów posortowane według punktów.",
        "question": "List the curriculum name of curriculum sorted by credits.",
        "question_pl": "Wyświetl nazwę programu nauczania posortowaną według punktów.",
        "query": "SELECT CName FROM COURSE ORDER BY Credits",
        "query_pl": "SELECT CName FROM COURSE ORDER BY Credits"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the course names, ordered by credits?",
        "question_original_pl": "Jakie są nazwy kursów uporządkowane według punktów?",
        "question": "What are the curriculum names, ordered by credits?",
        "question_pl": "Jakie są nazwy programów nauczania uporządkowane według punktów?",
        "query": "SELECT CName FROM COURSE ORDER BY Credits",
        "query_pl": "SELECT CName FROM COURSE ORDER BY Credits"
    },
    {
        "db_id": "college_3",
        "question_original": "Find the last names of faculties in building Barton in alphabetic order.",
        "question_original_pl": "Znajdź nazwy wydziałów w budynku Barton w kolejności alfabetycznej.",
        "question": "Find the family names of faculties in building Barton in alphabetic order.",
        "question_pl": "Znajdź nazwy rodzin wydziałów w budynku Barton w kolejności alfabetycznej.",
        "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
        "query_pl": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the last names of faculty in building Barton, sorted by last name?",
        "question_original_pl": "Jakie są nazwiska wykładowców w budynku Barton, posortowane według nazwiska?",
        "question": "What are the family names of faculty in building Barton, sorted by family name?",
        "question_pl": "Jakie są nazwiska wykładowców w budynku Barton, posortowane według nazwisk?",
        "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
        "query_pl": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
    },
    {
        "db_id": "college_3",
        "question_original": "Find the rank of the faculty that the fewest faculties belong to.",
        "question_original_pl": "Znajdź rangę wydziału, do którego należy najmniej wydziałów.",
        "question": "Find the job title of the faculty that the fewest faculties belong to.",
        "question_pl": "Znajdź nazwę stanowiska na wydziale, do którego należy najmniej wydziałów.",
        "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "college_3",
        "question_original": "What is the least common faculty rank?",
        "question_original_pl": "Jaka jest najmniej popularna ranga wydziału?",
        "question": "What is the least common job title of teacher?",
        "question_pl": "Jaki jest najmniej popularny tytuł zawodowy nauczyciela?",
        "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the first and last names of the instructors who teach the top 3 number of courses?",
        "question_original_pl": "Jakie są imiona i nazwiska instruktorów, którzy prowadzą 3 największą liczbę kursów?",
        "question": "What are the full names of the instructors who teach the top 3 number of courses?",
        "question_pl": "Jakie są pełne nazwiska instruktorów, którzy prowadzą 3 największą liczbę kursów?",
        "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "college_3",
        "question_original": "Which building does the instructor who teaches the most number of courses live in?",
        "question_original_pl": "W którym budynku mieszka instruktor prowadzący najwięcej kursów?",
        "question": "Which building does the instructor who teaches the most number of curriculum live in?",
        "question_pl": "W którym budynku mieszka instruktor prowadzący najwięcej zajęć?",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_3",
        "question_original": "Give the building that the instructor who teaches the greatest number of courses lives in.",
        "question_original_pl": "Podaj budynek, w którym mieszka instruktor prowadzący największą liczbę kursów.",
        "question": "Give the building that the instructor who teaches the greatest number of curriculum lives in.",
        "question_pl": "Podaj budynek, w którym mieszka instruktor prowadzący największą liczbę zajęć.",
        "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the name of courses that have at least five enrollments?",
        "question_original_pl": "Jak nazywają się kursy, na które zapisało się co najmniej pięć osób?",
        "question": "What are the name of curriculum that have at least five enrollments?",
        "question_pl": "Jak nazywają się programy nauczania, do których zapisało się co najmniej pięć osób?",
        "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5",
        "query_pl": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
    },
    {
        "db_id": "college_3",
        "question_original": "Give the names of the courses with at least five enrollments.",
        "question_original_pl": "Podaj nazwy kursów z co najmniej pięcioma zapisami.",
        "question": "Give the names of the curriculum with at least five enrollments.",
        "question_pl": "Podaj nazwy programów nauczania z co najmniej pięcioma zapisami.",
        "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5",
        "query_pl": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
    },
    {
        "db_id": "college_3",
        "question_original": "Find the student first and last names and grade points of all enrollments.",
        "question_original_pl": "Znajdź imiona i nazwiska studentów oraz punkty ocen wszystkich zapisanych osób.",
        "question": "Find the student full names and grade points of all enrollments.",
        "question_pl": "Znajdź pełne imiona i nazwiska studentów oraz punkty ocen wszystkich zapisów.",
        "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID",
        "query_pl": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?",
        "question_original_pl": "Jakie są odrębne imiona uczniów, którzy uzyskali ocenę 3,8 lub wyższą z co najmniej jednego przedmiotu?",
        "question": "What are the different forenames for students with a grade point of 3.8 or above in at least one course?",
        "question_pl": "Jakie są różne imiona dla studentów z oceną 3.8 lub wyższą z co najmniej jednego przedmiotu?",
        "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8",
        "query_pl": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the first names and last names of the students that minor in the department with DNO 140.",
        "question_original_pl": "Jakie są imiona i nazwiska studentów, którzy są nieletnimi w dziale z DNO 140.",
        "question": "What are the forenames and family names of the students that minor in the department with DNO 140.",
        "question_pl": "Jakie są imiona i nazwiska uczniów, którzy są niepełnoletni w oddziale z DNO 140.",
        "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140",
        "query_pl": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the last names of faculty who are part of the computer science department?",
        "question_original_pl": "Jakie są nazwiska wykładowców, którzy są częścią wydziału informatyki?",
        "question": "What are the family names of teacher who are part of the computer science department?",
        "question_pl": "Jakie są nazwiska nauczycieli, którzy są częścią wydziału informatyki?",
        "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"",
        "query_pl": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Informatyka\""
    },
    {
        "db_id": "college_3",
        "question_original": "Find the average grade point of student whose last name is Smith.",
        "question_original_pl": "Znajdź średnią ocen studenta o nazwisku Smith.",
        "question": "Find the average grade point of student whose family name is Smith.",
        "question_pl": "Znajdź średnią ocen ucznia, którego nazwisko rodowe to Smith.",
        "query": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\"",
        "query_pl": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""
    },
    {
        "db_id": "college_3",
        "question_original": "Find the names of courses that have either 3 credits or 1 credit but 4 hours.",
        "question_original_pl": "Znajdź nazwy kursów, które mają 3 punkty lub 1 punkt, ale 4 godziny.",
        "question": "Find the names of curriculum that have either 3 credits or 1 credit but 4 hours.",
        "question_pl": "Znajdź nazwy programów nauczania, które mają 3 punkty lub 1 punkt, ale 4 godziny.",
        "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4",
        "query_pl": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the names of courses that give either 3 credits, or 1 credit and 4 hours?",
        "question_original_pl": "Jak nazywają się kursy, które dają 3 punkty lub 1 punkt i 4 godziny?",
        "question": "What are the names of curriculum that give either 3 credits, or 1 credit and 4 hours?",
        "question_pl": "Jak nazywają się programy nauczania, które dają 3 punkty lub 1 punkt i 4 godziny?",
        "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4",
        "query_pl": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
    },
    {
        "db_id": "college_3",
        "question_original": "What are the first names of all students that are not enrolled in courses?",
        "question_original_pl": "Jakie są imiona wszystkich studentów, którzy nie są zapisani na kursy?",
        "question": "What are the forenames of all students that are not enrolled in courses?",
        "question_pl": "Jakie są imiona i nazwiska wszystkich studentów, którzy nie są zapisani na kursy?",
        "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
        "query_pl": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the ids of the top three products that were purchased in the largest amount?",
        "question_original_pl": "Jakie są identyfikatory trzech najczęściej kupowanych produktów?",
        "question": "What are the ids of the top three goods that were purchased in the largest amount?",
        "question_pl": "Jakie są identyfikatory trzech towarów, które zostały zakupione w największej ilości?",
        "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
        "query_pl": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
    },
    {
        "db_id": "department_store",
        "question_original": "Give the ids of the three products purchased in the largest amounts.",
        "question_original_pl": "Podaj identyfikatory trzech produktów zakupionych w największych ilościach.",
        "question": "Give the ids of the three goods purchased in the largest amounts.",
        "question_pl": "Podaj identyfikatory trzech towarów zakupionych w największych ilościach.",
        "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
        "query_pl": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the product id and product type of the cheapest product?",
        "question_original_pl": "Jaki jest identyfikator i typ najtańszego produktu?",
        "question": "What are the goods id and goods category of the cheapest goods?",
        "question_pl": "Jaki jest identyfikator towaru i kategoria najtańszego towaru?",
        "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1",
        "query_pl": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Give the id and product type of the product with the lowest price.",
        "question_original_pl": "Podaj identyfikator i typ produktu o najniższej cenie.",
        "question": "Give the id and goods category of the goods with the lowest price.",
        "question_pl": "Podaj identyfikator i kategorię towaru o najniższej cenie.",
        "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1",
        "query_pl": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the number of different product types.",
        "question_original_pl": "Znajdź liczbę różnych typów produktów.",
        "question": "Find the number of different goods categories.",
        "question_pl": "Znajdź liczbę różnych kategorii towarów.",
        "query": "SELECT count(DISTINCT product_type_code) FROM products",
        "query_pl": "SELECT count(DISTINCT product_type_code) FROM products"
    },
    {
        "db_id": "department_store",
        "question_original": "Count the number of distinct product types.",
        "question_original_pl": "Policz liczbę różnych typów produktów.",
        "question": "Count the number of different goods categories.",
        "question_pl": "Policz liczbę różnych kategorii towarów.",
        "query": "SELECT count(DISTINCT product_type_code) FROM products",
        "query_pl": "SELECT count(DISTINCT product_type_code) FROM products"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the address of customer 10.",
        "question_original_pl": "Zwróć adres klienta 10.",
        "question": "Return the location of customer 10.",
        "question_pl": "Zwróć lokalizację klienta 10.",
        "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10",
        "query_pl": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the address for the customer with id 10?",
        "question_original_pl": "Jaki jest adres klienta o identyfikatorze 10?",
        "question": "What is the location for the customer with id 10?",
        "question_pl": "Jaka jest lokalizacja klienta o identyfikatorze 10?",
        "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10",
        "query_pl": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the staff ids and genders of all staffs whose job title is Department Manager?",
        "question_original_pl": "Jakie są identyfikatory pracowników i płeć wszystkich pracowników, których stanowisko to kierownik działu?",
        "question": "What are the employee ids and sex of all employees whose job title is Department Manager?",
        "question_pl": "Jakie są identyfikatory i płeć wszystkich pracowników, których stanowisko to kierownik działu?",
        "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"",
        "query_pl": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Kierownik działu\""
    },
    {
        "db_id": "department_store",
        "question_original": "Return the staff ids and genders for any staff with the title Department Manager.",
        "question_original_pl": "Zwróć identyfikatory i płeć pracowników z tytułem kierownika działu.",
        "question": "Return the employee ids and sex for any employee with the title Department Manager.",
        "question_pl": "Zwróć identyfikatory pracowników i płeć każdego pracownika z tytułem kierownika działu.",
        "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"",
        "query_pl": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Kierownik działu\""
    },
    {
        "db_id": "department_store",
        "question_original": "What is the id of the product that was ordered the most often?",
        "question_original_pl": "Jaki jest identyfikator najczęściej zamawianego produktu?",
        "question": "What is the id of the goods that was ordered the most often?",
        "question_pl": "Jaki jest identyfikator najczęściej zamawianego towaru?",
        "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Give the product id for the product that was ordered most frequently.",
        "question_original_pl": "Podaj identyfikator najczęściej zamawianego produktu.",
        "question": "Give the goods id for the goods that was ordered most frequently.",
        "question_pl": "Podaj identyfikator najczęściej zamawianego towaru.",
        "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the name, phone number and email address for the customer with the most orders.",
        "question_original_pl": "Zwróć imię i nazwisko, numer telefonu i adres e-mail klienta z największą liczbą zamówień.",
        "question": "Return the name, telephone number and email address for the client with the most orders.",
        "question_pl": "Zwróć nazwę, numer telefonu i adres e-mail klienta z największą liczbą zamówień.",
        "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the average price for each type of product?",
        "question_original_pl": "Jaka jest średnia cena każdego rodzaju produktu?",
        "question": "What is the average price for each category of goods?",
        "question_pl": "Jaka jest średnia cena dla każdej kategorii towarów?",
        "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code",
        "query_pl": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the average price for each product type.",
        "question_original_pl": "Zwróć średnią cenę dla każdego typu produktu.",
        "question": "Return the average price for each goods category.",
        "question_pl": "Zwróć średnią cenę dla każdej kategorii towarów.",
        "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code",
        "query_pl": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "How many department stores does the store chain South have?",
        "question_original_pl": "Ile domów towarowych posiada sieć sklepów South?",
        "question": "How many division stores does the store chain South have?",
        "question_pl": "Ile oddziałów ma sieć sklepów South?",
        "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"",
        "query_pl": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"Południe\""
    },
    {
        "db_id": "department_store",
        "question_original": "What is the name and job title of the staff who was assigned the latest?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz stanowisko pracownika, któremu przydzielono ostatnie zadanie?",
        "question": "What is the name and job title of the employee who was assigned the latest?",
        "question_pl": "Jakie jest imię i nazwisko oraz stanowisko pracownika, który został przydzielony jako ostatni?",
        "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",
        "query_pl": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the name and job title of the staff with the latest date assigned.",
        "question_original_pl": "Zwróć imię i nazwisko oraz stanowisko pracownika z najpóźniejszą przypisaną datą.",
        "question": "Return the name and job title of the employee with the latest date assigned.",
        "question_pl": "Zwróć imię i nazwisko oraz stanowisko pracownika z ostatnią przypisaną datą.",
        "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",
        "query_pl": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Give me the product type, name and price for all the products supplied by supplier id 3.",
        "question_original_pl": "Podaj typ, nazwę i cenę wszystkich produktów dostarczonych przez dostawcę o identyfikatorze 3.",
        "question": "Give me the goods category, name and price for all the goods supplied by supplier id 3.",
        "question_pl": "Podaj kategorię, nazwę i cenę wszystkich towarów dostarczonych przez dostawcę o identyfikatorze 3.",
        "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3",
        "query_pl": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the product type, name, and price for products supplied by supplier 3.",
        "question_original_pl": "Zwróć typ produktu, nazwę i cenę produktów dostarczonych przez dostawcę 3.",
        "question": "Return the goods category, name, and price for goods supplied by supplier 3.",
        "question_pl": "Zwróć kategorię, nazwę i cenę towarów dostarczonych przez dostawcę 3.",
        "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3",
        "query_pl": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the distinct name of customers whose order status is Pending, in the order of customer id.",
        "question_original_pl": "Zwróć odrębną nazwę klientów, których status zamówienia to Oczekujące, w kolejności identyfikatora klienta.",
        "question": "Return the different name of clients whose order status is Pending, in the order of client id.",
        "question_pl": "Zwróć inną nazwę klientów, których status zamówienia to Oczekujące, w kolejności identyfikatora klienta.",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"W toku\" ORDER BY T2.customer_id"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct names of customers with an order status of Pending, sorted by customer id?",
        "question_original_pl": "Jakie są odrębne nazwy klientów ze statusem zamówienia Oczekujące, posortowane według identyfikatora klienta?",
        "question": "What are the different names of clients with an order status of Pending, sorted by client id?",
        "question_pl": "Jakie są różne nazwy klientów ze statusem zamówienia Oczekujące, posortowane według identyfikatora klienta?",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"W toku\" ORDER BY T2.customer_id"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the name and address of the customers who have both New and Pending orders.",
        "question_original_pl": "Znajdź nazwy i adresy klientów, którzy mają zarówno nowe, jak i oczekujące zamówienia.",
        "question": "Find the name and location of the clients who have both New and Pending orders.",
        "question_pl": "Znajdź nazwę i lokalizację klientów, którzy mają zarówno nowe, jak i oczekujące zamówienia.",
        "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"",
        "query_pl": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Nowy\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"W toku\""
    },
    {
        "db_id": "department_store",
        "question_original": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.",
        "question_original_pl": "Zwróć identyfikatory wszystkich produktów, które są dostarczane przez dostawcę o identyfikatorze 2 i są droższe niż średnia cena wszystkich produktów.",
        "question": "Return ids of all the goods that are supplied by supplier id 2 and are more expensive than the average price of all goods.",
        "question_pl": "Zwróć identyfikatory wszystkich towarów, które są dostarczane przez dostawcę o identyfikatorze 2 i są droższe niż średnia cena wszystkich towarów.",
        "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?",
        "question_original_pl": "Jakie są identyfikatory produktów od dostawcy o identyfikatorze 2, które są droższe niż średnia cena wszystkich produktów?",
        "question": "What are the ids of goods from the supplier with id 2, which are more expensive than the average price across all goods?",
        "question_pl": "Jakie są identyfikatory towarów od dostawcy o identyfikatorze 2, które są droższe niż średnia cena wszystkich towarów?",
        "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the id and name of the department store that has both marketing and managing department?",
        "question_original_pl": "Jaki jest identyfikator i nazwa domu towarowego, który ma zarówno dział marketingu, jak i dział zarządzania?",
        "question": "What is the id and name of the division store that has both marketing and managing division?",
        "question_pl": "Jaki jest identyfikator i nazwa oddziału sklepu, który ma zarówno dział marketingu, jak i zarządzania?",
        "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"",
        "query_pl": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"zarządzający\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the ids and names of department stores with both marketing and managing departments?",
        "question_original_pl": "Jakie są identyfikatory i nazwy domów towarowych z działami marketingu i zarządzania?",
        "question": "What are the ids and names of division stores with both marketing and managing divisions?",
        "question_pl": "Jakie są identyfikatory i nazwy oddziałów sklepów z działami marketingu i zarządzania?",
        "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"",
        "query_pl": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"zarządzający\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the ids of the two department store chains with the largest number of department stores?",
        "question_original_pl": "Jakie są nazwy dwóch sieci domów towarowych z największą liczbą domów towarowych?",
        "question": "What are the ids of the two division store chains with the largest number of division stores?",
        "question_pl": "Jakie są identyfikatory dwóch sieci sklepów oddziałowych z największą liczbą sklepów oddziałowych?",
        "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2",
        "query_pl": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the ids of the two department store chains with the most department stores.",
        "question_original_pl": "Zwróć identyfikatory dwóch sieci domów towarowych z największą liczbą domów towarowych.",
        "question": "Return the ids of the two division store chains with the most division stores.",
        "question_pl": "Zwróć identyfikatory dwóch sieci sklepów oddziałów z największą liczbą sklepów oddziałów.",
        "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2",
        "query_pl": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the id of the department with the least number of staff?",
        "question_original_pl": "Jaki jest identyfikator działu z najmniejszą liczbą pracowników?",
        "question": "What is the id of the division with the least number of employee?",
        "question_pl": "Jaki jest identyfikator oddziału z najmniejszą liczbą pracowników?",
        "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the id of the department with the fewest staff assignments.",
        "question_original_pl": "Zwróć identyfikator działu z najmniejszą liczbą przypisanych pracowników.",
        "question": "Return the id of the division with the fewest employee assignments.",
        "question_pl": "Zwróć identyfikator działu z najmniejszą liczbą przydziałów pracowników.",
        "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "For each product type, return the maximum and minimum price.",
        "question_original_pl": "Dla każdego typu produktu zwróć maksymalną i minimalną cenę.",
        "question": "For each goods category, return the maximum and minimum price.",
        "question_pl": "Dla każdej kategorii towarów zwróć maksymalną i minimalną cenę.",
        "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code",
        "query_pl": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the maximum and minimum product prices for each product type?",
        "question_original_pl": "Jakie są maksymalne i minimalne ceny produktów dla każdego typu produktu?",
        "question": "What are the maximum and minimum goods prices for each goods category?",
        "question_pl": "Jakie są maksymalne i minimalne ceny towarów dla każdej kategorii towarów?",
        "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code",
        "query_pl": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the product type whose average price is higher than the average price of all products.",
        "question_original_pl": "Znajdź typ produktu, którego średnia cena jest wyższa niż średnia cena wszystkich produktów.",
        "question": "Find the goods category whose average price is higher than the average price of all goods.",
        "question_pl": "Znajdź kategorię towarów, której średnia cena jest wyższa niż średnia cena wszystkich towarów.",
        "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the code of the product type with an average price higher than the average price of all products?",
        "question_original_pl": "Jaki jest kod typu produktu, którego średnia cena jest wyższa niż średnia cena wszystkich produktów?",
        "question": "What is the code of the goods category with an average price higher than the average price of all goods?",
        "question_pl": "Jaki jest kod kategorii towarów, których średnia cena jest wyższa niż średnia cena wszystkich towarów?",
        "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the id and name of the staff who has been assigned for the least amount of time?",
        "question_original_pl": "Jaki jest identyfikator i nazwisko pracownika, który został przydzielony na najmniejszą ilość czasu?",
        "question": "What is the id and name of the employee who has been assigned for the least amount of time?",
        "question_pl": "Jaki jest identyfikator i nazwisko pracownika, który został przydzielony na najmniejszy okres czasu?",
        "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
        "query_pl": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the names and ids of all products whose price is between 600 and 700.",
        "question_original_pl": "Zwróć nazwy i identyfikatory wszystkich produktów, których cena wynosi od 600 do 700.",
        "question": "Return the names and ids of all goods whose price is between 600 and 700.",
        "question_pl": "Zwróć nazwy i identyfikatory wszystkich towarów, których cena wynosi od 600 do 700.",
        "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700",
        "query_pl": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the names and ids of products costing between 600 and 700?",
        "question_original_pl": "Jakie są nazwy i identyfikatory produktów kosztujących od 600 do 700?",
        "question": "What are the names and ids of goods costing between 600 and 700?",
        "question_pl": "Jakie są nazwy i identyfikatory towarów kosztujących od 600 do 700?",
        "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700",
        "query_pl": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the ids of all distinct customers who made order after some orders that were Cancelled.",
        "question_original_pl": "Znajdź identyfikatory wszystkich klientów, którzy złożyli zamówienie po anulowaniu niektórych zamówień.",
        "question": "Find the ids of all different clients who made order after some orders that were Cancelled.",
        "question_pl": "Znajdź identyfikatory wszystkich różnych klientów, którzy złożyli zamówienie po anulowaniu niektórych zamówień.",
        "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
        "query_pl": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Anulowane\")"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct ids of customers who made an order after any order that was Cancelled?",
        "question_original_pl": "Jakie są odrębne identyfikatory klientów, którzy złożyli zamówienie po zamówieniu, które zostało anulowane?",
        "question": "What are the different ids of clients who made an order after any order that was Cancelled?",
        "question_pl": "Jakie są różne identyfikatory klientów, którzy złożyli zamówienie po każdym zamówieniu, które zostało anulowane?",
        "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
        "query_pl": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Anulowane\")"
    },
    {
        "db_id": "department_store",
        "question_original": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?",
        "question_original_pl": "Jaki jest identyfikator pracownika, który otrzymał przydział do działu pracowniczego wcześniej niż jakikolwiek pracownik biurowy?",
        "question": "What is id of the employee who had a Staff Department Assignment earlier than any Clerical Staff?",
        "question_pl": "Jaki jest identyfikator pracownika, który miał przydział do działu pracowniczego wcześniej niż jakikolwiek pracownik biurowy?",
        "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')",
        "query_pl": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Personel biurowy')"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the names and ids of customers whose address contains TN?",
        "question_original_pl": "Jakie są nazwy i identyfikatory klientów, których adres zawiera TN?",
        "question": "What are the names and ids of clients whose location contains TN?",
        "question_pl": "Jakie są nazwy i identyfikatory klientów, których lokalizacja zawiera TN?",
        "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
        "query_pl": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
    },
    {
        "db_id": "department_store",
        "question_original": "Return the names and ids of customers who have TN in their address.",
        "question_original_pl": "Zwróć nazwy i identyfikatory klientów, którzy mają TN w swoim adresie.",
        "question": "Return the names and ids of clients who have TN in their location.",
        "question_pl": "Zwróć nazwy i identyfikatory klientów, którzy mają TN w swojej lokalizacji.",
        "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
        "query_pl": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the names and genders of staff who were assigned in 2016?",
        "question_original_pl": "Jakie są nazwiska i płeć pracowników, którzy zostali przydzieleni w 2016 r.?",
        "question": "What are the names and sex of employee who were assigned in 2016?",
        "question_pl": "Jakie są imiona i płeć pracowników, którzy zostali przydzieleni w 2016 roku?",
        "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"",
        "query_pl": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""
    },
    {
        "db_id": "department_store",
        "question_original": "List the name of staff who has been assigned multiple jobs.",
        "question_original_pl": "Wymień nazwiska pracowników, którym przydzielono wiele zadań.",
        "question": "List the name of employee who has been assigned multiple jobs.",
        "question_pl": "Wymień imię i nazwisko pracownika, któremu przydzielono wiele zadań.",
        "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1",
        "query_pl": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the names of staff who have been assigned multiple jobs?",
        "question_original_pl": "Jakie są nazwiska pracowników, którym przydzielono wiele zadań?",
        "question": "What are the names of employee who have been assigned multiple jobs?",
        "question_pl": "Jak nazywają się pracownicy, którym przydzielono wiele zadań?",
        "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1",
        "query_pl": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
    },
    {
        "db_id": "department_store",
        "question_original": "List the name and phone number of all suppliers in the alphabetical order of their addresses.",
        "question_original_pl": "Wymień nazwy i numery telefonów wszystkich dostawców w kolejności alfabetycznej ich adresów.",
        "question": "List the name and telephone number of all suppliers in the alphabetical order of their locations.",
        "question_pl": "Wymień nazwy i numery telefonów wszystkich dostawców w kolejności alfabetycznej ich lokalizacji.",
        "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details",
        "query_pl": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the ids of all products that were ordered more than three times or supplied more than 80000.",
        "question_original_pl": "Zwróć identyfikatory wszystkich produktów, które zostały zamówione więcej niż trzy razy lub dostarczone więcej niż 80000 razy.",
        "question": "Return the ids of all goods that were ordered more than three times or supplied more than 80000.",
        "question_pl": "Zwróć identyfikatory wszystkich towarów, które zostały zamówione więcej niż trzy razy lub dostarczone więcej niż 80000 razy.",
        "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000",
        "query_pl": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?",
        "question_original_pl": "Jakie są identyfikatory wszystkich produktów, które zostały zamówione więcej niż 3 razy lub których łączna kwota zakupu przekracza 80000?",
        "question": "What are the ids of all goods that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?",
        "question_pl": "Jakie są identyfikatory wszystkich towarów, które zostały zamówione więcej niż 3 razy lub których łączna kwota zakupu przekracza 80000?",
        "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000",
        "query_pl": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
    },
    {
        "db_id": "department_store",
        "question_original": "What are id and name of the products whose price is lower than 600 or higher than 900?",
        "question_original_pl": "Jaki jest identyfikator i nazwa produktów, których cena jest niższa niż 600 lub wyższa niż 900?",
        "question": "What are id and name of the goods whose price is lower than 600 or higher than 900?",
        "question_pl": "Jaki jest identyfikator i nazwa towarów, których cena jest niższa niż 600 lub wyższa niż 900?",
        "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
        "query_pl": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
    },
    {
        "db_id": "department_store",
        "question_original": "Give the ids and names of products with price lower than 600 or higher than 900.",
        "question_original_pl": "Podaj identyfikatory i nazwy produktów o cenie niższej niż 600 lub wyższej niż 900.",
        "question": "Give the ids and names of goods with price lower than 600 or higher than 900.",
        "question_pl": "Podaj identyfikatory i nazwy towarów, których cena jest niższa niż 600 lub wyższa niż 900.",
        "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
        "query_pl": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.",
        "question_original_pl": "Znajdź identyfikatory dostawców, których średnia kwota zakupu każdego produktu jest wyższa niż 50000 lub niższa niż 30000.",
        "question": "Find the id of suppliers whose average amount purchased for each goods is above 50000 or below 30000.",
        "question_pl": "Znajdź identyfikatory dostawców, których średnia kwota zakupu każdego towaru jest wyższa niż 50000 lub niższa niż 30000.",
        "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000",
        "query_pl": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the average amount purchased and value purchased for the supplier who supplies the most products.",
        "question_original_pl": "Jaka jest średnia ilość i wartość zakupów u dostawcy, który dostarcza najwięcej produktów.",
        "question": "What are the average amount purchased and value purchased for the supplier who supplies the most goods.",
        "question_pl": "Jaka jest średnia ilość i wartość zakupów u dostawcy, który dostarcza najwięcej towarów.",
        "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "department_store",
        "question_original": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.",
        "question_original_pl": "Zwróć średnią łączną kwotę zakupów i łączną wartość zakupów dla dostawcy, który dostarcza największą liczbę produktów.",
        "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of goods.",
        "question_pl": "Zwróć średnią łączną kwotę zakupów i łączną wartość zakupów dla dostawcy, który dostarcza największą liczbę towarów.",
        "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the largest and smallest customer codes?",
        "question_original_pl": "Jakie są największe i najmniejsze kody klientów?",
        "question": "What is the largest and smallest client codes?",
        "question_pl": "Jaki jest największy i najmniejszy kod klienta?",
        "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
        "query_pl": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct names of customers who have purchased a keyboard?",
        "question_original_pl": "Jakie są różne nazwy klientów, którzy zakupili klawiaturę?",
        "question": "What are the different names of clients who have purchased a keyboard?",
        "question_pl": "Jakie są różne nazwy klientów, którzy kupili klawiaturę?",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"klawiatura\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct names and phone numbers for suppliers who have red jeans?",
        "question_original_pl": "Jakie są wyraźne nazwy i numery telefonów dostawców, którzy mają czerwone dżinsy?",
        "question": "What are the different names and telephone numbers for suppliers who have red jeans?",
        "question_pl": "Jakie są różne nazwy i numery telefonów dostawców, którzy mają czerwone dżinsy?",
        "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"",
        "query_pl": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"czerwone dżinsy\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?",
        "question_original_pl": "Jakie są najwyższe i najniższe ceny produktów, pogrupowane i uporządkowane alfabetycznie według typu produktu?",
        "question": "What are the highest and lowest prices of goods, grouped by and alphabetically ordered by goods category?",
        "question_pl": "Jakie są najwyższe i najniższe ceny towarów, pogrupowane i uporządkowane alfabetycznie według kategorii towarów?",
        "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code",
        "query_pl": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.",
        "question_original_pl": "Podaj maksymalne i minimalne ceny produktów dla każdego typu produktu, pogrupowane i uporządkowane według typu produktu.",
        "question": "Give the maximum and minimum goods prices for each goods category, grouped and ordered by goods category.",
        "question_pl": "Podaj maksymalne i minimalne ceny towarów dla każdej kategorii towarów, pogrupowane i uporządkowane według kategorii towarów.",
        "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code",
        "query_pl": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?",
        "question_original_pl": "Jakie są identyfikatory zamówień i klientów dla zamówień, które zostały anulowane, posortowane według dat zamówień?",
        "question": "What are the order ids and client ids for orders that have been Cancelled, sorted by their order dates?",
        "question_pl": "Jakie są identyfikatory zamówień i identyfikatory klientów dla zamówień, które zostały anulowane, posortowane według dat zamówień?",
        "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date",
        "query_pl": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Anulowane\" ORDER BY order_date"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the names of products that were bought by at least two distinct customers.",
        "question_original_pl": "Znajdź nazwy produktów, które zostały zakupione przez co najmniej dwóch różnych klientów.",
        "question": "Find the names of goods that were bought by at least two different clients.",
        "question_pl": "Znajdź nazwy towarów, które zostały zakupione przez co najmniej dwóch różnych klientów.",
        "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2",
        "query_pl": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct names of products purchased by at least two different customers?",
        "question_original_pl": "Jakie są odrębne nazwy produktów zakupionych przez co najmniej dwóch różnych klientów?",
        "question": "What are the different names of goods purchased by at least two different clients?",
        "question_pl": "Jakie są różne nazwy towarów zakupionych przez co najmniej dwóch różnych klientów?",
        "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2",
        "query_pl": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the names of customers who have bought by at least three distinct products.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy kupili co najmniej trzy różne produkty.",
        "question": "Find the names of clients who have bought by at least three different goods.",
        "question_pl": "Znajdź nazwiska klientów, którzy kupili co najmniej trzy różne towary.",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
    },
    {
        "db_id": "department_store",
        "question_original": "What are the distinct names of customers who have purchased at least three different products?",
        "question_original_pl": "Jakie są odrębne nazwy klientów, którzy zakupili co najmniej trzy różne produkty?",
        "question": "What are the different names of clients who have purchased at least three different goods?",
        "question_pl": "Jakie są różne nazwy klientów, którzy zakupili co najmniej trzy różne towary?",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.",
        "question_original_pl": "Znajdź nazwisko i płeć pracownika, któremu przydzielono stanowisko sprzedawcy, ale nigdy pracownika biurowego.",
        "question": "Find the name and sex of the employee who has been assigned the job of Sales Person but never Clerical Staff.",
        "question_pl": "Znajdź imię i nazwisko oraz płeć pracownika, któremu przydzielono stanowisko sprzedawcy, ale nigdy pracownika biurowego.",
        "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
        "query_pl": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sprzedawca\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Personel biurowy\""
    },
    {
        "db_id": "department_store",
        "question_original": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?",
        "question_original_pl": "Jakie są nazwiska i płeć pracowników, którzy posiadali tytuł sprzedawcy, ale nigdy pracownika biurowego?",
        "question": "What are the names and sexs of employee who have held the title Sales Person, but never Clerical Staff?",
        "question_pl": "Jakie są imiona i płeć pracowników, którzy posiadali tytuł Sales Person, ale nigdy Clerical Staff?",
        "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
        "query_pl": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sprzedawca\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Personel biurowy\""
    },
    {
        "db_id": "department_store",
        "question_original": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.",
        "question_original_pl": "Znajdź identyfikator i nazwę klientów, których adres zawiera stan WY i nie używają karty kredytowej do płatności.",
        "question": "Find the id and name of clients whose location contains WY state and do not use credit card for payment.",
        "question_pl": "Znajdź identyfikator i nazwę klientów, których lokalizacja zawiera stan WY i nie używają karty kredytowej do płatności.",
        "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
        "query_pl": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Karta kredytowa\""
    },
    {
        "db_id": "department_store",
        "question_original": "Find the average price of all product clothes.",
        "question_original_pl": "Znajdź średnią cenę wszystkich produktów odzieżowych.",
        "question": "Find the average price of all goods clothes.",
        "question_pl": "Znajdź średnią cenę wszystkich towarów odzieżowych.",
        "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'",
        "query_pl": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Ubrania'"
    },
    {
        "db_id": "department_store",
        "question_original": "Find the name of the most expensive hardware product.",
        "question_original_pl": "Znajdź nazwę najdroższego produktu sprzętowego.",
        "question": "Find the name of the most expensive hardware goods.",
        "question_pl": "Znajdź nazwę najdroższego sprzętu komputerowego.",
        "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name FROM products WHERE product_type_code  =  'Sprzęt' ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "department_store",
        "question_original": "What is the name of the hardware product with the greatest price?",
        "question_original_pl": "Jak nazywa się produkt sprzętowy o najwyższej cenie?",
        "question": "What is the name of the hardware goods with the greatest price?",
        "question_pl": "Jak nazywa się sprzęt, którego cena jest najwyższa?",
        "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name FROM products WHERE product_type_code  =  'Sprzęt' ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the number of aircraft?",
        "question_original_pl": "Jaka jest liczba samolotów?",
        "question": "What is the number of airplane?",
        "question_pl": "Jaki jest numer samolotu?",
        "query": "SELECT count(*) FROM aircraft",
        "query_pl": "SELECT count(*) FROM aircraft"
    },
    {
        "db_id": "aircraft",
        "question_original": "List the description of all aircrafts.",
        "question_original_pl": "Wymień opisy wszystkich samolotów.",
        "question": "List the describing content of all airplanes",
        "question_pl": "Wymień opisową zawartość wszystkich samolotów",
        "query": "SELECT Description FROM aircraft",
        "query_pl": "SELECT Description FROM aircraft"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the descriptions for the aircrafts?",
        "question_original_pl": "Jakie są opisy samolotów?",
        "question": "What are the describing details for the airplanes?",
        "question_pl": "Jakie są szczegóły opisu samolotów?",
        "query": "SELECT Description FROM aircraft",
        "query_pl": "SELECT Description FROM aircraft"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the average number of international passengers of all airports?",
        "question_original_pl": "Jaka jest średnia liczba pasażerów międzynarodowych na wszystkich lotniskach?",
        "question": "What is the average number of different country passengers of all aerodromes?",
        "question_pl": "Jaka jest średnia liczba pasażerów z różnych krajów na wszystkich lotniskach?",
        "query": "SELECT avg(International_Passengers) FROM airport",
        "query_pl": "SELECT avg(International_Passengers) FROM airport"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the average number of international passengers for an airport?",
        "question_original_pl": "Jaka jest średnia liczba pasażerów międzynarodowych na lotnisku?",
        "question": "What is the average number of different country passengers for an aerodrome?",
        "question_pl": "Jaka jest średnia liczba pasażerów z różnych krajów na lotnisku?",
        "query": "SELECT avg(International_Passengers) FROM airport",
        "query_pl": "SELECT avg(International_Passengers) FROM airport"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?",
        "question_original_pl": "Jaka jest liczba międzynarodowych i krajowych pasażerów lotniska \"Heathrow\" w Londynie?",
        "question": "What are the number of different country and domestic passengers of the aerodrome named London \"Heathrow\"?",
        "question_pl": "Jaka jest liczba pasażerów krajowych i zagranicznych na lotnisku Heathrow w Londynie?",
        "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"",
        "query_pl": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"Londyn Heathrow\""
    },
    {
        "db_id": "aircraft",
        "question_original": "How many international and domestic passengers are there in the airport London Heathrow?",
        "question_original_pl": "Ilu międzynarodowych i krajowych pasażerów obsługuje lotnisko London Heathrow?",
        "question": "How many different country and domestic passengers are there in the aerodrome London Heathrow?",
        "question_pl": "Ilu różnych pasażerów krajowych i krajowych jest na lotnisku London Heathrow?",
        "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"",
        "query_pl": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"Londyn Heathrow\""
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the total number of domestic passengers at all London airports?",
        "question_original_pl": "Jaka jest łączna liczba pasażerów krajowych na wszystkich londyńskich lotniskach?",
        "question": "What are the total number of domestic passengers at all London aerodromes?",
        "question_pl": "Jaka jest łączna liczba pasażerów krajowych na wszystkich lotniskach w Londynie?",
        "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
        "query_pl": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%Londyn%\""
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the name of pilots aged 25 or older?",
        "question_original_pl": "Jak nazywają się piloci w wieku 25 lat lub starsi?",
        "question": "What are the name of aviators aged 25 or older?",
        "question_pl": "Jak nazywają się lotnicy w wieku 25 lat lub starsi?",
        "query": "SELECT Name FROM pilot WHERE Age  >=  25",
        "query_pl": "SELECT Name FROM pilot WHERE Age  >=  25"
    },
    {
        "db_id": "aircraft",
        "question_original": "what is the name of every pilot who is at least 25 years old?",
        "question_original_pl": "Jak nazywa się każdy pilot, który ma co najmniej 25 lat?",
        "question": "what is the name of every aviator who is at least 25 years old?",
        "question_pl": "Jak nazywa się każdy lotnik, który ma co najmniej 25 lat?",
        "query": "SELECT Name FROM pilot WHERE Age  >=  25",
        "query_pl": "SELECT Name FROM pilot WHERE Age  >=  25"
    },
    {
        "db_id": "aircraft",
        "question_original": "List all pilot names in ascending alphabetical order.",
        "question_original_pl": "Wymień wszystkie nazwiska pilotów w rosnącej kolejności alfabetycznej.",
        "question": "List all aviator names in ascending alphabetical order.",
        "question_pl": "Wymień wszystkie nazwiska lotników w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Name FROM pilot ORDER BY Name ASC",
        "query_pl": "SELECT Name FROM pilot ORDER BY Name ASC"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of the pilots in alphabetical order?",
        "question_original_pl": "Jakie są nazwiska pilotów w kolejności alfabetycznej?",
        "question": "What are the names of the aviators in alphabetical order?",
        "question_pl": "Jakie są nazwiska lotników w kolejności alfabetycznej?",
        "query": "SELECT Name FROM pilot ORDER BY Name ASC",
        "query_pl": "SELECT Name FROM pilot ORDER BY Name ASC"
    },
    {
        "db_id": "aircraft",
        "question_original": "List names of all pilot aged 30 or younger in descending alphabetical order.",
        "question_original_pl": "Wymień nazwiska wszystkich pilotów w wieku 30 lat lub młodszych w kolejności alfabetycznej.",
        "question": "List names of all aviator aged 30 or younger in descending alphabetical order.",
        "question_pl": "Wymień nazwiska wszystkich lotników w wieku 30 lat lub młodszych w malejącej kolejności alfabetycznej.",
        "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC",
        "query_pl": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of all pilots 30 years old or young in descending alphabetical order?",
        "question_original_pl": "Jakie są nazwiska wszystkich pilotów w wieku 30 lat lub młodszych w malejącej kolejności alfabetycznej?",
        "question": "What are the names of all aviators 30 years old or young in descending alphabetical order?",
        "question_pl": "Jakie są nazwiska wszystkich lotników w wieku 30 lat lub młodszych w malejącej kolejności alfabetycznej?",
        "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC",
        "query_pl": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
    },
    {
        "db_id": "aircraft",
        "question_original": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".",
        "question_original_pl": "Pokaż nazwy samolotów związanych z lotniskiem o nazwie \"Londyn Gatwick\".",
        "question": "Please show the names of airplanes associated with aerodrome with name \"London Gatwick\".",
        "question_pl": "Podaj nazwy samolotów związanych z lotniskiem o nazwie \"Londyn Gatwick\".",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
        "query_pl": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Gatwick\""
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of all the aircrafts associated with London Gatwick airport?",
        "question_original_pl": "Jak nazywają się wszystkie samoloty związane z londyńskim lotniskiem Gatwick?",
        "question": "What are the names of all the airplanes associated with London Gatwick aerodrome?",
        "question_pl": "Jak nazywają się wszystkie samoloty związane z lotniskiem London Gatwick?",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
        "query_pl": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Gatwick\""
    },
    {
        "db_id": "aircraft",
        "question_original": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.",
        "question_original_pl": "Podaj nazwy i opisy samolotów powiązanych z lotniskami, które obsługują łączną liczbę pasażerów większą niż 10000000.",
        "question": "Please show the names and describing details of airplanes associated with aerodromes that have a total number of passengers bigger than 10000000.",
        "question_pl": "Podaj nazwy i szczegóły opisujące samoloty powiązane z lotniskami, które mają łączną liczbę pasażerów większą niż 10000000.",
        "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000",
        "query_pl": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?",
        "question_original_pl": "Jakie są nazwy i opisy samolotów związanych z lotniskiem, które ma więcej pasażerów niż 10000000?",
        "question": "What are the names and describing details of airplanes associated with an aerodrome that has more total passengers than 10000000?",
        "question_pl": "Jakie są nazwy i szczegóły opisujące samoloty powiązane z lotniskiem, które ma więcej pasażerów niż 10000000?",
        "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000",
        "query_pl": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?",
        "question_original_pl": "Jaka jest średnia łączna liczba pasażerów lotnisk, które są powiązane z samolotem \"Robinson R-22\"?",
        "question": "What is the average total number of passengers of aerodromes that are associated with airplane \"Robinson R-22\"?",
        "question_pl": "Jaka jest średnia łączna liczba pasażerów lotnisk związanych z samolotem \"Robinson R-22\"?",
        "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"",
        "query_pl": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\""
    },
    {
        "db_id": "aircraft",
        "question_original": "Please list the location and the winning aircraft name.",
        "question_original_pl": "Podaj lokalizację i nazwę zwycięskiego samolotu.",
        "question": "Please list the address and the winning airplane name.",
        "question_pl": "Podaj adres i nazwę zwycięskiego samolotu.",
        "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft",
        "query_pl": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the location and name of the winning aircraft?",
        "question_original_pl": "Jaka jest lokalizacja i nazwa zwycięskiego samolotu?",
        "question": "What is the address and name of the winning airplane?",
        "question_pl": "Jaki jest adres i nazwa zwycięskiego samolotu?",
        "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft",
        "query_pl": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
    },
    {
        "db_id": "aircraft",
        "question_original": "List names of all pilot in descending order of age.",
        "question_original_pl": "Wymień nazwiska wszystkich pilotów w porządku malejącym według wieku.",
        "question": "List names of all aviator in descending order of age.",
        "question_pl": "Wymień nazwiska wszystkich lotników w porządku malejącym według wieku.",
        "query": "SELECT Name FROM pilot ORDER BY Age DESC",
        "query_pl": "SELECT Name FROM pilot ORDER BY Age DESC"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of all pilots listed by descending age?",
        "question_original_pl": "Jakie są nazwiska wszystkich pilotów wymienionych według malejącego wieku?",
        "question": "What are the names of all aviators listed by descending age?",
        "question_pl": "Jakie są nazwiska wszystkich lotników wymienionych według malejącego wieku?",
        "query": "SELECT Name FROM pilot ORDER BY Age DESC",
        "query_pl": "SELECT Name FROM pilot ORDER BY Age DESC"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of all aicrafts that have never won any match?",
        "question_original_pl": "Jakie są nazwy wszystkich aicraftów, które nigdy nie wygrały żadnego meczu?",
        "question": "What are the names of all airplanes that have never won any match?",
        "question_pl": "Jak nazywają się wszystkie samoloty, które nigdy nie wygrały żadnego meczu?",
        "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)",
        "query_pl": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"
    },
    {
        "db_id": "aircraft",
        "question_original": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"",
        "question_original_pl": "Pokaż nazwy samolotów, które są powiązane zarówno z lotniskiem o nazwie \"London Heathrow\", jak i lotniskiem o nazwie \"Londyn Gatwick\".",
        "question": "Show the names of airplanes that are associated with both an aerodrome named \"London Heathrow\" and an aerodrome named \"London Gatwick\"",
        "question_pl": "Wskaż nazwy samolotów, które są powiązane zarówno z lotniskiem o nazwie \"London Heathrow\", jak i lotniskiem o nazwie \"Londyn Gatwick\".",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
        "query_pl": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Gatwick\""
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?",
        "question_original_pl": "Jakie są nazwy wszystkich samolotów, które są powiązane z lotniskami London Heathrow i Gatwick?",
        "question": "What are the names of all airplanes that are associated with both London Heathrow and Gatwick aerodromes?",
        "question_pl": "Jak nazywają się wszystkie samoloty związane z lotniskami London Heathrow i Gatwick?",
        "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
        "query_pl": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"Londyn Gatwick\""
    },
    {
        "db_id": "aircraft",
        "question_original": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.",
        "question_original_pl": "Znajdź nazwisko i wiek pilota, który wygrał najwięcej razy wśród pilotów poniżej 30 roku życia.",
        "question": "find the name and age of the aviator who has won the most number of times among the aviators who are younger than 30.",
        "question_pl": "Znajdź nazwisko i wiek lotnika, który wygrał najwięcej razy spośród lotników, którzy mają mniej niż 30 lat.",
        "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "aircraft",
        "question_original": "What is the name and age of the pilot younger than 30 who has won the most number of times?",
        "question_original_pl": "Jakie jest imię i wiek pilota poniżej 30 roku życia, który wygrał najwięcej razy?",
        "question": "What is the name and age of the aviator younger than 30 who has won the most number of times?",
        "question_pl": "Jak nazywa się i w jakim wieku jest lotnik poniżej 30 roku życia, który wygrał najwięcej razy?",
        "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "aircraft",
        "question_original": "what is the name and age of the youngest winning pilot?",
        "question_original_pl": "Jakie jest imię i wiek najmłodszego zwycięskiego pilota?",
        "question": "what is the name and age of the youngest winning aviator?",
        "question_pl": "Jak nazywa się i ile lat ma najmłodszy zwycięski lotnik?",
        "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
    },
    {
        "db_id": "aircraft",
        "question_original": "How old is the youngest winning pilot and what is their name?",
        "question_original_pl": "Ile lat ma najmłodszy zwycięski pilot i jak się nazywa?",
        "question": "How old is the youngest winning aviator and what is their name?",
        "question_pl": "Ile lat ma najmłodszy zwycięski lotnik i jak się nazywa?",
        "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1",
        "query_pl": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
    },
    {
        "db_id": "aircraft",
        "question_original": "find the name of pilots who did not win the matches held in the country of Australia.",
        "question_original_pl": "Znajdź nazwiska pilotów, którzy nie wygrali meczów rozgrywanych w Australii.",
        "question": "find the name of aviators who did not win the matches held in the country of Australia.",
        "question_pl": "Znajdź nazwiska lotników, którzy nie wygrali meczów rozgrywanych w Australii.",
        "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')",
        "query_pl": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"
    },
    {
        "db_id": "aircraft",
        "question_original": "What are the names of the pilots that have not won any matches in Australia?",
        "question_original_pl": "Jak nazywają się piloci, którzy nie wygrali żadnego meczu w Australii?",
        "question": "What are the names of the aviators that have not won any matches in Australia?",
        "question_pl": "Jak nazywają się lotnicy, którzy nie wygrali żadnego meczu w Australii?",
        "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')",
        "query_pl": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?",
        "question_original_pl": "Jakie są różne rodzaje usług świadczonych przez organizację, która ma szczegóły \"Denesik and Sons Party\"?",
        "question": "What is the different categories of service that are provided by the organization which has detail 'Denesik and Sons Party'?",
        "question_pl": "Jakie są różne kategorie usług świadczonych przez organizację o nazwie \"Denesik and Sons Party\"?",
        "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'",
        "query_pl": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Impreza Denesik i Synowie'"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.",
        "question_original_pl": "Ilu usług zażądał każdy mieszkaniec? Wymień identyfikator rezydenta, szczegóły i liczbę w kolejności malejącej.",
        "question": "How many services has each inhabitant requested? List the inhabitant id, information, and the count in descending order of the count.",
        "question_pl": "O ile usług poprosił każdy mieszkaniec? Wymień identyfikator mieszkańca, informacje i liczbę w kolejności malejącej.",
        "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC",
        "query_pl": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What is the maximum number that a certain service is provided? List the service id, details and number.",
        "question_original_pl": "Jaka jest maksymalna liczba osób, dla których świadczona jest dana usługa? Wymień identyfikator usługi, szczegóły i numer.",
        "question": "What is the maximum number that a certain service is provided? List the service id, information and number.",
        "question_pl": "Jaki jest maksymalny numer, pod którym świadczona jest dana usługa? Wymień identyfikator usługi, informacje i numer.",
        "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "List the id and type of each thing, and the details of the organization that owns it.",
        "question_original_pl": "Wymień identyfikator i typ każdej rzeczy oraz szczegóły organizacji, która jest jej właścicielem.",
        "question": "List the id and category of each thing, and the information of the organization that owns it.",
        "question_pl": "Wymień identyfikator i kategorię każdej rzeczy oraz informacje o organizacji, która jest jej właścicielem.",
        "query": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id",
        "query_pl": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What are the id and details of the customers who have at least 3 events?",
        "question_original_pl": "Jaki jest identyfikator i szczegóły klientów, którzy mają co najmniej 3 wydarzenia?",
        "question": "What are the id and information of the clients who have at least 3 events?",
        "question_pl": "Jaki jest identyfikator i informacje o klientach, którzy mają co najmniej 3 wydarzenia?",
        "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3",
        "query_pl": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What is each customer's move in date, and the corresponding customer id and details?",
        "question_original_pl": "Jaka jest data wprowadzenia każdego klienta oraz odpowiadający jej identyfikator klienta i szczegóły?",
        "question": "What is each client's move in date, and the corresponding client id and information?",
        "question_pl": "Jaka jest data wprowadzenia się każdego klienta oraz odpowiedni identyfikator i informacje o kliencie?",
        "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_pl": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'",
        "question_original_pl": "Jaki jest odrębny identyfikator i typ rzeczy, która ma status \"Zamknij\" lub ma rekord statusu przed datą \"2017-06-19 02:59:21\"?",
        "question": "What are the different id and category of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'",
        "question_pl": "Jaki jest inny identyfikator i kategoria rzeczy, która ma status \"Zamknij\" lub ma rekord statusu przed datą \"2017-06-19 02:59:21\"?",
        "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'",
        "query_pl": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Zamknij' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
        "question_original_pl": "W ilu różnych lokalizacjach znajdowały się rzeczy ze szczegółem usługi \"Niezadowolony\"?",
        "question": "How many different locations have the things with service information 'Unsatisfied' been located in?",
        "question_pl": "W ilu różnych lokalizacjach znajdowały się rzeczy z informacją serwisową \"Niezadowolony\"?",
        "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'",
        "query_pl": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Niezadowolony'"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What are the resident details containing the substring 'Miss'?",
        "question_original_pl": "Jakie są dane rezydenta zawierające podciąg \"Miss\"?",
        "question": "What are the inhabitant information containing the substring 'Miss'?",
        "question_pl": "Jakie są informacje o mieszkańcach zawierające podciąg \"Miss\"?",
        "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'",
        "query_pl": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'"
    },
    {
        "db_id": "local_govt_and_lot",
        "question_original": "What are the distinct move in dates of the residents?",
        "question_original_pl": "Jakie są konkretne daty wprowadzenia się mieszkańców?",
        "question": "What are the different move in dates of the inhabitants?",
        "question_pl": "Jakie są różne daty wprowadzenia się mieszkańców?",
        "query": "SELECT DISTINCT date_moved_in FROM residents",
        "query_pl": "SELECT DISTINCT date_moved_in FROM residents"
    },
    {
        "db_id": "school_player",
        "question_original": "List the locations of schools in ascending order of enrollment.",
        "question_original_pl": "Wymień lokalizacje szkół w kolejności rosnącej liczby zapisów.",
        "question": "List the addresses of schools in ascending order of enrollment.",
        "question_pl": "Wymień adresy szkół w kolejności rosnącej liczby zapisów.",
        "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
        "query_pl": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
    },
    {
        "db_id": "school_player",
        "question_original": "What is the list of school locations sorted in ascending order of school enrollment?",
        "question_original_pl": "Jak wygląda lista lokalizacji szkół posortowana rosnąco według liczby uczniów?",
        "question": "What is the list of school addresses sorted in ascending order of school enrollment?",
        "question_pl": "Jak wygląda lista adresów szkół posortowana rosnąco według liczby uczniów?",
        "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
        "query_pl": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
    },
    {
        "db_id": "school_player",
        "question_original": "List the locations of schools in descending order of founded year.",
        "question_original_pl": "Wymień lokalizacje szkół w kolejności malejącej według roku założenia.",
        "question": "List the addresses of schools in descending order of founded year.",
        "question_pl": "Wymień adresy szkół w kolejności malejącej według roku założenia.",
        "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
        "query_pl": "SELECT LOCATION FROM school ORDER BY Founded DESC"
    },
    {
        "db_id": "school_player",
        "question_original": "What is the list of school locations sorted in descending order of school foundation year?",
        "question_original_pl": "Jak wygląda lista lokalizacji szkół posortowana malejąco według roku założenia szkoły?",
        "question": "What is the list of school addresses sorted in descending order of school foundation year?",
        "question_pl": "Jak wygląda lista adresów szkół posortowana malejąco według roku założenia szkoły?",
        "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
        "query_pl": "SELECT LOCATION FROM school ORDER BY Founded DESC"
    },
    {
        "db_id": "school_player",
        "question_original": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
        "question_original_pl": "Jakie są zapisy do szkół, których wyznanie nie jest \"katolickie\"?",
        "question": "How many students are enrolled in the schools whose denomination is not \"Catholic\"?",
        "question_pl": "Ilu uczniów jest zapisanych do szkół, których wyznanie nie jest \"katolickie\"?",
        "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
        "query_pl": "SELECT Enrollment FROM school WHERE Denomination != \"Katolik\""
    },
    {
        "db_id": "school_player",
        "question_original": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
        "question_original_pl": "Wymień liczbę uczniów w każdej szkole, która nie ma nazwy \"katolicka\" jako wyznania.",
        "question": "List the number of students are enrolled in school that does not have \"Catholic\" as denomination.",
        "question_pl": "Wymień liczbę uczniów zapisanych do szkoły, która nie ma nazwy \"katolicka\" jako wyznania.",
        "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
        "query_pl": "SELECT Enrollment FROM school WHERE Denomination != \"Katolik\""
    },
    {
        "db_id": "school_player",
        "question_original": "What is the average enrollment of schools?",
        "question_original_pl": "Jaka jest średnia liczba uczniów w szkołach?",
        "question": "What is the average number of students are enrolled in schools?",
        "question_pl": "Jaka jest średnia liczba uczniów zapisanych do szkół?",
        "query": "SELECT avg(Enrollment) FROM school",
        "query_pl": "SELECT avg(Enrollment) FROM school"
    },
    {
        "db_id": "school_player",
        "question_original": "Take the average of the school enrollment.",
        "question_original_pl": "Weź średnią z zapisów do szkoły.",
        "question": "Take the average number of students are enrolled in the schools.",
        "question_pl": "Weź pod uwagę średnią liczbę uczniów zapisanych do szkół.",
        "query": "SELECT avg(Enrollment) FROM school",
        "query_pl": "SELECT avg(Enrollment) FROM school"
    },
    {
        "db_id": "school_player",
        "question_original": "What are the teams of the players, sorted in ascending alphabetical order?",
        "question_original_pl": "Jakie są drużyny zawodników, posortowane rosnąco w kolejności alfabetycznej?",
        "question": "What are the teams of the participants, sorted in ascending alphabetical order?",
        "question_pl": "Jakie są drużyny uczestników, posortowane w kolejności alfabetycznej?",
        "query": "SELECT Team FROM player ORDER BY Team ASC",
        "query_pl": "SELECT Team FROM player ORDER BY Team ASC"
    },
    {
        "db_id": "school_player",
        "question_original": "Find the team of each player and sort them in ascending alphabetical order.",
        "question_original_pl": "Znajdź drużynę każdego gracza i posortuj je w rosnącej kolejności alfabetycznej.",
        "question": "Find the team of each participant and sort them in ascending alphabetical order.",
        "question_pl": "Znajdź drużynę każdego uczestnika i posortuj je w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Team FROM player ORDER BY Team ASC",
        "query_pl": "SELECT Team FROM player ORDER BY Team ASC"
    },
    {
        "db_id": "school_player",
        "question_original": "How many different positions of players are there?",
        "question_original_pl": "Ile jest różnych pozycji zawodników?",
        "question": "How many different positions of participants are there?",
        "question_pl": "Ile jest różnych pozycji uczestników?",
        "query": "SELECT count(DISTINCT POSITION) FROM player",
        "query_pl": "SELECT count(DISTINCT POSITION) FROM player"
    },
    {
        "db_id": "school_player",
        "question_original": "Count the number of distinct player positions.",
        "question_original_pl": "Policz liczbę różnych pozycji gracza.",
        "question": "Count the number of different participant positions.",
        "question_pl": "Policz liczbę różnych pozycji uczestników.",
        "query": "SELECT count(DISTINCT POSITION) FROM player",
        "query_pl": "SELECT count(DISTINCT POSITION) FROM player"
    },
    {
        "db_id": "school_player",
        "question_original": "Find the team of the player of the highest age.",
        "question_original_pl": "Znajdź drużynę zawodnika o najwyższym wieku.",
        "question": "Find the team of the participant of the highest age.",
        "question_pl": "Znajdź drużynę uczestnika w najwyższym wieku.",
        "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "school_player",
        "question_original": "Which team has the oldest player?",
        "question_original_pl": "Która drużyna ma najstarszego zawodnika?",
        "question": "Which team has the oldest participant?",
        "question_pl": "Która drużyna ma najstarszego uczestnika?",
        "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "school_player",
        "question_original": "List the teams of the players with the top 5 largest ages.",
        "question_original_pl": "Wymień drużyny graczy z 5 najwyższymi wiekami.",
        "question": "List the teams of the participants with the top 5 largest ages.",
        "question_pl": "Wymień drużyny uczestników z 5 największymi wiekami.",
        "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
        "query_pl": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
    },
    {
        "db_id": "school_player",
        "question_original": "What are the teams that have the 5 oldest players?",
        "question_original_pl": "Które drużyny mają 5 najstarszych zawodników?",
        "question": "What are the teams that have the 5 oldest participants?",
        "question_pl": "Które drużyny mają 5 najstarszych uczestników?",
        "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
        "query_pl": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
    },
    {
        "db_id": "school_player",
        "question_original": "For each player, show the team and the location of school they belong to.",
        "question_original_pl": "Dla każdego gracza wskaż drużynę i lokalizację szkoły, do której należy.",
        "question": "For each participant, show the team and the address of school they belong to.",
        "question_pl": "Dla każdego uczestnika wskaż drużynę i adres szkoły, do której należy.",
        "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID",
        "query_pl": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
    },
    {
        "db_id": "school_player",
        "question_original": "What are the team and the location of school each player belongs to?",
        "question_original_pl": "Do jakiej drużyny i szkoły należą poszczególni gracze?",
        "question": "What are the team and the address of school each participant belongs to?",
        "question_pl": "Do jakiej drużyny i do jakiej szkoły należy każdy uczestnik?",
        "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID",
        "query_pl": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
    },
    {
        "db_id": "school_player",
        "question_original": "Show the locations of schools that have more than 1 player.",
        "question_original_pl": "Pokaż lokalizacje szkół, które mają więcej niż 1 gracza.",
        "question": "Show the addresses of schools that have more than 1 player.",
        "question_pl": "Pokaż adresy szkół, które mają więcej niż 1 gracza.",
        "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "school_player",
        "question_original": "Which schools have more than 1 player? Give me the school locations.",
        "question_original_pl": "Które szkoły mają więcej niż 1 gracza? Podaj mi lokalizacje szkół.",
        "question": "Which schools have more than 1 player? Give me the school addresses.",
        "question_pl": "Które szkoły mają więcej niż 1 gracza? Podaj mi adresy szkół.",
        "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "school_player",
        "question_original": "Show the denomination of the school that has the most players.",
        "question_original_pl": "Pokaż nazwę szkoły, która ma najwięcej graczy.",
        "question": "Show the denomination of the school that has the most participants.",
        "question_pl": "Pokaż wyznanie szkoły, która ma najwięcej uczestników.",
        "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "school_player",
        "question_original": "What is the denomination of the school the most players belong to?",
        "question_original_pl": "Jakiego wyznania jest szkoła, do której należy najwięcej graczy?",
        "question": "What is the denomination of the school the most participants belong to?",
        "question_pl": "Jakiego wyznania jest szkoła, do której należy najwięcej uczestników?",
        "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "school_player",
        "question_original": "Show locations and nicknames of schools.",
        "question_original_pl": "Pokaż lokalizacje i pseudonimy szkół.",
        "question": "Show addresses and monicker of schools.",
        "question_pl": "Pokaż adresy i nazwy szkół.",
        "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID",
        "query_pl": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
    },
    {
        "db_id": "school_player",
        "question_original": "What are the location and nickname of each school?",
        "question_original_pl": "Jaka jest lokalizacja i przydomek każdej ze szkół?",
        "question": "What are the address and monicker of each school?",
        "question_pl": "Jaki jest adres i nazwa każdej szkoły?",
        "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID",
        "query_pl": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
    },
    {
        "db_id": "school_player",
        "question_original": "List the locations of schools that do not have any player.",
        "question_original_pl": "Wymień lokalizacje szkół, które nie mają żadnego gracza.",
        "question": "List the addresses of schools that do not have any player.",
        "question_pl": "Wymień adresy szkół, które nie mają żadnego gracza.",
        "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
        "query_pl": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
    },
    {
        "db_id": "school_player",
        "question_original": "Which schools do not have any player? Give me the school locations.",
        "question_original_pl": "Które szkoły nie mają żadnego gracza? Podaj mi lokalizacje szkół.",
        "question": "Which schools do not have any player? Give me the school addresses.",
        "question_pl": "Które szkoły nie mają żadnego gracza? Podaj mi adresy szkół.",
        "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
        "query_pl": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
    },
    {
        "db_id": "school_player",
        "question_original": "Show the nicknames of schools that are not in division 1.",
        "question_original_pl": "Pokaż pseudonimy szkół, które nie są w dywizji 1.",
        "question": "Show the monicker of schools that are not in division 1.",
        "question_pl": "Pokaż nazwy szkół, które nie są w dywizji 1.",
        "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
        "query_pl": "SELECT Nickname FROM school_details WHERE Division != \"Dywizja 1\""
    },
    {
        "db_id": "school_player",
        "question_original": "What are the nicknames of schools whose division is not 1?",
        "question_original_pl": "Jakie są pseudonimy szkół, których dywizja nie jest 1?",
        "question": "What are the monicker of schools whose division is not 1?",
        "question_pl": "Jakie są nazwy szkół, których dywizja nie jest 1?",
        "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
        "query_pl": "SELECT Nickname FROM school_details WHERE Division != \"Dywizja 1\""
    },
    {
        "db_id": "store_product",
        "question_original": "Find all the distinct district names ordered by city area in descending.",
        "question_original_pl": "Znajdź wszystkie odrębne nazwy dzielnic uporządkowane malejąco według obszaru miasta.",
        "question": "Find all the different region names ordered by city area in descending.",
        "question_pl": "Znajdź wszystkie różne nazwy regionów uporządkowane malejąco według obszaru miasta.",
        "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC",
        "query_pl": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the different district names in order of descending city area?",
        "question_original_pl": "Jakie są różne nazwy dzielnic w kolejności malejącego obszaru miasta?",
        "question": "What are the different region names in order of descending city area?",
        "question_pl": "Jak nazywają się poszczególne regiony w kolejności malejącego obszaru miasta?",
        "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC",
        "query_pl": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the list of page size which have more than 3 product listed",
        "question_original_pl": "Znajdź listę rozmiarów stron, na których znajdują się więcej niż 3 produkty.",
        "question": "Find the list of page size which have more than 3 goods listed",
        "question_pl": "Znajdź listę rozmiarów stron, na których wymieniono więcej niż 3 towary.",
        "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3",
        "query_pl": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
    },
    {
        "db_id": "store_product",
        "question_original": "What is the maximum page size for everything that has more than 3 products listed?",
        "question_original_pl": "Jaki jest maksymalny rozmiar strony dla wszystkiego, co zawiera więcej niż 3 produkty?",
        "question": "What is the maximum page size for everything that has more than 3 goods listed?",
        "question_pl": "Jaki jest maksymalny rozmiar strony dla wszystkiego, co zawiera więcej niż 3 towary?",
        "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3",
        "query_pl": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the name and population of district with population between 200000 and 2000000",
        "question_original_pl": "Znajdź nazwę i populację dzielnicy z populacją między 200000 a 2000000",
        "question": "Find the name and populace of region with populace between 200000 and 2000000",
        "question_pl": "Znajdź nazwę i populację regionu z populacją między 200000 a 2000000",
        "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
        "query_pl": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
        "question_original_pl": "Jakie są nazwy dzielnic i populacje miast dla wszystkich dzielnic, które mają od 200 000 do 2 000 000 mieszkańców?",
        "question": "What are the region names and city populace for all regions that between 200,000 and 2,000,000 residents?",
        "question_pl": "Jakie są nazwy regionów i liczba mieszkańców miast we wszystkich regionach liczących od 200 000 do 2 000 000 mieszkańców?",
        "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
        "query_pl": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the name all districts with city area greater than 10 or population larger than 100000",
        "question_original_pl": "Znajdź nazwy wszystkich dzielnic o powierzchni większej niż 10 lub liczbie mieszkańców większej niż 100000.",
        "question": "Find the name all regions with city area greater than 10 or the number of people larger than 100000",
        "question_pl": "Znajdź nazwy wszystkich regionów o powierzchni miasta większej niż 10 lub liczbie mieszkańców większej niż 100000.",
        "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000",
        "query_pl": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?",
        "question_original_pl": "Jak nazywają się wszystkie dzielnice o powierzchni większej niż 10 lub zamieszkałe przez ponad 100 000 osób?",
        "question": "What are the names of all regions with a city area greater than 10 or have more than 100000 people living there?",
        "question_pl": "Jak nazywają się wszystkie regiony o powierzchni większej niż 10 miast lub zamieszkałe przez ponad 100 000 osób?",
        "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000",
        "query_pl": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
    },
    {
        "db_id": "store_product",
        "question_original": "Which district has the largest population?",
        "question_original_pl": "Która dzielnica ma największą populację?",
        "question": "Which region has the largest population?",
        "question_pl": "Który region ma największą populację?",
        "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
        "query_pl": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question_original": "What is the name of the district with the most residents?",
        "question_original_pl": "Jak nazywa się dzielnica z największą liczbą mieszkańców?",
        "question": "What is the name of the region with the most residents?",
        "question_pl": "Jak nazywa się region z największą liczbą mieszkańców?",
        "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
        "query_pl": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question_original": "Which district has the least area?",
        "question_original_pl": "Która dzielnica ma najmniejszą powierzchnię?",
        "question": "Which region has the least area?",
        "question_pl": "Który region ma najmniejszą powierzchnię?",
        "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
        "query_pl": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question_original": "What is the name of the district with the smallest area?",
        "question_original_pl": "Jak nazywa się dzielnica o najmniejszej powierzchni?",
        "question": "What is the name of the region with the smallest area?",
        "question_pl": "Jak nazywa się region o najmniejszej powierzchni?",
        "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
        "query_pl": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the total population of the top 3 districts with the largest area.",
        "question_original_pl": "Znajdź łączną liczbę ludności w 3 największych okręgach o największej powierzchni.",
        "question": "Find the total number of people of the top 3 districts with the largest area.",
        "question_pl": "Znajdź łączną liczbę mieszkańców 3 największych dzielnic o największej powierzchni.",
        "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3",
        "query_pl": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
    },
    {
        "db_id": "store_product",
        "question_original": "Find all types of store and number of them.",
        "question_original_pl": "Znajdź wszystkie rodzaje sklepów i ich liczbę.",
        "question": "Find all categories of store and number of them.",
        "question_pl": "Znajdź wszystkie kategorie sklepów i ich liczbę.",
        "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
    },
    {
        "db_id": "store_product",
        "question_original": "For each type of store, how many of them are there?",
        "question_original_pl": "Ile jest sklepów każdego typu?",
        "question": "For each category of store, how many of them are there?",
        "question_pl": "Ile sklepów jest dostępnych w każdej kategorii?",
        "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE",
        "query_pl": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the names of all the stores in the largest district by population?",
        "question_original_pl": "Jak nazywają się wszystkie sklepy w największej pod względem liczby ludności dzielnicy?",
        "question": "What are the names of all the stores in the largest district by the number of people?",
        "question_pl": "Jak nazywają się wszystkie sklepy w największej dzielnicy pod względem liczby mieszkańców?",
        "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)",
        "query_pl": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"
    },
    {
        "db_id": "store_product",
        "question_original": "Which city is the headquarter of the store named \"Blackville\" in?",
        "question_original_pl": "W jakim mieście znajduje się siedziba sklepu o nazwie \"Blackville\"?",
        "question": "Which city is the head office of the store named \"Blackville\" in?",
        "question_pl": "W którym mieście znajduje się siedziba sklepu o nazwie \"Blackville\"?",
        "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"",
        "query_pl": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""
    },
    {
        "db_id": "store_product",
        "question_original": "What products are available at store named \"Miramichi\"?",
        "question_original_pl": "Jakie produkty są dostępne w sklepie o nazwie \"Miramichi\"?",
        "question": "What goods are available at store named \"Miramichi\"?",
        "question_pl": "Jakie towary są dostępne w sklepie o nazwie \"Miramichi\"?",
        "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"",
        "query_pl": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""
    },
    {
        "db_id": "store_product",
        "question_original": "What products are sold at the store named Miramichi?",
        "question_original_pl": "Jakie produkty są sprzedawane w sklepie o nazwie Miramichi?",
        "question": "What goods are sold at the store named Miramichi?",
        "question_pl": "Jakie towary są sprzedawane w sklepie o nazwie Miramichi?",
        "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"",
        "query_pl": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""
    },
    {
        "db_id": "store_product",
        "question_original": "Find products with max page size as \"A4\" and pages per minute color smaller than 5.",
        "question_original_pl": "Znajdź produkty o maksymalnym rozmiarze strony \"A4\" i liczbie stron na minutę mniejszej niż 5.",
        "question": "Find goods with max page size as \"A4\" and pages per minute color smaller than 5.",
        "question_pl": "Znajdź towary o maksymalnym rozmiarze strony \"A4\" i liczbie stron na minutę w kolorze mniejszej niż 5.",
        "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5",
        "query_pl": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?",
        "question_original_pl": "Jakie są produkty z maksymalnym rozmiarem strony A4, które mają również liczbę stron na minutę w kolorze mniejszą niż 5?",
        "question": "What are the goods with the maximum page size A4 that also have a pages per minute color smaller than 5?",
        "question_pl": "Jakie są towary o maksymalnym rozmiarze strony A4, które mają również mniejszą liczbę stron na minutę niż 5?",
        "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5",
        "query_pl": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
    },
    {
        "db_id": "store_product",
        "question_original": "Find products with max page size as \"A4\" or pages per minute color smaller than 5.",
        "question_original_pl": "Znajdź produkty o maksymalnym rozmiarze strony \"A4\" lub liczbie stron na minutę mniejszej niż 5.",
        "question": "Find goods with max page size as \"A4\" or pages per minute color smaller than 5.",
        "question_pl": "Znajdź towary o maksymalnym rozmiarze strony \"A4\" lub liczbie stron na minutę mniejszej niż 5.",
        "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
        "query_pl": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?",
        "question_original_pl": "Jakie są produkty o maksymalnym rozmiarze strony równym A4 lub liczbie stron na minutę w kolorze mniejszej niż 5?",
        "question": "What are the goods with the maximum page size eqal to A4 or a pages per minute color less than 5?",
        "question_pl": "Jakie są towary o maksymalnym rozmiarze strony równym A4 lub liczbie stron na minutę w kolorze mniejszej niż 5?",
        "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
        "query_pl": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
    },
    {
        "db_id": "store_product",
        "question_original": "Find all the product whose name contains the word \"Scanner\".",
        "question_original_pl": "Znajdź wszystkie produkty, których nazwa zawiera słowo \"skaner\".",
        "question": "Find all the goods whose name contains the word \"Scanner\".",
        "question_pl": "Znajdź wszystkie towary, których nazwa zawiera słowo \"skaner\".",
        "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
        "query_pl": "SELECT product FROM product WHERE product LIKE \"%Skaner%\""
    },
    {
        "db_id": "store_product",
        "question_original": "What are all of the products whose name includes the substring \"Scanner\"?",
        "question_original_pl": "Jakie są wszystkie produkty, których nazwa zawiera podciąg \"Skaner\"?",
        "question": "What are all of the goods whose name includes the substring \"Scanner\"?",
        "question_pl": "Jakie są wszystkie towary, których nazwa zawiera podciąg \"Skaner\"?",
        "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
        "query_pl": "SELECT product FROM product WHERE product LIKE \"%Skaner%\""
    },
    {
        "db_id": "store_product",
        "question_original": "Find the most prominent max page size among all the products.",
        "question_original_pl": "Znajdź największy maksymalny rozmiar strony spośród wszystkich produktów.",
        "question": "Find the most prominent max page size among all the goods.",
        "question_pl": "Znajdź największy maksymalny rozmiar strony spośród wszystkich towarów.",
        "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the name of the products that are not using the most frequently-used max page size.",
        "question_original_pl": "Znajdź nazwy produktów, które nie używają najczęściej używanego maksymalnego rozmiaru strony.",
        "question": "Find the name of the goods that are not using the most frequently-used max page size.",
        "question_pl": "Znajdź nazwy towarów, które nie używają najczęściej używanego maksymalnego rozmiaru strony.",
        "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "store_product",
        "question_original": "What are the names of all products that are not the most frequently-used maximum page size?",
        "question_original_pl": "Jakie są nazwy wszystkich produktów, które nie są najczęściej używanym maksymalnym rozmiarem strony?",
        "question": "What are the names of all goods that are not the most frequently-used maximum page size?",
        "question_pl": "Jakie są nazwy wszystkich towarów, które nie są najczęściej używanym maksymalnym rozmiarem strony?",
        "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the total population of the districts where the area is bigger than the average city area.",
        "question_original_pl": "Znajdź całkowitą populację dzielnic, w których obszar jest większy niż średni obszar miasta.",
        "question": "Find the total populace of the districts where the area is bigger than the average city area.",
        "question_pl": "Znajdź całkowitą liczbę mieszkańców dzielnic, w których obszar jest większy niż średni obszar miasta.",
        "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)",
        "query_pl": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
    },
    {
        "db_id": "store_product",
        "question_original": "What is the total population for all the districts that have an area larger tahn the average city area?",
        "question_original_pl": "Jaka jest łączna liczba ludności we wszystkich dzielnicach o powierzchni większej niż średnia powierzchnia miasta?",
        "question": "What is the total populace for all the districts that have an area larger tahn the average city area?",
        "question_pl": "Jaka jest łączna liczba mieszkańców wszystkich dzielnic o powierzchni większej niż średnia powierzchnia miasta?",
        "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)",
        "query_pl": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
    },
    {
        "db_id": "store_product",
        "question_original": "Find the names of districts where have both city mall and village store type stores.",
        "question_original_pl": "Znajdź nazwy dzielnic, w których znajdują się zarówno centra handlowe, jak i sklepy wiejskie.",
        "question": "Find the names of regions where have both city mall and village store type stores.",
        "question_pl": "Znajdź nazwy regionów, w których znajdują się zarówno centra handlowe, jak i sklepy wiejskie.",
        "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"",
        "query_pl": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""
    },
    {
        "db_id": "store_product",
        "question_original": "What are the names of the districts that have both mall and village store style shops?",
        "question_original_pl": "Jak nazywają się dzielnice, w których znajdują się zarówno centra handlowe, jak i wiejskie sklepy?",
        "question": "What are the names of the regions that have both mall and village store style stores?",
        "question_pl": "Jak nazywają się regiony, w których znajdują się zarówno centra handlowe, jak i sklepy wiejskie?",
        "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"",
        "query_pl": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the total enrollment number of all colleges?",
        "question_original_pl": "Jaka jest łączna liczba studentów wszystkich uczelni?",
        "question": "What is the total number of students are enrolled in all colleges?",
        "question_pl": "Jaka jest łączna liczba studentów zapisanych na wszystkie uczelnie?",
        "query": "SELECT sum(enr) FROM College",
        "query_pl": "SELECT sum(enr) FROM College"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the average enrollment number?",
        "question_original_pl": "Jaka jest średnia liczba zapisów?",
        "question": "What is the average number of students are enrolled in college?",
        "question_pl": "Jaka jest średnia liczba studentów zapisanych na studia?",
        "query": "SELECT avg(enr) FROM College",
        "query_pl": "SELECT avg(enr) FROM College"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many students, on average, does each college have enrolled?",
        "question_original_pl": "Ilu średnio studentów zapisało się na każdą uczelnię?",
        "question": "How many students, on average, does each school have enrolled?",
        "question_pl": "Ilu średnio uczniów zapisanych jest do każdej szkoły?",
        "query": "SELECT avg(enr) FROM College",
        "query_pl": "SELECT avg(enr) FROM College"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many colleges in total?",
        "question_original_pl": "Ile jest w sumie szkół wyższych?",
        "question": "How many schools in total?",
        "question_pl": "Ile jest w sumie szkół?",
        "query": "SELECT count(*) FROM College",
        "query_pl": "SELECT count(*) FROM College"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many different colleges are there?",
        "question_original_pl": "Ile jest różnych szkół wyższych?",
        "question": "How many different schools are there?",
        "question_pl": "Ile jest różnych szkół?",
        "query": "SELECT count(*) FROM College",
        "query_pl": "SELECT count(*) FROM College"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many players have more than 1000 hours of training?",
        "question_original_pl": "Ilu graczy ma na koncie ponad 1000 godzin treningu?",
        "question": "How many participants have more than 1000 hours of training?",
        "question_pl": "Ilu uczestników ma ponad 1000 godzin treningu?",
        "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
        "query_pl": "SELECT count(*) FROM Player WHERE HS  >  1000"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many different players trained for more than 1000 hours?",
        "question_original_pl": "Ilu różnych graczy trenowało przez ponad 1000 godzin?",
        "question": "How many different participants trained for more than 1000 hours?",
        "question_pl": "Ilu różnych uczestników trenowało przez ponad 1000 godzin?",
        "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
        "query_pl": "SELECT count(*) FROM Player WHERE HS  >  1000"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many colleges has more than 15000 students?",
        "question_original_pl": "Ile uczelni ma więcej niż 15000 studentów?",
        "question": "How many schools has more than 15000 students?",
        "question_pl": "Ile szkół ma więcej niż 15000 uczniów?",
        "query": "SELECT count(*) FROM College WHERE enr  >  15000",
        "query_pl": "SELECT count(*) FROM College WHERE enr  >  15000"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the number of colleges with a student population greater than 15000?",
        "question_original_pl": "Jaka jest liczba szkół wyższych z populacją studentów większą niż 15000?",
        "question": "What is the number of schools with a student population greater than 15000?",
        "question_pl": "Jaka jest liczba szkół, w których liczba uczniów przekracza 15000?",
        "query": "SELECT count(*) FROM College WHERE enr  >  15000",
        "query_pl": "SELECT count(*) FROM College WHERE enr  >  15000"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the average training hours of all players?",
        "question_original_pl": "Jaka jest średnia liczba godzin treningu wszystkich graczy?",
        "question": "What is the average training hours of all participants?",
        "question_pl": "Jaka jest średnia liczba godzin treningu wszystkich uczestników?",
        "query": "SELECT avg(HS) FROM Player",
        "query_pl": "SELECT avg(HS) FROM Player"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many hours do the players train on average?",
        "question_original_pl": "Ile godzin średnio trenują zawodnicy?",
        "question": "How many hours do the participants train on average?",
        "question_pl": "Ile godzin średnio trenują uczestnicy?",
        "query": "SELECT avg(HS) FROM Player",
        "query_pl": "SELECT avg(HS) FROM Player"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the name and training hours of players whose hours are below 1500.",
        "question_original_pl": "Znajdź nazwiska i godziny treningów zawodników, których liczba godzin jest niższa niż 1500.",
        "question": "Find the name and training hours of participants whose hours are below 1500.",
        "question_pl": "Znajdź nazwiska i godziny treningów uczestników, których liczba godzin jest niższa niż 1500.",
        "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500",
        "query_pl": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?",
        "question_original_pl": "Jakie są nazwiska i liczba godzin spędzonych na treningu każdego zawodnika, który trenuje mniej niż 1500 godzin?",
        "question": "What are the names and number of hours spent training for each participant who trains for less than 1500 hours?",
        "question_pl": "Jakie są nazwiska i liczba godzin spędzonych na treningach każdego uczestnika, który trenuje mniej niż 1500 godzin?",
        "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500",
        "query_pl": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many different colleges do attend the tryout test?",
        "question_original_pl": "Ile różnych uczelni bierze udział w testach próbnych?",
        "question": "How many different schools do attend the tryout test?",
        "question_pl": "Ile różnych szkół bierze udział w testach próbnych?",
        "query": "SELECT count(DISTINCT cName) FROM tryout",
        "query_pl": "SELECT count(DISTINCT cName) FROM tryout"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many different colleges were represented at tryouts?",
        "question_original_pl": "Ile różnych uczelni było reprezentowanych na tryoutach?",
        "question": "How many different schools were represented at tryouts?",
        "question_pl": "Ile różnych szkół było reprezentowanych na tryoutach?",
        "query": "SELECT count(DISTINCT cName) FROM tryout",
        "query_pl": "SELECT count(DISTINCT cName) FROM tryout"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the max, average and min training hours of all players.",
        "question_original_pl": "Znajdź maksymalną, średnią i minimalną liczbę godzin treningu wszystkich zawodników.",
        "question": "Find the max, average and min training hours of all participants.",
        "question_pl": "Znajdź maksymalną, średnią i minimalną liczbę godzin treningu wszystkich uczestników.",
        "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player",
        "query_pl": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is average enrollment of colleges in the state FL?",
        "question_original_pl": "Jaka jest średnia rekrutacja do szkół wyższych w stanie FL?",
        "question": "What is average number of students enrolled in colleges in the state FL?",
        "question_pl": "Jaka jest średnia liczba studentów zapisanych do szkół wyższych w FL?",
        "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'",
        "query_pl": "SELECT avg(enr) FROM College WHERE state  =  'FL'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of players whose training hours is between 500 and 1500?",
        "question_original_pl": "Jakie są nazwiska zawodników, których liczba godzin treningowych wynosi od 500 do 1500?",
        "question": "What are the names of participants whose training hours is between 500 and 1500?",
        "question_pl": "Jak nazywają się uczestnicy, których liczba godzin treningu wynosi od 500 do 1500?",
        "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
        "query_pl": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of players who train between 500 and 1500 hours?",
        "question_original_pl": "Jak nazywają się gracze, którzy trenują od 500 do 1500 godzin?",
        "question": "What are the names of participants who train between 500 and 1500 hours?",
        "question_pl": "Jak nazywają się uczestnicy, którzy trenują od 500 do 1500 godzin?",
        "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
        "query_pl": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the players whose names contain letter 'a'.",
        "question_original_pl": "Znajdź graczy, których nazwiska zawierają literę \"a\".",
        "question": "Find the participants whose names contain letter 'a'.",
        "question_pl": "Znajdź uczestników, których imiona zawierają literę \"a\".",
        "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'",
        "query_pl": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Who are the players that have names containing the letter a?",
        "question_original_pl": "Którzy gracze mają nazwiska zawierające literę a?",
        "question": "Who are the participants that have names containing the letter a?",
        "question_pl": "Kim są uczestnicy, których imiona zawierają literę a?",
        "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'",
        "query_pl": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.",
        "question_original_pl": "Znajdź nazwę i liczbę studentów uczelni, których liczba studentów przekracza 10000 i które znajdują się w stanie LA.",
        "question": "Find the name, number of students enrolled in colleges whose size is bigger than 10000 and location is in state LA.",
        "question_pl": "Znajdź nazwę, liczbę studentów zapisanych na uczelnie, których wielkość jest większa niż 10000, a lokalizacja jest w stanie LA.",
        "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"",
        "query_pl": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?",
        "question_original_pl": "Jakie są nazwy i liczby zapisów na uczelnie, które mają ponad 10000 studentów i znajdują się w Luizjanie?",
        "question": "What are the names and number of students enrolled in colleges that have more than 10000 enrolled and are located in Louisiana?",
        "question_pl": "Jakie są nazwy i liczba studentów zapisanych do szkół wyższych, które mają ponad 10000 studentów i znajdują się w Luizjanie?",
        "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"",
        "query_pl": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""
    },
    {
        "db_id": "soccer_2",
        "question_original": "List all information about college sorted by enrollment number in the ascending order.",
        "question_original_pl": "Wymień wszystkie informacje o uczelni posortowane według liczby zapisów w porządku rosnącym.",
        "question": "List all detail about school sorted by enrollment number in the ascending order.",
        "question_pl": "Wymień wszystkie szczegóły dotyczące szkoły posortowane według liczby zapisów w porządku rosnącym.",
        "query": "SELECT * FROM College ORDER BY enr",
        "query_pl": "SELECT * FROM College ORDER BY enr"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What information do you have on colleges sorted by increasing enrollment numbers?",
        "question_original_pl": "Jakie masz informacje na temat szkół wyższych posortowanych według rosnącej liczby zapisów?",
        "question": "What detail do you have on colleges sorted by increasing enrollment numbers?",
        "question_pl": "Jakie masz szczegółowe informacje na temat szkół wyższych posortowanych według rosnącej liczby zapisów?",
        "query": "SELECT * FROM College ORDER BY enr",
        "query_pl": "SELECT * FROM College ORDER BY enr"
    },
    {
        "db_id": "soccer_2",
        "question_original": "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.",
        "question_original_pl": "Wymień nazwy uczelni, do których zapisało się ponad 18000 osób, posortowane według nazwy uczelni.",
        "question": "List the name of the schools whose enrollment is greater 18000 sorted by the school's name.",
        "question_pl": "Wymień nazwy szkół, do których zapisało się więcej niż 18000 osób, posortowane według nazwy szkoły.",
        "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
        "query_pl": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the name of every college in alphabetical order that has more than 18000 students enrolled?",
        "question_original_pl": "Jak nazywa się każda uczelnia w kolejności alfabetycznej, która ma ponad 18000 studentów?",
        "question": "What is the name of every school in alphabetical order that has more than 18000 students enrolled?",
        "question_pl": "Jak nazywa się każda szkoła w kolejności alfabetycznej, do której uczęszcza ponad 18000 uczniów?",
        "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
        "query_pl": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the name of players whose card is yes in the descending order of training hours.",
        "question_original_pl": "Znajdź nazwiska zawodników, których karta ma wartość \"tak\", w kolejności malejącej liczby godzin treningu.",
        "question": "Find the name of participants whose card is yes in the descending order of training hours.",
        "question_pl": "Znajdź nazwiska uczestników, których karta ma wartość \"tak\", w kolejności malejącej liczby godzin treningu.",
        "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC",
        "query_pl": "SELECT pName FROM Player WHERE yCard  =  'tak' ORDER BY HS DESC"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the name of the players who received a card in descending order of the hours of training?",
        "question_original_pl": "Jak nazywają się zawodnicy, którzy otrzymali kartę w kolejności malejącej liczby godzin treningu?",
        "question": "What are the name of the participants who received a card in descending order of the hours of training?",
        "question_pl": "Jak nazywają się uczestnicy, którzy otrzymali kartę w kolejności malejącej według godzin szkolenia?",
        "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC",
        "query_pl": "SELECT pName FROM Player WHERE yCard  =  'tak' ORDER BY HS DESC"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the name of different colleges involved in the tryout in alphabetical order.",
        "question_original_pl": "Znajdź nazwy różnych uczelni biorących udział w testach w kolejności alfabetycznej.",
        "question": "Find the name of different schools involved in the tryout in alphabetical order.",
        "question_pl": "Znajdź nazwy różnych szkół biorących udział w testach w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName",
        "query_pl": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the different names of the colleges involved in the tryout in alphabetical order?",
        "question_original_pl": "Jakie są nazwy uczelni biorących udział w testach w kolejności alfabetycznej?",
        "question": "What are the different names of the schools involved in the tryout in alphabetical order?",
        "question_pl": "Jakie są nazwy szkół biorących udział w testach w kolejności alfabetycznej?",
        "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName",
        "query_pl": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the states where have some college students in tryout.",
        "question_original_pl": "Znajdź stany, w których studenci biorą udział w tryoutach.",
        "question": "Find the states where have some school students in tryout.",
        "question_pl": "Znajdź stany, w których niektórzy uczniowie biorą udział w tryoutach.",
        "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName",
        "query_pl": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the states where have some college students in tryout and their decisions are yes.",
        "question_original_pl": "Znajdź stany, w których niektórzy studenci biorą udział w tryoutach, a ich decyzje są pozytywne.",
        "question": "Find the states where have some school students in tryout and their decisions are yes.",
        "question_pl": "Znajdź stany, w których niektórzy uczniowie biorą udział w tryoutach, a ich decyzje są pozytywne.",
        "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
        "query_pl": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'tak'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the name and college of students whose decisions are yes in the tryout.",
        "question_original_pl": "Znajdź imię i nazwisko oraz uczelnię studentów, których decyzje zostały podjęte w ramach próby.",
        "question": "Find the name and school of students whose decisions are yes in the tryout.",
        "question_pl": "Znajdź imię i nazwisko oraz szkołę uczniów, których decyzje są twierdzące podczas próby.",
        "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
        "query_pl": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'tak'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?",
        "question_original_pl": "Jakie są nazwiska wszystkich graczy, którzy otrzymali odpowiedź twierdzącą podczas testów, a także nazwy ich uczelni?",
        "question": "What are the names of all the participants who received a yes during tryouts, and also what are the names of their colleges?",
        "question_pl": "Jakie są nazwiska wszystkich uczestników, którzy otrzymali odpowiedź twierdzącą podczas testów, a także nazwy ich uczelni?",
        "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
        "query_pl": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'tak'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the states of the colleges that have students in the tryout who played in striker position.",
        "question_original_pl": "Znajdź stany college'ów, w których studenci biorący udział w tryoutach grali na pozycji napastnika.",
        "question": "Find the states of the schools that have students in the tryout who played in striker position.",
        "question_pl": "Znajdź stany szkół, których uczniowie grali na pozycji napastnika.",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'napastnik'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the states of the colleges where students who tried out for the striker position attend?",
        "question_original_pl": "W jakich stanach znajdują się uczelnie, do których uczęszczają studenci starający się o stanowisko strikera?",
        "question": "What are the states of the schools where students who tried out for the striker position attend?",
        "question_pl": "Jakie są stany szkół, do których uczęszczają uczniowie starający się o pozycję napastnika?",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'napastnik'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the state of the college which player Charles is attending.",
        "question_original_pl": "Znajdź stan uczelni, do której uczęszcza gracz Charles.",
        "question": "Find the state of the school which player Charles is attending.",
        "question_pl": "Znajdź stan szkoły, do której uczęszcza gracz Charles.",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "In which state is the college that Charles attends?",
        "question_original_pl": "W którym stanie znajduje się uczelnia, do której uczęszcza Charles?",
        "question": "In which state is the school that Charles attends?",
        "question_pl": "W którym stanie znajduje się szkoła, do której uczęszcza Charles?",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.",
        "question_original_pl": "Jaki jest stan i zapisy na uczelnie, w których są studenci, którzy zostali przyjęci w ramach decyzji o wypróbowaniu.",
        "question": "What is the state and number of student enrolled in colleges where have any students who got accepted in the tryout decision.",
        "question_pl": "Jaki jest stan i liczba studentów zapisanych do college'ów, w których są studenci, którzy zostali przyjęci na tryout.",
        "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
        "query_pl": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'tak'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.",
        "question_original_pl": "Znajdź nazwy uczelni w LA z liczbą studentów większą niż 15000 lub w stanie AZ z liczbą studentów mniejszą niż 13000.",
        "question": "Find the names of either schools in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.",
        "question_pl": "Znajdź nazwy szkół w LA z liczbą uczniów większą niż 15000 lub w stanie AZ z liczbą uczniów mniejszą niż 13000.",
        "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"",
        "query_pl": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students?",
        "question_original_pl": "Jak nazywają się uczelnie w LA, które mają ponad 15 000 studentów i uczelnie w AZ, które mają mniej niż 13 000 studentów?",
        "question": "What are the names of schools in LA that have more than 15,000 students and of schools in AZ with less than 13,000 students?",
        "question_pl": "Jak nazywają się szkoły w LA, w których uczy się ponad 15 000 uczniów i szkoły w AZ, w których uczy się mniej niż 13 000 uczniów?",
        "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"",
        "query_pl": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the names of states that have some college students playing in goalie and mid positions.",
        "question_original_pl": "Znajdź nazwy stanów, w których niektórzy studenci grają na pozycjach bramkarza i środkowego.",
        "question": "Find the names of states that have some school students playing in goalie and mid positions.",
        "question_pl": "Znajdź nazwy stanów, w których niektórzy uczniowie grają na pozycjach bramkarza i środkowego.",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'bramkarz' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'środek'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?",
        "question_original_pl": "Jak nazywają się państwa, w których niektórzy studenci grają na pozycjach bramkarza i środkowego obrońcy?",
        "question": "What are the names of the states that have some school students playing in the positions of goalie and mid-field?",
        "question_pl": "Jak nazywają się państwa, w których niektórzy uczniowie grają na pozycjach bramkarza i środkowego pomocnika?",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'bramkarz' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'środek'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the names of states that have some college students playing in the mid position but not in the goalie position.",
        "question_original_pl": "Znajdź nazwy stanów, w których niektórzy studenci grają na pozycji środkowego, ale nie na pozycji bramkarza.",
        "question": "Find the names of states that have some school students playing in the mid position but not in the goalie position.",
        "question_pl": "Znajdź nazwy stanów, w których niektórzy uczniowie grają na pozycji środkowego, ale nie bramkarza.",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'środek' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'bramkarz'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of all the states with college students playing in the mid position but no goalies?",
        "question_original_pl": "Jak nazywają się wszystkie stany, w których studenci grają na pozycji środkowego, ale nie ma bramkarzy?",
        "question": "What are the names of all the states with school students playing in the mid position but no goalies?",
        "question_pl": "Jak nazywają się wszystkie stany, w których uczniowie grają na pozycji środkowego, ale nie ma bramkarzy?",
        "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'",
        "query_pl": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'środek' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'bramkarz'"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the count of states with college students playing in the mid position but not as goalies?",
        "question_original_pl": "Jaka jest liczba stanów, w których studenci grają na pozycji środkowego, ale nie bramkarza?",
        "question": "What is the count of states with school students playing in the mid position but not as goalies?",
        "question_pl": "Jaka jest liczba stanów, w których uczniowie grają na pozycji środkowego, ale nie bramkarza?",
        "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')",
        "query_pl": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'środek' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'bramkarz')"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find the states where have the colleges whose enrollments are less than the largest size.",
        "question_original_pl": "Znajdź stany, w których znajdują się uczelnie, których liczba studentów jest mniejsza niż największa.",
        "question": "Find the states where have the schools whose enrollments are less than the largest size.",
        "question_pl": "Znajdź stany, w których znajdują się szkoły, w których liczba uczniów jest mniejsza niż największa.",
        "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)",
        "query_pl": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the states with colleges that have enrollments less than the some other college?",
        "question_original_pl": "W jakich stanach znajdują się uczelnie, do których zapisuje się mniej osób niż do innych szkół wyższych?",
        "question": "What are the states with schools that have enrollments less than the some other school?",
        "question_pl": "W jakich stanach są szkoły, do których uczęszcza mniej uczniów niż do innych szkół?",
        "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)",
        "query_pl": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find names of colleges with enrollment greater than that of some (at least one) college in the FL state.",
        "question_original_pl": "Znajdź nazwy uczelni, do których zapisało się więcej osób niż do niektórych (przynajmniej jednej) uczelni w stanie FL.",
        "question": "Find names of schools with enrollment greater than that of some (at least one) school in the FL state.",
        "question_pl": "Znajdź nazwy szkół, do których uczęszcza więcej uczniów niż do (przynajmniej jednej) szkoły w stanie FL.",
        "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')",
        "query_pl": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of the colleges that are larger than at least one college in Florida?",
        "question_original_pl": "Jak nazywają się uczelnie, które są większe niż przynajmniej jedna uczelnia na Florydzie?",
        "question": "What are the names of the schools that are larger than at least one school in Florida?",
        "question_pl": "Jak nazywają się szkoły, które są większe niż przynajmniej jedna szkoła na Florydzie?",
        "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')",
        "query_pl": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"
    },
    {
        "db_id": "soccer_2",
        "question_original": "Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.",
        "question_original_pl": "Znajdź nazwy wszystkich uczelni, do których zapisy są większe niż do wszystkich uczelni w stanie FL.",
        "question": "Find names of all schools whose enrollment is greater than that of all schools in the FL state.",
        "question_pl": "Znajdź nazwy wszystkich szkół, do których zapisy są większe niż do wszystkich szkół w stanie FL.",
        "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')",
        "query_pl": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What are the names of all colleges with a larger enrollment than the largest college in Florida?",
        "question_original_pl": "Jak nazywają się wszystkie uczelnie z większą liczbą studentów niż największa uczelnia na Florydzie?",
        "question": "What are the names of all schools with a larger enrollment than the largest school in Florida?",
        "question_pl": "Jak nazywają się wszystkie szkoły, do których uczęszcza więcej uczniów niż do największej szkoły na Florydzie?",
        "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')",
        "query_pl": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the total number of enrollment of schools that do not have any goalie player?",
        "question_original_pl": "Jaka jest łączna liczba zapisów do szkół, które nie mają żadnego bramkarza?",
        "question": "What is the total number of student enrolled in schools that do not have any goalie player?",
        "question_pl": "Jaka jest łączna liczba uczniów zapisanych do szkół, które nie mają żadnego bramkarza?",
        "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")",
        "query_pl": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"bramkarz\")"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the number of states that has some college whose enrollment is larger than the average enrollment?",
        "question_original_pl": "W ilu stanach znajdują się uczelnie, do których zapisy są większe niż średnia liczba zapisów?",
        "question": "What is the number of states that has some school whose enrollment is larger than the average enrollment?",
        "question_pl": "Jaka jest liczba stanów, w których znajduje się szkoła, do której zapisy są większe niż średnia liczba zapisów?",
        "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)",
        "query_pl": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many states have a college with more students than average?",
        "question_original_pl": "Ile stanów ma uczelnię z większą liczbą studentów niż średnia?",
        "question": "How many states have a school with more students than average?",
        "question_pl": "Ile stanów ma szkołę z większą liczbą uczniów niż średnia?",
        "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)",
        "query_pl": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
    },
    {
        "db_id": "soccer_2",
        "question_original": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?",
        "question_original_pl": "Jaka jest liczba stanów, w których niektóre uczelnie mają mniejszą liczbę studentów niż średnia?",
        "question": "What is the number of states that has some schools whose enrollment is smaller than the average enrollment?",
        "question_pl": "Jaka jest liczba stanów, w których niektóre szkoły mają mniejszą liczbę uczniów niż średnia liczba uczniów?",
        "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)",
        "query_pl": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
    },
    {
        "db_id": "soccer_2",
        "question_original": "How many states have smaller colleges than average?",
        "question_original_pl": "W ilu stanach uczelnie są mniejsze niż średnia?",
        "question": "How many states have smaller schools than average?",
        "question_pl": "W ilu stanach szkoły są mniejsze niż średnia?",
        "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)",
        "query_pl": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
    },
    {
        "db_id": "device",
        "question_original": "How many devices are there?",
        "question_original_pl": "Ile jest urządzeń?",
        "question": "How many equipments are there?",
        "question_pl": "Ile masz urządzeń?",
        "query": "SELECT count(*) FROM device",
        "query_pl": "SELECT count(*) FROM device"
    },
    {
        "db_id": "device",
        "question_original": "List the carriers of devices in ascending alphabetical order.",
        "question_original_pl": "Wymień nośniki urządzeń w rosnącej kolejności alfabetycznej.",
        "question": "List the carriers of equipments in ascending alphabetical order.",
        "question_pl": "Wymień nośniki sprzętu w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
        "query_pl": "SELECT Carrier FROM device ORDER BY Carrier ASC"
    },
    {
        "db_id": "device",
        "question_original": "What are the different carriers for devices, listed in alphabetical order?",
        "question_original_pl": "Jakie są różne nośniki dla urządzeń, wymienione w kolejności alfabetycznej?",
        "question": "What are the different carriers for equipments, listed in alphabetical order?",
        "question_pl": "Jakie są różne nośniki sprzętu, wymienione w kolejności alfabetycznej?",
        "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
        "query_pl": "SELECT Carrier FROM device ORDER BY Carrier ASC"
    },
    {
        "db_id": "device",
        "question_original": "Return the device carriers that do not have Android as their software platform.",
        "question_original_pl": "Zwróć operatorów urządzeń, których platformą programową nie jest Android.",
        "question": "Return the equipment carriers that do not have Android as their software platform.",
        "question_pl": "Zwróć nośniki sprzętu, które nie mają Androida jako platformy oprogramowania.",
        "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
        "query_pl": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"
    },
    {
        "db_id": "device",
        "question_original": "What are the names and location of the shops in ascending alphabetical order of name.",
        "question_original_pl": "Podaj nazwy i lokalizacje sklepów w kolejności alfabetycznej.",
        "question": "What are the names and position of the stores in ascending alphabetical order of name.",
        "question_pl": "Jakie są nazwy i pozycje sklepów w rosnącej kolejności alfabetycznej nazw.",
        "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC",
        "query_pl": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
    },
    {
        "db_id": "device",
        "question_original": "Return the names and locations of shops, ordered by name in alphabetical order.",
        "question_original_pl": "Zwróć nazwy i lokalizacje sklepów, uporządkowane alfabetycznie według nazwy.",
        "question": "Return the names and positions of stores, ordered by name in alphabetical order.",
        "question_pl": "Zwróć nazwy i pozycje sklepów, uporządkowane alfabetycznie według nazwy.",
        "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC",
        "query_pl": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
    },
    {
        "db_id": "device",
        "question_original": "List the open date of open year of the shop named \"Apple\".",
        "question_original_pl": "Podaj datę i rok otwarcia sklepu o nazwie \"Apple\".",
        "question": "List the start day of start year of the store named \"Apple\".",
        "question_pl": "Wymień dzień i rok rozpoczęcia działalności sklepu o nazwie \"Apple\".",
        "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"",
        "query_pl": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""
    },
    {
        "db_id": "device",
        "question_original": "What are the open dates and years for the shop named Apple?",
        "question_original_pl": "Jakie są daty i lata otwarcia sklepu o nazwie Apple?",
        "question": "What are the start days and years for the store named Apple?",
        "question_pl": "Jakie są początkowe dni i lata dla sklepu o nazwie Apple?",
        "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"",
        "query_pl": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""
    },
    {
        "db_id": "device",
        "question_original": "List the name of the shop with the latest open year.",
        "question_original_pl": "Podaj nazwę sklepu z ostatnim rokiem otwarcia.",
        "question": "List the name of the store with the latest start year.",
        "question_pl": "Podaj nazwę sklepu z ostatnim rokiem rozpoczęcia.",
        "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
        "query_pl": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
    },
    {
        "db_id": "device",
        "question_original": "What is the shop name corresponding to the shop that opened in the most recent year?",
        "question_original_pl": "Jaka jest nazwa sklepu odpowiadająca sklepowi otwartemu w ostatnim roku?",
        "question": "What is the store name corresponding to the shop that opened in the most recent year?",
        "question_pl": "Jaka jest nazwa sklepu, który został otwarty w ostatnim roku?",
        "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
        "query_pl": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
    },
    {
        "db_id": "device",
        "question_original": "What is the software platform that is most common amongst all devices?",
        "question_original_pl": "Jaka platforma oprogramowania jest najbardziej powszechna wśród wszystkich urządzeń?",
        "question": "What is the software platform that is most common amongst all equipments?",
        "question_pl": "Jaka platforma oprogramowania jest najbardziej popularna wśród wszystkich urządzeń?",
        "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "device",
        "question_original": "List the names of shops that have no devices in stock.",
        "question_original_pl": "Wymień nazwy sklepów, które nie mają urządzeń w magazynie.",
        "question": "List the names of stores that have no devices in stock.",
        "question_pl": "Wymień nazwy sklepów, w których nie ma urządzeń w magazynie.",
        "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
        "query_pl": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
    },
    {
        "db_id": "device",
        "question_original": "What are the names of shops that do not have any devices in stock?",
        "question_original_pl": "Jakie są nazwy sklepów, które nie mają żadnych urządzeń w magazynie?",
        "question": "What are the names of stores that do not have any devices in stock?",
        "question_pl": "Jakie są nazwy sklepów, w których nie ma żadnych urządzeń w magazynie?",
        "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
        "query_pl": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
    },
    {
        "db_id": "device",
        "question_original": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.",
        "question_original_pl": "Pokaż lokalizacje wspólne dla sklepów otwartych w roku późniejszym niż 2012 i sklepów otwartych w roku wcześniejszym niż 2008.",
        "question": "Show the positions shared by stores with open year later than 2012 and stores with open year before 2008.",
        "question_pl": "Pokaż pozycje dzielone przez sklepy otwarte w roku późniejszym niż 2012 i sklepy otwarte w roku wcześniejszym niż 2008.",
        "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008",
        "query_pl": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
    },
    {
        "db_id": "device",
        "question_original": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?",
        "question_original_pl": "Które lokalizacje zawierają zarówno sklepy otwarte po 2012 roku, jak i sklepy otwarte przed 2008 rokiem?",
        "question": "Which positions contains both stores that opened after the year 2012 and stores that opened before 2008?",
        "question_pl": "Które pozycje zawierają zarówno sklepy otwarte po 2012 roku, jak i sklepy otwarte przed 2008 rokiem?",
        "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008",
        "query_pl": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
    },
    {
        "db_id": "device",
        "question_original": "List the carriers of devices that have no devices in stock.",
        "question_original_pl": "Wymień operatorów urządzeń, którzy nie mają urządzeń w magazynie.",
        "question": "List the carriers of equipments that have no equipments in stock.",
        "question_pl": "Wymień przewoźników sprzętu, którzy nie mają go w magazynie.",
        "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
        "query_pl": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
    },
    {
        "db_id": "device",
        "question_original": "What are the carriers of devices that are not in stock anywhere?",
        "question_original_pl": "Jakie są nośniki urządzeń, których nie ma nigdzie w magazynie?",
        "question": "What are the carriers of equipments that are not in stock anywhere?",
        "question_pl": "Jakie są nośniki sprzętu, których nie ma nigdzie w magazynie?",
        "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
        "query_pl": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
    },
    {
        "db_id": "device",
        "question_original": "What are the carriers of devices that are in stock in more than a single shop?",
        "question_original_pl": "Jakie nośniki urządzeń znajdują się w magazynie w więcej niż jednym sklepie?",
        "question": "What are the carriers of equipments that are in stock in more than a single shop?",
        "question_pl": "Jakie nośniki sprzętu znajdują się w magazynie w więcej niż jednym sklepie?",
        "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "List the order dates of all the bookings.",
        "question_original_pl": "Podaj daty zamówień wszystkich rezerwacji.",
        "question": "List the order dates of all the reservations.",
        "question_pl": "Wymień daty zamówień wszystkich rezerwacji.",
        "query": "SELECT Order_Date FROM BOOKINGS",
        "query_pl": "SELECT Order_Date FROM BOOKINGS"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Show all the planned delivery dates and actual delivery dates of bookings.",
        "question_original_pl": "Pokaż wszystkie planowane daty dostawy i rzeczywiste daty dostawy rezerwacji.",
        "question": "Show all the scheduled delivery days and actual delivery days of reservations.",
        "question_pl": "Pokaż wszystkie zaplanowane dni dostawy i rzeczywiste dni dostawy rezerwacji.",
        "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS",
        "query_pl": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the planned delivery date and actual delivery date for each booking?",
        "question_original_pl": "Jaka jest planowana i faktyczna data dostawy dla każdej rezerwacji?",
        "question": "What are the scheduled delivery day and actual delivery day for each reservation?",
        "question_pl": "Jaki jest planowany i faktyczny dzień dostawy dla każdej rezerwacji?",
        "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS",
        "query_pl": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the phone and email for customer Harold?",
        "question_original_pl": "Jaki jest numer telefonu i adres e-mail Harold?",
        "question": "What are the telephone and email for client Harold?",
        "question_pl": "Jaki jest numer telefonu i adres e-mail klienta Harold?",
        "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"",
        "query_pl": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Show all the Store_Name of drama workshop groups.",
        "question_original_pl": "Pokaż wszystkie Store_Name grup warsztatów dramy.",
        "question": "Show all the shop name of drama workshop groups.",
        "question_pl": "Pokaż wszystkie nazwy sklepów grup warsztatów teatralnych.",
        "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
        "query_pl": "SELECT Store_Name FROM Drama_Workshop_Groups"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Show the minimum, average, maximum order quantity of all invoices.",
        "question_original_pl": "Pokaż minimalną, średnią i maksymalną ilość zamówienia dla wszystkich faktur.",
        "question": "Show the minimum, average, maximum number of order of all invoices.",
        "question_pl": "Pokaż minimalną, średnią i maksymalną liczbę zamówień dla wszystkich faktur.",
        "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES",
        "query_pl": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the description of the marketing region China?",
        "question_original_pl": "Jaki jest opis regionu marketingowego Chin?",
        "question": "What is the describing content of the China market district?",
        "question_pl": "Jaka jest opisywana zawartość chińskiej dzielnicy rynkowej?",
        "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
        "query_pl": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"Chiny\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the marketing region description of China?",
        "question_original_pl": "Znajdź opis regionu marketingowego Chin?",
        "question": "Find the marketing district description of China?",
        "question_pl": "Znajdź opis dzielnicy marketingowej w Chinach?",
        "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
        "query_pl": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"Chiny\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Show all the distinct product names with price higher than the average.",
        "question_original_pl": "Pokaż wszystkie wyróżniające się nazwy produktów z ceną wyższą niż średnia.",
        "question": "Show all the different goods names with price higher than the average.",
        "question_pl": "Pokaż wszystkie różne nazwy towarów, których cena jest wyższa niż średnia.",
        "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)",
        "query_pl": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the distinct names of the products that cost more than the average?",
        "question_original_pl": "Jakie są odrębne nazwy produktów, które kosztują więcej niż średnia?",
        "question": "What are the different names of the goods that cost more than the average?",
        "question_pl": "Jakie są różne nazwy towarów, które kosztują więcej niż średnia?",
        "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)",
        "query_pl": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the name of the most expensive product?",
        "question_original_pl": "Jak nazywa się najdroższy produkt?",
        "question": "What is the name of the most expensive goods?",
        "question_pl": "Jak nazywa się najdroższy towar?",
        "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
        "query_pl": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Tell me the name of the most pricy product.",
        "question_original_pl": "Podaj mi nazwę najdroższego produktu.",
        "question": "Tell me the name of the most pricy goods.",
        "question_pl": "Podaj mi nazwę najdroższego towaru.",
        "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
        "query_pl": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "List all product names in ascending order of price.",
        "question_original_pl": "Wyświetl wszystkie nazwy produktów w kolejności rosnącej według ceny.",
        "question": "List all goods names in ascending order of price.",
        "question_pl": "Wymień wszystkie nazwy towarów w kolejności rosnącej według ceny.",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
        "query_pl": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Sort the names of products in ascending order of their price.",
        "question_original_pl": "Posortuj nazwy produktów rosnąco według ich ceny.",
        "question": "Sort the names of goods in ascending order of their price.",
        "question_pl": "Posortuj nazwy towarów rosnąco według ich ceny.",
        "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
        "query_pl": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Which city is the address of the store named \"FJA Filming\" located in?",
        "question_original_pl": "W jakim mieście znajduje się adres sklepu o nazwie \"Filmowanie FJA\"?",
        "question": "Which city is the location of the store named \"FJA Filming\" located in?",
        "question_pl": "W którym mieście znajduje się sklep o nazwie \"Filmowanie FJA\"?",
        "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"",
        "query_pl": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"Filmowanie FJA\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the states or counties of the address of the stores with marketing region code \"CA\"?",
        "question_original_pl": "W jakich stanach lub hrabstwach znajdują się adresy sklepów z kodem regionu marketingowego \"CA\"?",
        "question": "What are the states or counties of the location of the stores with marketing region code \"CA\"?",
        "question_pl": "W jakich stanach lub hrabstwach znajdują się sklepy z kodem regionu marketingowego \"CA\"?",
        "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"",
        "query_pl": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Return the name of the marketing region the store Rob Dinning is located in.",
        "question_original_pl": "Zwróć nazwę regionu marketingowego, w którym znajduje się sklep Rob Dinning.",
        "question": "Return the name of the marketing district the store Rob Dinning is located in.",
        "question_pl": "Zwróć nazwę okręgu marketingowego, w którym znajduje się sklep Rob Dinning.",
        "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"",
        "query_pl": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the descriptions of the service types with product price above 100?",
        "question_original_pl": "Jakie są opisy typów usług z ceną produktu powyżej 100?",
        "question": "What are the describing details of the service types with goods price above 100?",
        "question_pl": "Jakie są szczegóły opisujące typy usług z ceną towarów powyżej 100?",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100",
        "query_pl": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Give me the descriptions of the service types that cost more than 100.",
        "question_original_pl": "Podaj mi opisy typów usług, które kosztują więcej niż 100.",
        "question": "Give me the describing details of the service types that cost more than 100.",
        "question_pl": "Podaj mi szczegóły opisujące typy usług, które kosztują więcej niż 100.",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100",
        "query_pl": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the description, code and the corresponding count of each service type?",
        "question_original_pl": "Jaki jest opis, kod i odpowiednia liczba każdego rodzaju usług?",
        "question": "What is the describing content, code and the corresponding count of each service type?",
        "question_pl": "Jaka jest opisująca treść, kod i odpowiednia liczba każdego rodzaju usługi?",
        "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
        "query_pl": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "List the description, code and the number of services for each service type.",
        "question_original_pl": "Wymień opis, kod i liczbę usług dla każdego typu usługi.",
        "question": "List the describing content, code and the number of services for each service type.",
        "question_pl": "Wymień treść opisu, kod i liczbę usług dla każdego typu usługi.",
        "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
        "query_pl": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the description and code of the type of service that is performed the most often?",
        "question_original_pl": "Jaki jest opis i kod rodzaju usługi, która jest wykonywana najczęściej?",
        "question": "What is the describing content and code of the type of service that is performed the most often?",
        "question_pl": "Jaka jest treść opisu i kod rodzaju usługi, która jest wykonywana najczęściej?",
        "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the description and code of the service type that is performed the most times.",
        "question_original_pl": "Znajdź opis i kod typu usługi, która jest wykonywana najczęściej.",
        "question": "Find the describing content and code of the service type that is performed the most times.",
        "question_pl": "Znajdź opisującą treść i kod typu usługi, która jest wykonywana najczęściej.",
        "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the names of workshop groups in which services with product name \"film\" are performed?",
        "question_original_pl": "Jak nazywają się grupy warsztatowe, w których wykonywane są usługi o nazwie produktu \"film\"?",
        "question": "What are the names of workshop groups in which services with goods name \"film\" are performed?",
        "question_pl": "Jak nazywają się grupy warsztatowe, w których wykonywane są usługi o nazwie towarowej \"film\"?",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"",
        "query_pl": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the names of the workshop groups where services with product name \"film\" are performed.",
        "question_original_pl": "Znajdź nazwy grup warsztatów, w których wykonywane są usługi o nazwie produktu \"film\".",
        "question": "Find the names of the workshop groups where services with goods name \"film\" are performed.",
        "question_pl": "Znajdź nazwy grup warsztatów, w których wykonywane są usługi z nazwą towaru \"film\".",
        "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"",
        "query_pl": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the different product names? What is the average product price for each of them?",
        "question_original_pl": "Jakie są nazwy poszczególnych produktów? Jaka jest średnia cena produktu dla każdego z nich?",
        "question": "What are the different goods names? What is the average goods price for each of them?",
        "question_pl": "Jakie są nazwy różnych towarów? Jaka jest średnia cena towarów dla każdego z nich?",
        "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name",
        "query_pl": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "For each distinct product name, show its average product price.",
        "question_original_pl": "Dla każdej odrębnej nazwy produktu podaj jego średnią cenę.",
        "question": "For each different goods name, show its average goods price.",
        "question_pl": "Dla każdej nazwy towaru podaj jego średnią cenę.",
        "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name",
        "query_pl": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the product names with average product price smaller than 1000000?",
        "question_original_pl": "Jakie są nazwy produktów, których średnia cena jest niższa niż 1000000?",
        "question": "What are the goods names with average goods price smaller than 1000000?",
        "question_pl": "Jakie są nazwy towarów, których średnia cena jest niższa niż 1000000?",
        "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000",
        "query_pl": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the product names whose average product price is below 1000000.",
        "question_original_pl": "Znajdź nazwy produktów, których średnia cena jest niższa niż 1000000.",
        "question": "Find the goods names whose average goods price is below 1000000.",
        "question_pl": "Znajdź nazwy towarów, których średnia cena jest niższa niż 1000000.",
        "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000",
        "query_pl": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the total order quantities of photo products?",
        "question_original_pl": "Jakie są całkowite wielkości zamówień produktów fotograficznych?",
        "question": "What are the total number of order of photo goods?",
        "question_pl": "Jaka jest całkowita liczba zamówień towarów fotograficznych?",
        "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\"",
        "query_pl": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"zdjęcie\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Compute the total order quantities of the product \"photo\".",
        "question_original_pl": "Oblicz całkowitą ilość zamówienia produktu \"zdjęcie\".",
        "question": "Compute the total number of order of the goods \"photo\".",
        "question_pl": "Oblicz całkowitą liczbę zamówień towarów \"zdjęcie\".",
        "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\"",
        "query_pl": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"zdjęcie\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the order details of the products with price higher than 2000?",
        "question_original_pl": "Jakie są szczegóły zamówienia produktów o cenie wyższej niż 2000?",
        "question": "What are the order information of the goods with price higher than 2000?",
        "question_pl": "Jakie są informacje o zamówieniach towarów o cenie wyższej niż 2000?",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000",
        "query_pl": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the order detail for the products with price above 2000.",
        "question_original_pl": "Znajdź szczegóły zamówienia dla produktów z ceną powyżej 2000.",
        "question": "Find the order information for the goods with price above 2000.",
        "question_pl": "Znajdź informacje o zamówieniu dla towarów z ceną powyżej 2000.",
        "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000",
        "query_pl": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the order dates of orders with price higher than 1000?",
        "question_original_pl": "Jakie są daty zamówień z ceną wyższą niż 1000?",
        "question": "What are the order days of orders with price higher than 1000?",
        "question_pl": "Jakie są dni realizacji zamówień z ceną wyższą niż 1000?",
        "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
        "query_pl": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the order dates of the orders with price above 1000.",
        "question_original_pl": "Znajdź daty zamówień z ceną powyżej 1000.",
        "question": "Find the order days of the orders with price above 1000.",
        "question_pl": "Znajdź dni realizacji zleceń z ceną powyżej 1000.",
        "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
        "query_pl": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the number of distinct currency codes used in drama workshop groups.",
        "question_original_pl": "Znajdź liczbę różnych kodów walutowych używanych w grupach warsztatowych dramy.",
        "question": "Find the number of different currency codes used in drama workshop groups.",
        "question_pl": "Znajdź liczbę różnych kodów walutowych używanych w grupach warsztatowych.",
        "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
        "query_pl": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the names of the drama workshop groups with address in Feliciaberg city?",
        "question_original_pl": "Jakie są nazwy grup warsztatów teatralnych z adresem w mieście Feliciaberg?",
        "question": "What are the names of the drama workshop groups with location in Feliciaberg city?",
        "question_pl": "Jakie są nazwy grup warsztatów teatralnych z lokalizacją w mieście Feliciaberg?",
        "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"",
        "query_pl": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the marketing region code that has the most drama workshop groups?",
        "question_original_pl": "Jaki jest kod regionu marketingowego, w którym znajduje się najwięcej grup warsztatów teatralnych?",
        "question": "What is the marketing district code that has the most drama workshop groups?",
        "question_pl": "Jaki jest kod dzielnicy marketingowej, w której znajduje się najwięcej grup warsztatów teatralnych?",
        "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Which marketing region has the most drama workshop groups? Give me the region code.",
        "question_original_pl": "Który region marketingowy ma najwięcej grup warsztatów teatralnych? Podaj kod regionu.",
        "question": "Which marketing district has the most drama workshop groups? Give me the district code.",
        "question_pl": "Która dzielnica marketingowa ma najwięcej grup warsztatów teatralnych? Podaj mi kod dzielnicy.",
        "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Which status code is the most common of all the bookings?",
        "question_original_pl": "Który kod statusu jest najczęstszy ze wszystkich?",
        "question": "Which status code is the most common of all the reservations?",
        "question_pl": "Który kod statusu jest najczęstszy spośród wszystkich zastrzeżeń?",
        "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Show the names of all the clients with no booking.",
        "question_original_pl": "Pokaż nazwy wszystkich klientów bez rezerwacji.",
        "question": "Show the names of all the clients with no reservation.",
        "question_pl": "Pokaż nazwiska wszystkich klientów bez zastrzeżeń.",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID",
        "query_pl": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What are the names of the clients who do not have any booking?",
        "question_original_pl": "Jakie są nazwy klientów, którzy nie mają rezerwacji?",
        "question": "What are the names of the clients who do not have any reservation?",
        "question_pl": "Jak nazywają się klienci, którzy nie mają żadnych rezerwacji?",
        "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID",
        "query_pl": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the product ID of the most frequently ordered item on invoices?",
        "question_original_pl": "Jaki jest identyfikator produktu najczęściej zamawianej pozycji na fakturach?",
        "question": "What is the goods ID of the most frequently ordered item on invoices?",
        "question_pl": "Jaki jest identyfikator towaru najczęściej zamawianego na fakturach?",
        "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Find the id of the product ordered the most often on invoices.",
        "question_original_pl": "Znajdź identyfikator najczęściej zamawianego produktu na fakturach.",
        "question": "Find the id of the goods ordered the most often on invoices.",
        "question_pl": "Znajdź identyfikator najczęściej zamawianych towarów na fakturach.",
        "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "What is the description of the service type which offers both the photo product and the film product?",
        "question_original_pl": "Jaki jest opis typu usługi, która oferuje zarówno produkt fotograficzny, jak i filmowy?",
        "question": "What is the describing content of the service type which offers both the photo goods and the film goods?",
        "question_pl": "Jaka jest opisowa zawartość typu usługi, która oferuje zarówno towary fotograficzne, jak i filmowe?",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'",
        "query_pl": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'zdjęcie' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "question_original": "Give me the description of the service type that offers not only the photo product but also the film product.",
        "question_original_pl": "Podaj mi opis typu usługi, która oferuje nie tylko produkt fotograficzny, ale także filmowy.",
        "question": "Give me the describing content of the service type that offers not only the photo product but also the film product.",
        "question_pl": "Podaj mi treść opisującą typ usługi, która oferuje nie tylko produkt fotograficzny, ale także filmowy.",
        "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'",
        "query_pl": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'zdjęcie' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
    },
    {
        "db_id": "music_2",
        "question_original": "Find all the stage positions of the musicians with first name \"Solveig\"",
        "question_original_pl": "Znajdź wszystkie pozycje sceniczne muzyków o imieniu \"Solveig\"",
        "question": "Find all the stage positions of the musicians with forename \"Solveig\"",
        "question_pl": "Znajdź wszystkie pozycje sceniczne muzyków z imieniem \"Solveig\"",
        "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"",
        "query_pl": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the different stage positions for all musicians whose first name is \"Solveig\"?",
        "question_original_pl": "Jakie są różne pozycje sceniczne dla wszystkich muzyków, których imię brzmi \"Solveig\"?",
        "question": "What are the different stage positions for all musicians whose forename is \"Solveig\"?",
        "question_pl": "Jakie są różne pozycje sceniczne dla wszystkich muzyków, którzy mają na imię \"Solveig\"?",
        "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"",
        "query_pl": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""
    },
    {
        "db_id": "music_2",
        "question_original": "Find all the songs performed by artist with last name \"Heilo\"",
        "question_original_pl": "Znajdź wszystkie piosenki wykonane przez wykonawcę o nazwisku \"Heilo\"",
        "question": "Find all the songs performed by artist with family name \"Heilo\"",
        "question_pl": "Znajdź wszystkie piosenki wykonane przez wykonawcę o pseudonimie \"Heilo\"",
        "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"",
        "query_pl": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the names of all songs produced by the artist with the first name \"Marianne\"?",
        "question_original_pl": "Jak nazywają się wszystkie utwory wyprodukowane przez artystkę o imieniu \"Marianna\"?",
        "question": "What are the names of all songs produced by the artist with the forename \"Marianne\"?",
        "question_pl": "Jak nazywają się wszystkie piosenki wyprodukowane przez artystkę o imieniu \"Marianna\"?",
        "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"",
        "query_pl": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianna\""
    },
    {
        "db_id": "music_2",
        "question_original": "Who performed the song named \"Badlands\"? Show the first name and the last name.",
        "question_original_pl": "Kto jest wykonawcą utworu \"Badlands\"? Podaj imię i nazwisko.",
        "question": "Who performed the song named \"Badlands\"? Show the full name.",
        "question_pl": "Kto wykonał utwór \"Badlands\"? Pokaż pełną nazwę.",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""
    },
    {
        "db_id": "music_2",
        "question_original": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.",
        "question_original_pl": "Kto występuje na tylnej scenie w piosence \"Badlands\"? Podaj imię i nazwisko.",
        "question": "Who is performing in the back stage position for the song \"Badlands\"? Show the forename and the family name.",
        "question_pl": "Kto występuje na tylnej scenie w piosence \"Badlands\"? Podaj imię i nazwisko oraz nazwisko rodowe.",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"z powrotem\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?",
        "question_original_pl": "Jakie są imiona i nazwiska wykonawcy, który znajdował się za sceną w piosence \"Badlands\"?",
        "question": "What are the full names of the performer who was in the back stage position for the song \"Badlands\"?",
        "question_pl": "Jakie są pełne imiona i nazwiska wykonawców, którzy znajdowali się na zapleczu sceny w piosence \"Badlands\"?",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"z powrotem\""
    },
    {
        "db_id": "music_2",
        "question_original": "What is the last name of the musician that have produced the most number of songs?",
        "question_original_pl": "Jak nazywa się muzyk, który wyprodukował najwięcej piosenek?",
        "question": "What is the family name of the musician that have produced the most number of songs?",
        "question_pl": "Jak nazywa się rodzina muzyka, który stworzył najwięcej piosenek?",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the last name of the musician who was in the most songs?",
        "question_original_pl": "Jak nazywa się muzyk, który wystąpił w największej liczbie piosenek?",
        "question": "What is the family name of the musician who was in the most songs?",
        "question_pl": "Jak nazywa się rodzina muzyka, który wystąpił w największej liczbie piosenek?",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the last name of the musician that has been at the back position the most?",
        "question_original_pl": "Jak nazywa się muzyk, który najczęściej występował na tej pozycji?",
        "question": "What is the family name of the musician that has been at the back position the most?",
        "question_pl": "Jakie jest nazwisko muzyka, który najczęściej występował na tej pozycji?",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"z powrotem\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the last name of the musicians who has played back position the most?",
        "question_original_pl": "Jak nazywa się muzyk, który najczęściej grał na tylnej pozycji?",
        "question": "What is the family name of the musicians who has played back position the most?",
        "question_pl": "Jak nazywa się rodzina muzyków, którzy najczęściej grali na tylnej pozycji?",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"z powrotem\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What are the names of the songs whose title has the word \"the\"?",
        "question_original_pl": "Jak nazywają się piosenki, których tytuł zawiera słowo \"the\"?",
        "question": "What are the names of the songs whose name has the word \"the\"?",
        "question_pl": "Jak nazywają się piosenki, których nazwa zawiera słowo \"the\"?",
        "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
        "query_pl": "SELECT title FROM songs WHERE title LIKE '% the %'"
    },
    {
        "db_id": "music_2",
        "question_original": "What instrument did the musician with last name \"Heilo\" use in the song \"Le Pop\"?",
        "question_original_pl": "Jakiego instrumentu używał muzyk o nazwisku \"Heilo\" w utworze \"Le Pop\"?",
        "question": "What instrument did the musician with family name \"Heilo\" use in the song \"Le Pop\"?",
        "question_pl": "Jakiego instrumentu używał muzyk o pseudonimie \"Heilo\" w piosence \"Le Pop\"?",
        "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\"",
        "query_pl": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "How many instrument does the musician with last name \"Heilo\" use?",
        "question_original_pl": "Z ilu instrumentów korzysta muzyk o nazwisku \"Heilo\"?",
        "question": "How many instrument does the musician with surname \"Heilo\" use?",
        "question_pl": "Jakiego instrumentu używa muzyk o nazwisku \"Heilo\"?",
        "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"",
        "query_pl": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type is the most frequently appearring type?",
        "question_original_pl": "Który typ głosu pojawia się najczęściej?",
        "question": "Which vocal category is the most frequently appearring category?",
        "question_pl": "Która kategoria wokalna pojawia się najczęściej?",
        "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the type of vocables that appears most frequently?",
        "question_original_pl": "Jaki typ słownictwa pojawia się najczęściej?",
        "question": "What is the category of vocables that appears most frequently?",
        "question_pl": "Która kategoria słówek pojawia się najczęściej?",
        "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type has the band mate with last name \"Heilo\" played the most?",
        "question_original_pl": "Na jakim rodzaju wokalu najczęściej grał członek zespołu o nazwisku \"Heilo\"?",
        "question": "Which vocal category has the band mate with family name \"Heilo\" played the most?",
        "question_pl": "W której kategorii wokalnej kolega z zespołu o pseudonimie \"Heilo\" występował najczęściej?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the type of vocals that the band member with the last name \"Heilo\" played the most?",
        "question_original_pl": "Jaki rodzaj wokalu najczęściej wykonywał członek zespołu o nazwisku \"Heilo\"?",
        "question": "What is the category of vocals that the band member with the family name \"Heilo\" played the most?",
        "question_pl": "W jakiej kategorii wokali najczęściej występował członek zespołu o pseudonimie \"Heilo\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What are the vocal types used in song \"Le Pop\"?",
        "question_original_pl": "Jakich rodzajów wokalu użyto w piosence \"Le Pop\"?",
        "question": "What are the vocal categories used in song \"Le Pop\"?",
        "question_pl": "Jakie kategorie wokalne zostały użyte w piosence \"Le Pop\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the types of vocals used in the song \"Le Pop\"?",
        "question_original_pl": "Jakie rodzaje wokali zostały użyte w piosence \"Le Pop\"?",
        "question": "What are the categories of vocals used in the song \"Le Pop\"?",
        "question_pl": "Jakie są kategorie wokali użytych w piosence \"Le Pop\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?",
        "question_original_pl": "Jaki rodzaj wokalu wykonał muzyk o imieniu \"Solveig\" w utworze o tytule \"Bar w Amsterdamie\"?",
        "question": "Which vocal category did the musician with forename \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?",
        "question_pl": "W której kategorii wokalnej wystąpił muzyk o imieniu \"Solveig\" w utworze o tytule \"Bar w Amsterdamie\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"Bar w Amsterdamie\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?",
        "question_original_pl": "Jakie są rodzaje wokali, które muzyk o imieniu \"Solveig\" zagrał w piosence \"Bar w Amsterdamie\"?",
        "question": "What are the categories of vocals that the musician with the forename \"Solveig\" played in the song \"A Bar in Amsterdam\"?",
        "question_pl": "Jakie są kategorie wokali, które muzyk o imieniu \"Solveig\" zagrał w utworze \"Bar w Amsterdamie\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"Bar w Amsterdamie\""
    },
    {
        "db_id": "music_2",
        "question_original": "Find all the vocal types.",
        "question_original_pl": "Znajdź wszystkie typy głosu.",
        "question": "Find all the vocal categories.",
        "question_pl": "Znajdź wszystkie kategorie wokalne.",
        "query": "SELECT DISTINCT TYPE FROM vocals",
        "query_pl": "SELECT DISTINCT TYPE FROM vocals"
    },
    {
        "db_id": "music_2",
        "question_original": "What are the different types of vocals?",
        "question_original_pl": "Jakie są różne rodzaje wokali?",
        "question": "What are the different categories of vocals?",
        "question_pl": "Jakie są różne kategorie wokali?",
        "query": "SELECT DISTINCT TYPE FROM vocals",
        "query_pl": "SELECT DISTINCT TYPE FROM vocals"
    },
    {
        "db_id": "music_2",
        "question_original": "What information is there on albums from 2010?",
        "question_original_pl": "Jakie są informacje na temat albumów z 2010 roku?",
        "question": "What detail is there on albums from 2010?",
        "question_pl": "Jakie szczegóły znajdują się na albumach z 2010 roku?",
        "query": "SELECT * FROM Albums WHERE YEAR  =  2010",
        "query_pl": "SELECT * FROM Albums WHERE YEAR  =  2010"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the first and last name of artist who performed \"Le Pop\"?",
        "question_original_pl": "Jakie jest imię i nazwisko artysty, który wykonał \"Le Pop\"?",
        "question": "What is the full name of artist who performed \"Le Pop\"?",
        "question_pl": "Jak brzmi pełna nazwa artysty, który wykonał \"Le Pop\"?",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "What is the last name of the musician that have produced the most songs?",
        "question_original_pl": "Jak nazywa się muzyk, który wyprodukował najwięcej piosenek?",
        "question": "What is the family name of the musician that have produced the most songs?",
        "question_pl": "Jakie jest nazwisko muzyka, który stworzył najwięcej piosenek?",
        "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What are the vocal types used in song \"Badlands\"?",
        "question_original_pl": "Jakie rodzaje wokalu zostały użyte w utworze \"Badlands\"?",
        "question": "What are the vocal categories used in song \"Badlands\"?",
        "question_pl": "Jakie kategorie wokalne zostały użyte w utworze \"Badlands\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
    },
    {
        "db_id": "music_2",
        "question_original": "What types of vocals are used in the song \"Badlands\"?",
        "question_original_pl": "Jakie rodzaje wokali zostały użyte w utworze \"Badlands\"?",
        "question": "What categories of vocals are used in the song \"Badlands\"?",
        "question_pl": "Jakie kategorie wokali zostały użyte w utworze \"Badlands\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
    },
    {
        "db_id": "music_2",
        "question_original": "Find the number of vocal types used in song \"Le Pop\"",
        "question_original_pl": "Znajdź liczbę typów wokali użytych w piosence \"Le Pop\"",
        "question": "Find the number of vocal categories used in song \"Le Pop\"",
        "question_pl": "Znajdź liczbę kategorii wokalnych użytych w piosence \"Le Pop\"",
        "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
        "query_pl": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "How many vocal types are used in the song \"Le Pop\"?",
        "question_original_pl": "Ile rodzajów wokali zostało użytych w piosence \"Le Pop\"?",
        "question": "How many vocal categories are used in the song \"Le Pop\"?",
        "question_pl": "Ile kategorii wokalnych zostało użytych w piosence \"Le Pop\"?",
        "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
        "query_pl": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type has the band mate with first name \"Solveig\" played the most?",
        "question_original_pl": "Który rodzaj wokalu najczęściej wykonywał kolega z zespołu o imieniu \"Solveig\"?",
        "question": "Which vocal category has the band mate with forename \"Solveig\" played the most?",
        "question_pl": "W której kategorii wokalnej kolega z zespołu o imieniu \"Solveig\" występował najczęściej?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What are the types of vocals that the band member with the first name \"Solveig\" played the most?",
        "question_original_pl": "Jakie rodzaje wokali najczęściej wykonywał członek zespołu o imieniu \"Solveig\"?",
        "question": "What are the categories of vocals that the band member with the forename \"Solveig\" played the most?",
        "question_pl": "Jakie kategorie wokali najczęściej wykonywał członek zespołu o pseudonimie \"Solveig\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?",
        "question_original_pl": "Jaki rodzaj wokalu wykonał muzyk o nazwisku \"Heilo\" w utworze o tytule \"Der Kapitan\"?",
        "question": "Which vocal category did the musician with surname \"Heilo\" played in the song with title \"Der Kapitan\"?",
        "question_pl": "W której kategorii wokalnej wystąpił muzyk o nazwisku \"Heilo\" w utworze o tytule \"Der Kapitan\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?",
        "question_original_pl": "Jakie są rodzaje wokali, które muzyk o nazwisku \"Heilo\" zagrał w \"Der Kapitan\"?",
        "question": "What are the categories of vocals that the musician with the family name \"Heilo\" played in \"Der Kapitan\"?",
        "question_pl": "Jakie są kategorie wokali, które muzyk o nazwisku \"Heilo\" grał w \"Der Kapitan\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""
    },
    {
        "db_id": "music_2",
        "question_original": "Which vocal type has the band mate with first name \"Marianne\" played the most?",
        "question_original_pl": "Który rodzaj wokalu najczęściej wykonywał członek zespołu o imieniu \"Marianna\"?",
        "question": "Which vocal category has the band mate with forename \"Marianne\" played the most?",
        "question_pl": "W której kategorii wokalnej kolega z zespołu o imieniu \"Marianna\" występował najczęściej?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianna\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "What is the vocal type of the band mate whose first name is \"Marianne\" played the most?",
        "question_original_pl": "Jaki jest najczęściej grany typ wokalu kolegi z zespołu, który ma na imię \"Marianna\"?",
        "question": "What is the vocal category of the band mate whose forename is \"Marianne\" played the most?",
        "question_pl": "Jaka jest najczęściej grana kategoria wokalna kolegi z zespołu, który ma na imię \"Marianna\"?",
        "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianna\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "music_2",
        "question_original": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.",
        "question_original_pl": "Kto występuje na tylnej scenie w piosence \"Der Kapitan\"? Podaj imię i nazwisko.",
        "question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the full name.",
        "question_pl": "Kto występuje na tylnej scenie w piosence \"Der Kapitan\"? Pokaż pełną nazwę.",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"z powrotem\""
    },
    {
        "db_id": "music_2",
        "question_original": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?",
        "question_original_pl": "Jakie jest imię i nazwisko artysty, który wystąpił za sceną do piosenki \"Der Kapitan\"?",
        "question": "What is the full name of the artist who performed back stage for the song \"Der Kapitan\"?",
        "question_pl": "Jak brzmi pełna nazwa artysty, który wystąpił za sceną do piosenki \"Der Kapitan\"?",
        "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"",
        "query_pl": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"z powrotem\""
    },
    {
        "db_id": "music_2",
        "question_original": "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?",
        "question_original_pl": "Jakie są tytuły piosenek na albumie \"Pocałunek zanim odejdziesz: na żywo w Hamburgu\"?",
        "question": "What are the song names on the album \"A Kiss Before You Go: Live in Hamburg\"?",
        "question_pl": "Jak nazywają się piosenki na albumie \"Pocałunek zanim odejdziesz: na żywo w Hamburgu\"?",
        "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"",
        "query_pl": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\""
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the average, maximum and total revenues of all companies?",
        "question_original_pl": "Jakie są średnie, maksymalne i całkowite przychody wszystkich firm?",
        "question": "What are the average, maximum and total amount of incomes of all companies?",
        "question_pl": "Jaka jest średnia, maksymalna i łączna kwota dochodów wszystkich firm?",
        "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers",
        "query_pl": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Return the average, maximum, and total revenues across all manufacturers.",
        "question_original_pl": "Zwróć średnie, maksymalne i całkowite przychody wszystkich producentów.",
        "question": "Return the average, maximum, and total amount of incomes across all manufacturers.",
        "question_pl": "Zwróć średnią, maksymalną i całkowitą kwotę dochodów wszystkich producentów.",
        "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers",
        "query_pl": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "How many companies were created by Andy?",
        "question_original_pl": "Ile firm zostało stworzonych przez Andy'ego?",
        "question": "How many enterprise were created by Andy?",
        "question_pl": "Ile przedsiębiorstw stworzył Andy?",
        "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
        "query_pl": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Return the number of companies created by Andy.",
        "question_original_pl": "Zwróć liczbę firm utworzonych przez Andy'ego.",
        "question": "Return the number of enterprise created by Andy.",
        "question_pl": "Zwróć liczbę przedsiębiorstw utworzonych przez Andy'ego.",
        "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
        "query_pl": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the total revenue created by the companies whose headquarter is located at Austin.",
        "question_original_pl": "Znajdź całkowity przychód wygenerowany przez firmy, których główna siedziba znajduje się w Austin.",
        "question": "Find the total amount of income created by the companies whose headquarter is located at Austin.",
        "question_pl": "Znajdź całkowitą kwotę dochodu wygenerowanego przez firmy, których główna siedziba znajduje się w Austin.",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the sum of revenue from companies with headquarters in Austin?",
        "question_original_pl": "Jaka jest suma przychodów firm z siedzibą w Austin?",
        "question": "What is the sum of income from enterprise with headquarters in Austin?",
        "question_pl": "Jaka jest suma przychodów przedsiębiorstw z siedzibą w Austin?",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the founder of the company whose name begins with the letter 'S'.",
        "question_original_pl": "Znajdź założyciela firmy, której nazwa zaczyna się na literę \"S\".",
        "question": "Find the establisher of the enterprise whose name begins with the letter 'S'.",
        "question_pl": "Znajdź założyciela przedsiębiorstwa, którego nazwa zaczyna się na literę \"S\".",
        "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
        "query_pl": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Who is the founders of companies whose first letter is S?",
        "question_original_pl": "Kto jest założycielem firm, których pierwsza litera to S?",
        "question": "Who is the establishers of enterprise whose first letter is S?",
        "question_pl": "Kto jest założycielem przedsiębiorstwa, którego pierwszą literą jest S?",
        "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
        "query_pl": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name of companies whose revenue is between 100 and 150.",
        "question_original_pl": "Znajdź nazwy firm, których przychody mieszczą się w przedziale od 100 do 150.",
        "question": "Find the name of enterprise whose total amount of income is between 100 and 150.",
        "question_pl": "Znajdź nazwę przedsiębiorstwa, którego całkowity dochód wynosi od 100 do 150.",
        "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of companies with revenue between 100 and 150?",
        "question_original_pl": "Jakie są nazwy firm o przychodach między 100 a 150?",
        "question": "What are the names of enterprise with total amount of income between 100 and 150?",
        "question_pl": "Jak nazywają się firmy z łączną kwotą przychodów między 100 a 150?",
        "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?",
        "question_original_pl": "Jaki jest całkowity przychód wszystkich firm, których główna siedziba znajduje się w Tokio lub na Tajwanie?",
        "question": "What is the total amount of income of all enterprise whose main office is at Tokyo or Taiwan?",
        "question_pl": "Jaka jest łączna kwota dochodu wszystkich przedsiębiorstw, których główna siedziba znajduje się w Tokio lub na Tajwanie?",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokio' OR Headquarter  =  'Tajwan'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.",
        "question_original_pl": "Zwróć łączny przychód firm z siedzibą w Tokio lub na Tajwanie.",
        "question": "Return the total amount of income of enterprise with headquarters in Tokyo or Taiwan.",
        "question_pl": "Zwróć całkowitą kwotę dochodu przedsiębiorstwa z siedzibą w Tokio lub na Tajwanie.",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokio' OR Headquarter  =  'Tajwan'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name of product that is produced by both companies Creative Labs and Sony.",
        "question_original_pl": "Znajdź nazwę produktu produkowanego przez firmy Creative Labs i Sony.",
        "question": "Find the name of goods that is produced by both enterprise Creative Labs and Sony.",
        "question_pl": "Znajdź nazwę towaru produkowanego zarówno przez firmę Creative Labs, jak i Sony.",
        "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'",
        "query_pl": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of products produced by both Creative Labs and Sony?",
        "question_original_pl": "Jak nazywają się produkty produkowane przez Creative Labs i Sony?",
        "question": "What are the names of goods produced by both Creative Labs and Sony?",
        "question_pl": "Jak nazywają się towary produkowane przez Creative Labs i Sony?",
        "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'",
        "query_pl": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.",
        "question_original_pl": "Znajdź nazwę, siedzibę i założyciela producenta, który ma najwyższe przychody.",
        "question": "Find the name, head office and establisher of the manufacturer that has the highest revenue.",
        "question_pl": "Znajdź nazwę, siedzibę główną i założyciela producenta, który ma najwyższe przychody.",
        "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
        "query_pl": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names, headquarters and founders of the company with the highest revenue?",
        "question_original_pl": "Jakie są nazwy, siedziby i założyciele firm o najwyższych przychodach?",
        "question": "What are the names, head office and establishers of the company with the highest revenue?",
        "question_pl": "Jakie są nazwy, siedziby i założyciele firmy o najwyższych przychodach?",
        "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
        "query_pl": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
        "question_original_pl": "Znajdź nazwę, siedzibę i przychody wszystkich producentów posortowane według ich przychodów w porządku malejącym.",
        "question": "Find the name, head office and total amount of income of all manufacturers sorted by their total amount of income in the descending order.",
        "question_pl": "Znajdź nazwę, siedzibę i łączną kwotę dochodu wszystkich producentów posortowanych według łącznej kwoty dochodu w porządku malejącym.",
        "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC",
        "query_pl": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?",
        "question_original_pl": "Jakie są nazwy, siedziby i przychody producentów, posortowane malejąco według przychodów?",
        "question": "What are the names, head office and total amount of incomes for manufacturers, sorted by total amount of income descending?",
        "question_pl": "Jakie są nazwy, siedziby i łączna kwota przychodów producentów, posortowane malejąco według łącznej kwoty przychodów?",
        "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC",
        "query_pl": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of manufacturers with revenue greater than the average of all revenues?",
        "question_original_pl": "Jakie są nazwy producentów o przychodach większych niż średnia wszystkich przychodów?",
        "question": "What are the names of manufacturers with total amount of income greater than the average of all total amount of incomes?",
        "question_pl": "Jakie są nazwy producentów, których łączna kwota dochodu jest większa niż średnia wszystkich łącznych kwot dochodu?",
        "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin.",
        "question_original_pl": "Znajdź nazwy firm, których przychody są mniejsze niż przychody wszystkich firm z siedzibą w Austin.",
        "question": "Find the name of enterprise whose total amount of income is smaller than the revenue of all enterprise based in Austin.",
        "question_pl": "Znajdź nazwę przedsiębiorstwa, którego łączny przychód jest mniejszy niż przychód wszystkich przedsiębiorstw z siedzibą w Austin.",
        "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?",
        "question_original_pl": "Jakie są nazwy firm o przychodach niższych niż najniższe przychody jakiegokolwiek producenta w Austin?",
        "question": "What are the names of enterprise with total amount of income less than the lowest total amount of income of any manufacturer in Austin?",
        "question_pl": "Jakie są nazwy firm z łączną kwotą dochodu mniejszą niż najniższa łączna kwota dochodu dowolnego producenta w Austin?",
        "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
        "query_pl": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.",
        "question_original_pl": "Znajdź łączne przychody firm, których przychody są większe niż przychody niektórych firm z siedzibą w Austin.",
        "question": "Find the total amount of income of enterprise whose total amount of income is larger than the total amount of income of some enterprise based in Austin.",
        "question_pl": "Znajdź całkowitą kwotę dochodu przedsiębiorstwa, którego całkowita kwota dochodu jest większa niż całkowita kwota dochodu pewnego przedsiębiorstwa z siedzibą w Austin.",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?",
        "question_original_pl": "Jaki jest całkowity przychód firm, których przychód jest wyższy niż najniższy przychód jakiegokolwiek producenta w Austin?",
        "question": "What is the total amount of income of enterprise with income greater than the lowest income of any manufacturer in Austin?",
        "question_pl": "Jaka jest łączna kwota dochodu przedsiębiorstwa o dochodzie wyższym niż najniższy dochód jakiegokolwiek producenta w Austin?",
        "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
        "query_pl": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the total revenue of companies of each founder.",
        "question_original_pl": "Znajdź łączne przychody firm każdego z założycieli.",
        "question": "Find the total amount of income of enterprise of each establisher.",
        "question_pl": "Znajdź całkowitą kwotę dochodu przedsiębiorstwa każdego z założycieli.",
        "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder",
        "query_pl": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the total revenue of companies started by founder?",
        "question_original_pl": "Jaki jest całkowity przychód firm założonych przez założyciela?",
        "question": "What is the total amount of income of enterprise started by establisher?",
        "question_pl": "Jaka jest całkowita kwota dochodu przedsiębiorstwa założonego przez założyciela?",
        "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder",
        "query_pl": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name and revenue of the company that earns the highest revenue in each city.",
        "question_original_pl": "Znajdź nazwę i przychody firmy, która osiąga najwyższe przychody w każdym mieście.",
        "question": "Find the name and total amount of income of the enterprise that earns the highest total amount of income in each city.",
        "question_pl": "Znajdź nazwę i łączną kwotę dochodu przedsiębiorstwa, które osiąga najwyższy łączny dochód w każdym mieście.",
        "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter",
        "query_pl": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names and revenues of the companies with the highest revenues in each headquarter city?",
        "question_original_pl": "Jakie są nazwy i przychody firm o najwyższych przychodach w każdym mieście siedziby głównej?",
        "question": "What are the names and total amount of incomes of the enterprise with the highest total amount of incomes in each head office city?",
        "question_pl": "Jakie są nazwy i łączna kwota dochodów przedsiębiorstw o najwyższej łącznej kwocie dochodów w każdym mieście siedziby głównej?",
        "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter",
        "query_pl": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the total revenue for each manufacturer.",
        "question_original_pl": "Znajdź całkowity przychód dla każdego producenta.",
        "question": "Find the total amount of income for each manufacturer.",
        "question_pl": "Znajdź całkowitą kwotę dochodu dla każdego producenta.",
        "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name",
        "query_pl": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the total revenue of each manufacturer?",
        "question_original_pl": "Jaki jest całkowity przychód każdego producenta?",
        "question": "What is the total amount of income of each manufacturer?",
        "question_pl": "Jaka jest całkowita kwota dochodu każdego producenta?",
        "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name",
        "query_pl": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the average prices of all products from each manufacture, and list each company's name.",
        "question_original_pl": "Znajdź średnie ceny wszystkich produktów każdego producenta i wymień nazwę każdej firmy.",
        "question": "Find the average prices of all goods from each manufacture, and list each enterprise's name.",
        "question_pl": "Znajdź średnie ceny wszystkich towarów z każdej fabryki i wymień nazwę każdego przedsiębiorstwa.",
        "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the average prices of products for each manufacturer?",
        "question_original_pl": "Jakie są średnie ceny produktów dla każdego producenta?",
        "question": "What are the average prices of goods for each manufacturer?",
        "question_pl": "Jakie są średnie ceny towarów dla każdego producenta?",
        "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the number of different products that are produced by companies at different headquarter cities.",
        "question_original_pl": "Znajdź liczbę różnych produktów wytwarzanych przez firmy w różnych miastach siedziby głównej.",
        "question": "Find the number of different goods that are produced by companies at different head office cities.",
        "question_pl": "Znajdź liczbę różnych towarów produkowanych przez firmy w różnych miastach siedziby głównej.",
        "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter",
        "query_pl": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "How many different products are produced in each headquarter city?",
        "question_original_pl": "Ile różnych produktów jest wytwarzanych w każdym mieście siedziby głównej?",
        "question": "How many different goods are produced in each head office city?",
        "question_pl": "Ile różnych towarów jest produkowanych w każdym mieście siedziby głównej?",
        "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter",
        "query_pl": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find number of products which Sony does not make.",
        "question_original_pl": "Znajdź liczbę produktów, których Sony nie produkuje.",
        "question": "Find number of goods which Sony does not make.",
        "question_pl": "Znajdź liczbę towarów, których firma Sony nie produkuje.",
        "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
        "query_pl": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "How many products are not made by Sony?",
        "question_original_pl": "Ile produktów nie jest produkowanych przez Sony?",
        "question": "How many goods are not made by Sony?",
        "question_pl": "Ile towarów nie jest produkowanych przez Sony?",
        "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
        "query_pl": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the name of companies that do not make DVD drive.",
        "question_original_pl": "Znajdź nazwy firm, które nie produkują napędów DVD.",
        "question": "Find the name of enterprise that do not make DVD drive.",
        "question_pl": "Znajdź nazwę firmy, która nie produkuje napędów DVD.",
        "query": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'",
        "query_pl": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'Napęd DVD'"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find the number of products for each manufacturer, showing the name of each company.",
        "question_original_pl": "Znajdź liczbę produktów każdego producenta, podając nazwę każdej firmy.",
        "question": "Find the number of goods for each manufacturer, showing the name of each enterprise.",
        "question_pl": "Znajdź liczbę towarów dla każdego producenta, podając nazwę każdego przedsiębiorstwa.",
        "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "How many products are there for each manufacturer?",
        "question_original_pl": "Ile jest produktów każdego producenta?",
        "question": "How many goods are there for each manufacturer?",
        "question_pl": "Ile towarów jest dostępnych dla każdego producenta?",
        "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the names of all the products in the store.",
        "question_original_pl": "Wybierz nazwy wszystkich produktów w sklepie.",
        "question": "Select the names of all the goods in the store.",
        "question_pl": "Wybierz nazwy wszystkich towarów w sklepie.",
        "query": "SELECT Name FROM Products",
        "query_pl": "SELECT Name FROM Products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of all products?",
        "question_original_pl": "Jakie są nazwy wszystkich produktów?",
        "question": "What are the names of all goods?",
        "question_pl": "Jakie są nazwy wszystkich towarów?",
        "query": "SELECT Name FROM Products",
        "query_pl": "SELECT Name FROM Products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the names and the prices of all the products in the store.",
        "question_original_pl": "Wybierz nazwy i ceny wszystkich produktów w sklepie.",
        "question": "Select the names and the prices of all the goods in the store.",
        "question_pl": "Wybierz nazwy i ceny wszystkich towarów w sklepie.",
        "query": "SELECT name ,  price FROM products",
        "query_pl": "SELECT name ,  price FROM products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names and prices of all products in the store?",
        "question_original_pl": "Jakie są nazwy i ceny wszystkich produktów w sklepie?",
        "question": "What are the names and prices of all goods in the store?",
        "question_pl": "Jakie są nazwy i ceny wszystkich towarów w sklepie?",
        "query": "SELECT name ,  price FROM products",
        "query_pl": "SELECT name ,  price FROM products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the name of the products with a price less than or equal to $200.",
        "question_original_pl": "Wybierz nazwę produktów, których cena jest mniejsza lub równa 200 USD.",
        "question": "Select the name of the goods with a price less than or equal to $200.",
        "question_pl": "Wybierz nazwę towaru, którego cena jest mniejsza lub równa 200 USD.",
        "query": "SELECT name FROM products WHERE price  <=  200",
        "query_pl": "SELECT name FROM products WHERE price  <=  200"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names of products with price at most 200?",
        "question_original_pl": "Jakie są nazwy produktów z ceną co najwyżej 200?",
        "question": "What are the names of goods with price at most 200?",
        "question_pl": "Jak nazywają się towary, których cena wynosi co najwyżej 200?",
        "query": "SELECT name FROM products WHERE price  <=  200",
        "query_pl": "SELECT name FROM products WHERE price  <=  200"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Find all information of all the products with a price between $60 and $120.",
        "question_original_pl": "Znajdź wszystkie informacje o wszystkich produktach w cenie od 60 do 120 USD.",
        "question": "Find all details of all the goods with a price between $60 and $120.",
        "question_pl": "Znajdź wszystkie szczegóły dotyczące wszystkich towarów w cenie od 60 do 120 USD.",
        "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
        "query_pl": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is all the information of all the products that have a price between 60 and 120?",
        "question_original_pl": "Jakie są informacje o wszystkich produktach, których cena wynosi od 60 do 120?",
        "question": "What is all the details of all the goods that have a price between 60 and 120?",
        "question_pl": "Jakie są szczegóły wszystkich towarów, których cena wynosi od 60 do 120?",
        "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120",
        "query_pl": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Compute the average price of all the products.",
        "question_original_pl": "Oblicz średnią cenę wszystkich produktów.",
        "question": "Compute the average price of all the goods.",
        "question_pl": "Oblicz średnią cenę wszystkich towarów.",
        "query": "SELECT avg(price) FROM products",
        "query_pl": "SELECT avg(price) FROM products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the average price across all products?",
        "question_original_pl": "Jaka jest średnia cena wszystkich produktów?",
        "question": "What is the average price across all goods?",
        "question_pl": "Jaka jest średnia cena wszystkich towarów?",
        "query": "SELECT avg(price) FROM products",
        "query_pl": "SELECT avg(price) FROM products"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Compute the average price of all products with manufacturer code equal to 2.",
        "question_original_pl": "Oblicz średnią cenę wszystkich produktów z kodem producenta równym 2.",
        "question": "Compute the average price of all goods with manufacturer code equal to 2.",
        "question_pl": "Oblicz średnią cenę wszystkich towarów o kodzie producenta równym 2.",
        "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
        "query_pl": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the average price of products with manufacturer codes equal to 2?",
        "question_original_pl": "Jaka jest średnia cena produktów o kodzie producenta równym 2?",
        "question": "What is the average price of goods with manufacturer codes equal to 2?",
        "question_pl": "Jaka jest średnia cena towarów o kodzie producenta równym 2?",
        "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
        "query_pl": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Compute the number of products with a price larger than or equal to $180.",
        "question_original_pl": "Oblicz liczbę produktów z ceną większą lub równą 180 USD.",
        "question": "Compute the number of goods with a price larger than or equal to $180.",
        "question_pl": "Oblicz liczbę towarów o cenie większej lub równej 180 USD.",
        "query": "SELECT count(*) FROM products WHERE price >= 180",
        "query_pl": "SELECT count(*) FROM products WHERE price >= 180"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "How many products have prices of at least 180?",
        "question_original_pl": "Ile produktów ma cenę wynoszącą co najmniej 180?",
        "question": "How many goods have prices of at least 180?",
        "question_pl": "Ile towarów ma cenę wynoszącą co najmniej 180?",
        "query": "SELECT count(*) FROM products WHERE price >= 180",
        "query_pl": "SELECT count(*) FROM products WHERE price >= 180"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).",
        "question_original_pl": "Wybierz nazwę i cenę wszystkich produktów o cenie większej lub równej 180 USD i posortuj je najpierw według ceny (w kolejności malejącej), a następnie według nazwy (w kolejności rosnącej).",
        "question": "Select the name and price of all goods with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).",
        "question_pl": "Wybierz nazwę i cenę wszystkich towarów o cenie większej lub równej 180 USD i posortuj je najpierw według ceny (w porządku malejącym), a następnie według nazwy (w porządku rosnącym).",
        "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC",
        "query_pl": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?",
        "question_original_pl": "Jakie są nazwy i ceny produktów, które kosztują co najmniej 180, posortowane według malejącej ceny i rosnącej nazwy?",
        "question": "What are the names and prices of goods that cost at least 180, sorted by price decreasing and name ascending?",
        "question_pl": "Jakie są nazwy i ceny towarów, które kosztują co najmniej 180, posortowane według malejącej ceny i rosnącej nazwy?",
        "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC",
        "query_pl": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select all the data from the products and each product's manufacturer.",
        "question_original_pl": "Wybierz wszystkie dane produktów i producenta każdego z nich.",
        "question": "Select all the data from the goods and each goods's manufacturer.",
        "question_pl": "Wybierz wszystkie dane towarów i producenta każdego z nich.",
        "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code",
        "query_pl": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is all the product data, as well as  each product's manufacturer?",
        "question_original_pl": "Jakie są wszystkie dane produktu, a także jego producent?",
        "question": "What is all the goods data, as well as  each product's manufacturer?",
        "question_pl": "Jakie są wszystkie dane towarów, a także producent każdego produktu?",
        "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code",
        "query_pl": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the average price of each manufacturer's products, showing only the manufacturer's code.",
        "question_original_pl": "Wybierz średnią cenę produktów każdego producenta, wyświetlając tylko kod producenta.",
        "question": "Select the average price of each manufacturer's goods, showing only the manufacturer's code.",
        "question_pl": "Wybierz średnią cenę towarów każdego producenta, pokazując tylko kod producenta.",
        "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer",
        "query_pl": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the average prices of products, grouped by manufacturer code?",
        "question_original_pl": "Jakie są średnie ceny produktów pogrupowanych według kodu producenta?",
        "question": "What are the average prices of goods, grouped by manufacturer code?",
        "question_pl": "Jakie są średnie ceny towarów pogrupowanych według kodu producenta?",
        "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer",
        "query_pl": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the average price of each manufacturer's products, showing the manufacturer's name.",
        "question_original_pl": "Wybierz średnią cenę produktów każdego producenta, podając jego nazwę.",
        "question": "Select the average price of each manufacturer's goods, showing the manufacturer's name.",
        "question_pl": "Wybierz średnią cenę towarów każdego producenta, podając jego nazwę.",
        "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the average prices of products, grouped by manufacturer name?",
        "question_original_pl": "Jakie są średnie ceny produktów pogrupowanych według nazwy producenta?",
        "question": "What are the average prices of goods, grouped by manufacturer name?",
        "question_pl": "Jakie są średnie ceny towarów pogrupowanych według nazwy producenta?",
        "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the names of manufacturer whose products have an average price higher than or equal to $150.",
        "question_original_pl": "Wybierz nazwy producentów, których produkty mają średnią cenę wyższą lub równą 150 USD.",
        "question": "Select the names of manufacturer whose goods have an average price higher than or equal to $150.",
        "question_pl": "Wybierz nazwy producentów, których średnia cena towarów jest wyższa lub równa 150 USD.",
        "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",
        "query_pl": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
        "question_original_pl": "Jakie są nazwy i średnie ceny produktów producentów, których produkty kosztują średnio 150 lub więcej?",
        "question": "What are the names and average prices of goods for manufacturers whose goods cost on average 150 or more?",
        "question_pl": "Jakie są nazwy i średnie ceny towarów dla producentów, których towary kosztują średnio 150 lub więcej?",
        "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",
        "query_pl": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the name and price of the cheapest product.",
        "question_original_pl": "Wybierz nazwę i cenę najtańszego produktu.",
        "question": "Select the name and price of the cheapest goods.",
        "question_pl": "Wybierz nazwę i cenę najtańszego towaru.",
        "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1",
        "query_pl": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What is the name and price of the cheapest product?",
        "question_original_pl": "Jaka jest nazwa i cena najtańszego produktu?",
        "question": "What is the name and price of the cheapest goods?",
        "question_pl": "Jaka jest nazwa i cena najtańszego towaru?",
        "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1",
        "query_pl": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the name of each manufacturer along with the name and price of its most expensive product.",
        "question_original_pl": "Wybierz nazwę każdego producenta wraz z nazwą i ceną jego najdroższego produktu.",
        "question": "Select the name of each manufacturer along with the name and price of its most expensive goods.",
        "question_pl": "Wybierz nazwę każdego producenta wraz z nazwą i ceną jego najdroższych towarów.",
        "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "For each manufacturer name, what are the names and prices of their most expensive product?",
        "question_original_pl": "Dla każdej nazwy producenta, jakie są nazwy i ceny jego najdroższych produktów?",
        "question": "For each manufacturer name, what are the names and prices of their most expensive goods?",
        "question_pl": "Dla każdej nazwy producenta, jakie są nazwy i ceny jego najdroższych towarów?",
        "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name",
        "query_pl": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "Select the code of the product that is cheapest in each product category.",
        "question_original_pl": "Wybierz kod produktu, który jest najtańszy w każdej kategorii produktów.",
        "question": "Select the number of the goods that is cheapest in each goods category.",
        "question_pl": "Wybierz liczbę towarów, która jest najtańsza w każdej kategorii towarów.",
        "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name",
        "query_pl": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
    },
    {
        "db_id": "manufactory_1",
        "question_original": "What are the codes and names of the cheapest products in each category?",
        "question_original_pl": "Jakie są kody i nazwy najtańszych produktów w każdej kategorii?",
        "question": "What are the number and names of the cheapest goods in each category?",
        "question_pl": "Jaka jest liczba i nazwy najtańszych towarów w każdej kategorii?",
        "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name",
        "query_pl": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What is the id of the problem log that is created most recently?",
        "question_original_pl": "Jaki jest identyfikator ostatnio utworzonego dziennika problemów?",
        "question": "What is the id of the issue log that is created most recently?",
        "question_pl": "Jaki jest identyfikator ostatnio utworzonego dziennika zgłoszeń?",
        "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
        "query_pl": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Which problem log was created most recently? Give me the log id.",
        "question_original_pl": "Który dziennik problemów został utworzony ostatnio? Podaj mi identyfikator dziennika.",
        "question": "Which issue log was created most recently? Give me the log id.",
        "question_pl": "Który dziennik zgłoszeń został utworzony ostatnio? Podaj mi identyfikator dziennika.",
        "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
        "query_pl": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Find the oldest log id and its corresponding problem id.",
        "question_original_pl": "Znajdź najstarszy identyfikator dziennika i odpowiadający mu identyfikator problemu.",
        "question": "Find the oldest log id and its corresponding issue id.",
        "question_pl": "Znajdź najstarszy identyfikator dziennika i odpowiadający mu identyfikator wydania.",
        "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
        "query_pl": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Find all the ids and dates of the logs for the problem whose id is 10.",
        "question_original_pl": "Znajdź wszystkie identyfikatory i daty logów dla problemu o identyfikatorze 10.",
        "question": "Find all the ids and day of the logs for the issue whose id is 10.",
        "question_pl": "Znajdź wszystkie identyfikatory i dni dzienników dla zgłoszenia o identyfikatorze 10.",
        "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10",
        "query_pl": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "For the problem with id 10, return the ids and dates of its problem logs.",
        "question_original_pl": "Dla problemu o identyfikatorze 10 zwróć identyfikatory i daty jego dzienników problemów.",
        "question": "For the issue with id 10, return the ids and day of its issue logs.",
        "question_pl": "Dla wydania o identyfikatorze 10 zwróć identyfikatory i dni dzienników wydań.",
        "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10",
        "query_pl": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List all the log ids and their descriptions from the problem logs.",
        "question_original_pl": "Wymień wszystkie identyfikatory dzienników i ich opisy z dzienników problemów.",
        "question": "List all the log ids and their descriptions from the issue logs.",
        "question_pl": "Wyświetl wszystkie identyfikatory dzienników i ich opisy z dzienników błędów.",
        "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log",
        "query_pl": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What are the log id and entry description of each problem?",
        "question_original_pl": "Jaki jest identyfikator dziennika i opis każdego problemu?",
        "question": "What are the log id and entry describing content of each issue?",
        "question_pl": "Jaki jest identyfikator dziennika i wpis opisujący zawartość każdego wydania?",
        "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log",
        "query_pl": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.",
        "question_original_pl": "Wymień imiona i nazwiska wszystkich pracowników, którzy są przypisani do problemu o identyfikatorze 1.",
        "question": "List the forename and family names of all different employee members who are assigned to the problem whose id is 1.",
        "question_pl": "Wymień imiona i nazwiska wszystkich pracowników przypisanych do problemu o identyfikatorze 1.",
        "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",
        "query_pl": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List the problem id and log id which are assigned to the staff named Rylan Homenick.",
        "question_original_pl": "Wymień identyfikator problemu i identyfikator dziennika, które są przypisane do pracownika o nazwie Rylan Homenick.",
        "question": "List the issue id and log id which are assigned to the employee named Rylan Homenick.",
        "question_pl": "Wymień identyfikator sprawy i identyfikator dziennika, które są przypisane do pracownika o imieniu Rylan Homenick.",
        "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"",
        "query_pl": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Which problem id and log id are assigned to the staff named Rylan Homenick?",
        "question_original_pl": "Który identyfikator problemu i identyfikator dziennika są przypisane do pracownika o imieniu Rylan Homenick?",
        "question": "Which issue id and log id are assigned to the employee named Rylan Homenick?",
        "question_pl": "Który identyfikator sprawy i identyfikator dziennika są przypisane do pracownika o imieniu Rylan Homenick?",
        "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"",
        "query_pl": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "How many problems are there for product voluptatem?",
        "question_original_pl": "Ile jest problemów z voluptatem produktowym?",
        "question": "How many problems are there for goods voluptatem?",
        "question_pl": "Ile jest problemów z towarami voluptatem?",
        "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"",
        "query_pl": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "How many problems did the product called \"voluptatem\" have in record?",
        "question_original_pl": "Ile problemów miał produkt o nazwie \"voluptatem\"?",
        "question": "How many problems did the goods called \"voluptatem\" have in record?",
        "question_pl": "Ile problemów miał towar o nazwie \"voluptatem\"?",
        "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"",
        "query_pl": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "How many problems does the product with the most problems have? List the number of the problems and product name.",
        "question_original_pl": "Ile problemów ma produkt z największą liczbą problemów? Wymień liczbę problemów i nazwę produktu.",
        "question": "How many problems does the goods with the most problems have? List the number of the problems and goods name.",
        "question_pl": "Ile problemów ma towar z największą liczbą problemów? Wymień liczbę problemów i nazwę towaru.",
        "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Which product has the most problems? Give me the number of problems and the product name.",
        "question_original_pl": "Z którym produktem jest najwięcej problemów? Podaj liczbę problemów i nazwę produktu.",
        "question": "Which goods has the most problems? Give me the number of problems and the goods name.",
        "question_pl": "Z którym towarem jest najwięcej problemów? Podaj liczbę problemów i nazwę towaru.",
        "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
        "question_original_pl": "Podaj mi listę opisów problemów zgłaszanych przez pracowników, których imię brzmi Christop.",
        "question": "Give me a list of descriptions of the problems that are reported by the staff whose forename is Christop.",
        "question_pl": "Podaj mi listę opisów problemów, które są zgłaszane przez personel, którego imię to Christop.",
        "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
        "query_pl": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "For each product which has problems, what are the number of problems and the product id?",
        "question_original_pl": "Dla każdego produktu, który ma problemy, jaka jest liczba problemów i identyfikator produktu?",
        "question": "For each goods which has problems, what are the number of problems and the goods id?",
        "question_pl": "Dla każdego towaru, z którym są problemy, jaka jest liczba problemów i identyfikator towaru?",
        "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
        "query_pl": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "For each product with some problems, list the count of problems and the product id.",
        "question_original_pl": "Dla każdego produktu z pewnymi problemami podaj liczbę problemów i identyfikator produktu.",
        "question": "For each goods with some problems, list the count of problems and the goods id.",
        "question_pl": "Dla każdego towaru z pewnymi problemami podaj liczbę problemów i identyfikator towaru.",
        "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
        "query_pl": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?",
        "question_original_pl": "Dla każdego produktu, który ma problemy, znajdź liczbę problemów zgłoszonych po 1986-11-13 i identyfikator produktu?",
        "question": "For each goods that has problems, find the number of problems reported after 1986-11-13 and the goods id?",
        "question_pl": "Dla każdego towaru, który ma problemy, znajdź liczbę problemów zgłoszonych po 1986-11-13 i identyfikator towaru?",
        "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id",
        "query_pl": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.",
        "question_original_pl": "Jakie produkty mają problemy zgłoszone po 1986-11-13? Podaj mi identyfikator produktu i liczbę problemów zgłoszonych po 1986-11-13.",
        "question": "What are the goods that have problems reported after 1986-11-13? Give me the goods id and the count of problems reported after 1986-11-13.",
        "question_pl": "Jakie towary mają problemy zgłoszone po 1986-11-13? Podaj identyfikator towaru i liczbę problemów zgłoszonych po 1986-11-13.",
        "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id",
        "query_pl": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List the names of all the distinct product names in alphabetical order?",
        "question_original_pl": "Wymień nazwy wszystkich produktów w kolejności alfabetycznej?",
        "question": "List the names of all the different goods names in alphabetical order?",
        "question_pl": "Wymień nazwy wszystkich różnych towarów w kolejności alfabetycznej?",
        "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name",
        "query_pl": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Sort all the distinct product names in alphabetical order.",
        "question_original_pl": "Posortuj wszystkie odrębne nazwy produktów w kolejności alfabetycznej.",
        "question": "Sort all the different goods names in alphabetical order.",
        "question_pl": "Posortuj nazwy różnych towarów w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name",
        "query_pl": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List all the distinct product names ordered by product id?",
        "question_original_pl": "Wymień wszystkie odrębne nazwy produktów uporządkowane według identyfikatora produktu?",
        "question": "List all the different goods names ordered by goods id?",
        "question_pl": "Wymień wszystkie różne nazwy towarów uporządkowane według identyfikatora towaru?",
        "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id",
        "query_pl": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What is the list of distinct product names sorted by product id?",
        "question_original_pl": "Jaka jest lista odrębnych nazw produktów posortowanych według identyfikatora produktu?",
        "question": "What is the list of different goods names sorted by goods id?",
        "question_pl": "Jak wygląda lista różnych nazw towarów posortowanych według identyfikatora towaru?",
        "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id",
        "query_pl": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?",
        "question_original_pl": "Jakie są identyfikatory produktów dla problemów zgłoszonych przez Christopa Berge'a z zamknięciem autoryzowanym przez Ashleya Medhursta?",
        "question": "What are the goods ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?",
        "question_pl": "Jakie są identyfikatory towarów w przypadku problemów zgłoszonych przez Christopa Berge'a z zamknięciem autoryzowanym przez Ashleya Medhursta?",
        "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"",
        "query_pl": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "For which product was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the product ids.",
        "question_original_pl": "W przypadku którego produktu wystąpił problem zgłoszony przez Christopa Berge, z zamknięciem autoryzowanym przez Ashley Medhurst? Zwróć identyfikatory produktów.",
        "question": "For which goods was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the goods ids.",
        "question_pl": "W przypadku których towarów wystąpił problem zgłoszony przez Christopa Berge'a, a zamknięcie zostało zatwierdzone przez Ashleya Medhursta? Zwróć identyfikatory towarów.",
        "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"",
        "query_pl": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Find the top 3 products which have the largest number of problems?",
        "question_original_pl": "Znajdź 3 najlepsze produkty, które mają najwięcej problemów?",
        "question": "Find the top 3 goods which have the largest number of problems?",
        "question_pl": "Znajdź 3 najlepsze towary, z którymi jest najwięcej problemów?",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What are the three products that have the most problems?s",
        "question_original_pl": "Jakie są trzy produkty, z którymi jest najwięcej problemów?",
        "question": "What are the three goods that have the most problems?s",
        "question_pl": "Jakie są trzy towary, z którymi jest najwięcej problemów?",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?",
        "question_original_pl": "Wymień identyfikatory problemów z produktem \"voluptatem\", które zostały zgłoszone po 1995 roku?",
        "question": "List the ids of the problems from the goods \"voluptatem\" that are reported after 1995?",
        "question_pl": "Wymień identyfikatory problemów z towarem \"voluptatem\", które zostały zgłoszone po 1995 roku?",
        "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"",
        "query_pl": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?",
        "question_original_pl": "Jakie są identyfikatory problemów związanych z produktem \"voluptatem\" i zgłoszonych po 1995 roku?",
        "question": "What are the ids of the problems that are from the goods \"voluptatem\" and are reported after 1995?",
        "question_pl": "Jakie są identyfikatory problemów, które pochodzą z towarów \"voluptatem\" i zostały zgłoszone po 1995 roku?",
        "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"",
        "query_pl": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?",
        "question_original_pl": "Znajdź imię i nazwisko pracownika, który zgłosił problemy z produktem \"rem\", ale nie \"aut\"?",
        "question": "Find the forename and surname of the employee members who reported problems from the goods \"rem\" but not \"aut\"?",
        "question_pl": "Znajdź imiona i nazwiska pracowników, którzy zgłosili problemy z towarami \"rem\", ale nie \"aut\"?",
        "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
        "query_pl": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.",
        "question_original_pl": "Którzy pracownicy zgłaszali problemy z produktem \"rem\", ale nie \"aut\"? Podaj ich imiona i nazwiska.",
        "question": "Which employee members who reported problems from the goods \"rem\" but not \"aut\"? Give me their full names.",
        "question_pl": "Którzy pracownicy zgłaszali problemy z towarami \"rem\", ale nie \"aut\"? Podaj ich pełne imiona i nazwiska.",
        "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
        "query_pl": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?",
        "question_original_pl": "Znajdź produkty, z którymi problemy zgłosili zarówno Lacey Bosco, jak i Kenton Champlin?",
        "question": "Find the goods which have problems reported by both Lacey Bosco and Kenton Champlin?",
        "question_pl": "Znajdź towary, z którymi problemy zgłosili zarówno Lacey Bosco, jak i Kenton Champlin?",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"",
        "query_pl": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
    },
    {
        "db_id": "tracking_software_problems",
        "question_original": "Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?",
        "question_original_pl": "Które produkty mają problemy zgłoszone zarówno przez pracownika o nazwisku Lacey Bosco, jak i pracownika o nazwisku Kenton Champlin?",
        "question": "Which goods have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?",
        "question_pl": "Które towary mają problemy zgłoszone zarówno przez pracownika o nazwisku Lacey Bosco, jak i pracownika o nazwisku Kenton Champlin?",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"",
        "query_pl": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
    },
    {
        "db_id": "shop_membership",
        "question_original": "Show name, address road, and city for all branches sorted by open year.",
        "question_original_pl": "Pokaż nazwę, adres, drogę i miasto dla wszystkich oddziałów posortowanych według roku otwarcia.",
        "question": "Show name, location road, and city for all branches sorted by year of opening.",
        "question_pl": "Pokaż nazwę, lokalizację, drogę i miasto dla wszystkich oddziałów posortowanych według roku otwarcia.",
        "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year",
        "query_pl": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What are the names, address roads, and cities of the branches ordered by opening year?",
        "question_original_pl": "Jakie są nazwy, adresy i miasta oddziałów uporządkowane według roku otwarcia?",
        "question": "What are the names, location roads, and cities of the branches ordered by opening year?",
        "question_pl": "Jakie są nazwy, drogi lokalizacyjne i miasta oddziałów uporządkowane według roku otwarcia?",
        "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year",
        "query_pl": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
    },
    {
        "db_id": "shop_membership",
        "question_original": "How many different levels do members have?",
        "question_original_pl": "Ile różnych poziomów mają członkowie?",
        "question": "How many different ranks do members have?",
        "question_pl": "Ile różnych rang mają członkowie?",
        "query": "SELECT count(DISTINCT LEVEL) FROM member",
        "query_pl": "SELECT count(DISTINCT LEVEL) FROM member"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What are the different membership levels?",
        "question_original_pl": "Jakie są różne poziomy członkostwa?",
        "question": "What are the different membership ranks?",
        "question_pl": "Jakie są różne stopnie członkostwa?",
        "query": "SELECT count(DISTINCT LEVEL) FROM member",
        "query_pl": "SELECT count(DISTINCT LEVEL) FROM member"
    },
    {
        "db_id": "shop_membership",
        "question_original": "Show card number, name, and hometown for all members in a descending order of level.",
        "question_original_pl": "Pokaż numer karty, imię i nazwisko oraz miejscowość dla wszystkich członków w kolejności malejącego poziomu.",
        "question": "Show card number, name, and birthplace for all members in a descending order of level.",
        "question_pl": "Pokaż numer karty, imię i nazwisko oraz miejsce urodzenia wszystkich członków w kolejności malejącego poziomu.",
        "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC",
        "query_pl": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What are the card numbers, names, and hometowns of every member ordered by descending level?",
        "question_original_pl": "Jakie są numery kart, imiona i nazwiska oraz miasta rodzinne każdego członka uporządkowane według malejącego poziomu?",
        "question": "What are the card numbers, names, and birthplace of every member ordered by descending level?",
        "question_pl": "Jakie są numery kart, imiona i nazwiska oraz miejsce urodzenia każdego członka uporządkowane według malejącego poziomu?",
        "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC",
        "query_pl": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
    },
    {
        "db_id": "shop_membership",
        "question_original": "Show the membership level with most number of members.",
        "question_original_pl": "Pokaż poziom członkostwa z największą liczbą członków.",
        "question": "Show the membership rank with most number of members.",
        "question_pl": "Pokaż rangę członkostwa z największą liczbą członków.",
        "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What is the membership level with the most people?",
        "question_original_pl": "Jaki jest poziom członkostwa z największą liczbą osób?",
        "question": "What is the membership rank with the most people?",
        "question_pl": "Jaka jest ranga członkostwa z największą liczbą osób?",
        "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "shop_membership",
        "question_original": "Show the member name and hometown who registered a branch in 2016.",
        "question_original_pl": "Pokaż imię i nazwisko oraz miejscowość członka, który zarejestrował oddział w 2016 roku.",
        "question": "Show the member name and birthplace who registered a branch in 2016.",
        "question_pl": "Pokaż imię i nazwisko oraz miejsce urodzenia członka, który zarejestrował oddział w 2016 roku.",
        "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016",
        "query_pl": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What are the member names and hometowns of those who registered at a branch in 2016?",
        "question_original_pl": "Jakie są imiona i nazwiska oraz miejsca zamieszkania osób, które zarejestrowały się w oddziale w 2016 roku?",
        "question": "What are the member names and birthplaces of those who registered at a branch in 2016?",
        "question_pl": "Jakie są nazwiska i miejsca urodzenia członków, którzy zarejestrowali się w oddziale w 2016 roku?",
        "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016",
        "query_pl": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What is the sum of total pounds of purchase in year 2018 for all branches in London?",
        "question_original_pl": "Jaka jest suma całkowitych zakupów w funtach w 2018 roku dla wszystkich oddziałów w Londynie?",
        "question": "What is the total number of pounds purchased in year 2018 for all branches in London? ",
        "question_pl": "Jaka jest łączna liczba funtów zakupionych w 2018 roku przez wszystkie oddziały w Londynie?",
        "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018",
        "query_pl": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'Londyn' AND T1.year  =  2018"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What is the total number of purchases for members with level 6?",
        "question_original_pl": "Jaka jest łączna liczba zakupów dokonanych przez członków z poziomem 6?",
        "question": "What is the quantity purchased for members with level 6?",
        "question_pl": "Jaka jest ilość zakupiona dla członków z poziomem 6?",
        "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6",
        "query_pl": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
    },
    {
        "db_id": "shop_membership",
        "question_original": "What are the total purchases for members rated at level 6?",
        "question_original_pl": "Jakie są łączne zakupy członków ocenionych na poziomie 6?",
        "question": "What are the quantity purchased for members rated at level 6?",
        "question_pl": "Jaka jest ilość zakupiona dla członków ocenionych na poziomie 6?",
        "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6",
        "query_pl": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
    },
    {
        "db_id": "shop_membership",
        "question_original": "list the card number of all members whose hometown address includes word \"Kentucky\".",
        "question_original_pl": "podaj numer karty wszystkich członków, których adres rodzinny zawiera słowo \"Kentucky\".",
        "question": "list the card number of all members whose birthplace location includes word \"Kentucky\".",
        "question_pl": "Wymień numery kart wszystkich członków, których miejsce urodzenia zawiera słowo \"Kentucky\".",
        "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
        "query_pl": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the distinct number of president votes.",
        "question_original_pl": "Znajdź odrębną liczbę głosów prezydenta.",
        "question": "Find the different number of president votes.",
        "question_pl": "Znajdź różną liczbę głosów oddanych na prezydenta.",
        "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD",
        "query_pl": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the last names of students studying major 50?",
        "question_original_pl": "Jak nazywają się studenci na kierunku 50?",
        "question": "What are the family names of students studying major 50?",
        "question_pl": "Jakie są nazwiska studentów studiujących na kierunku 50?",
        "query": "SELECT LName FROM STUDENT WHERE Major  =  50",
        "query_pl": "SELECT LName FROM STUDENT WHERE Major  =  50"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the majors of male (sex is M) students?",
        "question_original_pl": "Jakie są kierunki studiów studentów płci męskiej (płeć to M)?",
        "question": "What are the discipline of male (sex is M) students?",
        "question_pl": "Jaka jest dyscyplina uczniów płci męskiej (płeć to M)?",
        "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"",
        "query_pl": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""
    },
    {
        "db_id": "voter_2",
        "question_original": "List the major of each male student.",
        "question_original_pl": "Wymień kierunek studiów każdego studenta płci męskiej.",
        "question": "List the discipline of each male student.",
        "question_pl": "Wymień dyscyplinę każdego ucznia płci męskiej.",
        "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"",
        "query_pl": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct secretary votes in the fall election cycle?",
        "question_original_pl": "Czym wyróżniają się głosowania sekretarzy w jesiennym cyklu wyborczym?",
        "question": "What are the different secretary votes in the fall election cycle?",
        "question_pl": "Czym różnią się głosowania sekretarzy w jesiennym cyklu wyborczym?",
        "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"",
        "query_pl": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Upadek\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Return all the distinct secretary votes made in the fall election cycle.",
        "question_original_pl": "Zwróć wszystkie głosy sekretarza oddane w jesiennym cyklu wyborczym.",
        "question": "Return all the different secretary votes made in the fall election cycle.",
        "question_pl": "Zwróć wszystkie głosy różnych sekretarzy oddane w jesiennym cyklu wyborczym.",
        "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"",
        "query_pl": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Upadek\""
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct president votes on 08/30/2015?",
        "question_original_pl": "Jakie są wyniki głosowania na prezydenta w dniu 30.08.2015?",
        "question": "What are the different president votes on 08/30/2015?",
        "question_pl": "Jakie są różne głosowania prezydenta w dniu 30.08.2015 r.?",
        "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"",
        "query_pl": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Show all the distinct president votes made on 08/30/2015.",
        "question_original_pl": "Pokaż wszystkie głosy oddane na prezydenta w dniu 30.08.2015.",
        "question": "Show all the different president votes made on 08/30/2015.",
        "question_pl": "Pokaż wszystkie głosy oddane na różnych prezydentów w dniu 30.08.2015.",
        "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"",
        "query_pl": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Report the distinct registration date and the election cycle.",
        "question_original_pl": "Podaj odrębną datę rejestracji i cykl wyborczy.",
        "question": "Report the different registration day and the election cycle.",
        "question_pl": "Zgłoś inny dzień rejestracji i cykl wyborczy.",
        "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD",
        "query_pl": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct registration dates and the election cycles?",
        "question_original_pl": "Jakie są odrębne daty rejestracji i cykle wyborcze?",
        "question": "What are the different registration day and the election cycles?",
        "question_pl": "Czym różnią się dni rejestracji i cykle wyborcze?",
        "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD",
        "query_pl": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
    },
    {
        "db_id": "voter_2",
        "question_original": "Report the distinct president vote and the vice president vote.",
        "question_original_pl": "Zgłoś głosowanie na przewodniczącego i wiceprzewodniczącego.",
        "question": "Report the different president vote and the vice president vote.",
        "question_pl": "Zgłoś różne głosy prezydenta i wiceprezydenta.",
        "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD",
        "query_pl": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
    },
    {
        "db_id": "voter_2",
        "question_original": "List all the distinct president votes and the vice president votes.",
        "question_original_pl": "Wymień wszystkie głosy poszczególnych prezydentów i wiceprezydentów.",
        "question": "List all the different president votes and the vice president votes.",
        "question_pl": "Wymień wszystkie głosy oddane na prezydenta i wiceprezydenta.",
        "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD",
        "query_pl": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct first names of the students who have class president votes?",
        "question_original_pl": "Jakie są imiona uczniów, którzy otrzymali głosy przewodniczących klas?",
        "question": "What are the different forenames of the students who have class president votes?",
        "question_pl": "Jakie są różne imiona uczniów, którzy mają głosy przewodniczących klas?",
        "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE",
        "query_pl": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct ages of students who have secretary votes in the fall election cycle?",
        "question_original_pl": "W jakim wieku są uczniowie, którzy głosowali tajnie w jesiennym cyklu wyborczym?",
        "question": "What are the different ages of students who have secretary votes in the fall election cycle?",
        "question_pl": "W jakim wieku są uczniowie, którzy oddali tajne głosy w jesiennym cyklu wyborczym?",
        "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"",
        "query_pl": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Upadek\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.",
        "question_original_pl": "Znajdź wyraźnego doradcę studentów, którzy głosowali na skarbnika w wiosennym cyklu wyborczym.",
        "question": "Find the different Adviser of students who have treasurer votes in the spring election cycle.",
        "question_pl": "Znajdź różnych doradców uczniów, którzy głosowali na skarbnika w wiosennym cyklu wyborczym.",
        "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"",
        "query_pl": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Wiosna\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the distinct majors of students who have treasurer votes.",
        "question_original_pl": "Znajdź różne kierunki studentów, którzy mają głosy skarbnika.",
        "question": "Find the different discipline of students who have treasurer votes.",
        "question_pl": "Znajdź różne dyscypliny uczniów, którzy mają głosy skarbnika.",
        "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote",
        "query_pl": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct majors that students with treasurer votes are studying?",
        "question_original_pl": "Jakie kierunki studiują studenci z głosami skarbników?",
        "question": "What are the different discipline that students with treasurer votes are studying?",
        "question_pl": "Jakich dyscyplin uczą się studenci z głosami skarbnika?",
        "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote",
        "query_pl": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the first and last names of all the female (sex is F) students who have president votes.",
        "question_original_pl": "Znajdź imiona i nazwiska wszystkich studentek (płeć to F), które głosowały na przewodniczącego.",
        "question": "Find the full names of all the female (sex is F) students who have president votes.",
        "question_pl": "Znajdź pełne imiona i nazwiska wszystkich studentek (płeć to F), które głosowały na przewodniczącego.",
        "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"",
        "query_pl": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the first and last name of all the students of age 18 who have vice president votes.",
        "question_original_pl": "Znajdź imię i nazwisko wszystkich uczniów w wieku 18 lat, którzy głosowali na wiceprezydenta.",
        "question": "Find the forename and surname of all the students of age 18 who have vice president votes.",
        "question_pl": "Znajdź imiona i nazwiska wszystkich uczniów w wieku 18 lat, którzy głosowali na wiceprezydenta.",
        "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18",
        "query_pl": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.",
        "question_original_pl": "Znajdź różne imiona wszystkich uczniów, którzy głosowali na wiceprezydenta i których kod miasta nie jest PIT.",
        "question": "Find the different forenames of all the students who have vice president votes and whose city code is not PIT.",
        "question_pl": "Znajdź różne imiona wszystkich uczniów, którzy mają głosy wiceprezydenta i których kod miasta nie jest PIT.",
        "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\"",
        "query_pl": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192.",
        "question_original_pl": "Znajdź różne nazwiska wszystkich studentów, którzy mają głosy prezydenta i których doradca nie jest 2192.",
        "question": "Find the different family names of all the students who have president votes and whose advisor is not 2192.",
        "question_pl": "Znajdź różne nazwiska wszystkich studentów, którzy mają głosy prezydenta i których doradca nie ma numeru 2192.",
        "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"",
        "query_pl": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the distinct last names of the students who have president votes and have 8741 as the advisor?",
        "question_original_pl": "Jakie są różne nazwiska studentów, którzy głosowali na przewodniczącego i mają 8741 jako doradcę?",
        "question": "What are the different surnames of the students who have president votes and have 8741 as the advisor?",
        "question_pl": "Jakie są różne nazwiska studentów, którzy mają głosy prezydenta i mają 8741 jako doradcę?",
        "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"",
        "query_pl": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
    },
    {
        "db_id": "voter_2",
        "question_original": "Report all majors that have less than 3 students.",
        "question_original_pl": "Zgłoś wszystkie kierunki, na których studiuje mniej niż 3 studentów.",
        "question": "Report all discipline that have less than 3 students.",
        "question_pl": "Zgłoś wszystkie dyscypliny, w których uczestniczy mniej niż 3 uczniów.",
        "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3",
        "query_pl": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
    },
    {
        "db_id": "voter_2",
        "question_original": "What are the majors only less than three students are studying?",
        "question_original_pl": "Jakie kierunki studiuje mniej niż trzech studentów?",
        "question": "What are the discipline only less than three students are studying?",
        "question_pl": "Jaką dyscyplinę studiuje mniej niż trzech studentów?",
        "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3",
        "query_pl": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
    },
    {
        "db_id": "voter_2",
        "question_original": "Which major has the most students?",
        "question_original_pl": "Który kierunek ma najwięcej studentów?",
        "question": "Which discipline has the most students?",
        "question_pl": "Która dyscyplina ma najwięcej studentów?",
        "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the major that is studied by the largest number of students.",
        "question_original_pl": "Znajdź kierunek, który studiuje największa liczba studentów.",
        "question": "Find the discipline that is studied by the largest number of students.",
        "question_pl": "Znajdź dyscyplinę, którą studiuje największa liczba studentów.",
        "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_2",
        "question_original": "What is the most common major among female (sex is F) students?",
        "question_original_pl": "Jaki jest najczęstszy kierunek studiów wśród studentek (płeć to F)?",
        "question": "What is the most common discipline among female (sex is F) students?",
        "question_pl": "Jaka jest najczęstsza dyscyplina wśród studentek (płeć to F)?",
        "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_2",
        "question_original": "Find the major that is studied by the most female students.",
        "question_original_pl": "Znajdź kierunek, który studiuje najwięcej kobiet.",
        "question": "Find the discipline that is studied by the most female students.",
        "question_pl": "Znajdź dyscyplinę, którą studiuje najwięcej kobiet.",
        "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "voter_2",
        "question_original": "Report the distinct advisors who have more than 2 students.",
        "question_original_pl": "Zgłoś doradców, którzy mają więcej niż 2 studentów.",
        "question": "Report the different advisers who have more than 2 students.",
        "question_pl": "Zgłoś różnych doradców, którzy mają więcej niż 2 studentów.",
        "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2",
        "query_pl": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products are there?",
        "question_original_pl": "Ile jest produktów?",
        "question": "How many goods are there?",
        "question_pl": "Ile jest towarów?",
        "query": "SELECT count(*) FROM products",
        "query_pl": "SELECT count(*) FROM products"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of products.",
        "question_original_pl": "Policz liczbę produktów.",
        "question": "Count the number of goods.",
        "question_pl": "Policz liczbę towarów.",
        "query": "SELECT count(*) FROM products",
        "query_pl": "SELECT count(*) FROM products"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many colors are there?",
        "question_original_pl": "Ile jest kolorów?",
        "question": "How many colours are there?",
        "question_pl": "Ile jest dostępnych kolorów?",
        "query": "SELECT count(*) FROM ref_colors",
        "query_pl": "SELECT count(*) FROM ref_colors"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many characteristics are there?",
        "question_original_pl": "Ile jest tych cech?",
        "question": "How many features are there?",
        "question_pl": "Ile jest dostępnych funkcji?",
        "query": "SELECT count(*) FROM CHARACTERISTICS",
        "query_pl": "SELECT count(*) FROM CHARACTERISTICS"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of characteristics.",
        "question_original_pl": "Policz liczbę cech.",
        "question": "Count the number of features.",
        "question_pl": "Policz liczbę funkcji.",
        "query": "SELECT count(*) FROM CHARACTERISTICS",
        "query_pl": "SELECT count(*) FROM CHARACTERISTICS"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names and buying prices of all the products?",
        "question_original_pl": "Jakie są nazwy i ceny zakupu wszystkich produktów?",
        "question": "What are the names and buying prices of all the goods?",
        "question_pl": "Jakie są nazwy i ceny zakupu wszystkich towarów?",
        "query": "SELECT product_name ,  typical_buying_price FROM products",
        "query_pl": "SELECT product_name ,  typical_buying_price FROM products"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the names and typical buying prices for all products.",
        "question_original_pl": "Zwróć nazwy i typowe ceny zakupu dla wszystkich produktów.",
        "question": "Return the names and typical buying prices for all goods.",
        "question_pl": "Zwróć nazwy i typowe ceny zakupu wszystkich towarów.",
        "query": "SELECT product_name ,  typical_buying_price FROM products",
        "query_pl": "SELECT product_name ,  typical_buying_price FROM products"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List the description of all the colors.",
        "question_original_pl": "Wymień opisy wszystkich kolorów.",
        "question": "List the describing content of all the colours.",
        "question_pl": "Wymień zawartość opisową wszystkich kolorów.",
        "query": "SELECT color_description FROM ref_colors",
        "query_pl": "SELECT color_description FROM ref_colors"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the names of all the product characteristics.",
        "question_original_pl": "Znajdź nazwy wszystkich cech produktu.",
        "question": "Find the names of all the goods features.",
        "question_pl": "Znajdź nazwy wszystkich cech towarów.",
        "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS",
        "query_pl": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the different names of the product characteristics?",
        "question_original_pl": "Jakie są różne nazwy cech produktu?",
        "question": "What are the different names of the goods features?",
        "question_pl": "Jakie są różne nazwy cech towarów?",
        "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS",
        "query_pl": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names of products with category \"Spices\"?",
        "question_original_pl": "Jak nazywają się produkty z kategorią \"Przyprawy\"?",
        "question": "What are the names of goods with category \"Spices\"?",
        "question_pl": "Jakie są nazwy towarów z kategorią \"Przyprawy\"?",
        "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
        "query_pl": "SELECT product_name FROM products WHERE product_category_code  =  \"Przyprawy\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the names of products in the category 'Spices'.",
        "question_original_pl": "Zwróć nazwy produktów w kategorii \"Przyprawy\".",
        "question": "Return the names of goods in the category 'Spices'.",
        "question_pl": "Zwróć nazwy towarów w kategorii \"Przyprawy\".",
        "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
        "query_pl": "SELECT product_name FROM products WHERE product_category_code  =  \"Przyprawy\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List the names, color descriptions and product descriptions of products with category \"Herbs\".",
        "question_original_pl": "Wymień nazwy, opisy kolorów i opisy produktów z kategorii \"Zioła\".",
        "question": "List the names, colour descriptions and goods descriptions of goods with category \"Herbs\".",
        "question_pl": "Wymień nazwy, opisy kolorów i opisy towarów z kategorią \"Zioła\".",
        "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?",
        "question_original_pl": "Jakie są nazwy, opisy kolorów i opisy produktów w kategorii \"Zioła\"?",
        "question": "What are the names, colour descriptions, and goods descriptions for goods in the 'Herbs' category?",
        "question_pl": "Jakie są nazwy, opisy kolorów i opisy towarów w kategorii \"Zioła\"?",
        "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products are there under the category \"Seeds\"?",
        "question_original_pl": "Ile produktów znajduje się w kategorii \"Nasiona\"?",
        "question": "How many goods are there under the category \"Seeds\"?",
        "question_pl": "Ile towarów znajduje się w kategorii \"Nasiona\"?",
        "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
        "query_pl": "SELECT count(*) FROM products WHERE product_category_code  =  \"Nasiona\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of products in the category 'Seeds'.",
        "question_original_pl": "Policz liczbę produktów w kategorii \"Nasiona\".",
        "question": "Count the number of goods in the category 'Seeds'.",
        "question_pl": "Policz liczbę towarów w kategorii \"Nasiona\".",
        "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
        "query_pl": "SELECT count(*) FROM products WHERE product_category_code  =  \"Nasiona\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the number of products with category \"Spices\" and typically sold above 1000.",
        "question_original_pl": "Znajdź liczbę produktów z kategorią \"Przyprawy\" i zazwyczaj sprzedawanych powyżej 1000.",
        "question": "Find the number of goods with category \"Spices\" and typically sold above 1000.",
        "question_pl": "Znajdź liczbę towarów z kategorią \"Przyprawy\" i zazwyczaj sprzedawanych powyżej 1000.",
        "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
        "query_pl": "SELECT count(*) FROM products WHERE product_category_code  =  \"Przyprawy\" AND typical_buying_price  >  1000"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products are in the 'Spices' category and have a typical price of over 1000?",
        "question_original_pl": "Ile produktów znajduje się w kategorii \"Przyprawy\" i ma typową cenę powyżej 1000?",
        "question": "How many goods are in the 'Spices' category and have a typical price of over 1000?",
        "question_pl": "Ile towarów znajduje się w kategorii \"Przyprawy\" i ma typową cenę powyżej 1000?",
        "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
        "query_pl": "SELECT count(*) FROM products WHERE product_category_code  =  \"Przyprawy\" AND typical_buying_price  >  1000"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the category and typical buying price  of the product with name \"cumin\"?",
        "question_original_pl": "Jaka jest kategoria i typowa cena zakupu produktu o nazwie \"kminek\"?",
        "question": "What is the type and typical buying price  of the goods with name \"cumin\"?",
        "question_pl": "Jaki jest rodzaj i typowa cena zakupu towarów o nazwie \"kminek\"?",
        "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"",
        "query_pl": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the category code and typical price of 'cumin'.",
        "question_original_pl": "Zwróć kod kategorii i typową cenę \"kminku\".",
        "question": "Return the type code and typical price of 'cumin'.",
        "question_pl": "Zwróć kod typu i typową cenę \"kminku\".",
        "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"",
        "query_pl": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Which category does the product named \"flax\" belong to?",
        "question_original_pl": "Do której kategorii należy produkt o nazwie \"len\"?",
        "question": "Which type does the goods named \"flax\" belong to?",
        "question_pl": "Do jakiego typu należy towar o nazwie \"len\"?",
        "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
        "query_pl": "SELECT product_category_code FROM products WHERE product_name  =  \"len\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the code of the category that the product with the name 'flax' belongs to?",
        "question_original_pl": "Jaki jest kod kategorii, do której należy produkt o nazwie \"len\"?",
        "question": "What is the code of the type that the goods with the name 'flax' belongs to?",
        "question_pl": "Jaki jest kod typu, do którego należy towar o nazwie \"len\"?",
        "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
        "query_pl": "SELECT product_category_code FROM products WHERE product_name  =  \"len\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the name of the product with the color description 'yellow'?",
        "question_original_pl": "Jak nazywa się produkt z opisem koloru \"żółty\"?",
        "question": "What is the name of the goods with the color description 'yellow'?",
        "question_pl": "Jak nazywa się towar z opisem koloru \"żółty\"?",
        "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'",
        "query_pl": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'żółty'"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the name of the products that have a color description 'yellow'.",
        "question_original_pl": "Podaj nazwy produktów, które mają opis koloru \"żółty\".",
        "question": "Give the name of the goods that have a color description 'yellow'.",
        "question_pl": "Podaj nazwę towaru, który ma kolor opisany jako \"żółty\".",
        "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'",
        "query_pl": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'żółty'"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the category descriptions of the products whose descriptions include letter 't'.",
        "question_original_pl": "Znajdź opisy kategorii produktów, których opisy zawierają literę \"t\".",
        "question": "Find the type descriptions of the goods whose descriptions include letter 't'.",
        "question_pl": "Znajdź opisy typów towarów, których opisy zawierają literę \"t\".",
        "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'",
        "query_pl": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?",
        "question_original_pl": "Jakie są opisy kategorii, w których znajdują się produkty z opisami zawierającymi literę t?",
        "question": "What are the descriptions of the type that goods with goods descriptions that contain the letter t are in?",
        "question_pl": "Jakie są opisy typu, w którym znajdują się towary z opisami towarów zawierającymi literę t?",
        "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'",
        "query_pl": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the color description of the product with name \"catnip\"?",
        "question_original_pl": "Jaki jest opis koloru produktu o nazwie \"kocimiętka\"?",
        "question": "What is the colour describing content of the goods with name \"catnip\"?",
        "question_pl": "Jaki kolor opisuje zawartość towaru o nazwie \"kocimiętka\"?",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"kocimiętka\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the color description for the product 'catnip'.",
        "question_original_pl": "Podaj opis koloru dla produktu \"kocimiętka\".",
        "question": "Give the colour describing content for the goods 'catnip'.",
        "question_pl": "Podaj kolor opisujący zawartość towaru \"kocimiętka\".",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"kocimiętka\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the color code and description of the product named \"chervil\"?",
        "question_original_pl": "Jaki jest kod koloru i opis produktu o nazwie \"trybula\"?",
        "question": "What is the colour code and describing content of the goods named \"chervil\"?",
        "question_pl": "Jaki jest kod koloru i opis zawartości towarów o nazwie \"trybula\"?",
        "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
        "query_pl": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"trybula\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the color code and description for the product with the name 'chervil'.",
        "question_original_pl": "Zwróć kod koloru i opis produktu o nazwie \"trybula\".",
        "question": "Return the colour code and describing content for the goods with the name 'chervil'.",
        "question_pl": "Zwróć kod koloru i opis zawartości dla towarów o nazwie \"trybula\".",
        "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
        "query_pl": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"trybula\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the id and color description of the products with at least 2 characteristics.",
        "question_original_pl": "Znajdź identyfikator i opis koloru produktów z co najmniej 2 cechami.",
        "question": "Find the id and colour describing content of the goods with at least 2 characteristics.",
        "question_pl": "Znajdź identyfikator i kolor opisujący zawartość towarów z co najmniej 2 cechami.",
        "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2",
        "query_pl": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the product ids and color descriptions for products with two or more characteristics?",
        "question_original_pl": "Jakie są identyfikatory produktów i opisy kolorów dla produktów o dwóch lub więcej cechach?",
        "question": "What are the goods ids and colour descriptions for goods with two or more characteristics?",
        "question_pl": "Jakie są identyfikatory towarów i opisy kolorów dla towarów o dwóch lub więcej cechach?",
        "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2",
        "query_pl": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List all the product names with the color description \"white\".",
        "question_original_pl": "Wymień wszystkie nazwy produktów z opisem koloru \"biały\".",
        "question": "List all the goods names with the colour description \"white\".",
        "question_pl": "Wymień wszystkie nazwy towarów z opisem koloru \"biały\".",
        "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"",
        "query_pl": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"biały\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names of products with 'white' as their color description?",
        "question_original_pl": "Jak nazywają się produkty, których opisem koloru jest \"biały\"?",
        "question": "What are the names of goods with 'white' as their colour description?",
        "question_pl": "Jak nazywają się towary, których opisem koloru jest \"biały\"?",
        "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"",
        "query_pl": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"biały\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?",
        "question_original_pl": "Jak nazywają się i jakie są typowe ceny kupna i sprzedaży produktów, których kolor określany jest jako \"żółty\"?",
        "question": "What are the name and typical buying and selling prices of the goods that have color described as \"yellow\"?",
        "question_pl": "Jak nazywają się i jakie są typowe ceny kupna i sprzedaży towarów, których kolor określany jest jako \"żółty\"?",
        "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"",
        "query_pl": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"żółty\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.",
        "question_original_pl": "Zwróć nazwy oraz typowe ceny kupna i sprzedaży produktów, których opisem koloru jest \"żółty\".",
        "question": "Return the names and typical buying and selling prices for goods that have 'yellow' as their color description.",
        "question_pl": "Zwróć nazwy oraz typowe ceny kupna i sprzedaży towarów, których opisem koloru jest \"żółty\".",
        "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"",
        "query_pl": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"żółty\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many characteristics does the product named \"sesame\" have?",
        "question_original_pl": "Ile cech ma produkt o nazwie \"sezam\"?",
        "question": "How many features does the goods named \"sesame\" have?",
        "question_pl": "Ile cech ma towar o nazwie \"sezam\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of characteristics the product 'sesame' has.",
        "question_original_pl": "Policz liczbę cech produktu \"sezam\".",
        "question": "Count the number of features the goods 'sesame' has.",
        "question_pl": "Policz, ile cech ma towar \"sezam\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many distinct characteristic names does the product \"cumin\" have?",
        "question_original_pl": "Ile różnych charakterystycznych nazw ma produkt \"kminek\"?",
        "question": "How many different feature names does the goods \"cumin\" have?",
        "question_pl": "Ile różnych nazw ma towar \"kminek\"?",
        "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of different characteristic names the product 'cumin' has.",
        "question_original_pl": "Policz liczbę różnych charakterystycznych nazw produktu \"kminek\".",
        "question": "Count the number of different feature names the goods 'cumin' has.",
        "question_pl": "Policz, ile różnych nazw funkcji ma towar \"kminek\".",
        "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are all the characteristic names of product \"sesame\"?",
        "question_original_pl": "Jakie są wszystkie charakterystyczne nazwy produktu \"sezam\"?",
        "question": "What are all the feature names of goods \"sesame\"?",
        "question_pl": "Jakie są wszystkie nazwy cech towarów \"sezam\"?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the characteristic names of the 'sesame' product.",
        "question_original_pl": "Zwróć nazwy charakterystyczne produktu \"sezam\".",
        "question": "Return the feature names of the 'sesame' goods.",
        "question_pl": "Zwróć nazwy funkcji towarów \"sezam\".",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List all the characteristic names and data types of product \"cumin\".",
        "question_original_pl": "Wymień wszystkie charakterystyczne nazwy i typy danych produktu \"kminek\".",
        "question": "List all the feature names and data types of goods \"cumin\".",
        "question_pl": "Wymień wszystkie nazwy cech i typy danych towarów \"kminek\".",
        "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
        "query_pl": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names and data types of the characteristics of the 'cumin' product?",
        "question_original_pl": "Jakie są nazwy i typy danych cech produktu \"kminek\"?",
        "question": "What are the names and data types of the features of the 'cumin' goods?",
        "question_pl": "Jakie są nazwy i typy danych cech towarów \"kminek\"?",
        "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
        "query_pl": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List all characteristics of product named \"sesame\" with type code \"Grade\".",
        "question_original_pl": "Wymień wszystkie cechy produktu o nazwie \"sezam\" z kodem typu \"Grade\".",
        "question": "List all features of goods named \"sesame\" with type code \"Grade\".",
        "question_pl": "Wymień wszystkie cechy towarów o nazwie \"sezam\" z kodem typu \"Grade\".",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\" AND t3.characteristic_type_code  =  \"Stopień\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?",
        "question_original_pl": "Jak nazywają się cechy produktu \"sezam\", które mają kod typu cechy \"Grade\"?",
        "question": "What are the names of the features of the goods 'sesame' that have the feature type code 'Grade'?",
        "question_pl": "Jakie są nazwy cech towarów \"sezam\", które mają kod typu cechy \"Grade\"?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sezam\" AND t3.characteristic_type_code  =  \"Stopień\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many characteristics does the product named \"laurel\" have?",
        "question_original_pl": "Ile cech ma produkt o nazwie \"laur\"?",
        "question": "How many features does the goods named \"laurel\" have?",
        "question_pl": "Ile cech ma towar o nazwie \"laur\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laur\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of characteristics of the product named 'laurel'.",
        "question_original_pl": "Policz liczbę cech produktu o nazwie \"laur\".",
        "question": "Count the number of features of the goods named 'laurel'.",
        "question_pl": "Policz liczbę cech towarów o nazwie \"laur\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laur\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the number of characteristics that the product \"flax\" has.",
        "question_original_pl": "Znajdź liczbę cech, które posiada produkt \"len\".",
        "question": "Find the number of features that the goods \"flax\" has.",
        "question_pl": "Znajdź liczbę cech, które posiada towar \"len\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"len\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of characteristics of the 'flax' product.",
        "question_original_pl": "Policz liczbę cech produktu \"len\".",
        "question": "Count the number of features of the 'flax' goods.",
        "question_pl": "Policz liczbę cech towarów \"lnianych\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"len\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\".",
        "question_original_pl": "Znajdź nazwy produktów, które mają opis koloru \"czerwony\" i mają charakterystyczną nazwę \"szybki\".",
        "question": "Find the name of the goods that have the colour description \"red\" and have the characteristic name \"fast\".",
        "question_pl": "Znajdź nazwy towarów, które mają opis koloru \"czerwony\" i mają charakterystyczną nazwę \"szybki\".",
        "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"",
        "query_pl": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"czerwony\" AND t3.characteristic_name  =  \"szybki\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names of the products that have a color description of 'red' and the 'fast' characteristic?",
        "question_original_pl": "Jak nazywają się produkty, które mają kolor \"czerwony\" i cechę \"szybki\"?",
        "question": "What are the names of the goods that have a colour description of 'red' and the 'fast' characteristic?",
        "question_pl": "Jak nazywają się towary, które mają kolor \"czerwony\" i cechę \"szybki\"?",
        "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"",
        "query_pl": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"czerwony\" AND t3.characteristic_name  =  \"szybki\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products have the characteristic named \"hot\"?",
        "question_original_pl": "Ile produktów ma cechę \"gorący\"?",
        "question": "How many goods have the feature named \"hot\"?",
        "question_pl": "Ile towarów ma cechę \"gorący\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"gorący\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of products with the 'hot' charactersitic.",
        "question_original_pl": "Policz liczbę produktów z \"gorącymi\" znakami.",
        "question": "Count the number of goods with the 'hot' feature.",
        "question_pl": "Policz liczbę towarów z funkcją \"gorący\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"gorący\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "List the all the distinct names of the products with the characteristic name 'warm'.",
        "question_original_pl": "Wymień wszystkie odrębne nazwy produktów z charakterystyczną nazwą \"ciepły\".",
        "question": "List the all the different names of the goods with the characteristic name 'warm'.",
        "question_pl": "Wymień wszystkie różne nazwy towarów z charakterystyczną nazwą \"ciepły\".",
        "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"",
        "query_pl": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"ciepły\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the different product names for products that have the 'warm' characteristic:?",
        "question_original_pl": "Jakie są różne nazwy produktów, które mają właściwości \"ciepłe\"?",
        "question": "What are the different goods names for goods that have the 'warm' characteristic:?",
        "question_pl": "Jakie są różne nazwy towarów, które mają cechę \"ciepły\"?",
        "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"",
        "query_pl": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"ciepły\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\".",
        "question_original_pl": "Znajdź liczbę produktów, które mają kolor opisany jako \"czerwony\" i cechę o nazwie \"powolny\".",
        "question": "Find the number of the goods that have their color described as \"red\" and have a characteristic named \"slow\".",
        "question_pl": "Znajdź liczbę towarów, które mają kolor opisany jako \"czerwony\" i cechę nazwaną \"powolny\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"czerwony\" AND t3.characteristic_name  =  \"powolny\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products have the color description 'red' and the characteristic name 'slow'?",
        "question_original_pl": "Ile produktów ma opis koloru \"czerwony\" i charakterystyczną nazwę \"powolny\"?",
        "question": "How many goods have the colour description 'red' and the characteristic name 'slow'?",
        "question_pl": "Ile towarów ma opis koloru \"czerwony\" i charakterystyczną nazwę \"powolny\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"czerwony\" AND t3.characteristic_name  =  \"powolny\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the products that have the color description \"white\" or have the characteristic name \"hot\".",
        "question_original_pl": "Policz produkty, które mają opis koloru \"biały\" lub mają charakterystyczną nazwę \"gorący\".",
        "question": "Count the goods that have the colour description \"white\" or have the characteristic name \"hot\".",
        "question_pl": "Policz towary, które mają opis koloru \"biały\" lub mają charakterystyczną nazwę \"gorący\".",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"biały\" OR t3.characteristic_name  =  \"gorący\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many products have their color described as 'white' or have a characteristic with the name 'hot'?",
        "question_original_pl": "Ile produktów ma kolor opisany jako \"biały\" lub posiada cechę o nazwie \"gorący\"?",
        "question": "How many goods have their colour described as 'white' or have a characteristic with the name 'hot'?",
        "question_pl": "Ile towarów ma kolor opisany jako \"biały\" lub posiada cechę o nazwie \"gorący\"?",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"",
        "query_pl": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"biały\" OR t3.characteristic_name  =  \"gorący\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the unit of measuerment of the product category code \"Herbs\"?",
        "question_original_pl": "Jaka jest jednostka miary kodu kategorii produktu \"Zioła\"?",
        "question": "What is the unit of measurement of the goods type code \"Herbs\"?",
        "question_pl": "Jaka jest jednostka miary kodu rodzaju towaru \"Zioła\"?",
        "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the unit of measure for 'Herb' products.",
        "question_original_pl": "Zwróć jednostkę miary dla produktów \"Zioło\".",
        "question": "Return the unit of measurement for 'Herb' goods.",
        "question_pl": "Zwróć jednostkę miary dla towarów \"Zioło\".",
        "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the product category description of the product category with code \"Spices\".",
        "question_original_pl": "Znajdź opis kategorii produktów z kodem \"Przyprawy\".",
        "question": "Find the goods category describing content of the goods category with code \"Spices\".",
        "question_pl": "Znajdź kategorię towarów opisującą zawartość kategorii towarów z kodem \"Przyprawy\".",
        "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
        "query_pl": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Przyprawy\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the description of the product category with the code 'Spices'?",
        "question_original_pl": "Jaki jest opis kategorii produktów z kodem \"Przyprawy\"?",
        "question": "What is the describing content of the goods category with the code 'Spices'?",
        "question_pl": "Jaka jest zawartość opisująca kategorię towarów o kodzie \"Przyprawy\"?",
        "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
        "query_pl": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Przyprawy\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the product category description and unit of measurement of category \"Herbs\"?",
        "question_original_pl": "Jaki jest opis kategorii produktu i jednostka miary kategorii \"Zioła\"?",
        "question": "What is the goods category describing content and unit of measurement of category \"Herbs\"?",
        "question_pl": "Jaka jest kategoria towarów opisująca zawartość i jednostkę miary kategorii \"Zioła\"?",
        "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the description and unit of measurement for products in the 'Herbs' category.",
        "question_original_pl": "Zwróć opis i jednostkę miary dla produktów z kategorii \"Zioła\".",
        "question": "Return the describing content and unit of measurement for goods in the 'Herbs' category.",
        "question_pl": "Zwróć opis zawartości i jednostkę miary dla towarów w kategorii \"Zioła\".",
        "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
        "query_pl": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Zioła\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the unit of measurement of product named \"cumin\"?",
        "question_original_pl": "Jaka jest jednostka miary produktu o nazwie \"kminek\"?",
        "question": "What is the unit of measurement of goods named \"cumin\"?",
        "question_pl": "Jaka jest jednostka miary towarów o nazwie \"kminek\"?",
        "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"",
        "query_pl": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the unit of measure for the product with the name 'cumin'.",
        "question_original_pl": "Podaj jednostkę miary dla produktu o nazwie \"kminek\".",
        "question": "Give the unit of measurement for the goods with the name 'cumin'.",
        "question_pl": "Podaj jednostkę miary dla towarów o nazwie \"kminek\".",
        "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"",
        "query_pl": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"kminek\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the unit of measurement and product category code of product named \"chervil\".",
        "question_original_pl": "Znajdź jednostkę miary i kod kategorii produktu dla produktu o nazwie \"trybula\".",
        "question": "Find the unit of measurement and goods category code of goods named \"chervil\".",
        "question_pl": "Znajdź jednostkę miary i kod kategorii towarów dla towarów o nazwie \"trybula\".",
        "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"",
        "query_pl": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"trybula\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the unit of measure and category code for the 'chervil' product?",
        "question_original_pl": "Jaka jest jednostka miary i kod kategorii dla produktu \"trybula\"?",
        "question": "What are the unit of measurement and category code for the 'chervil' goods?",
        "question_pl": "Jaka jest jednostka miary i kod kategorii dla towarów \"trybula\"?",
        "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"",
        "query_pl": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"trybula\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".",
        "question_original_pl": "Znajdź nazwy produktów, które mają kolor \"biały\", ale nie mają jednostki miary \"Garść\".",
        "question": "Find the goods names that are colored 'white' but do not have unit of measurement \"Handful\".",
        "question_pl": "Znajdź nazwy towarów, które mają kolor \"biały\", ale nie mają jednostki miary \"Garść\".",
        "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"",
        "query_pl": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"biały\" AND t2.unit_of_measure != \"Garść\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?",
        "question_original_pl": "Jak nazywają się produkty, które nie mają \"białego\" koloru i nie są mierzone jednostką \"garść\"?",
        "question": "What are the names of goods that are not 'white' in color and are not measured by the unit 'Handful'?",
        "question_pl": "Jak nazywają się towary, które nie są koloru \"białego\" i nie są mierzone jednostką \"garść\"?",
        "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"",
        "query_pl": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"biały\" AND t2.unit_of_measure != \"Garść\""
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the description of the color for most products?",
        "question_original_pl": "Jaki jest opis koloru większości produktów?",
        "question": "What is the describing content of the color for most goods?",
        "question_pl": "Jaka jest opisowa zawartość koloru dla większości towarów?",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the color description that is most common across all products.",
        "question_original_pl": "Zwróć opis koloru, który jest najbardziej powszechny we wszystkich produktach.",
        "question": "Return the colour describing content that is most common across all goods.",
        "question_pl": "Zwróć kolor opisujący zawartość, która jest najbardziej powszechna we wszystkich towarach.",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the description of the color used by least products?",
        "question_original_pl": "Jaki jest opis koloru używanego przez najmniejsze produkty?",
        "question": "What is the describing content of the colour used by least goods?",
        "question_pl": "Jaka jest opisowa zawartość koloru używanego przez najmniej towarów?",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the color description that is least common across products.",
        "question_original_pl": "Podaj opis koloru, który jest najmniej powszechny w różnych produktach.",
        "question": "Give the colour describing content that is least common across goods.",
        "question_pl": "Podaj kolor opisujący zawartość, która jest najmniej powszechna wśród towarów.",
        "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What is the characteristic name used by most number of the products?",
        "question_original_pl": "Jaka jest charakterystyczna nazwa używana przez większość produktów?",
        "question": "What is the feature name used by most number of the goods?",
        "question_pl": "Jaka jest nazwa funkcji używana przez większość towarów?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Return the name of the characteristic that is most common across all products.",
        "question_original_pl": "Zwróć nazwę cechy, która jest najbardziej powszechna we wszystkich produktach.",
        "question": "Return the name of the feature that is most common across all goods.",
        "question_pl": "Zwróć nazwę cechy, która jest najbardziej powszechna we wszystkich towarach.",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are the names, details and data types of the characteristics which are never used by any product?",
        "question_original_pl": "Jakie są nazwy, szczegóły i typy danych cech, które nigdy nie są używane przez żaden produkt?",
        "question": "What are the names, information and data types of the characteristics which are never used by any goods?",
        "question_pl": "Jakie są nazwy, informacje i typy danych cech, które nigdy nie są używane przez żadne towary?",
        "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id",
        "query_pl": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the names, details, and data types of characteristics that are not found in any product.",
        "question_original_pl": "Podaj nazwy, szczegóły i typy danych cech, które nie występują w żadnym produkcie.",
        "question": "Give the names, information, and data types of characteristics that are not found in any goods.",
        "question_pl": "Podaj nazwy, informacje i typy danych cech, które nie występują w żadnym towarze.",
        "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id",
        "query_pl": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "What are characteristic names used at least twice across all products?",
        "question_original_pl": "Jakie są charakterystyczne nazwy używane co najmniej dwukrotnie we wszystkich produktach?",
        "question": "What are feature names used at least twice across all goods?",
        "question_pl": "Jakie nazwy funkcji są używane co najmniej dwa razy we wszystkich towarach?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Give the names of characteristics that are in two or more products?",
        "question_original_pl": "Podaj nazwy cech, które występują w dwóch lub więcej produktach?",
        "question": "Give the names of features that are in two or more goods?",
        "question_pl": "Podaj nazwy cech, które występują w dwóch lub więcej towarach?",
        "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2",
        "query_pl": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "How many colors are never used by any product?",
        "question_original_pl": "Ile kolorów nigdy nie jest używanych przez żaden produkt?",
        "question": "How many colours are never used by any goods?",
        "question_pl": "Ile kolorów nigdy nie jest używanych przez żadne towary?",
        "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
        "query_pl": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
    },
    {
        "db_id": "products_gen_characteristics",
        "question_original": "Count the number of colors that are not used in any products.",
        "question_original_pl": "Policz liczbę kolorów, które nie są używane w żadnych produktach.",
        "question": "Count the number of colours that are not used in any goods.",
        "question_pl": "Policz liczbę kolorów, które nie są używane w żadnych towarach.",
        "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
        "query_pl": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
    },
    {
        "db_id": "swimming",
        "question_original": "Find the name of the stadium that has the maximum capacity.",
        "question_original_pl": "Znajdź nazwę stadionu, który ma maksymalną pojemność.",
        "question": "Find the name of the stadium that has the maximum number of seats.",
        "question_pl": "Znajdź nazwę stadionu, który ma maksymalną liczbę miejsc.",
        "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
        "query_pl": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"
    },
    {
        "db_id": "swimming",
        "question_original": "How many stadiums does each country have?",
        "question_original_pl": "Ile stadionów ma każdy kraj?",
        "question": "How many stadiums does each nation have?",
        "question_pl": "Ile stadionów mają poszczególne kraje?",
        "query": "SELECT country ,  count(*) FROM stadium GROUP BY country",
        "query_pl": "SELECT country ,  count(*) FROM stadium GROUP BY country"
    },
    {
        "db_id": "swimming",
        "question_original": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".",
        "question_original_pl": "Znajdź wszystkie wyniki pływaków na 200 i 300 metrów z narodowością \"Australia\".",
        "question": "Find all 200m and 300m results of swimmers with nationality \"Australia\".",
        "question_pl": "Znajdź wszystkie wyniki 200m i 300m pływaków z narodowością \"Australia\".",
        "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'",
        "query_pl": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'"
    },
    {
        "db_id": "swimming",
        "question_original": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.",
        "question_original_pl": "Znajdź nazwisko i narodowość pływaka, który wygrał (tj. uzyskał wynik \"wygrana\") więcej niż 1 raz.",
        "question": "Find the name and nation of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.",
        "question_pl": "Znajdź nazwisko i kraj pływaka, który wygrał (tj. uzyskał wynik \"wygrana\") więcej niż 1 raz.",
        "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1",
        "query_pl": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Wygraj' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
    },
    {
        "db_id": "swimming",
        "question_original": "Find all details for each swimmer.",
        "question_original_pl": "Znajdź wszystkie szczegóły dotyczące każdego pływaka.",
        "question": "Find all information for each swimmer.",
        "question_pl": "Znajdź wszystkie informacje o każdym pływaku.",
        "query": "SELECT * FROM swimmer",
        "query_pl": "SELECT * FROM swimmer"
    },
    {
        "db_id": "railway",
        "question_original": "List the wheels and locations of the railways.",
        "question_original_pl": "Wymień koła i lokalizacje linii kolejowych.",
        "question": "List the wheels and positions of the railroads.",
        "question_pl": "Wymień koła i pozycje linii kolejowych.",
        "query": "SELECT Wheels ,  LOCATION FROM railway",
        "query_pl": "SELECT Wheels ,  LOCATION FROM railway"
    },
    {
        "db_id": "railway",
        "question_original": "What is the maximum level of managers in countries that are not \"Australia\"?",
        "question_original_pl": "Jaki jest maksymalny poziom menedżerów w krajach, które nie są \"Australią\"?",
        "question": "What is the maximum level of heads in countries that are not \"Australia\"?",
        "question_pl": "Jaki jest maksymalny poziom głów w krajach, które nie są \"Australią\"?",
        "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"",
        "query_pl": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\""
    },
    {
        "db_id": "railway",
        "question_original": "What is the average age for all managers?",
        "question_original_pl": "Jaki jest średni wiek wszystkich menedżerów?",
        "question": "What is the average age for all heads?",
        "question_pl": "Jaki jest średni wiek wszystkich głów?",
        "query": "SELECT avg(Age) FROM manager",
        "query_pl": "SELECT avg(Age) FROM manager"
    },
    {
        "db_id": "railway",
        "question_original": "What are the names of managers in ascending order of level?",
        "question_original_pl": "Jak nazywają się menedżerowie w kolejności rosnącej według poziomu?",
        "question": "What are the names of heads in ascending order of level?",
        "question_pl": "Jak nazywają się głowy w kolejności rosnącej według poziomu?",
        "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
        "query_pl": "SELECT Name FROM manager ORDER BY LEVEL ASC"
    },
    {
        "db_id": "railway",
        "question_original": "What is the name of the oldest manager?",
        "question_original_pl": "Jak nazywa się najstarszy menedżer?",
        "question": "What is the name of the oldest head?",
        "question_pl": "Jak nazywa się najstarsza głowa?",
        "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "railway",
        "question_original": "Show the names of trains and locations of railways they are in.",
        "question_original_pl": "Pokaż nazwy pociągów i lokalizacje linii kolejowych, na których się znajdują.",
        "question": "Show the names of trains and positions of railroads they are in.",
        "question_pl": "Pokaż nazwy pociągów i pozycje linii kolejowych, na których się znajdują.",
        "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID",
        "query_pl": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID"
    },
    {
        "db_id": "railway",
        "question_original": "Show id and location of railways that are associated with more than one train.",
        "question_original_pl": "Pokaż identyfikator i lokalizację linii kolejowych, które są powiązane z więcej niż jednym pociągiem.",
        "question": "Show id and position of railroads that are associated with more than one train.",
        "question_pl": "Pokaż identyfikator i położenie linii kolejowych, które są powiązane z więcej niż jednym pociągiem.",
        "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1",
        "query_pl": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "railway",
        "question_original": "Show different builders of railways, along with the corresponding number of railways using each builder.",
        "question_original_pl": "Pokaż różnych budowniczych linii kolejowych wraz z odpowiadającą im liczbą linii kolejowych wykorzystujących każdego budowniczego.",
        "question": "Show different builders of railroads, along with the corresponding number of railroads using each builder.",
        "question_pl": "Pokaż różnych budowniczych linii kolejowych wraz z odpowiadającą im liczbą linii kolejowych korzystających z każdego z nich.",
        "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder",
        "query_pl": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder"
    },
    {
        "db_id": "railway",
        "question_original": "Show different locations of railways along with the corresponding number of railways at each location.",
        "question_original_pl": "Pokaż różne lokalizacje linii kolejowych wraz z odpowiadającą im liczbą linii kolejowych w każdej lokalizacji.",
        "question": "Show different positions of railroads along with the corresponding number of railroads at each position.",
        "question_pl": "Pokaż różne pozycje linii kolejowych wraz z odpowiadającą im liczbą linii kolejowych w każdej pozycji.",
        "query": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION",
        "query_pl": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION"
    },
    {
        "db_id": "railway",
        "question_original": "Show the locations that have more than one railways.",
        "question_original_pl": "Pokaż lokalizacje, w których znajduje się więcej niż jedna linia kolejowa.",
        "question": "Show the positions that have more than one railroads.",
        "question_pl": "Pokaż pozycje, które mają więcej niż jedną linię kolejową.",
        "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1",
        "query_pl": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "railway",
        "question_original": "List the object number of railways that do not have any trains.",
        "question_original_pl": "Wymień liczbę linii kolejowych, na których nie ma pociągów.",
        "question": "List the object number of railroads that do not have any trains.",
        "question_pl": "Wymień liczbę linii kolejowych, na których nie ma żadnych pociągów.",
        "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)",
        "query_pl": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)"
    },
    {
        "db_id": "railway",
        "question_original": "Show the countries that have both managers of age above 50 and managers of age below 46.",
        "question_original_pl": "Wskaż kraje, w których są zarówno menedżerowie w wieku powyżej 50 lat, jak i menedżerowie w wieku poniżej 46 lat.",
        "question": "Show the nationalities that have both managers of age above 50 and managers of age below 46.",
        "question_pl": "Wskaż narodowości, które mają zarówno menedżerów w wieku powyżej 50 lat, jak i menedżerów w wieku poniżej 46 lat.",
        "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46",
        "query_pl": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46"
    },
    {
        "db_id": "railway",
        "question_original": "Show the distinct countries of managers.",
        "question_original_pl": "Pokaż różne kraje menedżerów.",
        "question": "Show the different nationalities of managers.",
        "question_pl": "Pokaż różne narodowości menedżerów.",
        "query": "SELECT DISTINCT Country FROM manager",
        "query_pl": "SELECT DISTINCT Country FROM manager"
    },
    {
        "db_id": "railway",
        "question_original": "Show the working years of managers in descending order of their level.",
        "question_original_pl": "Pokaż lata pracy menedżerów w porządku malejącym według ich poziomu.",
        "question": "Show the working years of heads in descending order of their level.",
        "question_pl": "Pokaż lata pracy szefów w kolejności malejącej według ich poziomu.",
        "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
        "query_pl": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC"
    },
    {
        "db_id": "railway",
        "question_original": "Show the countries that have managers of age above 50 or below 46.",
        "question_original_pl": "Wskaż kraje, w których menedżerowie mają powyżej 50 lub poniżej 46 lat.",
        "question": "Show the nationalities that have managers of age above 50 or below 46.",
        "question_pl": "Wskaż narodowości, które mają menedżerów w wieku powyżej 50 lub poniżej 46 lat.",
        "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
        "query_pl": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "How many addresses are there in country USA?",
        "question_original_pl": "Ile adresów jest w kraju USA?",
        "question": "How many locations are there in country USA?",
        "question_pl": "Ile lokalizacji znajduje się w kraju USA?",
        "query": "SELECT count(*) FROM addresses WHERE country  =  'USA'",
        "query_pl": "SELECT count(*) FROM addresses WHERE country  =  'USA'"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show all distinct cities in the address record.",
        "question_original_pl": "Pokaż wszystkie odrębne miasta w rekordzie adresu.",
        "question": "Show all different towns in the location record.",
        "question_pl": "Pokaż wszystkie różne miasta w rekordzie lokalizacji.",
        "query": "SELECT DISTINCT city FROM addresses",
        "query_pl": "SELECT DISTINCT city FROM addresses"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show each state and the number of addresses in each state.",
        "question_original_pl": "Pokaż każdy stan i liczbę adresów w każdym stanie.",
        "question": "Show each state and the number of locations in each state.",
        "question_pl": "Pokaż każdy stan i liczbę lokalizacji w każdym stanie.",
        "query": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county",
        "query_pl": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the product type codes which have at least two products.",
        "question_original_pl": "Pokaż kody typów produktów, które mają co najmniej dwa produkty.",
        "question": "Show the goods type codes which have at least two goods.",
        "question_pl": "Pokaż kody typów towarów, które zawierają co najmniej dwa towary.",
        "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2",
        "query_pl": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the names of customers who have both an order in completed status and an order in part status.",
        "question_original_pl": "Pokaż nazwy klientów, którzy mają zarówno zamówienie w statusie ukończone, jak i zamówienie w statusie części.",
        "question": "Show the names of clients who have both an order in completed status and an order in part status.",
        "question_pl": "Pokaż nazwy klientów, którzy mają zarówno zamówienie w statusie ukończone, jak i zamówienie w statusie częściowym.",
        "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'",
        "query_pl": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Zakończone' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Część'"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the name, phone, and payment method code for all customers in descending order of customer number.",
        "question_original_pl": "Pokaż imię i nazwisko, telefon i kod metody płatności dla wszystkich klientów w kolejności malejącej według numeru klienta.",
        "question": "Show the name, telephone, and payment method code for all clients in descending order of client number.",
        "question_pl": "Pokaż imię i nazwisko, numer telefonu i kod metody płatności dla wszystkich klientów w kolejności malejącej według numeru klienta.",
        "query": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC",
        "query_pl": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the product name and total order quantity for each product.",
        "question_original_pl": "Pokaż nazwę produktu i całkowitą ilość zamówienia dla każdego produktu.",
        "question": "Show the goods name and total number of order  for each goods.",
        "question_pl": "Pokaż nazwę towaru i całkowitą liczbę zamówień dla każdego towaru.",
        "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id",
        "query_pl": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the minimum, maximum, average price for all products.",
        "question_original_pl": "Pokaż minimalną, maksymalną i średnią cenę dla wszystkich produktów.",
        "question": "Show the minimum, maximum, average price for all goods.",
        "question_pl": "Pokaż minimalną, maksymalną i średnią cenę dla wszystkich towarów.",
        "query": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products",
        "query_pl": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "How many products have a price higher than the average?",
        "question_original_pl": "Ile produktów ma cenę wyższą niż średnia?",
        "question": "How many goods have a price higher than the average?",
        "question_pl": "Ile towarów ma cenę wyższą niż średnia?",
        "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
        "query_pl": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the customer name, customer address city, date from, and date to for each customer address history.",
        "question_original_pl": "Pokaż nazwę klienta, miasto adresu klienta, datę od i datę do dla każdej historii adresu klienta.",
        "question": "Show the client name, client location city, date from, and date to for each client location history.",
        "question_pl": "Pokaż nazwę klienta, miasto lokalizacji klienta, datę od i datę do dla każdej historii lokalizacji klienta.",
        "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id",
        "query_pl": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "What are the name and phone of the customer with the most ordered product quantity?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz numer telefonu klienta z największą ilością zamówionych produktów?",
        "question": "What are the name and telephone of the client with the most ordered goods quantity?",
        "question_pl": "Jaka jest nazwa i telefon klienta z największą ilością zamówionych towarów?",
        "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1",
        "query_pl": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_products_contacts",
        "question_original": "Show the product type and name for the products with price higher than 1000 or lower than 500.",
        "question_original_pl": "Pokaż typ i nazwę produktu dla produktów o cenie wyższej niż 1000 lub niższej niż 500.",
        "question": "Show the goods type and name for the goods with price higher than 1000 or lower than 500.",
        "question_pl": "Pokaż typ i nazwę towaru dla towarów o cenie wyższej niż 1000 lub niższej niż 500.",
        "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500",
        "query_pl": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What are the names of all the dorms that can accomdate more than 300 students?",
        "question_original_pl": "Jakie są nazwy wszystkich akademików, które mogą pomieścić ponad 300 studentów?",
        "question": "What are the names of all the dormitories that can accomdate more than 300 students?",
        "question_pl": "Jak nazywają się wszystkie akademiki, które mogą pomieścić ponad 300 studentów?",
        "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
        "query_pl": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the first name of students who is older than 20.",
        "question_original_pl": "Znajdź imię ucznia, który ma więcej niż 20 lat.",
        "question": "Find the forename of students who is older than 20.",
        "question_pl": "Znajdź imiona uczniów, którzy mają więcej niż 20 lat.",
        "query": "SELECT fname FROM student WHERE age  >  20",
        "query_pl": "SELECT fname FROM student WHERE age  >  20"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the total student capacity of all dorms?",
        "question_original_pl": "Jaka jest łączna liczba studentów we wszystkich akademikach?",
        "question": "What is the total student capacity of all dormitories?",
        "question_pl": "Jaka jest całkowita liczba studentów we wszystkich akademikach?",
        "query": "SELECT sum(student_capacity) FROM dorm",
        "query_pl": "SELECT sum(student_capacity) FROM dorm"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the average and total capacity for all dorms who are of gender X?",
        "question_original_pl": "Jaka jest średnia i całkowita pojemność wszystkich akademików, w których mieszka płeć X?",
        "question": "What is the average and total capacity for all dormitories who are of gender X?",
        "question_pl": "Jaka jest średnia i całkowita pojemność dla wszystkich akademików płci X?",
        "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'",
        "query_pl": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many dorms have amenities?",
        "question_original_pl": "Ile akademików ma udogodnienia?",
        "question": "How many dormitories have amenities?",
        "question_pl": "Ile akademików posiada udogodnienia?",
        "query": "SELECT count(DISTINCT dormid) FROM has_amenity",
        "query_pl": "SELECT count(DISTINCT dormid) FROM has_amenity"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What are the names of all the dorms that don't have any amenities?",
        "question_original_pl": "Jak nazywają się akademiki, w których nie ma żadnych udogodnień?",
        "question": "What are the names of all the dormitories that don't have any amenities?",
        "question_pl": "Jak nazywają się wszystkie akademiki, w których nie ma żadnych udogodnień?",
        "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
        "query_pl": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the number of distinct gender for dorms.",
        "question_original_pl": "Znajdź liczbę różnych płci w akademikach.",
        "question": "Find the number of different sex for dormitories.",
        "question_pl": "Znajdź liczbę osób różnej płci w akademikach.",
        "query": "SELECT count(DISTINCT gender) FROM dorm",
        "query_pl": "SELECT count(DISTINCT gender) FROM dorm"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many different genders are there in the dorms?",
        "question_original_pl": "Ile różnych płci jest w akademikach?",
        "question": "How many different sexs are there in the dormitories?",
        "question_pl": "Ile osób różnej płci jest w akademikach?",
        "query": "SELECT count(DISTINCT gender) FROM dorm",
        "query_pl": "SELECT count(DISTINCT gender) FROM dorm"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the capacity and gender type of the dorm whose name has substring ‘Donor’.",
        "question_original_pl": "Znajdź pojemność i typ płci akademika, którego nazwa zawiera podciąg \"Darczyńca\".",
        "question": "Find the capacity and sex type of the dormitory whose name has substring ‘Donor’.",
        "question_pl": "Znajdź pojemność i typ płci w akademiku, którego nazwa zawiera podciąg \"Darczyńca\".",
        "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
        "query_pl": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Darczyńca%'"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
        "question_original_pl": "Jaka jest liczba studentów i rodzaj płci w akademiku, którego nazwa to Donor?",
        "question": "What is the student capacity and type of sex for the dormitory whose name as the phrase Donor in it?",
        "question_pl": "Jaka jest liczba studentów i rodzaj płci w akademiku, którego nazwa jest wyrażeniem Donor?",
        "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
        "query_pl": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Darczyńca%'"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.",
        "question_original_pl": "Znajdź nazwę i typ płci akademików, których pojemność jest większa niż 300 lub mniejsza niż 100.",
        "question": "Find the name and sex type of the dormitories whose capacity is greater than 300 or less than 100.",
        "question_pl": "Znajdź nazwy i płeć akademików, których pojemność jest większa niż 300 lub mniejsza niż 100.",
        "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
        "query_pl": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the numbers of different majors and cities.",
        "question_original_pl": "Znajdź numery różnych kierunków i miast.",
        "question": "Find the numbers of different discipline and cities.",
        "question_pl": "Znajdź numery różnych dyscyplin i miast.",
        "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",
        "query_pl": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many different majors are there and how many different city codes are there for each student?",
        "question_original_pl": "Ile jest różnych kierunków studiów i ile jest różnych kodów miast dla każdego studenta?",
        "question": "How many different discipline are there and how many different city codes are there for each student?",
        "question_pl": "Ile jest różnych dyscyplin i ile jest różnych kodów miejskich dla każdego ucznia?",
        "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",
        "query_pl": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the last name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20.",
        "question_original_pl": "Znajdź nazwisko studenta, który jest kobietą (płeć to F) i mieszka w mieście o kodzie BAL lub mężczyzną (płeć to M) i jest w wieku poniżej 20 lat.",
        "question": "Find the family name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20.",
        "question_pl": "Znajdź nazwiska uczniów, którzy są kobietami (płeć to F) i mieszkają w mieście o kodzie BAL lub mężczyznami (płeć to M) w wieku poniżej 20 lat.",
        "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20",
        "query_pl": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the first and last name of students whose age is younger than the average age.",
        "question_original_pl": "Znajdź imię i nazwisko uczniów, których wiek jest niższy niż średnia wieku.",
        "question": "Find the full name of students whose age is younger than the average age.",
        "question_pl": "Znajdź pełne imiona i nazwiska uczniów, których wiek jest niższy niż średnia wieku.",
        "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)",
        "query_pl": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the first and last name of all students who are younger than average?",
        "question_original_pl": "Jakie jest imię i nazwisko wszystkich uczniów, którzy są młodsi niż średnia?",
        "question": "What is the full name of all students who are younger than average?",
        "question_pl": "Jak nazywają się wszyscy uczniowie, którzy są młodsi niż średnia?",
        "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)",
        "query_pl": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What are the first and last names of all students who are not living in the city HKG and order the results by age?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich uczniów, którzy nie mieszkają w mieście HKG i uporządkuj wyniki według wieku?",
        "question": "What are the full names of all students who are not living in the city HKG and order the results by age?",
        "question_pl": "Jakie są pełne imiona i nazwiska wszystkich studentów, którzy nie mieszkają w mieście HKG i uporządkuj wyniki według wieku?",
        "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age",
        "query_pl": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many dorms are there and what is the total capacity for each gender?",
        "question_original_pl": "Ile jest akademików i jaka jest całkowita pojemność dla każdej płci?",
        "question": "How many dormitories are there and what is the total capacity for each gender?",
        "question_pl": "Ile jest akademików i jaka jest ich łączna pojemność dla każdej płci?",
        "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender",
        "query_pl": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the number of students in each major.",
        "question_original_pl": "Znajdź liczbę studentów na każdym kierunku.",
        "question": "Find the number of students in each discipline.",
        "question_pl": "Znajdź liczbę studentów w każdej dyscyplinie.",
        "query": "SELECT count(*) ,  major FROM student GROUP BY major",
        "query_pl": "SELECT count(*) ,  major FROM student GROUP BY major"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many students are there in each major?",
        "question_original_pl": "Ilu studentów studiuje na każdym kierunku?",
        "question": "How many students are there in each discipline?",
        "question_pl": "Ilu jest studentów w każdej dyscyplinie?",
        "query": "SELECT count(*) ,  major FROM student GROUP BY major",
        "query_pl": "SELECT count(*) ,  major FROM student GROUP BY major"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the first and last name of students who are not in the largest major.",
        "question_original_pl": "Znajdź imię i nazwisko studentów, którzy nie studiują na największym kierunku.",
        "question": "Find the forename and family name of students who are not in the largest major.",
        "question_pl": "Znajdź imiona i nazwiska studentów, którzy nie studiują na największym kierunku.",
        "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "dorm_1",
        "question_original": "How many students are older than 20 in each dorm?",
        "question_original_pl": "Ilu studentów ma więcej niż 20 lat w każdym akademiku?",
        "question": "How many students are older than 20 in each dormitory?",
        "question_pl": "Ilu uczniów ma więcej niż 20 lat w każdym akademiku?",
        "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name",
        "query_pl": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What are the first names of all students in Smith Hall?",
        "question_original_pl": "Jak mają na imię wszyscy uczniowie w Smith Hall?",
        "question": "What are the forenames of all students in Smith Hall?",
        "question_pl": "Jakie są imiona wszystkich uczniów w Smith Hall?",
        "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'",
        "query_pl": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the name of amenity that is most common in all dorms.",
        "question_original_pl": "Znajdź nazwę udogodnienia, które jest najczęściej spotykane we wszystkich akademikach.",
        "question": "Find the name of amenity that is most common in all dormitories.",
        "question_pl": "Znajdź nazwę udogodnienia, które występuje najczęściej we wszystkich akademikach.",
        "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the most common amenity in the dorms?",
        "question_original_pl": "Jakie są najpopularniejsze udogodnienia w akademikach?",
        "question": "What is the most common amenity in the dormitories?",
        "question_pl": "Jakie są najczęstsze udogodnienia w akademikach?",
        "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What are the first names of all students who live in the dorm with the most amenities?",
        "question_original_pl": "Jakie są imiona wszystkich studentów, którzy mieszkają w akademiku z największą liczbą udogodnień?",
        "question": "What are the forenames of all students who live in the dorm with the most amenities?",
        "question_pl": "Jak nazywają się wszyscy studenci, którzy mieszkają w akademiku z największą liczbą udogodnień?",
        "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "dorm_1",
        "question_original": "What is the name and capacity of the dorm with the fewest amount of amenities?",
        "question_original_pl": "Jaka jest nazwa i pojemność akademika z najmniejszą liczbą udogodnień?",
        "question": "What is the name and capacity of the dormitory with the fewest amount of amenities?",
        "question_pl": "Jak nazywa się i jaką pojemność ma akademik z najmniejszą liczbą udogodnień?",
        "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge.",
        "question_original_pl": "Znajdź imiona i nazwiska studentów, którzy mieszkają w akademikach z udogodnieniami TV Lounge.",
        "question": "Find the full name of students who are living in the dorms that have amenity TV Lounge.",
        "question_pl": "Znajdź pełne imiona i nazwiska studentów, którzy mieszkają w akademikach z udogodnieniami TV Lounge.",
        "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')",
        "query_pl": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'Salon telewizyjny')"
    },
    {
        "db_id": "dorm_1",
        "question_original": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.",
        "question_original_pl": "Znajdź imię i wiek studentów mieszkających w akademikach, w których nie ma salonu telewizyjnego z udogodnieniami.",
        "question": "Find the forename and age of students who are living in the dorms that do not have amenity TV Lounge.",
        "question_pl": "Znajdź imiona i wiek studentów mieszkających w akademikach, w których nie ma salonu telewizyjnego z udogodnieniami.",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')",
        "query_pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'Salon telewizyjny')"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Which city has the least number of customers whose type code is \"Good Credit Rating\"?",
        "question_original_pl": "Które miasto ma najmniejszą liczbę klientów z kodem typu \"Dobra zdolność kredytowa\"?",
        "question": "Which city has the least number of clients whose type code is \"Good Credit Rating\"?",
        "question_pl": "Które miasto ma najmniej klientów z kodem typu \"Dobra ocena kredytowa\"?",
        "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Dobry rating kredytowy\" GROUP BY town_city ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "List the name of all products along with the number of complaints that they have received.",
        "question_original_pl": "Wymień nazwy wszystkich produktów wraz z liczbą otrzymanych skarg.",
        "question": "List the name of all goods along with the number of complaints that they have received.",
        "question_pl": "Wymień nazwy wszystkich towarów wraz z liczbą otrzymanych skarg.",
        "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name",
        "query_pl": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What are all the different product names, and how many complains has each received?",
        "question_original_pl": "Jak nazywają się poszczególne produkty i ile skarg wpłynęło na każdy z nich?",
        "question": "What are all the different goods names, and how many complains has each received?",
        "question_pl": "Jak nazywają się poszczególne towary i ile skarg wpłynęło na każdy z nich?",
        "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name",
        "query_pl": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the emails of customers who has filed a complaints of the product with the most complaints.",
        "question_original_pl": "Znajdź e-maile klientów, którzy złożyli skargi na produkt z największą liczbą skarg.",
        "question": "Find the emails of clients who has filed a complaints of the goods with the most complaints.",
        "question_pl": "Znajdź e-maile klientów, którzy złożyli reklamacje towarów z największą liczbą reklamacji.",
        "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?",
        "question_original_pl": "Jakie są adresy e-mail klientów, którzy złożyli reklamacje dotyczące produktu, na który wpłynęło najwięcej reklamacji?",
        "question": "What are the emails of clients who have filed complaints on the goods which has had the greatest number of complaints?",
        "question_pl": "Jakie są e-maile klientów, którzy złożyli reklamacje na towary, które miały największą liczbę reklamacji?",
        "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Which products has been complained by the customer who has filed least amount of complaints?",
        "question_original_pl": "Na które produkty klient złożył najmniej reklamacji?",
        "question": "Which goods has been complained by the customer who has filed least amount of complaints?",
        "question_pl": "Który towar został zareklamowany przez klienta, który złożył najmniej reklamacji?",
        "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.",
        "question_original_pl": "Zwróć nazwy produktów, których reklamacje zostały złożone przez klienta, który złożył najmniej reklamacji.",
        "question": "Return the names of goods that have had complaints filed by the customer who has filed the fewest complaints.",
        "question_pl": "Zwróć nazwy towarów, których reklamacje zostały złożone przez klienta, który złożył najmniej reklamacji.",
        "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Return the phone number of the customer who filed the complaint that was raised most recently.",
        "question_original_pl": "Zwróć numer telefonu klienta, który złożył ostatnio zgłoszoną skargę.",
        "question": "Return the telephone number of the client who filed the complaint that was raised most recently.",
        "question_pl": "Podaj numer telefonu klienta, który ostatnio złożył skargę.",
        "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
        "query_pl": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the phone number of all the customers and staff.",
        "question_original_pl": "Znajdź numery telefonów wszystkich klientów i pracowników.",
        "question": "Find the telephone number of all the clients and staff.",
        "question_pl": "Znajdź numer telefonu wszystkich klientów i pracowników.",
        "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff",
        "query_pl": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What is the description of the product named \"Chocolate\"?",
        "question_original_pl": "Jaki jest opis produktu o nazwie \"Czekolada\"?",
        "question": "What is the describing content of the goods named \"Chocolate\"?",
        "question_pl": "Jaka jest opisowa zawartość towarów o nazwie \"Czekolada\"?",
        "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
        "query_pl": "SELECT product_description FROM products WHERE product_name  =  \"Czekolada\""
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Return the description of the product called \"Chocolate\".",
        "question_original_pl": "Zwróć opis produktu o nazwie \"Czekolada\".",
        "question": "Return the describing content of the goods called \"Chocolate\".",
        "question_pl": "Zwróć zawartość opisującą towar o nazwie \"Czekolada\".",
        "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
        "query_pl": "SELECT product_description FROM products WHERE product_name  =  \"Czekolada\""
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the name and category of the most expensive product.",
        "question_original_pl": "Znajdź nazwę i kategorię najdroższego produktu.",
        "question": "Find the name and type of the most expensive goods.",
        "question_pl": "Znajdź nazwę i typ najdroższego towaru.",
        "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What is the name and category code of the product with the highest price?",
        "question_original_pl": "Jaka jest nazwa i kod kategorii produktu o najwyższej cenie?",
        "question": "What is the name and type code of the goods with the highest price?",
        "question_pl": "Jaka jest nazwa i kod typu towaru o najwyższej cenie?",
        "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1",
        "query_pl": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the prices of products which has never received a single complaint.",
        "question_original_pl": "Znajdź ceny produktów, które nigdy nie otrzymały ani jednej reklamacji.",
        "question": "Find the prices of goods which has never received a single complaint.",
        "question_pl": "Znajdź ceny towarów, które nigdy nie otrzymały ani jednej reklamacji.",
        "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)",
        "query_pl": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What are the prices of products that have never gotten a complaint?",
        "question_original_pl": "Jakie są ceny produktów, które nigdy nie otrzymały reklamacji?",
        "question": "What are the prices of goods that have never gotten a complaint?",
        "question_pl": "Jakie są ceny towarów, które nigdy nie były przedmiotem reklamacji?",
        "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)",
        "query_pl": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What is the average price of the products for each category?",
        "question_original_pl": "Jaka jest średnia cena produktów w każdej kategorii?",
        "question": "What is the average price of the goods for each type?",
        "question_pl": "Jaka jest średnia cena towarów dla każdego typu?",
        "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code",
        "query_pl": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Return the average price of products that have each category code.",
        "question_original_pl": "Zwróć średnią cenę produktów z każdym kodem kategorii.",
        "question": "Return the average price of goods that have each type code.",
        "question_pl": "Zwróć średnią cenę towarów o każdym kodzie typu.",
        "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code",
        "query_pl": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the last name of the staff member who processed the complaint of the cheapest product.",
        "question_original_pl": "Znajdź nazwisko pracownika, który rozpatrzył reklamację najtańszego produktu.",
        "question": "Find the family name of the staff member who processed the complaint of the cheapest goods.",
        "question_pl": "Znajdź nazwisko pracownika, który rozpatrzył reklamację najtańszych towarów.",
        "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1",
        "query_pl": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What is the last name of the staff member in charge of the complaint on the product with the lowest price?",
        "question_original_pl": "Jak nazywa się pracownik odpowiedzialny za reklamację produktu o najniższej cenie?",
        "question": "What is the family name of the staff member in charge of the complaint on the goods with the lowest price?",
        "question_pl": "Jakie jest nazwisko pracownika odpowiedzialnego za reklamację towarów o najniższej cenie?",
        "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1",
        "query_pl": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Which complaint status has more than 3 records on file?",
        "question_original_pl": "Który status skargi ma więcej niż 3 rekordy w pliku?",
        "question": "Which complain status has more than 3 records on file?",
        "question_pl": "Który status reklamacji zawiera więcej niż 3 rekordy?",
        "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3",
        "query_pl": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Return complaint status codes have more than 3 corresponding complaints?",
        "question_original_pl": "Kody statusu reklamacji zwrotnej mają więcej niż 3 odpowiadające im reklamacje?",
        "question": "Return complain status codes have more than 3 corresponding complain?",
        "question_pl": "Zwracane kody statusu reklamacji mają więcej niż 3 odpowiadające im reklamacje?",
        "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3",
        "query_pl": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Count the number of customers that have the customer type that is most common.",
        "question_original_pl": "Policz liczbę klientów, którzy mają typ klienta, który jest najbardziej powszechny.",
        "question": "Count the number of clients that have the client type that is most common.",
        "question_pl": "Policz liczbę klientów, którzy mają najczęściej występujący typ klienta.",
        "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "How many distinct complaint type codes are there in the database?",
        "question_original_pl": "Ile różnych kodów typów skarg znajduje się w bazie danych?",
        "question": "How many different complain type codes are there in the database?",
        "question_pl": "Ile różnych kodów typu reklamacji znajduje się w bazie danych?",
        "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
        "query_pl": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Count the number of different complaint type codes.",
        "question_original_pl": "Policz liczbę różnych kodów typu skargi.",
        "question": "Count the number of different complain type codes.",
        "question_pl": "Policz liczbę różnych kodów typu reklamacji.",
        "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
        "query_pl": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".",
        "question_original_pl": "Znajdź wiersze adresu 1 i 2 klienta z adresem e-mail \"vbogisich@example.org\".",
        "question": "Find the location line 1 and 2 of the customer with email \"vbogisich@example.org\".",
        "question_pl": "Znajdź linię lokalizacji 1 i 2 klienta z adresem e-mail \"vbogisich@example.org\".",
        "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"",
        "query_pl": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""
    },
    {
        "db_id": "customer_complaints",
        "question_original": "Of complaints with the type code \"Product Failure\", how many had each different status code?",
        "question_original_pl": "Ile spośród skarg z kodem typu \"Awaria produktu\" miało każdy inny kod statusu?",
        "question": "Of complain with the type code \"Product Failure\", how many had each different status code?",
        "question_pl": "Ile spośród reklamacji z kodem typu \"Awaria produktu\" miało każdy inny kod statusu?",
        "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code",
        "query_pl": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Awaria produktu\" GROUP BY complaint_status_code"
    },
    {
        "db_id": "customer_complaints",
        "question_original": "What is first names of the top 5 staff who have handled the greatest number of complaints?",
        "question_original_pl": "Podaj imiona i nazwiska 5 najlepszych pracowników, którzy rozpatrzyli największą liczbę skarg?",
        "question": "What is forenames of the top 5 staff who have handled the greatest number of complaints?",
        "question_pl": "Jakie są imiona i nazwiska 5 najlepszych pracowników, którzy rozpatrzyli największą liczbę skarg?",
        "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5",
        "query_pl": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Count the number of submissions.",
        "question_original_pl": "Policz liczbę zgłoszeń.",
        "question": "Count the number of submissions",
        "question_pl": "Policz liczbę zgłoszeń",
        "query": "SELECT count(*) FROM submission",
        "query_pl": "SELECT count(*) FROM submission"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "For each submission, show the author and their affiliated college.",
        "question_original_pl": "Dla każdego zgłoszenia wskaż autora i powiązaną z nim uczelnię.",
        "question": "For each submission, show the writer and their affiliated university.",
        "question_pl": "Dla każdego zgłoszenia wskaż autora i powiązany z nim uniwersytet.",
        "query": "SELECT Author ,  College FROM submission",
        "query_pl": "SELECT Author ,  College FROM submission"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show the names of authors from college \"Florida\" or \"Temple\"",
        "question_original_pl": "Pokaż nazwiska autorów z uczelni \"Floryda\" lub \"Świątynia\".",
        "question": "Show the names of writers from college \"Florida\" or \"Temple\"",
        "question_pl": "Pokaż nazwiska pisarzy z uczelni \"Floryda\" lub \"Świątynia\".",
        "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"",
        "query_pl": "SELECT Author FROM submission WHERE College  =  \"Floryda\" OR College  =  \"Świątynia\""
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show different colleges along with the number of authors of submission from each college.",
        "question_original_pl": "Pokaż różne uczelnie wraz z liczbą autorów zgłoszeń z każdej z nich.",
        "question": "Show different university along with the number of writers of submission from each university.",
        "question_pl": "Pokaż różne uniwersytety wraz z liczbą autorów zgłoszeń z każdego uniwersytetu.",
        "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College",
        "query_pl": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "For each college, return the college name and the count of authors with submissions from that college.",
        "question_original_pl": "Dla każdej uczelni zwróć nazwę uczelni i liczbę autorów, którzy przesłali zgłoszenia z tej uczelni.",
        "question": "For each university, return the university name and the count of authors with submissions from that university.",
        "question_pl": "Dla każdego uniwersytetu zwróć nazwę uniwersytetu i liczbę autorów, którzy przesłali zgłoszenia z tego uniwersytetu.",
        "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College",
        "query_pl": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show the most common college of authors of submissions.",
        "question_original_pl": "Pokaż najczęstszą uczelnię autorów zgłoszeń.",
        "question": "Show the most common university of authors of submissions.",
        "question_pl": "Pokaż najpopularniejszy uniwersytet autorów zgłoszeń.",
        "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Which college has the most authors with submissions?",
        "question_original_pl": "Która uczelnia ma najwięcej autorów ze zgłoszeniami?",
        "question": "Which university has the most authors with submissions?",
        "question_pl": "Który uniwersytet ma najwięcej autorów ze zgłoszeniami?",
        "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80.",
        "question_original_pl": "Pokaż uczelnie, które mają zarówno autorów z wynikiem większym niż 90, jak i autorów z wynikiem mniejszym niż 80.",
        "question": "Show the university that have both authors with submission score larger than 90 and authors with submission score smaller than 80.",
        "question_pl": "Pokaż uniwersytety, które mają zarówno autorów z wynikiem większym niż 90, jak i autorów z wynikiem mniejszym niż 80.",
        "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80",
        "query_pl": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Which colleges have both authors with submission score above 90 and authors with submission score below 80?",
        "question_original_pl": "Które uczelnie mają zarówno autorów z wynikiem powyżej 90 punktów, jak i autorów z wynikiem poniżej 80 punktów?",
        "question": "Which university have both authors with submission score above 90 and authors with submission score below 80?",
        "question_pl": "Który uniwersytet ma zarówno autorów z wynikiem powyżej 90 punktów, jak i autorów z wynikiem poniżej 80 punktów?",
        "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80",
        "query_pl": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Which submission received the highest score in acceptance result. Show me the result.",
        "question_original_pl": "Które zgłoszenie otrzymało najwyższy wynik w wynikach akceptacji. Pokaż mi wynik.",
        "question": "Which submission received the highest score in acceptance outcome. Show me the outcome.",
        "question_pl": "Które zgłoszenie otrzymało najwyższą ocenę w wyniku akceptacji. Pokaż mi wynik.",
        "query": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1",
        "query_pl": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show each author and the number of workshops they submitted to.",
        "question_original_pl": "Pokaż każdego autora i liczbę warsztatów, do których się zgłosił.",
        "question": "Show each writer and the number of workshops they submitted to.",
        "question_pl": "Pokaż każdego autora i liczbę warsztatów, na które się zgłosił.",
        "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author",
        "query_pl": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "How many workshops did each author submit to? Return the author name and the number of workshops.",
        "question_original_pl": "Na ile warsztatów zgłosił się każdy z autorów? Zwróć nazwisko autora i liczbę warsztatów.",
        "question": "How many workshops did each writer submit to? Return the writer name and the number of workshops.",
        "question_pl": "Na ile warsztatów zgłosił się każdy z autorów? Zwróć imię i nazwisko autora oraz liczbę warsztatów.",
        "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author",
        "query_pl": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Which authors have submitted to more than one workshop?",
        "question_original_pl": "Którzy autorzy zgłosili się do więcej niż jednego warsztatu?",
        "question": "Which writers have submitted to more than one workshop?",
        "question_pl": "Którzy pisarze zgłosili się na więcej niż jeden warsztat?",
        "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1",
        "query_pl": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Show the date and venue of each workshop in ascending alphabetical order of the venue.",
        "question_original_pl": "Pokaż datę i miejsce każdego warsztatu w rosnącej kolejności alfabetycznej.",
        "question": "Show the day and site of each workshop in ascending alphabetical order of the site.",
        "question_pl": "Pokaż dzień i miejsce każdego warsztatu w rosnącej kolejności alfabetycznej.",
        "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue",
        "query_pl": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop.",
        "question_original_pl": "Posortuj każdy warsztat alfabetycznie według miejsca. Zwróć datę i miejsce każdego warsztatu.",
        "question": "Sort the each workshop in alphabetical order of the site. Return the day and site of each workshop.",
        "question_pl": "Posortuj każdy warsztat alfabetycznie według miejsca. Zwróć dzień i miejsce każdego warsztatu.",
        "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue",
        "query_pl": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
    },
    {
        "db_id": "workshop_paper",
        "question_original": "Which authors did not submit to any workshop?",
        "question_original_pl": "Którzy autorzy nie zgłosili się na żadne warsztaty?",
        "question": "Which writers did not submit to any workshop?",
        "question_pl": "Którzy pisarze nie zgłosili się na żadne warsztaty?",
        "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)",
        "query_pl": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show all investor details.",
        "question_original_pl": "Pokaż wszystkie szczegóły dotyczące inwestora.",
        "question": "Show all investor information.",
        "question_pl": "Pokaż wszystkie informacje o inwestorze.",
        "query": "SELECT Investor_details FROM INVESTORS",
        "query_pl": "SELECT Investor_details FROM INVESTORS"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show all distinct lot details.",
        "question_original_pl": "Pokaż wszystkie wyraźne szczegóły działki.",
        "question": "Show all different lot information.",
        "question_pl": "Pokaż wszystkie różne informacje o partii.",
        "query": "SELECT DISTINCT lot_details FROM LOTS",
        "query_pl": "SELECT DISTINCT lot_details FROM LOTS"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show all date and share count of transactions.",
        "question_original_pl": "Pokaż wszystkie daty i liczbę udziałów w transakcjach.",
        "question": "Show all day and share count of transactions.",
        "question_pl": "Pokaż cały dzień i udostępnij liczbę transakcji.",
        "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS",
        "query_pl": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show all dates of transactions whose type code is \"SALE\".",
        "question_original_pl": "Pokaż wszystkie daty transakcji, których kod typu to \"SPRZEDAŻ\".",
        "question": "Show all day of transactions whose type code is \"SALE\".",
        "question_pl": "Pokaż wszystkie dni transakcji, których kod typu to \"SPRZEDAŻ\".",
        "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
        "query_pl": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SPRZEDAŻ\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the description of transaction type with code \"PUR\".",
        "question_original_pl": "Pokaż opis typu transakcji z kodem \"PUR\".",
        "question": "Show the describing content of transaction type with code \"PUR\".",
        "question_pl": "Pokaż treść opisującą typ transakcji z kodem \"PUR\".",
        "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"",
        "query_pl": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
        "question_original_pl": "Pokaż daty transakcji, jeśli liczba akcji jest większa niż 100 lub kwota jest większa niż 1000.",
        "question": "Show the day of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
        "question_pl": "Pokaż dzień transakcji, jeśli liczba akcji jest większa niż 100 lub kwota jest większa niż 1000.",
        "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000",
        "query_pl": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the transaction type descriptions and dates if the share count is smaller than 10.",
        "question_original_pl": "Pokaż opisy typów transakcji i daty, jeśli liczba akcji jest mniejsza niż 10.",
        "question": "Show the transaction type descriptions and day if the share count is smaller than 10.",
        "question_pl": "Pokaż opisy typu transakcji i dzień, jeśli liczba akcji jest mniejsza niż 10.",
        "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10",
        "query_pl": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show details of all investors if they make any transaction with share count greater than 100.",
        "question_original_pl": "Pokaż szczegóły wszystkich inwestorów, jeśli dokonają jakiejkolwiek transakcji z liczbą akcji większą niż 100.",
        "question": "Show information of all investors if they make any transaction with share count greater than 100.",
        "question_pl": "Pokaż informacje o wszystkich inwestorach, jeśli dokonują oni transakcji z liczbą akcji większą niż 100.",
        "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100",
        "query_pl": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "How many distinct transaction types are used in the transactions?",
        "question_original_pl": "Ile różnych typów transakcji jest używanych w transakcjach?",
        "question": "How many different transaction categories are used in the transactions?",
        "question_pl": "Ile różnych kategorii transakcji jest używanych w transakcjach?",
        "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS",
        "query_pl": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Return the lot details and investor ids.",
        "question_original_pl": "Zwróć szczegóły partii i identyfikatory inwestorów.",
        "question": "Return the lot information and investor ids.",
        "question_pl": "Zwróć informacje o lotach i identyfikatory inwestorów.",
        "query": "SELECT lot_details ,  investor_id FROM LOTS",
        "query_pl": "SELECT lot_details ,  investor_id FROM LOTS"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Return the lot details of lots that belong to investors with details \"l\"?",
        "question_original_pl": "Zwracasz szczegóły działek należących do inwestorów ze szczegółami \"l\"?",
        "question": "Return the lot information of lots that belong to investors with information \"l\"?",
        "question_pl": "Zwracasz informacje o działkach należących do inwestorów z informacją \"l\"?",
        "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\"",
        "query_pl": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the purchase details of transactions with amount bigger than 10000?",
        "question_original_pl": "Jakie są szczegóły zakupu transakcji na kwotę większą niż 10000?",
        "question": "What are the purchase information of transactions with amount bigger than 10000?",
        "question_pl": "Jakie są informacje o zakupie transakcji na kwotę większą niż 10000?",
        "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000",
        "query_pl": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the sale details and dates of transactions with amount smaller than 3000?",
        "question_original_pl": "Jakie są szczegóły sprzedaży i daty transakcji na kwotę mniejszą niż 3000?",
        "question": "What are the sale information and day of transactions with amount smaller than 3000?",
        "question_pl": "Jakie są informacje o sprzedaży i dniu transakcji na kwotę mniejszą niż 3000?",
        "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
        "query_pl": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the lot details of lots associated with transactions with share count smaller than 50?",
        "question_original_pl": "Jakie są szczegóły lotów powiązanych z transakcjami z liczbą akcji mniejszą niż 50?",
        "question": "What are the lot information of lots associated with transactions with share count smaller than 50?",
        "question_pl": "Jakie są informacje o lotach związane z transakcjami z liczbą akcji mniejszą niż 50?",
        "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50",
        "query_pl": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
        "question_original_pl": "Jakie są szczegóły lotów powiązanych z transakcjami, których liczba akcji jest większa niż 100 i których kod typu to \"PUR\"?",
        "question": "What are the lot information of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?",
        "question_pl": "Jakie są informacje o lotach powiązanych z transakcjami, których liczba akcji jest większa niż 100 i których kod typu to \"PUR\"?",
        "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\"",
        "query_pl": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the average transaction amount for different transaction types.",
        "question_original_pl": "Pokaż średnią kwotę transakcji dla różnych typów transakcji.",
        "question": "Show the average transaction amount for different transaction categories.",
        "question_pl": "Pokaż średnią kwotę transakcji dla różnych kategorii transakcji.",
        "query": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",
        "query_pl": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the maximum and minimum share count of different transaction types.",
        "question_original_pl": "Pokaż maksymalną i minimalną liczbę akcji dla różnych typów transakcji.",
        "question": "Show the maximum and minimum share count of different transaction categories.",
        "question_pl": "Pokaż maksymalną i minimalną liczbę udziałów w różnych kategoriach transakcji.",
        "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code",
        "query_pl": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the transaction type code that occurs the fewest times.",
        "question_original_pl": "Pokaż kod typu transakcji, który występuje najmniej razy.",
        "question": "Show the transaction category code that occurs the fewest times.",
        "question_pl": "Pokaż kod kategorii transakcji, który występuje najmniej razy.",
        "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1",
        "query_pl": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the transaction type code that occurs the most frequently.",
        "question_original_pl": "Pokaż kod typu transakcji, który występuje najczęściej.",
        "question": "Show the transaction category code that occurs the most frequently.",
        "question_pl": "Pokaż kod kategorii transakcji, który występuje najczęściej.",
        "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the description of the transaction type that occurs most frequently.",
        "question_original_pl": "Pokaż opis najczęściej występującego typu transakcji.",
        "question": "Show the describing content of the transaction type that occurs most frequently.",
        "question_pl": "Pokaż treść opisującą najczęściej występujący typ transakcji.",
        "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the id and details of the investor that has the largest number of transactions.",
        "question_original_pl": "Pokaż identyfikator i szczegóły inwestora, który ma największą liczbę transakcji.",
        "question": "Show the id and information of the investor that has the largest number of transactions.",
        "question_pl": "Pokaż identyfikator i informacje o inwestorze, który ma największą liczbę transakcji.",
        "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the id and details for the investors who have the top 3 number of transactions.",
        "question_original_pl": "Pokaż identyfikator i szczegóły inwestorów, którzy mają 3 największe liczby transakcji.",
        "question": "Show the id and information for the investors who have the top 3 number of transactions.",
        "question_pl": "Pokaż identyfikator i informacje o inwestorach, którzy mają 3 największe liczby transakcji.",
        "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\".",
        "question_original_pl": "Pokaż identyfikatory i szczegóły inwestorów, którzy mają co najmniej dwie transakcje z kodem typu \"SPRZEDAŻ\".",
        "question": "Show the ids and information of the investors who have at least two transactions with type code \"SALE\".",
        "question_pl": "Pokaż identyfikatory i informacje o inwestorach, którzy mają co najmniej dwie transakcje z kodem typu \"SPRZEDAŻ\".",
        "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2",
        "query_pl": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SPRZEDAŻ\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the dates of transactions with at least 100 share count or amount bigger than 100?",
        "question_original_pl": "Jakie są daty transakcji z co najmniej 100 akcjami lub kwotą większą niż 100?",
        "question": "What are the day of transactions with at least 100 share count or amount bigger than 100?",
        "question_pl": "Jakie są dni transakcji z co najmniej 100 akcjami lub kwotą większą niż 100?",
        "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100",
        "query_pl": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the details of all sales and purchases?",
        "question_original_pl": "Jakie są szczegóły wszystkich sprzedaży i zakupów?",
        "question": "What are the information of all sales and purchases?",
        "question_pl": "Jakie są informacje o wszystkich sprzedażach i zakupach?",
        "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
        "query_pl": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases"
    },
    {
        "db_id": "tracking_share_transactions",
        "question_original": "What are the details of the lots which are not used in any transactions?",
        "question_original_pl": "Jakie są szczegóły partii, które nie są wykorzystywane w żadnych transakcjach?",
        "question": "What are the information of the lots which are not used in any transactions?",
        "question_pl": "Jakie są informacje o działkach, które nie są wykorzystywane w żadnych transakcjach?",
        "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id",
        "query_pl": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show all distinct location names.",
        "question_original_pl": "Pokaż wszystkie odrębne nazwy lokalizacji.",
        "question": "Show all different position names.",
        "question_pl": "Pokaż wszystkie różne nazwy pozycji.",
        "query": "SELECT DISTINCT Location_Name FROM LOCATIONS",
        "query_pl": "SELECT DISTINCT Location_Name FROM LOCATIONS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the distinct location names?",
        "question_original_pl": "Jakie są nazwy poszczególnych lokalizacji?",
        "question": "What are the different position names?",
        "question_pl": "Jakie są różne nazwy stanowisk?",
        "query": "SELECT DISTINCT Location_Name FROM LOCATIONS",
        "query_pl": "SELECT DISTINCT Location_Name FROM LOCATIONS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show the names and details of all the staff members.",
        "question_original_pl": "Pokaż nazwiska i dane wszystkich pracowników.",
        "question": "Show the names and information of all the employee members.",
        "question_pl": "Pokaż nazwiska i informacje o wszystkich pracownikach.",
        "query": "SELECT Name ,  Other_Details FROM Staff",
        "query_pl": "SELECT Name ,  Other_Details FROM Staff"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the name and detail of each staff member?",
        "question_original_pl": "Jakie jest imię i nazwisko oraz szczegóły dotyczące każdego członka personelu?",
        "question": "What is the name and information of each staff member?",
        "question_pl": "Jakie jest imię i nazwisko oraz informacje o każdym członku personelu?",
        "query": "SELECT Name ,  Other_Details FROM Staff",
        "query_pl": "SELECT Name ,  Other_Details FROM Staff"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show details of all visitors.",
        "question_original_pl": "Pokaż szczegóły wszystkich odwiedzających.",
        "question": "Show information of all visitors.",
        "question_pl": "Pokaż informacje o wszystkich odwiedzających.",
        "query": "SELECT Tourist_Details FROM VISITORS",
        "query_pl": "SELECT Tourist_Details FROM VISITORS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the detail of each visitor?",
        "question_original_pl": "Jakie są szczegóły dotyczące każdego odwiedzającego?",
        "question": "What is the information of each visitor?",
        "question_pl": "Jakie są informacje o każdym odwiedzającym?",
        "query": "SELECT Tourist_Details FROM VISITORS",
        "query_pl": "SELECT Tourist_Details FROM VISITORS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the address of the location \"UK Gallery\"?",
        "question_original_pl": "Jaki jest adres lokalizacji \"UK Gallery\"?",
        "question": "What is the address of the position \"UK Gallery\"?",
        "question_pl": "Jaki jest adres stanowiska \"UK Gallery\"?",
        "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
        "query_pl": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"Galeria UK\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find the address of the location named \"UK Gallery\".",
        "question_original_pl": "Znajdź adres lokalizacji o nazwie \"UK Gallery\".",
        "question": "Find the address of the position named \"UK Gallery\".",
        "question_pl": "Znajdź adres pozycji o nazwie \"UK Gallery\".",
        "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
        "query_pl": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"Galeria UK\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the detail of the location UK Gallery?",
        "question_original_pl": "Jakie są szczegóły lokalizacji UK Gallery?",
        "question": "What is the information of the position UK Gallery?",
        "question_pl": "Jakie są informacje o stanowisku UK Gallery?",
        "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
        "query_pl": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"Galeria UK\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Return the detail of the location named \"UK Gallery\".",
        "question_original_pl": "Zwróć szczegóły lokalizacji o nazwie \"UK Gallery\".",
        "question": "Return the information of the position named \"UK Gallery\".",
        "question_pl": "Zwróć informacje o pozycji o nazwie \"UK Gallery\".",
        "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
        "query_pl": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"Galeria UK\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Which location names contain the word \"film\"?",
        "question_original_pl": "Które nazwy lokalizacji zawierają słowo \"film\"?",
        "question": "Which position names contain the word \"film\"?",
        "question_pl": "Które nazwy stanowisk zawierają słowo \"film\"?",
        "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
        "query_pl": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find all the locations whose names contain the word \"film\".",
        "question_original_pl": "Znajdź wszystkie lokalizacje, których nazwy zawierają słowo \"film\".",
        "question": "Find all the positions whose names contain the word \"film\".",
        "question_pl": "Znajdź wszystkie stanowiska, których nazwy zawierają słowo \"film\".",
        "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
        "query_pl": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the distinct visit dates?",
        "question_original_pl": "Jakie są wyraźne daty wizyt?",
        "question": "What are the different tour dates?",
        "question_pl": "Jakie są daty poszczególnych tras?",
        "query": "SELECT DISTINCT Visit_Date FROM VISITS",
        "query_pl": "SELECT DISTINCT Visit_Date FROM VISITS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find all the distinct visit dates.",
        "question_original_pl": "Znajdź wszystkie daty wizyt.",
        "question": "Find all the different tour dates.",
        "question_pl": "Znajdź wszystkie daty tras koncertowych.",
        "query": "SELECT DISTINCT Visit_Date FROM VISITS",
        "query_pl": "SELECT DISTINCT Visit_Date FROM VISITS"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details and opening hours of the museums?",
        "question_original_pl": "Jakie są szczegóły i godziny otwarcia muzeów?",
        "question": "What are the information and opening hours of the museums?",
        "question_pl": "Jakie są informacje i godziny otwarcia muzeów?",
        "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID",
        "query_pl": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Give me the detail and opening hour for each museum.",
        "question_original_pl": "Podaj mi szczegóły i godziny otwarcia każdego muzeum.",
        "question": "Give me the information and opening hour for each museum.",
        "question_pl": "Podaj mi informacje i godziny otwarcia każdego muzeum.",
        "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID",
        "query_pl": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Which tourist attraction is associated with the photo \"game1\"? Return its name.",
        "question_original_pl": "Która atrakcja turystyczna powiązana jest ze zdjęciem \"game1\"? Podaj jej nazwę.",
        "question": "Which tourist attraction is associated with the picture \"game1\"? Return its name.",
        "question_pl": "Która atrakcja turystyczna jest powiązana z obrazkiem \"game1\"? Podaj jej nazwę.",
        "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
        "query_pl": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".",
        "question_original_pl": "Znajdź nazwy i opisy zdjęć wykonanych podczas atrakcji turystycznej o nazwie \"festiwal filmowy\".",
        "question": "Find the names and descriptions of the pictures taken at the tourist attraction called \"film festival\".",
        "question_pl": "Znajdź nazwy i opisy zdjęć zrobionych podczas atrakcji turystycznej o nazwie \"festiwal filmowy\".",
        "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"",
        "query_pl": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"festiwal filmowy\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details and ways to get to tourist attractions related to royal family?",
        "question_original_pl": "Jakie są szczegóły i sposoby dotarcia do atrakcji turystycznych związanych z rodziną królewską?",
        "question": "What are the information and ways to get to tourist attractions related to royal family?",
        "question_pl": "Jakie są informacje i sposoby dotarcia do atrakcji turystycznych związanych z rodziną królewską?",
        "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID",
        "query_pl": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.",
        "question_original_pl": "Które atrakcje turystyczne są związane z rodziną królewską? Podaj mi ich szczegóły i jak możemy się tam dostać.",
        "question": "Which tourist attractions are related to royal family? Tell me their information and how we can get there.",
        "question_pl": "Które atrakcje turystyczne są związane z rodziną królewską? Podaj mi informacje o nich i jak możemy się tam dostać.",
        "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID",
        "query_pl": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details of the shops that can be accessed by walk?",
        "question_original_pl": "Jakie są szczegóły sklepów, do których można dotrzeć pieszo?",
        "question": "What are the information of the shops that can be accessed by walk?",
        "question_pl": "Jakie są informacje o sklepach, do których można dotrzeć pieszo?",
        "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"",
        "query_pl": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"spacer\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find the details of the shops that can be reached by walk.",
        "question_original_pl": "Znajdź szczegóły sklepów, do których można dotrzeć spacerem.",
        "question": "Find the information of the shops that can be reached by walk.",
        "question_pl": "Znajdź informacje o sklepach, do których można dotrzeć pieszo.",
        "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"",
        "query_pl": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"spacer\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the name of the staff that is in charge of the attraction named \"US museum\"?",
        "question_original_pl": "Jak nazywa się personel odpowiedzialny za atrakcję o nazwie \"Muzeum USA\"?",
        "question": "What is the name of the employee that is in charge of the attraction named \"US museum\"?",
        "question_pl": "Jak nazywa się pracownik odpowiedzialny za atrakcję o nazwie \"Muzeum USA\"?",
        "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"",
        "query_pl": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"Muzeum USA\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details of the markets that can be accessed by walk or bus?",
        "question_original_pl": "Jakie są szczegóły rynków, do których można dotrzeć pieszo lub autobusem?",
        "question": "What are the information of the markets that can be accessed by walk or bus?",
        "question_pl": "Jakie są informacje o rynkach, do których można dotrzeć pieszo lub autobusem?",
        "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"",
        "query_pl": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"spacer\" OR  T2.How_to_Get_There  =  \"autobus\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find the details of all the markets that are accessible by walk or bus.",
        "question_original_pl": "Znajdź szczegóły wszystkich rynków, do których można dotrzeć pieszo lub autobusem.",
        "question": "Find the information of all the markets that are accessible by walk or bus.",
        "question_pl": "Znajdź informacje o wszystkich rynkach, do których można dotrzeć pieszo lub autobusem.",
        "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"",
        "query_pl": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"spacer\" OR  T2.How_to_Get_There  =  \"autobus\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the visit date and details of the visitor whose detail is 'Vincent'?",
        "question_original_pl": "Jaka jest data wizyty i dane odwiedzającego, którego dane to \"Vincent\"?",
        "question": "What are the tour date and information of the visitor whose detail is 'Vincent'?",
        "question_pl": "Jaka jest data wycieczki i informacje o odwiedzającym, którego dane to \"Vincent\"?",
        "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
        "query_pl": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Find the visit date and details of the tourist whose detail is 'Vincent'",
        "question_original_pl": "Znajdź datę i szczegóły wizyty turysty, którego dane to \"Vincent\".",
        "question": "Find the tour date and information of the tourist whose detail is 'Vincent'",
        "question_pl": "Znajdź datę wycieczki i informacje o turyście, którego dane to \"Vincent\".",
        "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
        "query_pl": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.",
        "question_original_pl": "Dla każdej atrakcji turystycznej podaj jej nazwę i datę, kiedy odwiedzili ją turyści o imieniu Vincent lub Vivian.",
        "question": "For each tourist attraction, return its name and the day when the tourists named Vincent or Vivian visited there.",
        "question_pl": "Dla każdej atrakcji turystycznej podaj jej nazwę i dzień, w którym odwiedzili ją turyści o imieniu Vincent lub Vivian.",
        "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"",
        "query_pl": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\""
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show the average price of hotels for each star rating code.",
        "question_original_pl": "Pokaż średnią cenę hoteli dla każdego kodu klasyfikacji gwiazdkowej.",
        "question": "Show the average price of hotels for each star rating number.",
        "question_pl": "Pokaż średnią cenę hoteli dla każdej liczby gwiazdek.",
        "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code",
        "query_pl": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What is the average price range of hotels for each each star rating code?",
        "question_original_pl": "Jaki jest średni przedział cenowy hoteli dla każdego kodu klasyfikacji gwiazdkowej?",
        "question": "What is the average price range of hotels for each each star rating number?",
        "question_pl": "Jaki jest średni przedział cenowy hoteli dla każdej liczby gwiazdek?",
        "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code",
        "query_pl": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show the details of the top 3 most expensive hotels.",
        "question_original_pl": "Pokaż szczegóły 3 najdroższych hoteli.",
        "question": "Show the information of the top 3 most expensive hotels.",
        "question_pl": "Pokaż informacje o 3 najdroższych hotelach.",
        "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
        "query_pl": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details of the three most expensive hotels?",
        "question_original_pl": "Jakie są szczegóły trzech najdroższych hoteli?",
        "question": "What are the information of the three most expensive hotels?",
        "question_pl": "Jakie są informacje o trzech najdroższych hotelach?",
        "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
        "query_pl": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show the details and star ratings of the 3 least expensive hotels.",
        "question_original_pl": "Pokaż szczegóły i oceny gwiazdkowe 3 najtańszych hoteli.",
        "question": "Show the information and star ratings of the 3 least expensive hotels.",
        "question_pl": "Pokaż informacje i oceny gwiazdkowe 3 najtańszych hoteli.",
        "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
        "query_pl": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "What are the details and star ratings of the three hotels with the lowest price ranges?",
        "question_original_pl": "Jakie są szczegóły i oceny gwiazdkowe trzech hoteli o najniższych przedziałach cenowych?",
        "question": "What are the information and star ratings of the three hotels with the lowest price ranges?",
        "question_pl": "Jakie są informacje i oceny gwiazdkowe trzech hoteli o najniższych przedziałach cenowych?",
        "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
        "query_pl": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
    },
    {
        "db_id": "cre_Theme_park",
        "question_original": "Show the description and code of the attraction type most tourist attractions belong to.",
        "question_original_pl": "Pokaż opis i kod typu atrakcji, do którego należy większość atrakcji turystycznych.",
        "question": "Show the describing content and number of the attraction type most tourist attractions belong to.",
        "question_pl": "Pokaż opisującą treść i numer typu atrakcji, do którego należy większość atrakcji turystycznych.",
        "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "How many video game types exist?",
        "question_original_pl": "Ile istnieje rodzajów gier wideo?",
        "question": "How many video game categories exist?",
        "question_pl": "Ile istnieje kategorii gier wideo?",
        "query": "SELECT count(DISTINCT gtype) FROM Video_games",
        "query_pl": "SELECT count(DISTINCT gtype) FROM Video_games"
    },
    {
        "db_id": "game_1",
        "question_original": "What is the count of different game types?",
        "question_original_pl": "Jaka jest liczba różnych typów gier?",
        "question": "What is the count of different game categories?",
        "question_pl": "Jaka jest liczba różnych kategorii gier?",
        "query": "SELECT count(DISTINCT gtype) FROM Video_games",
        "query_pl": "SELECT count(DISTINCT gtype) FROM Video_games"
    },
    {
        "db_id": "game_1",
        "question_original": "Show all video game types.",
        "question_original_pl": "Pokaż wszystkie typy gier wideo.",
        "question": "Show all video game categories.",
        "question_pl": "Pokaż wszystkie kategorie gier wideo.",
        "query": "SELECT DISTINCT gtype FROM Video_games",
        "query_pl": "SELECT DISTINCT gtype FROM Video_games"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the different types of video games?",
        "question_original_pl": "Jakie są różne rodzaje gier wideo?",
        "question": "What are the different categories of video games?",
        "question_pl": "Jakie są różne kategorie gier wideo?",
        "query": "SELECT DISTINCT gtype FROM Video_games",
        "query_pl": "SELECT DISTINCT gtype FROM Video_games"
    },
    {
        "db_id": "game_1",
        "question_original": "Show all video games and their types in the order of their names.",
        "question_original_pl": "Pokaż wszystkie gry wideo i ich typy w kolejności ich nazw.",
        "question": "Show all video games and their categories in the order of their names.",
        "question_pl": "Pokaż wszystkie gry wideo i ich kategorie w kolejności ich nazw.",
        "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname",
        "query_pl": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the names of all the video games and their types in alphabetical order?",
        "question_original_pl": "Jak nazywają się wszystkie gry wideo i ich rodzaje w kolejności alfabetycznej?",
        "question": "What are the names of all the video games and their categories in alphabetical order?",
        "question_pl": "Jak nazywają się wszystkie gry wideo i ich kategorie w kolejności alfabetycznej?",
        "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname",
        "query_pl": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
    },
    {
        "db_id": "game_1",
        "question_original": "What is the type of video game Call of Destiny.",
        "question_original_pl": "Jaki jest typ gry wideo Call of Destiny.",
        "question": "What is the category of video game Call of Destiny.",
        "question_pl": "Jaka jest kategoria gry wideo Call of Destiny.",
        "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
        "query_pl": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
    },
    {
        "db_id": "game_1",
        "question_original": "What type of game is Call of Destiny?",
        "question_original_pl": "Jakim typem gry jest Call of Destiny?",
        "question": "What category of game is Call of Destiny?",
        "question_pl": "Do jakiej kategorii należy gra Call of Destiny?",
        "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
        "query_pl": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
    },
    {
        "db_id": "game_1",
        "question_original": "Show all video game types and the number of video games in each type.",
        "question_original_pl": "Pokaż wszystkie typy gier wideo i liczbę gier wideo w każdym typie.",
        "question": "Show all video game categories and the number of video games in each category.",
        "question_pl": "Pokaż wszystkie kategorie gier wideo i liczbę gier wideo w każdej kategorii.",
        "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype",
        "query_pl": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the types of video games and how many are in each type?",
        "question_original_pl": "Jakie są rodzaje gier wideo i ile jest gier każdego rodzaju?",
        "question": "What are the categories of video games and how many are in each category?",
        "question_pl": "Jakie są kategorie gier wideo i ile jest ich w każdej kategorii?",
        "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype",
        "query_pl": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
    },
    {
        "db_id": "game_1",
        "question_original": "Which game type has most number of games?",
        "question_original_pl": "Który typ gry ma największą liczbę gier?",
        "question": "Which game category has most number of games?",
        "question_pl": "Która kategoria gier ma najwięcej tytułów?",
        "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "What type has the most games?",
        "question_original_pl": "Jaki typ ma najwięcej gier?",
        "question": "What category has the most games?",
        "question_pl": "W której kategorii jest najwięcej gier?",
        "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "Which game type has least number of games?",
        "question_original_pl": "Który typ gry ma najmniejszą liczbę gier?",
        "question": "Which game category has least number of games?",
        "question_pl": "Która kategoria gier ma najmniejszą liczbę gier?",
        "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "What is the type with the fewest games?",
        "question_original_pl": "Jaki jest typ z najmniejszą liczbą gier?",
        "question": "What is the category with the fewest games?",
        "question_pl": "Jaka jest kategoria z najmniejszą liczbą gier?",
        "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1",
        "query_pl": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the ids of all students who have advisor number 1121?",
        "question_original_pl": "Jakie są identyfikatory wszystkich studentów, którzy mają numer doradcy 1121?",
        "question": "What are the ids of all students who have adviser number 1121?",
        "question_pl": "Jakie są identyfikatory wszystkich uczniów, którzy mają numer doradcy 1121?",
        "query": "SELECT StuID FROM Student WHERE Advisor  =  1121",
        "query_pl": "SELECT StuID FROM Student WHERE Advisor  =  1121"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the first names for all students who are from the major numbered 600?",
        "question_original_pl": "Jak nazywają się wszyscy studenci z kierunku o numerze 600?",
        "question": "What are the forenames for all students who are from the major numbered 600?",
        "question_pl": "Jakie są imiona wszystkich studentów z kierunku o numerze 600?",
        "query": "SELECT Fname FROM Student WHERE Major  =  600",
        "query_pl": "SELECT Fname FROM Student WHERE Major  =  600"
    },
    {
        "db_id": "game_1",
        "question_original": "Show the average, minimum, and maximum age for different majors.",
        "question_original_pl": "Pokaż średni, minimalny i maksymalny wiek dla różnych kierunków studiów.",
        "question": "Show the average, minimum, and maximum age for different discipline.",
        "question_pl": "Pokaż średni, minimalny i maksymalny wiek dla różnych dyscyplin.",
        "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major",
        "query_pl": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
    },
    {
        "db_id": "game_1",
        "question_original": "What are the average, minimum, and max ages for each of the different majors?",
        "question_original_pl": "Jaki jest średni, minimalny i maksymalny wiek dla każdego z kierunków studiów?",
        "question": "What are the average, minimum, and max ages for each of the different discipline?",
        "question_pl": "Jaki jest średni, minimalny i maksymalny wiek dla każdej z dyscyplin?",
        "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major",
        "query_pl": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
    },
    {
        "db_id": "game_1",
        "question_original": "How many sports do we have?",
        "question_original_pl": "Ile mamy dyscyplin sportowych?",
        "question": "How many physical exercise do we have?",
        "question_pl": "Ile mamy ćwiczeń fizycznych?",
        "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
        "query_pl": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
    },
    {
        "db_id": "game_1",
        "question_original": "How many different types of sports do we offer?",
        "question_original_pl": "Ile różnych sportów oferujemy?",
        "question": "How many different types of physical exercise do we offer?",
        "question_pl": "Ile różnych rodzajów ćwiczeń fizycznych oferujemy?",
        "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
        "query_pl": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
    },
    {
        "db_id": "game_1",
        "question_original": "How many different students are involved in sports?",
        "question_original_pl": "Ilu różnych uczniów uprawia sport?",
        "question": "How many different students are involved in physical exercise?",
        "question_pl": "Ilu różnych uczniów bierze udział w ćwiczeniach fizycznych?",
        "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo",
        "query_pl": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
    },
    {
        "db_id": "game_1",
        "question_original": "Show last names for all student who are on scholarship.",
        "question_original_pl": "Pokaż nazwiska wszystkich stypendystów.",
        "question": "Show family names for all student who are on scholarship.",
        "question_pl": "Pokaż nazwiska wszystkich studentów, którzy otrzymują stypendium.",
        "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'",
        "query_pl": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'"
    },
    {
        "db_id": "game_1",
        "question_original": "What is the first name and last name of the student who have most number of sports?",
        "question_original_pl": "Jakie jest imię i nazwisko ucznia, który uprawia najwięcej sportów?",
        "question": "What is the forename and surname of the student who have most number of sports?",
        "question_pl": "Jakie jest imię i nazwisko ucznia, który ma największą liczbę dyscyplin sportowych?",
        "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "game_1",
        "question_original": "Find the last and first name of students who are playing Football or Lacrosse.",
        "question_original_pl": "Znajdź nazwisko i imię uczniów, którzy grają w piłkę nożną lub lacrosse.",
        "question": "Find the full name of students who are playing Football or Lacrosse.",
        "question_pl": "Znajdź pełne imiona i nazwiska uczniów, którzy grają w piłkę nożną lub lacrosse.",
        "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"",
        "query_pl": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Piłka nożna\" OR T1.SportName  =  \"Lacrosse\""
    },
    {
        "db_id": "game_1",
        "question_original": "Find the first name and age of the students who are playing both Football and Lacrosse.",
        "question_original_pl": "Znajdź imię i wiek uczniów, którzy grają zarówno w piłkę nożną, jak i lacrosse.",
        "question": "Find the forename and age of the students who are playing both Football and Lacrosse.",
        "question_pl": "Znajdź imiona i wiek uczniów, którzy grają zarówno w piłkę nożną, jak i lacrosse.",
        "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")",
        "query_pl": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Piłka nożna\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")"
    },
    {
        "db_id": "game_1",
        "question_original": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games.",
        "question_original_pl": "Znajdź nazwisko i płeć uczniów, którzy grają zarówno w Call of Destiny, jak i Works of Widenius.",
        "question": "Find the family name and gender of the students who are playing both Call of Destiny and Works of Widenius games.",
        "question_pl": "Znajdź nazwisko i płeć uczniów, którzy grają w gry Call of Destiny i Works of Widenius.",
        "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")",
        "query_pl": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Dzieła Wideniusa\")"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the names of all the customers?",
        "question_original_pl": "Jak nazywają się wszyscy klienci?",
        "question": "What are the names of all the clients?",
        "question_pl": "Jakie są nazwy wszystkich klientów?",
        "query": "SELECT customer_name FROM customers",
        "query_pl": "SELECT customer_name FROM customers"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Return the total number of distinct customers.",
        "question_original_pl": "Zwróć całkowitą liczbę odrębnych klientów.",
        "question": "Return the total number of different clients.",
        "question_pl": "Zwróć całkowitą liczbę różnych klientów.",
        "query": "SELECT count(*) FROM customers",
        "query_pl": "SELECT count(*) FROM customers"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the average order quantity per order.",
        "question_original_pl": "Znajdź średnią ilość zamówienia na zamówienie.",
        "question": "Find the average amount of order per order.",
        "question_pl": "Znajdź średnią kwotę zamówienia na zamówienie.",
        "query": "SELECT avg(order_quantity) FROM order_items",
        "query_pl": "SELECT avg(order_quantity) FROM order_items"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the \"date became customers\" of the customers whose ID is between 10 and 20.",
        "question_original_pl": "Znajdź \"data stała się klientem\" klientów, których ID mieści się w przedziale od 10 do 20.",
        "question": "Find the \"date became clients\" of the clients whose ID is between 10 and 20.",
        "question_pl": "Znajdź \"data stania się klientem\" klientów, których ID mieści się w przedziale od 10 do 20.",
        "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
        "query_pl": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the dates when customers with ids between 10 and 20 became customers?",
        "question_original_pl": "Jakie są daty, w których klienci o identyfikatorach od 10 do 20 stali się klientami?",
        "question": "What are the dates when clients with ids between 10 and 20 became clients?",
        "question_pl": "Jakie są daty, w których klienci z identyfikatorami od 10 do 20 stali się klientami?",
        "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20",
        "query_pl": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the names of customers using the most popular payment method?",
        "question_original_pl": "Jak nazywają się klienci korzystający z najpopularniejszej metody płatności?",
        "question": "What are the names of clients using the most popular payment method?",
        "question_pl": "Jakie są nazwy klientów korzystających z najpopularniejszej metody płatności?",
        "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the name of the customers who use the most frequently used payment method.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy korzystają z najczęściej używanej metody płatności.",
        "question": "Find the name of the clients who use the most frequently used payment method.",
        "question_pl": "Znajdź nazwy klientów, którzy korzystają z najczęściej używanej metody płatności.",
        "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are all the payment methods?",
        "question_original_pl": "Jakie są wszystkie metody płatności?",
        "question": "What are all the payment types?",
        "question_pl": "Jakie są wszystkie rodzaje płatności?",
        "query": "SELECT DISTINCT payment_method FROM customers",
        "query_pl": "SELECT DISTINCT payment_method FROM customers"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Return all the distinct payment methods used by customers.",
        "question_original_pl": "Zwróć wszystkie różne metody płatności używane przez klientów.",
        "question": "Return all the different payment types used by clients.",
        "question_pl": "Zwróć wszystkie różne typy płatności używane przez klientów.",
        "query": "SELECT DISTINCT payment_method FROM customers",
        "query_pl": "SELECT DISTINCT payment_method FROM customers"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the details of all products?",
        "question_original_pl": "Jakie są szczegóły wszystkich produktów?",
        "question": "What are the information of all goods?",
        "question_pl": "Jakie są informacje o wszystkich towarach?",
        "query": "SELECT DISTINCT product_details FROM products",
        "query_pl": "SELECT DISTINCT product_details FROM products"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Return the the details of all products.",
        "question_original_pl": "Zwróć szczegóły wszystkich produktów.",
        "question": "Return the the information of all goods.",
        "question_pl": "Zwróć informacje o wszystkich towarach.",
        "query": "SELECT DISTINCT product_details FROM products",
        "query_pl": "SELECT DISTINCT product_details FROM products"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Which customer's name contains \"Alex\"? Find the full name.",
        "question_original_pl": "Nazwa którego klienta zawiera słowo \"Alex\"? Znajdź pełną nazwę.",
        "question": "Which client's name contains \"Alex\"? Find the full name.",
        "question_pl": "Imię którego klienta zawiera \"Alex\"? Znajdź pełne imię i nazwisko.",
        "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
        "query_pl": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\"",
        "question_original_pl": "Znajdź szczegóły produktów, których szczegóły zawierają słowo \"Latte\" lub \"Americano\".",
        "question": "Find the information of goods whose information contains the word \"Latte\" or the word \"Americano\"",
        "question_pl": "Znajdź informacje o towarach, których informacje zawierają słowo \"Latte\" lub \"Americano\".",
        "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"",
        "query_pl": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.",
        "question_original_pl": "Szczegóły którego produktu zawierają słowo \"Latte\" lub \"Americano\"? Zwróć pełny szczegół.",
        "question": "Which goods's information contains the word \"Latte\" or \"Americano\"? Return the full information.",
        "question_pl": "Które informacje o towarach zawierają słowo \"Latte\" lub \"Americano\"? Zwróć pełne informacje.",
        "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"",
        "query_pl": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the address content of the customer named \"Maudie Kertzmann\"?",
        "question_original_pl": "Jaka jest zawartość adresu klienta o nazwie \"Maudie Kertzmann\"?",
        "question": "What is the location content of the client named \"Maudie Kertzmann\"?",
        "question_pl": "Jaka jest zawartość lokalizacji klienta o nazwie \"Maudie Kertzmann\"?",
        "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"",
        "query_pl": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Return the address content for the customer whose name is \"Maudie Kertzmann\".",
        "question_original_pl": "Zwróć zawartość adresu dla klienta, który nazywa się \"Maudie Kertzmann\".",
        "question": "Return the location content for the client whose name is \"Maudie Kertzmann\".",
        "question_pl": "Zwróć zawartość lokalizacji dla klienta o nazwie \"Maudie Kertzmann\".",
        "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"",
        "query_pl": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the name of customers who are living in Colorado?",
        "question_original_pl": "Znajdź nazwy klientów, którzy mieszkają w Kolorado?",
        "question": "Find the name of clients who are living in Colorado?",
        "question_pl": "Znaleźć nazwiska klientów, którzy mieszkają w Kolorado?",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Kolorado\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the cities no customers live in?",
        "question_original_pl": "W jakich miastach nie mieszkają klienci?",
        "question": "What are the towns no clients live in?",
        "question_pl": "W jakich miastach nie mieszkają Twoi klienci?",
        "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)",
        "query_pl": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "List all the distinct cities",
        "question_original_pl": "Wymień wszystkie odrębne miasta",
        "question": "List all the different towns",
        "question_pl": "Wymień wszystkie różne miasta",
        "query": "SELECT DISTINCT city FROM addresses",
        "query_pl": "SELECT DISTINCT city FROM addresses"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the state and country of all cities with post code starting with 4.",
        "question_original_pl": "Znajdź stan i kraj wszystkich miast z kodem pocztowym zaczynającym się od 4.",
        "question": "Find the state and nationality of all cities with post code starting with 4.",
        "question_pl": "Znajdź stan i narodowość wszystkich miast z kodem pocztowym zaczynającym się od 4.",
        "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
        "query_pl": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the state and country of all the cities that have post codes starting with 4.\\",
        "question_original_pl": "Jaki jest stan i kraj wszystkich miast, których kody pocztowe zaczynają się od 4.\\?",
        "question": "What are the state and nationality of all the cities that have post codes starting with 4.\\",
        "question_pl": "Jaki jest stan i narodowość wszystkich miast, których kody pocztowe zaczynają się od 4.\\?",
        "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
        "query_pl": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "List the countries having more than 4 addresses listed.",
        "question_original_pl": "Wymień kraje posiadające więcej niż 4 adresy na liście.",
        "question": "List the nationalities having more than 4 locations listed.",
        "question_pl": "Wymień narodowości posiadające więcej niż 4 lokalizacje.",
        "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4",
        "query_pl": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "For which countries are there more than four distinct addresses listed?",
        "question_original_pl": "Dla których krajów wymienione są więcej niż cztery różne adresy?",
        "question": "For which nationalities are there more than four different locations listed?",
        "question_pl": "Dla których narodowości wymieniono więcej niż cztery różne lokalizacje?",
        "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4",
        "query_pl": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?",
        "question_original_pl": "Który kanał kontaktu został wykorzystany przez klienta o nazwie \"Tillman Ernser\"?",
        "question": "Which contact channel has been used by the client with name \"Tillman Ernser\"?",
        "question_pl": "Który kanał kontaktowy został użyty przez klienta o nazwie \"Tillman Ernser\"?",
        "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
        "query_pl": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".",
        "question_original_pl": "Znajdź kod kanału kontaktowego, który został użyty przez klienta o nazwie \"Tillman Ernser\".",
        "question": "Find the contact channel code that was used by the client named \"Tillman Ernser\".",
        "question_pl": "Znajdź kod kanału kontaktowego, który był używany przez klienta o nazwie \"Tillman Ernser\".",
        "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
        "query_pl": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the channel code and contact number of the customer contact channel that was active for the longest time?",
        "question_original_pl": "Jaki jest kod kanału i numer kontaktowy kanału kontaktu z klientem, który był aktywny najdłużej?",
        "question": "What is the channel code and contact number of the client contact channel that was active for the longest time?",
        "question_pl": "Jaki jest kod kanału i numer kontaktowy kanału kontaktu z klientem, który był aktywny przez najdłuższy czas?",
        "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
        "query_pl": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Return the channel code and contact number of the customer contact channel whose active duration was the longest.",
        "question_original_pl": "Zwróć kod kanału i numer kontaktowy kanału kontaktu z klientem, którego aktywny czas trwania był najdłuższy.",
        "question": "Return the channel code and contact number of the client contact channel whose active duration was the longest.",
        "question_pl": "Zwróć kod kanału i numer kontaktowy kanału kontaktu klienta, którego czas aktywności był najdłuższy.",
        "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
        "query_pl": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the name of the customer that has purchased the most items?",
        "question_original_pl": "Jak nazywa się klient, który kupił najwięcej produktów?",
        "question": "What is the name of the client that has purchased the most items?",
        "question_pl": "Jak nazywa się klient, który zakupił najwięcej produktów?",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Give me the name of the customer who ordered the most items in total.",
        "question_original_pl": "Podaj nazwę klienta, który zamówił łącznie najwięcej produktów.",
        "question": "Give me the name of the client who ordered the most items in total.",
        "question_pl": "Podaj mi nazwę klienta, który zamówił łącznie najwięcej produktów.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the payment method of the customer that has purchased the least quantity of items?",
        "question_original_pl": "Jaka jest metoda płatności klienta, który zakupił najmniejszą liczbę produktów?",
        "question": "What is the payment type of the client that has purchased the least quantity of items?",
        "question_pl": "Jaki jest typ płatności klienta, który zakupił najmniejszą liczbę produktów?",
        "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
        "query_pl": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Tell me the payment method used by the customer who ordered the least amount of goods in total.",
        "question_original_pl": "Podaj metodę płatności użytą przez klienta, który zamówił łącznie najmniej towarów.",
        "question": "Tell me the payment type used by the client who ordered the least amount of goods in total.",
        "question_pl": "Podaj typ płatności używany przez klienta, który zamówił łącznie najmniej towarów.",
        "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
        "query_pl": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "How many types of products have Rodrick Heaney bought in total?",
        "question_original_pl": "Ile rodzajów produktów kupił w sumie Rodrick Heaney?",
        "question": "How many types of goods have Rodrick Heaney bought in total?",
        "question_pl": "Ile rodzajów towarów kupił w sumie Rodrick Heaney?",
        "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"",
        "query_pl": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the number of distinct products Rodrick Heaney has bought so far.",
        "question_original_pl": "Znajdź liczbę różnych produktów, które Rodrick Heaney kupił do tej pory.",
        "question": "Find the number of different goods Rodrick Heaney has bought so far.",
        "question_pl": "Znajdź liczbę różnych towarów, które Rodrick Heaney kupił do tej pory.",
        "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"",
        "query_pl": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the total quantity of products purchased by \"Rodrick Heaney\"?",
        "question_original_pl": "Jaka jest łączna ilość produktów zakupionych przez \"Rodrick Heaney\"?",
        "question": "What is the total number of goods purchased by \"Rodrick Heaney\"?",
        "question_pl": "Jaka jest łączna liczba towarów zakupionych przez \"Rodrick Heaney\"?",
        "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"",
        "query_pl": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".",
        "question_original_pl": "Podaj całkowitą ilość produktów zakupionych przez klienta o nazwie \"Rodrick Heaney\".",
        "question": "Tell me the total number of goods bought by the client called \"Rodrick Heaney\".",
        "question_pl": "Podaj całkowitą liczbę towarów zakupionych przez klienta o nazwie \"Rodrick Heaney\".",
        "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"",
        "query_pl": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "How many orders have detail \"Second time\"?",
        "question_original_pl": "Ile zamówień zawiera szczegóły \"Drugi raz\"?",
        "question": "How many orders have information \"Second time\"?",
        "question_pl": "Ile zamówień zawiera informację \"Drugi raz\"?",
        "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
        "query_pl": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Drugi raz\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Tell me the number of orders with \"Second time\" as order detail.",
        "question_original_pl": "Podaj liczbę zamówień z opcją \"Drugi raz\" jako szczegół zamówienia.",
        "question": "Tell me the number of orders with \"Second time\" as order information.",
        "question_pl": "Podaj liczbę zamówień z informacją o zamówieniu \"Drugi raz\".",
        "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
        "query_pl": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Drugi raz\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the customer name and date of the orders whose status is \"Delivered\".",
        "question_original_pl": "Podaj nazwę klienta i datę zamówień, których status to \"Dostarczone\".",
        "question": "What are the client name and date of the orders whose status is \"Delivered\".",
        "question_pl": "Jaka jest nazwa klienta i data zamówień, których status to \"Dostarczone\".",
        "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"",
        "query_pl": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Dostarczone\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the total number of products that are in orders with status \"Cancelled\"?",
        "question_original_pl": "Jaka jest łączna liczba produktów w zamówieniach ze statusem \"Anulowane\"?",
        "question": "What is the total number of goods that are in orders with status \"Cancelled\"?",
        "question_pl": "Jaka jest łączna liczba towarów w zamówieniach ze statusem \"Anulowane\"?",
        "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"",
        "query_pl": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Anulowane\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.",
        "question_original_pl": "Znajdź całkowitą ilość produktów powiązanych z zamówieniami o statusie \"Anulowane\".",
        "question": "Find the total number of goods associated with the orders in the \"Cancelled\" status.",
        "question_pl": "Znajdź całkowitą liczbę towarów powiązanych z zamówieniami o statusie \"Anulowane\".",
        "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"",
        "query_pl": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Anulowane\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
        "question_original_pl": "Znajdź całkowitą liczbę produktów zamówionych przed 2018-03-17 07:13:53.",
        "question": "Find the total amount of goods ordered before 2018-03-17 07:13:53.",
        "question_pl": "Znajdź całkowitą ilość towarów zamówionych przed 2018-03-17 07:13:53.",
        "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"",
        "query_pl": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the total amount of products purchased before 2018-03-17 07:13:53?",
        "question_original_pl": "Jaka jest całkowita ilość produktów zakupionych przed 2018-03-17 07:13:53?",
        "question": "What is the total amount of goods purchased before 2018-03-17 07:13:53?",
        "question_pl": "Jaka jest łączna kwota towarów zakupionych przed 2018-03-17 07:13:53?",
        "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"",
        "query_pl": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Which product has been ordered most number of times?",
        "question_original_pl": "Który produkt został zamówiony najwięcej razy?",
        "question": "Which goods has been ordered most number of times?",
        "question_pl": "Który towar został zamówiony najwięcej razy?",
        "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the most frequently ordered product? Tell me the detail of the product",
        "question_original_pl": "Jaki jest najczęściej zamawiany produkt? Opowiedz mi o szczegółach produktu",
        "question": "What is the most frequently ordered goods? Tell me the information of the goods",
        "question_pl": "Jakie towary są najczęściej zamawiane? Podaj mi informacje o towarach",
        "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the name and ID of the product whose total order quantity is the largest.",
        "question_original_pl": "Znajdź nazwę i identyfikator produktu, którego całkowita ilość zamówienia jest największa.",
        "question": "Find the name and ID of the goods whose total amount of order is the largest.",
        "question_pl": "Znajdź nazwę i identyfikator towaru, którego łączna kwota zamówienia jest największa.",
        "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",
        "query_pl": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the name and ID of the product bought the most.",
        "question_original_pl": "Podaj nazwę i identyfikator najczęściej kupowanego produktu.",
        "question": "What are the name and ID of the goods bought the most.",
        "question_pl": "Jakie są nazwy i identyfikatory najczęściej kupowanych towarów.",
        "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",
        "query_pl": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.",
        "question_original_pl": "Znajdź wszystkie adresy w East Julianaside w Teksasie lub w Gleasonmouth w Arizonie.",
        "question": "Find all the locations in East Julianaside, Texas or in Gleasonmouth, Arizona.",
        "question_pl": "Znajdź wszystkie lokalizacje w East Julianaside w Teksasie lub w Gleasonmouth w Arizonie.",
        "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\"",
        "query_pl": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Teksas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.",
        "question_original_pl": "Jakie są wszystkie adresy w East Julianaside w Teksasie lub w Gleasonmouth w Arizonie?",
        "question": "What are all the locations in East Julianaside, Texas or in Gleasonmouth, Arizona.",
        "question_pl": "Jakie są wszystkie lokalizacje w East Julianaside w Teksasie lub w Gleasonmouth w Arizonie?",
        "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\"",
        "query_pl": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Teksas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What is the name of customers who do not use Cash as payment method.",
        "question_original_pl": "Jaka jest nazwa klientów, którzy nie używają gotówki jako metody płatności.",
        "question": "What is the name of clients who do not use Cash as payment type.",
        "question_pl": "Jaka jest nazwa klientów, którzy nie używają gotówki jako rodzaju płatności.",
        "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
        "query_pl": "SELECT customer_name FROM customers WHERE payment_method != 'Gotówka'"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the names of customers who never ordered product Latte.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy nigdy nie zamówili produktu Latte.",
        "question": "Find the names of clients who never ordered goods Latte.",
        "question_pl": "Znajdź nazwiska klientów, którzy nigdy nie zamówili towarów Latte.",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are names of customers who never ordered product Latte.",
        "question_original_pl": "Jakie są nazwy klientów, którzy nigdy nie zamówili produktu Latte.",
        "question": "What are names of clients who never ordered goods Latte.",
        "question_pl": "Jakie są nazwy klientów, którzy nigdy nie zamówili towarów Latte.",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the names of customers who never made an order.",
        "question_original_pl": "Jakie są nazwy klientów, którzy nigdy nie złożyli zamówienia.",
        "question": "What are the names of clients who never made an order.",
        "question_pl": "Jakie są nazwy klientów, którzy nigdy nie złożyli zamówienia?",
        "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id",
        "query_pl": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "Find the names of customers who ordered both products Latte and Americano.",
        "question_original_pl": "Znajdź nazwiska klientów, którzy zamówili zarówno produkt Latte, jak i Americano.",
        "question": "Find the names of clients who ordered both goods Latte and Americano.",
        "question_pl": "Znajdź nazwiska klientów, którzy zamówili zarówno towar Latte, jak i Americano.",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"
    },
    {
        "db_id": "customers_and_addresses",
        "question_original": "What are the names of customers who have purchased both products Latte and Americano?",
        "question_original_pl": "Jak nazywają się klienci, którzy kupili zarówno produkt Latte, jak i Americano?",
        "question": "What are the names of clients who have purchased both goods Latte and Americano?",
        "question_pl": "Jakie są nazwy klientów, którzy kupili zarówno towary Latte, jak i Americano?",
        "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'",
        "query_pl": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the distinct Famous release dates?",
        "question_original_pl": "Jakie są różne daty premiery Famous?",
        "question": "What are the different Famous publish dates?",
        "question_pl": "Czym różnią się daty publikacji Famous?",
        "query": "SELECT distinct Famous_Release_date FROM artist",
        "query_pl": "SELECT distinct(Famous_Release_date) FROM artist"
    },
    {
        "db_id": "music_4",
        "question_original": "Give the distinct famous release dates for all artists.",
        "question_original_pl": "Podaj znane daty wydania dla wszystkich artystów.",
        "question": "Give the different famous publish dates for all artists.",
        "question_pl": "Podaj różne słynne daty publikacji dla wszystkich artystów.",
        "query": "SELECT distinct Famous_Release_date FROM artist",
        "query_pl": "SELECT distinct(Famous_Release_date) FROM artist"
    },
    {
        "db_id": "music_4",
        "question_original": "Return the dates of ceremony and the results of all music festivals",
        "question_original_pl": "Zwróć daty ceremonii i wyniki wszystkich festiwali muzycznych.",
        "question": "Return the day of ceremony and the outcomes of all music festivals",
        "question_pl": "Zwróć dzień ceremonii i wyniki wszystkich festiwali muzycznych",
        "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival",
        "query_pl": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the dates of ceremony and results for each music festival?",
        "question_original_pl": "Jakie są daty ceremonii i wyniki dla każdego festiwalu muzycznego?",
        "question": "What are the day of ceremony and outcomes for each music festival?",
        "question_pl": "Jakie są dni ceremonii i wyniki dla każdego festiwalu muzycznego?",
        "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival",
        "query_pl": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the category of music festivals with result \"Awarded\"?",
        "question_original_pl": "Jakie są kategorie festiwali muzycznych z wynikiem \"Nagrodzony\"?",
        "question": "What are the type of music festivals with result \"Awarded\"?",
        "question_pl": "Jakie są rodzaje festiwali muzycznych z wynikiem \"Przyznano\"?",
        "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
        "query_pl": "SELECT Category FROM music_festival WHERE RESULT  =  \"Przyznano\""
    },
    {
        "db_id": "music_4",
        "question_original": "Return the categories of music festivals that have the result \"Awarded\".",
        "question_original_pl": "Zwróć kategorie festiwali muzycznych, które mają wynik \"Nagrodzony\".",
        "question": "Return the type of music festivals that have the result \"Awarded\".",
        "question_pl": "Zwróć typ festiwali muzycznych, które mają wynik \"Nagrodzony\".",
        "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
        "query_pl": "SELECT Category FROM music_festival WHERE RESULT  =  \"Przyznano\""
    },
    {
        "db_id": "music_4",
        "question_original": "Please show the date of ceremony of the volumes that last more than 2 weeks on top.",
        "question_original_pl": "Podaj datę ceremonii dla tomów, które trwają dłużej niż 2 tygodnie.",
        "question": "Please show the day of ceremony of the volumes that last more than 2 weeks on top.",
        "question_pl": "Pokaż dzień ceremonii dla tomów, które trwają dłużej niż 2 tygodnie.",
        "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2",
        "query_pl": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?",
        "question_original_pl": "Jakie są daty ceremonii na festiwalach muzycznych odpowiadających objętościom trwającym ponad 2 tygodnie?",
        "question": "What are the day of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?",
        "question_pl": "Jakie są dni ceremonii na festiwalach muzycznych odpowiadających ilościom trwającym ponad 2 tygodnie na szczycie?",
        "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2",
        "query_pl": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?",
        "question_original_pl": "Jakie są daty wydania tomów powiązanych z artystą \"Gorgoroth\"?",
        "question": "What are the day of issue of volumes associated with the artist \"Gorgoroth\"?",
        "question_pl": "Jakie są daty wydania tomów związanych z artystą \"Gorgoroth\"?",
        "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"",
        "query_pl": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""
    },
    {
        "db_id": "music_4",
        "question_original": "Return the issue dates of volumes that are by the artist named Gorgoroth.",
        "question_original_pl": "Zwróć daty wydania tomów autorstwa artysty o pseudonimie Gorgoroth.",
        "question": "Return the day of issue of volumes that are by the artist named Gorgoroth.",
        "question_pl": "Zwróć dzień wydania tomów autorstwa artysty o pseudonimie Gorgoroth.",
        "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"",
        "query_pl": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""
    },
    {
        "db_id": "music_4",
        "question_original": "What is the famous release date of the artist with the oldest age?",
        "question_original_pl": "Jaka jest słynna data premiery artysty o najstarszym wieku?",
        "question": "What is the famous publish day of the artist with the oldest age?",
        "question_pl": "Jaki jest słynny dzień publikacji artysty o najstarszym wieku?",
        "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "music_4",
        "question_original": "Return the famous release date for the oldest artist.",
        "question_original_pl": "Zwróć słynną datę premiery najstarszego artysty.",
        "question": "Return the famous publish day for the oldest artist.",
        "question_pl": "Przywróć słynny dzień publikacji dla najstarszego artysty.",
        "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
        "query_pl": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
    },
    {
        "db_id": "music_4",
        "question_original": "Please show the categories of the music festivals and the count.",
        "question_original_pl": "Podaj kategorie festiwali muzycznych i ich liczbę.",
        "question": "Please show the type of the music festivals and the count.",
        "question_pl": "Podaj rodzaj festiwali muzycznych i ich liczbę.",
        "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category",
        "query_pl": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
    },
    {
        "db_id": "music_4",
        "question_original": "Return the number of music festivals of each category.",
        "question_original_pl": "Zwróć liczbę festiwali muzycznych w każdej kategorii.",
        "question": "Return the number of music festivals of each type.",
        "question_pl": "Zwróć liczbę festiwali muzycznych każdego typu.",
        "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category",
        "query_pl": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
    },
    {
        "db_id": "music_4",
        "question_original": "Please show the categories of the music festivals with count more than 1.",
        "question_original_pl": "Wskaż kategorie festiwali muzycznych z liczbą większą niż 1.",
        "question": "Please show the type of the music festivals with count more than 1.",
        "question_pl": "Wskaż typ festiwali muzycznych z liczbą większą niż 1.",
        "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the categories of music festivals for which there have been more than 1 music festival?",
        "question_original_pl": "Jakie są kategorie festiwali muzycznych, dla których zorganizowano więcej niż 1 festiwal muzyczny?",
        "question": "What are the type of music festivals for which there have been more than 1 music festival?",
        "question_pl": "Jakie są rodzaje festiwali muzycznych, dla których zorganizowano więcej niż 1 festiwal muzyczny?",
        "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
        "query_pl": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
        "question_original_pl": "Jakie są daty ceremonii festiwali muzycznych z kategorią \"Najlepsza piosenka\" i wynikiem \"Nagrodzony\"?",
        "question": "What are the day of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?",
        "question_pl": "Jakie są dni ceremonii festiwali muzycznych z kategorią \"Najlepsza piosenka\" i wynikiem \"Nagrodzony\"?",
        "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"",
        "query_pl": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Najlepsza piosenka\" AND RESULT  =  \"Przyznano\""
    },
    {
        "db_id": "music_4",
        "question_original": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".",
        "question_original_pl": "Zwróć daty ceremonii odpowiadających festiwalom muzycznym, które miały kategorię \"Najlepsza piosenka\" i wynik \"Przyznano\".",
        "question": "Return the day of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".",
        "question_pl": "Zwróć dzień ceremonii odpowiadający festiwalom muzycznym, które miały kategorię \"Najlepsza piosenka\" i wynik \"Przyznano\".",
        "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"",
        "query_pl": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Najlepsza piosenka\" AND RESULT  =  \"Przyznano\""
    },
    {
        "db_id": "music_4",
        "question_original": "What is the issue date of the volume with the minimum weeks on top?",
        "question_original_pl": "Jaka jest data wydania tomu z minimalną liczbą tygodni na górze?",
        "question": "What is the issue day of the volume with the minimum weeks on top?",
        "question_pl": "Jaki jest dzień emisji wolumenu z minimalnymi tygodniami na górze?",
        "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
        "query_pl": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
    },
    {
        "db_id": "music_4",
        "question_original": "Return the issue date of the volume that has spent the fewest weeks on top.",
        "question_original_pl": "Zwróć datę wydania tomu, który spędził najmniej tygodni na szczycie.",
        "question": "Return the issue day of the volume that has spent the fewest weeks on top.",
        "question_pl": "Zwróć dzień wydania woluminu, który spędził najmniej tygodni na szczycie.",
        "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
        "query_pl": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
    },
    {
        "db_id": "music_4",
        "question_original": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.",
        "question_original_pl": "Pokaż wyniki festiwali muzycznych i liczbę festiwali muzycznych, które miały miejsce, uporządkowane według tej liczby.",
        "question": "Please show the outcomes of music festivals and the number of music festivals that have had each, ordered by this count.",
        "question_pl": "Wskaż wyniki festiwali muzycznych i liczbę festiwali muzycznych, które miały miejsce, uporządkowane według tej liczby.",
        "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC",
        "query_pl": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
    },
    {
        "db_id": "music_4",
        "question_original": "What are the issue dates of volumes associated with the artist aged 23 or younger?",
        "question_original_pl": "Jakie są daty wydania tomów związanych z artystą w wieku 23 lat lub młodszym?",
        "question": "What are the issue days of volumes associated with the artist aged 23 or younger?",
        "question_pl": "Jakie są dni emisji woluminów związanych z artystą w wieku 23 lat lub młodszym?",
        "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23",
        "query_pl": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
    },
    {
        "db_id": "music_4",
        "question_original": "Return the issue dates of volumes by artists who are at most 23 years old?",
        "question_original_pl": "Zwróć daty wydania tomów autorstwa artystów, którzy mają co najwyżej 23 lata?",
        "question": "Return the issue days of volumes by artists who are at most 23 years old?",
        "question_pl": "Przywrócić dni wydawania tomów przez artystów, którzy mają co najwyżej 23 lata?",
        "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23",
        "query_pl": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
    },
    {
        "db_id": "roller_coaster",
        "question_original": "What are the lengths and heights of roller coasters?",
        "question_original_pl": "Jakie są długości i wysokości kolejek górskich?",
        "question": "What are the lengths and stature of roller coasters?",
        "question_pl": "Jakie są długości i rozmiary kolejek górskich?",
        "query": "SELECT LENGTH ,  Height FROM roller_coaster",
        "query_pl": "SELECT LENGTH ,  Height FROM roller_coaster"
    },
    {
        "db_id": "roller_coaster",
        "question_original": "List the names of countries whose language is not \"German\".",
        "question_original_pl": "Wymień nazwy krajów, których językiem nie jest \"niemiecki\".",
        "question": "List the names of nations whose language is not \"German\".",
        "question_pl": "Wymień nazwy narodów, których językiem nie jest \"niemiecki\".",
        "query": "SELECT Name FROM country WHERE Languages != \"German\"",
        "query_pl": "SELECT Name FROM country WHERE Languages != \"Niemiecki\""
    },
    {
        "db_id": "roller_coaster",
        "question_original": "What are the speeds of the longest roller coaster?",
        "question_original_pl": "Jakie są prędkości najdłuższej kolejki górskiej?",
        "question": "What are the velocity of the longest roller coaster?",
        "question_pl": "Jaka jest prędkość najdłuższej kolejki górskiej?",
        "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
        "query_pl": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"
    },
    {
        "db_id": "roller_coaster",
        "question_original": "Show the name and population of the country that has the highest roller coaster.",
        "question_original_pl": "Podaj nazwę i populację kraju, w którym znajduje się najwyższa kolejka górska.",
        "question": "Show the name and number of people of the nation that has the highest roller coaster.",
        "question_pl": "Podaj nazwę i liczbę mieszkańców kraju, w którym znajduje się najwyższa kolejka górska.",
        "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1",
        "query_pl": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1"
    },
    {
        "db_id": "roller_coaster",
        "question_original": "What are the country names, area and population which has both roller coasters with speed higher",
        "question_original_pl": "Jakie są nazwy krajów, ich powierzchnia i populacja, w których znajdują się kolejki górskie o większej prędkości?",
        "question": "What are the nation names, district and the number of people which has both roller coasters with speed higher",
        "question_pl": "Jakie są nazwy krajów, dzielnice i liczba osób, które mają obie kolejki górskie o większej prędkości?",
        "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55",
        "query_pl": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55"
    },
    {
        "db_id": "ship_1",
        "question_original": "What is the name, type, and flag of the ship that was built in the most recent year?",
        "question_original_pl": "Jaka jest nazwa, typ i bandera statku zbudowanego w ostatnim roku?",
        "question": "What is the name, type, and banner of the vessel that was built in the most recent year?",
        "question_pl": "Jaka jest nazwa, typ i bandera statku, który został zbudowany w ostatnim roku?",
        "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1",
        "query_pl": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"
    },
    {
        "db_id": "ship_1",
        "question_original": "Group by ships by flag, and return number of ships that have each flag.",
        "question_original_pl": "Pogrupuj statki według bander i zwróć liczbę statków pod każdą banderą.",
        "question": "Group by vessels by banner, and return number of vessels that have each banner.",
        "question_pl": "Pogrupuj statki według banerów i zwróć liczbę statków z każdym banerem.",
        "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag",
        "query_pl": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
    },
    {
        "db_id": "ship_1",
        "question_original": "What are the different ship flags, and how many ships have each?",
        "question_original_pl": "Jakie są różne bandery statków i ile statków ma każdą z nich?",
        "question": "What are the different vessel banners, and how many vessels have each?",
        "question_pl": "Jakie są różne sztandary statków i ile statków ma każdy z nich?",
        "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag",
        "query_pl": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
    },
    {
        "db_id": "ship_1",
        "question_original": "Which flag is most widely used among all ships?",
        "question_original_pl": "Która flaga jest najczęściej używana wśród wszystkich statków?",
        "question": "Which banner is most widely used among all vessels?",
        "question_pl": "Który baner jest najczęściej używany wśród wszystkich statków?",
        "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_1",
        "question_original": "Return the flag that is most common among all ships.",
        "question_original_pl": "Zwróć flagę, która jest najczęściej używana przez wszystkie statki.",
        "question": "Return the banner that is most common among all vessels.",
        "question_pl": "Zwróć baner, który jest najczęściej używany przez wszystkie statki.",
        "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_1",
        "question_original": "Find the ship type that are used by both ships with Panama and Malta flags.",
        "question_original_pl": "Znajdź typ statku, który jest używany zarówno przez statki pływające pod banderą Panamy, jak i Malty.",
        "question": "Find the vessel category that are used by both vessels with Panama and Malta flags.",
        "question_pl": "Znajdź kategorię statku, z której korzystają zarówno statki pływające pod banderą Panamy, jak i Malty.",
        "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'",
        "query_pl": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"
    },
    {
        "db_id": "ship_1",
        "question_original": "What types of ships have both ships that have Panama Flags and Malta flags?",
        "question_original_pl": "Jakie typy statków mają zarówno flagi panamskie, jak i maltańskie?",
        "question": "What categories of vessels have both vessels that have Panama Flags and Malta flags?",
        "question_pl": "Jakie kategorie statków mają zarówno statki z banderą panamską, jak i maltańską?",
        "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'",
        "query_pl": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"
    },
    {
        "db_id": "ship_1",
        "question_original": "In which year were most of ships built?",
        "question_original_pl": "W którym roku zbudowano najwięcej statków?",
        "question": "In which year were most of vessels built?",
        "question_pl": "W którym roku zbudowano większość statków?",
        "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "ship_1",
        "question_original": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?",
        "question_original_pl": "Jakie są nazwy i bandery statków, które nie mają kapitana w stopniu midszypmana?",
        "question": "What are the names and banners of vessels that do not have a captain with the rank of Midshipman?",
        "question_pl": "Jakie są nazwy i sztandary statków, które nie mają kapitana ze stopniem midszypmana?",
        "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')",
        "query_pl": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')"
    },
    {
        "db_id": "city_record",
        "question_original": "What is id of the city that hosted events in the most recent year?",
        "question_original_pl": "Jakie miasto było gospodarzem wydarzeń w ostatnim roku?",
        "question": "What is id of the town that held events in the most recent year?",
        "question_pl": "Jaka jest tożsamość miasta, w którym odbywały się wydarzenia w ostatnim roku?",
        "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
        "query_pl": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "Find the city that hosted some events in the most recent year. What is the id of this city?",
        "question_original_pl": "Znajdź miasto, które było gospodarzem niektórych wydarzeń w ostatnim roku. Jaki jest identyfikator tego miasta?",
        "question": "Find the town that held some events in the most recent year. What is the id of this town?",
        "question_pl": "Znajdź miasto, w którym w ostatnim roku odbyło się kilka wydarzeń. Jaki jest identyfikator tego miasta?",
        "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
        "query_pl": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
        "question_original_pl": "Jaki jest identyfikator meczu zawodów o nazwie \"Kwalifikacje do Mistrzostw Świata FIFA 1994\"?",
        "question": "What is the game id of the competition called \"1994 FIFA World Cup qualification\"?",
        "question_pl": "Jaki jest identyfikator rozgrywek o nazwie \"Kwalifikacje do Mistrzostw Świata FIFA 1994\"?",
        "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
        "query_pl": "SELECT match_id FROM MATCH WHERE competition = \"kwalifikacje do Mistrzostw Świata FIFA 1994\""
    },
    {
        "db_id": "city_record",
        "question_original": "Which city has hosted the most events?",
        "question_original_pl": "Które miasto było gospodarzem największej liczby wydarzeń?",
        "question": "Which town has held the most events?",
        "question_pl": "Które miasto zorganizowało najwięcej wydarzeń?",
        "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?",
        "question_original_pl": "Jakie jest miejsce zawodów \"Kwalifikacje do Mistrzostw Świata FIFA 1994\", których gospodarzem jest \"Nanjing ( Jiangsu )\"?",
        "question": "What is the location of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?",
        "question_pl": "Jaka jest lokalizacja zawodów \"Kwalifikacje do Mistrzostw Świata FIFA 1994\", których gospodarzem jest \"Nanjing ( Jiangsu )\"?",
        "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
        "query_pl": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"kwalifikacje do Mistrzostw Świata FIFA 1994\""
    },
    {
        "db_id": "city_record",
        "question_original": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
        "question_original_pl": "Znajdź miejsce zawodów \"Kwalifikacje do Mistrzostw Świata FIFA 1994\", których gospodarzem było \"Nanjing ( Jiangsu )\".",
        "question": "Find the location of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
        "question_pl": "Znajdź lokalizację zawodów \"Kwalifikacje do Mistrzostw Świata FIFA 1994\", których gospodarzem było \"Nanjing ( Jiangsu )\".",
        "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
        "query_pl": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"kwalifikacje do Mistrzostw Świata FIFA 1994\""
    },
    {
        "db_id": "city_record",
        "question_original": "Give me the temperature of Shanghai in January.",
        "question_original_pl": "Podaj mi temperaturę w Szanghaju w styczniu.",
        "question": "Give me the celsius degree of Shanghai in January.",
        "question_pl": "Podaj mi stopień Celsjusza w Szanghaju w styczniu.",
        "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"",
        "query_pl": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Szanghaj\""
    },
    {
        "db_id": "city_record",
        "question_original": "What is the temperature of \"Shanghai\" city in January?",
        "question_original_pl": "Jaka jest temperatura w Szanghaju w styczniu?",
        "question": "What is the celsius degree of \"Shanghai\" city in January?",
        "question_pl": "Jaki jest stopień Celsjusza w Szanghaju w styczniu?",
        "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"",
        "query_pl": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Szanghaj\""
    },
    {
        "db_id": "city_record",
        "question_original": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?",
        "question_original_pl": "W którym roku miasto \"Taizhou ( Zhejiang )\" pełniło rolę miasta-gospodarza?",
        "question": "IN which year did town \"Taizhou ( Zhejiang )\" serve as a host town?",
        "question_pl": "W którym roku miasto \"Taizhou ( Zhejiang )\" było miastem-gospodarzem?",
        "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"",
        "query_pl": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""
    },
    {
        "db_id": "city_record",
        "question_original": "Which city has the lowest GDP? Please list the city name and its GDP.",
        "question_original_pl": "Które miasto ma najniższe PKB? Podaj nazwę miasta i jego PKB.",
        "question": "Which town has the lowest gross domestic product? Please list the town name and its gross domestic product.",
        "question_pl": "Które miasto ma najniższy produkt krajowy brutto? Podaj nazwę miasta i jego produkt krajowy brutto.",
        "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1",
        "query_pl": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "What is the city with the smallest GDP? Return the city and its GDP.",
        "question_original_pl": "Które miasto ma najmniejsze PKB? Podaj miasto i jego PKB.",
        "question": "What is the town with the smallest gross domestic product? Return the town and its gross domestic product.",
        "question_pl": "Które miasto ma najmniejszy produkt krajowy brutto? Podaj miasto i jego produkt krajowy brutto.",
        "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1",
        "query_pl": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "In February, which city marks the highest temperature?",
        "question_original_pl": "W którym mieście temperatura w lutym jest najwyższa?",
        "question": "In February, which town marks the highest celsius degree?",
        "question_pl": "W którym mieście w lutym odnotowuje się najwyższy stopień Celsjusza?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?",
        "question_original_pl": "Podaj mi listę miast, w których temperatura w marcu jest niższa niż w lipcu lub wyższa niż w październiku?",
        "question": "Give me a list of towns whose celsius degree in March is lower than that in July or higher than that in Oct?",
        "question_pl": "Podaj mi listę miast, w których stopień Celsjusza w marcu jest niższy niż w lipcu lub wyższy niż w październiku?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
    },
    {
        "db_id": "city_record",
        "question_original": "Which cities' temperature in March is lower than that in July or higher than that in Oct?",
        "question_original_pl": "W których miastach temperatura w marcu jest niższa niż w lipcu lub wyższa niż w październiku?",
        "question": "Which towns' celsius degree in March is lower than that in July or higher than that in Oct?",
        "question_pl": "W których miastach temperatura Celsjusza w marcu jest niższa niż w lipcu lub wyższa niż w październiku?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
    },
    {
        "db_id": "city_record",
        "question_original": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?",
        "question_original_pl": "Podaj mi listę miast, w których temperatura w marcu jest niższa niż w lipcu i które pełniły również rolę miast-gospodarzy?",
        "question": "Give me a list of towns whose celsius degree in Mar is lower than that in July and which have also served as host towns?",
        "question_pl": "Podaj mi listę miast, w których stopień Celsjusza w marcu jest niższy niż w lipcu, a które również pełniły rolę miast-gospodarzy?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Which cities have lower temperature in March than in July and have been once host cities?",
        "question_original_pl": "Które miasta mają niższą temperaturę w marcu niż w lipcu i były kiedyś miastami-gospodarzami?",
        "question": "Which towns have lower celsius degree in March than in July and have been once host towns?",
        "question_pl": "Które miasta mają niższy stopień Celsjusza w marcu niż w lipcu i były kiedyś miastami-gospodarzami?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.",
        "question_original_pl": "Podaj mi listę miast, w których temperatura w marcu jest niższa niż w grudniu i które nigdy nie były miastami-gospodarzami.",
        "question": "Give me a list of towns whose celsius degree in Mar is lower than that in Dec and which have never been host towns.",
        "question_pl": "Podaj mi listę miast, w których stopień Celsjusza w marcu jest niższy niż w grudniu i które nigdy nie były miastami-gospodarzami.",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Which cities have lower temperature in March than in Dec and have never served as host cities?",
        "question_original_pl": "Które miasta mają niższą temperaturę w marcu niż w grudniu i nigdy nie były miastami-gospodarzami?",
        "question": "Which towns have lower celsius degree in March than in Dec and have never served as host towns?",
        "question_pl": "Które miasta mają niższy stopień Celsjusza w marcu niż w grudniu i nigdy nie były miastami-gospodarzami?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?",
        "question_original_pl": "Podaj mi listę miast, w których temperatura w lutym jest wyższa niż w czerwcu lub miast, które kiedyś były gospodarzami?",
        "question": "Give me a list of towns whose celsius degree in Feb is higher than that in Jun or towns that were once host towns?",
        "question_pl": "Podaj mi listę miast, w których stopień Celsjusza w lutym jest wyższy niż w czerwcu lub miast, które kiedyś były gospodarzami?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?",
        "question_original_pl": "Które miasta mają wyższą temperaturę w lutym niż w czerwcu lub służyły kiedyś jako miasta-gospodarze?",
        "question": "Which towns have higher celsius degree in Feb than in Jun or have once served as host towns?",
        "question_pl": "Które miasta mają wyższy stopień Celsjusza w lutym niż w czerwcu lub służyły kiedyś jako miasta-gospodarze?",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_pl": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
    },
    {
        "db_id": "city_record",
        "question_original": "Please give me a list of cities whose regional population is over 10000000.",
        "question_original_pl": "Podaj mi listę miast, których regionalna populacja przekracza 10000000.",
        "question": "Please give me a list of towns whose regional populace is over 10000000.",
        "question_pl": "Podaj mi listę miast, których populacja regionalna przekracza 10000000.",
        "query": "SELECT city FROM city WHERE regional_population  >  10000000",
        "query_pl": "SELECT city FROM city WHERE regional_population  >  10000000"
    },
    {
        "db_id": "city_record",
        "question_original": "Find the number of matches in different competitions.",
        "question_original_pl": "Znajdź liczbę meczów w różnych rozgrywkach.",
        "question": "Find the number of games in different competitions.",
        "question_pl": "Znajdź liczbę gier w różnych zawodach.",
        "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
        "query_pl": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
    },
    {
        "db_id": "city_record",
        "question_original": "For each competition, count the number of matches.",
        "question_original_pl": "Dla każdej konkurencji policz liczbę meczów.",
        "question": "For each contest, count the number of matches.",
        "question_pl": "Dla każdego konkursu policz liczbę meczów.",
        "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
        "query_pl": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
    },
    {
        "db_id": "city_record",
        "question_original": "List venues of all matches in the order of their dates starting from the most recent one.",
        "question_original_pl": "Wymień miejsca wszystkich meczów w kolejności ich dat, zaczynając od ostatniego.",
        "question": "List locations of all matches in the order of their dates starting from the most recent one.",
        "question_pl": "Wyświetl lokalizacje wszystkich meczów w kolejności ich dat, zaczynając od ostatniego.",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "query_pl": "SELECT venue FROM MATCH ORDER BY date DESC"
    },
    {
        "db_id": "city_record",
        "question_original": "What are the venues of all the matches? Sort them in the descending order of match date.",
        "question_original_pl": "Jakie są miejsca wszystkich meczów? Posortuj je malejąco według daty meczu.",
        "question": "What are the locations of all the matches? Sort them in the descending order of match date.",
        "question_pl": "Jakie są lokalizacje wszystkich meczów? Posortuj je malejąco według daty dopasowania.",
        "query": "SELECT venue FROM MATCH ORDER BY date DESC",
        "query_pl": "SELECT venue FROM MATCH ORDER BY date DESC"
    },
    {
        "db_id": "city_record",
        "question_original": "what is the GDP of the city with the largest population.",
        "question_original_pl": "jaki jest PKB miasta o największej populacji.",
        "question": "what is the gross domestic product of the city with the largest population.",
        "question_pl": "Ile wynosi produkt krajowy brutto miasta o największej populacji.",
        "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
        "query_pl": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "Find the GDP of the city with the largest regional population.",
        "question_original_pl": "Znajdź PKB miasta o największej populacji w regionie.",
        "question": "Find the gross domestic product of the city with the largest regional population.",
        "question_pl": "Znajdź produkt krajowy brutto miasta o największej populacji w regionie.",
        "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
        "query_pl": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
    },
    {
        "db_id": "city_record",
        "question_original": "What are the GDP and population of the city that already served as a host more than once?",
        "question_original_pl": "Jakie jest PKB i populacja miasta, które było już gospodarzem więcej niż jeden raz?",
        "question": "What are the gross domestic product and number of people of the city that already served as a host more than once?",
        "question_pl": "Jaki jest produkt krajowy brutto i liczba mieszkańców miasta, które było już gospodarzem więcej niż jeden raz?",
        "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
        "query_pl": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
    },
    {
        "db_id": "city_record",
        "question_original": "Which cities have served as host cities more than once? Return me their GDP and population.",
        "question_original_pl": "Które miasta były gospodarzami więcej niż jeden raz? Podaj ich PKB i populację.",
        "question": "Which cities have served as host cities more than once? Return me their gross domestic product and number of people.",
        "question_pl": "Które miasta były gospodarzami igrzysk więcej niż raz? Podaj ich produkt krajowy brutto i liczbę mieszkańców.",
        "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
        "query_pl": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
    },
    {
        "db_id": "e_government",
        "question_original": "What are the first, middle, and last names of all individuals, ordered by last name?",
        "question_original_pl": "Jakie są imiona, drugie imiona i nazwiska wszystkich osób, uporządkowane według nazwiska?",
        "question": "What are the forenames, middle names, and family names of all individuals, ordered by family name?",
        "question_pl": "Jakie są imiona, drugie imiona i nazwiska wszystkich osób, uporządkowane według nazwisk?",
        "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name",
        "query_pl": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"
    },
    {
        "db_id": "e_government",
        "question_original": "Find the name of the most popular party form.",
        "question_original_pl": "Znajdź nazwę najpopularniejszej formy partii.",
        "question": "Find the name of the most popular party type.",
        "question_pl": "Znajdź nazwę najpopularniejszego typu imprezy.",
        "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_government",
        "question_original": "What is the name of the party form that is most common?",
        "question_original_pl": "Jak nazywa się forma partii, która jest najbardziej popularna?",
        "question": "What is the name of the party type that is most common?",
        "question_pl": "Jak nazywa się typ imprezy, który jest najbardziej popularny?",
        "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_government",
        "question_original": "Find the payment method and phone of the party with email \"enrico09@example.com\".",
        "question_original_pl": "Znajdź metodę płatności i telefon strony z adresem e-mail \"enrico09@example.com\".",
        "question": "Find the payment type and telephone of the party with email \"enrico09@example.com\".",
        "question_pl": "Znajdź typ płatności i telefon strony z adresem e-mail \"enrico09@example.com\".",
        "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
        "query_pl": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
    },
    {
        "db_id": "e_government",
        "question_original": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
        "question_original_pl": "Jaki jest kod metody płatności i numer telefonu strony z adresem e-mail \"enrico09@example.com\"?",
        "question": "What is the payment type code and party telephone of the party with the email 'enrico09@example.com'?",
        "question_pl": "Jaki jest kod typu płatności i telefon strony z adresem e-mail \"enrico09@example.com\"?",
        "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
        "query_pl": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
    },
    {
        "db_id": "e_government",
        "question_original": "Find the emails of parties with the most popular party form.",
        "question_original_pl": "Znajdź e-maile imprez z najpopularniejszą formą partii.",
        "question": "Find the emails of parties with the most popular party type.",
        "question_pl": "Znajdź e-maile z najpopularniejszymi typami imprez.",
        "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "e_government",
        "question_original": "What are the party emails associated with parties that used the party form that is the most common?",
        "question_original_pl": "Jakie są partyjne wiadomości e-mail powiązane z partiami, które korzystały z najpopularniejszego formularza partii?",
        "question": "What are the party emails associated with parties that used the party type that is the most common?",
        "question_pl": "Jakie są wiadomości e-mail związane z imprezami, które korzystały z najpopularniejszego typu imprezy?",
        "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
        "query_pl": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
    },
    {
        "db_id": "e_government",
        "question_original": "Find the payment method code used by more than 3 parties.",
        "question_original_pl": "Znajdź kod metody płatności używany przez więcej niż 3 strony.",
        "question": "Find the payment type code used by more than 3 parties.",
        "question_pl": "Znajdź kod typu płatności używany przez więcej niż 3 strony.",
        "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
        "query_pl": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
    },
    {
        "db_id": "e_government",
        "question_original": "What are the payment method codes that have been used by more than 3 parties?",
        "question_original_pl": "Jakie są kody metod płatności, które zostały użyte przez więcej niż 3 partie?",
        "question": "What are the payment type codes that have been used by more than 3 parties?",
        "question_pl": "Jakie kody rodzaju płatności zostały użyte przez więcej niż 3 strony?",
        "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
        "query_pl": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
    },
    {
        "db_id": "e_government",
        "question_original": "Find the name of organizations whose names contain \"Party\".",
        "question_original_pl": "Znajdź nazwy organizacji, których nazwy zawierają słowo \"Partia\".",
        "question": "Find the name of organizations whose names contain \"Party\".",
        "question_pl": "Znajdź nazwy organizacji, których nazwy zawierają słowo \"Party\".",
        "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
        "query_pl": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Partia%\""
    },
    {
        "db_id": "e_government",
        "question_original": "How many distinct payment methods are used by parties?",
        "question_original_pl": "Z ilu różnych metod płatności korzystają partie?",
        "question": "How many different payment types are used by parties?",
        "question_pl": "Z ilu różnych rodzajów płatności korzystają strony?",
        "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
        "query_pl": "SELECT count(DISTINCT payment_method_code) FROM parties"
    },
    {
        "db_id": "e_government",
        "question_original": "Count the number of different payment method codes used by parties.",
        "question_original_pl": "Policz liczbę różnych kodów metod płatności używanych przez partie.",
        "question": "Count the number of different payment type codes used by parties.",
        "question_pl": "Policz liczbę różnych kodów rodzaju płatności używanych przez strony.",
        "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
        "query_pl": "SELECT count(DISTINCT payment_method_code) FROM parties"
    },
    {
        "db_id": "e_government",
        "question_original": "Which is the email of the party that has used the services the most number of times?",
        "question_original_pl": "Jaki jest adres e-mail partii, która skorzystała z usług najwięcej razy?",
        "question": "Which is the email of the party that has used the services the most number of times?",
        "question_pl": "Jaki jest adres e-mail strony, która skorzystała z usług najwięcej razy?",
        "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_government",
        "question_original": "Return the party email that has used party services the greatest number of times.",
        "question_original_pl": "Zwróć adres e-mail parii, która skorzystała z usług parii największą liczbę razy.",
        "question": "Return the party email  that has used party services the greatest number of times.",
        "question_pl": "Zwróć adres e-mail strony, która skorzystała z usług strony największą liczbę razy.",
        "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "e_government",
        "question_original": "Find the last name of the individuals that have been contact individuals of an organization.",
        "question_original_pl": "Znajdź nazwiska osób, które kontaktowały się z daną organizacją.",
        "question": "Find the family name of the individuals that have been contact individuals of an organization.",
        "question_pl": "Znajdź nazwiska osób, które kontaktowały się z organizacją.",
        "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id",
        "query_pl": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"
    },
    {
        "db_id": "school_bus",
        "question_original": "How many drivers are there?",
        "question_original_pl": "Ilu jest kierowców?",
        "question": "How many chauffeurs are there?",
        "question_pl": "Ilu jest szoferów?",
        "query": "SELECT count(*) FROM driver",
        "query_pl": "SELECT count(*) FROM driver"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the name, home city, and age for all drivers.",
        "question_original_pl": "Pokaż imię i nazwisko, miasto zamieszkania i wiek wszystkich kierowców.",
        "question": "Show the name, home city, and age for all chauffeurs.",
        "question_pl": "Pokaż imię i nazwisko, miasto zamieszkania i wiek wszystkich szoferów.",
        "query": "SELECT name ,  home_city ,  age FROM driver",
        "query_pl": "SELECT name ,  home_city ,  age FROM driver"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the party and the number of drivers in each party.",
        "question_original_pl": "Pokaż partię i liczbę kierowców w każdej partii.",
        "question": "Show the party and the number of chauffeurs in each party.",
        "question_pl": "Pokaż grupę i liczbę szoferów w każdej grupie.",
        "query": "SELECT party ,  count(*) FROM driver GROUP BY party",
        "query_pl": "SELECT party ,  count(*) FROM driver GROUP BY party"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the name of drivers in descending order of age.",
        "question_original_pl": "Pokaż nazwiska kierowców w kolejności malejącej według wieku.",
        "question": "Show the name of chauffeurs in descending order of age.",
        "question_pl": "Pokaż nazwiska szoferów w kolejności malejącej według wieku.",
        "query": "SELECT name FROM driver ORDER BY age DESC",
        "query_pl": "SELECT name FROM driver ORDER BY age DESC"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the home city with the most number of drivers.",
        "question_original_pl": "Pokaż miasto macierzyste z największą liczbą kierowców.",
        "question": "Show the home city with the most number of chauffeurs.",
        "question_pl": "Pokaż miasto macierzyste z największą liczbą szoferów.",
        "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show home city where at least two drivers older than 40 are from.",
        "question_original_pl": "Wskaż miasto rodzinne, z którego pochodzi co najmniej dwóch kierowców w wieku powyżej 40 lat.",
        "question": "Show home city where at least two chauffeurs older than 40 are from.",
        "question_pl": "Wskaż miasto rodzinne, z którego pochodzi co najmniej dwóch szoferów w wieku powyżej 40 lat.",
        "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2",
        "query_pl": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show all home cities except for those having a driver older than 40.",
        "question_original_pl": "Pokaż wszystkie miasta macierzyste z wyjątkiem tych, w których kierowca ma więcej niż 40 lat.",
        "question": "Show all home cities except for those having a chauffeur older than 40.",
        "question_pl": "Pokaż wszystkie miasta macierzyste z wyjątkiem tych, w których szofer ma więcej niż 40 lat.",
        "query": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40",
        "query_pl": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the names of the drivers without a school bus.",
        "question_original_pl": "Pokaż nazwiska kierowców bez autobusu szkolnego.",
        "question": "Show the names of the chauffeurs without a school bus.",
        "question_pl": "Pokaż nazwiska szoferów bez autobusu szkolnego.",
        "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)",
        "query_pl": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the types of schools that have two schools.",
        "question_original_pl": "Wskaż typy szkół, które mają dwie szkoły.",
        "question": "Show the categories of schools that have two schools.",
        "question_pl": "Pokaż kategorie szkół, które mają dwie szkoły.",
        "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2",
        "query_pl": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the school name and driver name for all school buses.",
        "question_original_pl": "Pokaż nazwę szkoły i nazwisko kierowcy dla wszystkich autobusów szkolnych.",
        "question": "Show the school name and chauffeur name for all school buses.",
        "question_pl": "Pokaż nazwę szkoły i nazwisko szofera dla wszystkich autobusów szkolnych.",
        "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id",
        "query_pl": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the school name and type for schools without a school bus.",
        "question_original_pl": "Pokaż nazwę i typ szkoły dla szkół bez autobusu szkolnego.",
        "question": "Show the school name and category for schools without a school bus.",
        "question_pl": "Pokaż nazwę szkoły i kategorię dla szkół bez autobusu szkolnego.",
        "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",
        "query_pl": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)"
    },
    {
        "db_id": "school_bus",
        "question_original": "Show the type of school and the number of buses for each type.",
        "question_original_pl": "Wskaż typ szkoły i liczbę autobusów dla każdego typu.",
        "question": "Show the category of school and the number of buses for each category.",
        "question_pl": "Wskaż kategorię szkoły i liczbę autobusów dla każdej kategorii.",
        "query": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type",
        "query_pl": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type"
    },
    {
        "db_id": "school_bus",
        "question_original": "How many drivers are from Hartford city or younger than 40?",
        "question_original_pl": "Ilu kierowców pochodzi z miasta Hartford lub ma mniej niż 40 lat?",
        "question": "How many chauffeurs are from Hartford city or younger than 40?",
        "question_pl": "Ilu szoferów pochodzi z miasta Hartford lub ma mniej niż 40 lat?",
        "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40",
        "query_pl": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40"
    },
    {
        "db_id": "school_bus",
        "question_original": "List names for drivers from Hartford city and younger than 40.",
        "question_original_pl": "Wymień nazwiska kierowców z miasta Hartford i młodszych niż 40 lat.",
        "question": "List names for chauffeurs from Hartford city and younger than 40.",
        "question_pl": "Wymień nazwiska szoferów z miasta Hartford i młodszych niż 40 lat.",
        "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40",
        "query_pl": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40"
    },
    {
        "db_id": "school_bus",
        "question_original": "find the name of driver who is driving the school bus with the longest working history.",
        "question_original_pl": "Znajdź nazwisko kierowcy, który prowadzi autobus szkolny z najdłuższą historią pracy.",
        "question": "find the name of chauffeur who is driving the school bus with the longest working history.",
        "question_pl": "Znajdź nazwisko szofera, który prowadzi autobus szkolny z najdłuższą historią pracy.",
        "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1",
        "query_pl": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1"
    },
    {
        "db_id": "flight_company",
        "question_original": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.",
        "question_original_pl": "Podaj numer lotu pojazdu, datę i pilota wszystkich lotów, uporządkowane według wysokości.",
        "question": "List the vehicle flight number, day and aviator of all the flights, ordered by altitude.",
        "question_pl": "Podaj numer lotu pojazdu, dzień i lotnika wszystkich lotów, uporządkowane według wysokości.",
        "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC",
        "query_pl": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC"
    },
    {
        "db_id": "flight_company",
        "question_original": "What is the velocity of the pilot named 'Thompson'?",
        "question_original_pl": "Jaka jest prędkość pilota o imieniu \"Thompson\"?",
        "question": "What is the speed of the aviator named 'Thompson'?",
        "question_pl": "Jaka jest prędkość lotnika o imieniu \"Thompson\"?",
        "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'",
        "query_pl": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'"
    },
    {
        "db_id": "flight_company",
        "question_original": "What are the names and types of the companies that have ever operated a flight?",
        "question_original_pl": "Jakie są nazwy i rodzaje firm, które kiedykolwiek obsługiwały loty?",
        "question": "What are the names and types of the enterprise that have ever operated a flight?",
        "question_pl": "Jakie są nazwy i rodzaje przedsiębiorstw, które kiedykolwiek obsługiwały loty?",
        "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id",
        "query_pl": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id"
    },
    {
        "db_id": "flight_company",
        "question_original": "What are the distinct types of the companies that have operated any flights with velocity less than 200?",
        "question_original_pl": "Jakie są różne rodzaje firm, które obsługiwały loty z prędkością mniejszą niż 200?",
        "question": "What are the different types of the enterprise that have operated any flights with velocity less than 200?",
        "question_pl": "Jakie są różne rodzaje przedsiębiorstw, które obsługiwały loty z prędkością mniejszą niż 200?",
        "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200",
        "query_pl": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200"
    },
    {
        "db_id": "flight_company",
        "question_original": "What are the ids and names of the companies that operated more than one flight?",
        "question_original_pl": "Jakie są identyfikatory i nazwy firm, które obsługiwały więcej niż jeden lot?",
        "question": "What are the ids and names of the enterprise that operated more than one flight?",
        "question_pl": "Jakie są identyfikatory i nazwy przedsiębiorstw, które obsługiwały więcej niż jeden lot?",
        "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1",
        "query_pl": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"
    },
    {
        "db_id": "flight_company",
        "question_original": "What is the id, name and IATA code of the airport that had most number of flights?",
        "question_original_pl": "Jaki jest identyfikator, nazwa i kod IATA lotniska, z którego odbyło się najwięcej lotów?",
        "question": "What is the id, name and IATA code of the aerodrome that had most number of flights?",
        "question_pl": "Jaki jest identyfikator, nazwa i kod IATA lotniska, na którym odbyło się najwięcej lotów?",
        "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_company",
        "question_original": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
        "question_original_pl": "Jakie są różne nazwiska pilotów, którzy pilotowali lot w kraju \"Stany Zjednoczone\" lub na lotnisku o nazwie \"Lotnisko Billund\"?",
        "question": "What are the different aviator names who had piloted a flight in the country 'United States' or in the aerodrome named 'Billund Airport'?",
        "question_pl": "Jakie są różne nazwiska lotników, którzy pilotowali lot w kraju \"Stany Zjednoczone\" lub na lotnisku o nazwie \"Lotnisko Billund\"?",
        "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'",
        "query_pl": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'Stany Zjednoczone' OR T1.name  =  'Lotnisko Billund'"
    },
    {
        "db_id": "flight_company",
        "question_original": "What is the most common company type, and how many are there?",
        "question_original_pl": "Jaki jest najpopularniejszy typ firmy i ile ich jest?",
        "question": "What is the most common enterprise category, and how many are there?",
        "question_pl": "Jaka jest najpopularniejsza kategoria przedsiębiorstw i ile ich jest?",
        "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_company",
        "question_original": "How many airports haven't the pilot 'Thompson' driven an aircraft?",
        "question_original_pl": "Na ilu lotniskach pilot \"Thompson\" nie prowadził samolotu?",
        "question": "How many aerodromes haven't the aviator 'Thompson' driven an aircraft?",
        "question_pl": "Na ilu lotniskach lotnik \"Thompson\" nie prowadził samolotu?",
        "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
        "query_pl": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );"
    },
    {
        "db_id": "flight_company",
        "question_original": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
        "question_original_pl": "Wymień nazwiska pilotów, którzy latali zarówno dla firmy świadczącej głównie usługi \"Cargo\", jak i dla firmy świadczącej usługi \"Catering\".",
        "question": "List the name of the aviators who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.",
        "question_pl": "Wymień nazwiska lotników, którzy latali zarówno dla firmy świadczącej głównie usługi \"Cargo\", jak i dla firmy świadczącej usługi \"Catering\".",
        "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'",
        "query_pl": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Ładunek' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Usługi cateringowe'"
    },
    {
        "db_id": "flight_company",
        "question_original": "How many companies operates airlines in each airport?",
        "question_original_pl": "Ile firm obsługuje linie lotnicze na każdym lotnisku?",
        "question": "How many enterprise operates airlines in each aerodrome?",
        "question_pl": "Ile przedsiębiorstw obsługuje linie lotnicze na każdym lotnisku?",
        "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id",
        "query_pl": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id"
    },
    {
        "db_id": "flight_company",
        "question_original": "which pilot is in charge of the most number of flights?",
        "question_original_pl": "Który pilot jest odpowiedzialny za największą liczbę lotów?",
        "question": "which aviator is in charge of the most number of flights?",
        "question_pl": "Który lotnik jest odpowiedzialny za największą liczbę lotów?",
        "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show all account ids and account details.",
        "question_original_pl": "Pokaż wszystkie identyfikatory i szczegóły konta.",
        "question": "Show all account ids and account information.",
        "question_pl": "Pokaż wszystkie identyfikatory kont i informacje o nich.",
        "query": "SELECT account_id ,  account_details FROM Accounts",
        "query_pl": "SELECT account_id ,  account_details FROM Accounts"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids and details of all accounts?",
        "question_original_pl": "Jakie są identyfikatory i szczegóły wszystkich kont?",
        "question": "What are the ids and information of all accounts?",
        "question_pl": "Jakie są identyfikatory i informacje o wszystkich kontach?",
        "query": "SELECT account_id ,  account_details FROM Accounts",
        "query_pl": "SELECT account_id ,  account_details FROM Accounts"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "List all statement ids and statement details.",
        "question_original_pl": "Wyświetl wszystkie identyfikatory i szczegóły wyciągu.",
        "question": "List all statement ids and statement information.",
        "question_pl": "Wyświetl wszystkie identyfikatory wyciągów i informacje o wyciągach.",
        "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
        "query_pl": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids and details of all statements?",
        "question_original_pl": "Jakie są identyfikatory i szczegóły wszystkich oświadczeń?",
        "question": "What are the ids and information of all statements?",
        "question_pl": "Jakie są identyfikatory i informacje o wszystkich oświadczeniach?",
        "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
        "query_pl": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show statement id, statement detail, account detail for accounts.",
        "question_original_pl": "Pokaż identyfikator wyciągu, szczegóły wyciągu, szczegóły konta dla kont.",
        "question": "Show statement id, statement information, account information for accounts.",
        "question_pl": "Pokaż identyfikator wyciągu, informacje o wyciągu, informacje o koncie dla kont.",
        "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id",
        "query_pl": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the statement ids, statement details, and account details, for all accounts?",
        "question_original_pl": "Jakie są identyfikatory wyciągów, szczegóły wyciągów i szczegóły konta dla wszystkich kont?",
        "question": "What are the statement ids, statement information, and account information, for all accounts?",
        "question_pl": "Jakie są identyfikatory wyciągów, informacje o wyciągach i informacje o kontach dla wszystkich kont?",
        "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id",
        "query_pl": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the statement id and the statement detail for the statement with most number of accounts.",
        "question_original_pl": "Pokaż identyfikator wyciągu i szczegóły wyciągu dla wyciągu z największą liczbą kont.",
        "question": "Show the statement id and the statement information for the statement with most number of accounts.",
        "question_pl": "Pokaż identyfikator wyciągu i informacje o wyciągu dla wyciągu z największą liczbą rachunków.",
        "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
        "question_original_pl": "Jaki jest identyfikator wyciągu i szczegóły wyciągu dla wyciągu, który zawiera najwięcej odpowiednich kont?",
        "question": "What are the statement id and statement information for the statement that has the most corresponding accounts?",
        "question_pl": "Jaki jest identyfikator wyciągu i informacje o wyciągu, który zawiera najwięcej odpowiednich kont?",
        "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the number of documents.",
        "question_original_pl": "Pokaż liczbę dokumentów.",
        "question": "Show the number of files.",
        "question_pl": "Pokaż liczbę plików.",
        "query": "SELECT count(*) FROM Documents",
        "query_pl": "SELECT count(*) FROM Documents"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Count the number of documents.",
        "question_original_pl": "Policz liczbę dokumentów.",
        "question": "Count the number of files.",
        "question_pl": "Policz liczbę plików.",
        "query": "SELECT count(*) FROM Documents",
        "query_pl": "SELECT count(*) FROM Documents"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.",
        "question_original_pl": "Wyświetl kod typu dokumentu, nazwę dokumentu i opis dokumentu dla dokumentu o nazwie \"Noel CV\" lub nazwie \"King Book\".",
        "question": "List the file type code, file name, and file describing content for the file with name 'Noel CV' or name 'King Book'.",
        "question_pl": "Wyświetl kod typu pliku, nazwę pliku i zawartość opisującą plik o nazwie \"Noel CV\" lub \"King Book\".",
        "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
        "query_pl": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?",
        "question_original_pl": "Jaki jest typ, nazwa i opis dokumentu, który nosi nazwę \"Noel CV\" lub \"King Book\"?",
        "question": "What are the type come, name, and describing content of the file that has either the name 'Noel CV' or 'King Book'?",
        "question_pl": "Jaki jest typ, nazwa i opis zawartości pliku o nazwie \"Noel CV\" lub \"King Book\"?",
        "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
        "query_pl": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the ids and names of all documents.",
        "question_original_pl": "Pokaż identyfikatory i nazwy wszystkich dokumentów.",
        "question": "Show the ids and names of all files.",
        "question_pl": "Pokaż identyfikatory i nazwy wszystkich plików.",
        "query": "SELECT document_id ,  document_name FROM Documents",
        "query_pl": "SELECT document_id ,  document_name FROM Documents"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids and names for each of the documents?",
        "question_original_pl": "Jakie są identyfikatory i nazwy każdego z dokumentów?",
        "question": "What are the ids and names for each of the files?",
        "question_pl": "Jakie są identyfikatory i nazwy każdego z plików?",
        "query": "SELECT document_id ,  document_name FROM Documents",
        "query_pl": "SELECT document_id ,  document_name FROM Documents"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Find names and ids of all documents with document type code BK.",
        "question_original_pl": "Znajdź nazwy i identyfikatory wszystkich dokumentów z kodem typu dokumentu BK.",
        "question": "Find names and ids of all files with file type code BK.",
        "question_pl": "Znajdź nazwy i identyfikatory wszystkich plików z kodem typu BK.",
        "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
        "query_pl": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the names and ids of documents that have the type code BK?",
        "question_original_pl": "Jakie są nazwy i identyfikatory dokumentów, które mają kod typu BK?",
        "question": "What are the names and ids of files that have the type code BK?",
        "question_pl": "Jakie są nazwy i identyfikatory plików o kodzie typu BK?",
        "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"",
        "query_pl": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "How many documents are with document type code BK for each product id?",
        "question_original_pl": "Ile dokumentów ma kod typu dokumentu BK dla każdego identyfikatora produktu?",
        "question": "How many files are with file type code BK for each goods id?",
        "question_pl": "Ile plików ma kod typu BK dla każdego identyfikatora towaru?",
        "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id",
        "query_pl": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Count the number of documents with the type code BK that correspond to each product id.",
        "question_original_pl": "Policz liczbę dokumentów z kodem typu BK, które odpowiadają każdemu identyfikatorowi produktu.",
        "question": "Count the number of files with the type code BK that correspond to each goods id.",
        "question_pl": "Policz liczbę plików z kodem typu BK, które odpowiadają każdemu identyfikatorowi towaru.",
        "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id",
        "query_pl": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the document name and the document date for all documents on project with details 'Graph Database project'.",
        "question_original_pl": "Pokaż nazwę dokumentu i datę dokumentu dla wszystkich dokumentów w projekcie ze szczegółami \"Projekt graficznej bazy danych\".",
        "question": "Show the file name and the file date for all files on project with details 'Graph Database project'.",
        "question_pl": "Pokaż nazwę pliku i datę pliku dla wszystkich plików w projekcie ze szczegółami \"Projekt graficznej bazy danych\".",
        "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
        "query_pl": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Projekt graficznej bazy danych'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?",
        "question_original_pl": "Jakie są nazwy i daty dokumentów odpowiadających projektowi, który ma szczegóły \"Projekt graficznej bazy danych\"?",
        "question": "What are the names and day for files corresponding to project that has the details 'Graph Database project'?",
        "question_pl": "Jakie są nazwy i dzień dla plików odpowiadających projektowi, który ma szczegóły \"Projekt graficznej bazy danych\"?",
        "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
        "query_pl": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Projekt graficznej bazy danych'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show project ids and the number of documents in each project.",
        "question_original_pl": "Pokaż identyfikatory projektów i liczbę dokumentów w każdym projekcie.",
        "question": "Show project ids and the number of files in each project.",
        "question_pl": "Pokaż identyfikatory projektów i liczbę plików w każdym projekcie.",
        "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id",
        "query_pl": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "How many documents correspond with each project id?",
        "question_original_pl": "Ile dokumentów odpowiada każdemu identyfikatorowi projektu?",
        "question": "How many files correspond with each project id?",
        "question_pl": "Ile plików odpowiada każdemu identyfikatorowi projektu?",
        "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id",
        "query_pl": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the id of the project with least number of documents?",
        "question_original_pl": "Jaki jest identyfikator projektu z najmniejszą liczbą dokumentów?",
        "question": "What is the id of the project with least number of files?",
        "question_pl": "Jaki jest identyfikator projektu z najmniejszą liczbą plików?",
        "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the id of the project that has the fewest corresponding documents.",
        "question_original_pl": "Zwróć identyfikator projektu, który ma najmniej odpowiadających mu dokumentów.",
        "question": "Return the id of the project that has the fewest corresponding files.",
        "question_pl": "Zwróć identyfikator projektu, który ma najmniej odpowiednich plików.",
        "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the ids for projects with at least 2 documents.",
        "question_original_pl": "Pokaż identyfikatory projektów z co najmniej 2 dokumentami.",
        "question": "Show the ids for projects with at least 2 files.",
        "question_pl": "Pokaż identyfikatory projektów z co najmniej 2 plikami.",
        "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are project ids of projects that have 2 or more corresponding documents?",
        "question_original_pl": "Jakie są identyfikatory projektów, które mają 2 lub więcej odpowiadających im dokumentów?",
        "question": "What are project ids of projects that have 2 or more corresponding files?",
        "question_pl": "Jakie są identyfikatory projektów, które mają 2 lub więcej odpowiednich plików?",
        "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
        "query_pl": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "List document type codes and the number of documents in each code.",
        "question_original_pl": "Wymień kody typów dokumentów i liczbę dokumentów w każdym kodzie.",
        "question": "List file type codes and the number of files in each code.",
        "question_pl": "Wymień kody typów plików i liczbę plików w każdym kodzie.",
        "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code",
        "query_pl": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "How many documents are there of each type?",
        "question_original_pl": "Ile jest dokumentów każdego typu?",
        "question": "How many files are there of each type?",
        "question_pl": "Ile jest plików każdego typu?",
        "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code",
        "query_pl": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the document type code with most number of documents?",
        "question_original_pl": "Jaki jest kod typu dokumentu z największą liczbą dokumentów?",
        "question": "What is the file type code with most number of files?",
        "question_pl": "Jaki jest kod typu pliku z największą liczbą plików?",
        "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the code of the document type that is most common.",
        "question_original_pl": "Zwróć kod typu dokumentu, który jest najbardziej powszechny.",
        "question": "Return the code of the file type that is most common.",
        "question_pl": "Zwróć kod typu pliku, który jest najbardziej powszechny.",
        "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the document type code with fewer than 3 documents.",
        "question_original_pl": "Pokaż kod typu dokumentu przy mniej niż 3 dokumentach.",
        "question": "Show the file type code with fewer than 3 files.",
        "question_pl": "Pokaż kod typu pliku przy mniej niż 3 plikach.",
        "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
        "query_pl": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the codes corresponding to document types for which there are less than 3 documents?",
        "question_original_pl": "Jakie są kody odpowiadające typom dokumentów, dla których istnieje mniej niż 3 dokumenty?",
        "question": "What are the codes corresponding to file types for which there are less than 3 files?",
        "question_pl": "Jakie są kody odpowiadające typom plików, dla których istnieje mniej niż 3 pliki?",
        "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
        "query_pl": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.",
        "question_original_pl": "Pokaż szczegóły wyciągu i odpowiednią nazwę dokumentu dla wyciągu ze szczegółem \"Prywatny projekt\".",
        "question": "Show the statement information and the corresponding file name for the statement with information 'Private Project'.",
        "question_pl": "Wyświetl informacje o wyciągu i odpowiednią nazwę pliku dla wyciągu z informacją \"Prywatny projekt\".",
        "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
        "query_pl": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Projekt prywatny'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?",
        "question_original_pl": "Jakie są szczegóły dotyczące wyciągów ze szczegółami \"Projekt prywatny\" i jakie są nazwy odpowiednich dokumentów?",
        "question": "What are the information for statements with the information 'Private Project', and what are the names of the corresponding files?",
        "question_pl": "Jakie są informacje dla oświadczeń z informacją \"Projekt prywatny\" i jakie są nazwy odpowiednich plików?",
        "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
        "query_pl": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Projekt prywatny'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show all document type codes, document type names, document type descriptions.",
        "question_original_pl": "Pokaż wszystkie kody typów dokumentów, nazwy typów dokumentów, opisy typów dokumentów.",
        "question": "Show all file type codes, file type names, file type descriptions.",
        "question_pl": "Pokaż wszystkie kody typów plików, nazwy typów plików, opisy typów plików.",
        "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
        "query_pl": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the codes, names, and descriptions of the different document types?",
        "question_original_pl": "Jakie są kody, nazwy i opisy różnych typów dokumentów?",
        "question": "What are the codes, names, and descriptions of the different file types?",
        "question_pl": "Jakie są kody, nazwy i opisy różnych typów plików?",
        "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
        "query_pl": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the document type description for document type named Film?",
        "question_original_pl": "Jaki jest opis typu dokumentu dla typu dokumentu o nazwie Film?",
        "question": "What is the file type describing content for file type named Film?",
        "question_pl": "Jaki jest typ pliku opisujący zawartość dla typu pliku o nazwie Film?",
        "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
        "query_pl": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the description of the document type name 'Film'.",
        "question_original_pl": "Zwróć opis nazwy typu dokumentu \"Film\".",
        "question": "Return the describing content of the file type name 'Film'.",
        "question_pl": "Zwróć opisującą zawartość nazwę typu pliku \"Film\".",
        "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
        "query_pl": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the document type name and the document type description and creation date for all the documents?",
        "question_original_pl": "Jaka jest nazwa i opis typu dokumentu oraz data utworzenia wszystkich dokumentów?",
        "question": "What is the file type name and the file type describing content and creation date for all the files?",
        "question_pl": "Jaka jest nazwa typu pliku oraz typ pliku opisujący zawartość i datę utworzenia wszystkich plików?",
        "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",
        "query_pl": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the type name, type description, and date of creation for each document.",
        "question_original_pl": "Zwróć nazwę typu, opis typu i datę utworzenia dla każdego dokumentu.",
        "question": "Return the type name, type description, and day of creation for each file.",
        "question_pl": "Zwróć nazwę typu, opis typu i dzień utworzenia dla każdego pliku.",
        "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",
        "query_pl": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "List ids and details for all projects.",
        "question_original_pl": "Wyświetl identyfikatory i szczegóły wszystkich projektów.",
        "question": "List ids and information for all projects.",
        "question_pl": "Wyświetl identyfikatory i informacje o wszystkich projektach.",
        "query": "SELECT project_id ,  project_details FROM Projects",
        "query_pl": "SELECT project_id ,  project_details FROM Projects"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids and details for each project?",
        "question_original_pl": "Jakie są identyfikatory i szczegóły każdego projektu?",
        "question": "What are the ids and information for each project?",
        "question_pl": "Jakie są identyfikatory i informacje dla każdego projektu?",
        "query": "SELECT project_id ,  project_details FROM Projects",
        "query_pl": "SELECT project_id ,  project_details FROM Projects"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the project id and detail for the project with at least two documents?",
        "question_original_pl": "Jaki jest identyfikator projektu i szczegóły projektu z co najmniej dwoma dokumentami?",
        "question": "What is the project id and information for the project with at least two files?",
        "question_pl": "Jaki jest identyfikator projektu i informacje o projekcie z co najmniej dwoma plikami?",
        "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the ids and details corresponding to projects for which there are more than two documents.",
        "question_original_pl": "Zwróć identyfikatory i szczegóły odpowiadające projektom, dla których istnieją więcej niż dwa dokumenty.",
        "question": "Return the ids and information corresponding to projects for which there are more than two files.",
        "question_pl": "Zwróć identyfikatory i informacje odpowiadające projektom, dla których istnieją więcej niż dwa pliki.",
        "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2",
        "query_pl": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the project detail for the project with document \"King Book\"?",
        "question_original_pl": "Jakie są szczegóły projektu z dokumentem \"King Book\"?",
        "question": "What is the project information for the project with file \"King Book\"?",
        "question_pl": "Jakie są informacje o projekcie dla pliku \"King Book\"?",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the details of the project with the document name 'King Book'.",
        "question_original_pl": "Podaj szczegóły projektu z nazwą dokumentu \"King Book\".",
        "question": "Give the information of the project with the file name 'King Book'.",
        "question_pl": "Podaj informacje o projekcie z nazwą pliku \"King Book\".",
        "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
        "query_pl": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "List all budget type codes and descriptions.",
        "question_original_pl": "Wymień wszystkie kody i opisy rodzajów budżetu.",
        "question": "List all budget type codes and describing details.",
        "question_pl": "Wymień wszystkie kody typu budżetu i szczegóły opisu.",
        "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
        "query_pl": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the type codes and descriptions of each budget type?",
        "question_original_pl": "Jakie są kody typów i opisy każdego typu budżetu?",
        "question": "What are the type codes and describing details of each budget type?",
        "question_pl": "Jakie są kody typów i szczegóły opisujące każdy typ budżetu?",
        "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes",
        "query_pl": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the description for the budget type with code ORG?",
        "question_original_pl": "Jaki jest opis typu budżetu z kodem ORG?",
        "question": "What is the describing detail for the budget type with code ORG?",
        "question_pl": "Jaki jest szczegół opisu dla typu budżetu z kodem ORG?",
        "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
        "query_pl": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the description of the budget type that has the code ORG.",
        "question_original_pl": "Zwróć opis typu budżetu o kodzie ORG.",
        "question": "Return the describing detail of the budget type that has the code ORG.",
        "question_pl": "Zwróć szczegóły opisu typu budżetu o kodzie ORG.",
        "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
        "query_pl": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Count the number of documents with expenses.",
        "question_original_pl": "Policz liczbę dokumentów z wydatkami.",
        "question": "Count the number of files with expenses.",
        "question_pl": "Policz liczbę plików z wydatkami.",
        "query": "SELECT count(*) FROM Documents_with_expenses",
        "query_pl": "SELECT count(*) FROM Documents_with_expenses"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the document ids for the budget type code 'SF'?",
        "question_original_pl": "Jakie są identyfikatory dokumentów dla kodu typu budżetu \"SF\"?",
        "question": "What are the file ids for the budget type code 'SF'?",
        "question_pl": "Jakie są identyfikatory plików dla kodu typu budżetu \"SF\"?",
        "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
        "query_pl": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the ids of documents with expenses that have the budget code 'SF'.",
        "question_original_pl": "Podaj identyfikatory dokumentów z wydatkami, które mają kod budżetu \"SF\".",
        "question": "Give the ids of files with expenses that have the budget code 'SF'.",
        "question_pl": "Podaj identyfikatory plików z wydatkami, które mają kod budżetu \"SF\".",
        "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
        "query_pl": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show the budget type code and description and the corresponding document id.",
        "question_original_pl": "Pokaż kod i opis typu budżetu oraz odpowiedni identyfikator dokumentu.",
        "question": "Show the budget type code and describing detail and the corresponding file id.",
        "question_pl": "Pokaż kod typu budżetu i szczegóły opisu oraz odpowiedni identyfikator pliku.",
        "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code",
        "query_pl": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.",
        "question_original_pl": "Zwróć kody typów budżetu, opisy typów budżetu i identyfikatory dokumentów dla dokumentów z wydatkami.",
        "question": "Return the budget type codes, budget type descriptions and file ids for files with expenses.",
        "question_pl": "Zwróć kody typów budżetu, opisy typów budżetu i identyfikatory plików z wydatkami.",
        "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code",
        "query_pl": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show ids for all documents with budget types described as 'Government'.",
        "question_original_pl": "Pokaż identyfikatory wszystkich dokumentów z typami budżetu opisanymi jako \"rządowe\".",
        "question": "Show ids for all files with budget types described as 'Government'.",
        "question_pl": "Pokaż identyfikatory wszystkich plików z typami budżetu opisanymi jako \"rządowe\".",
        "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
        "query_pl": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Rząd\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the ids for documents that have the budget description 'Government'.",
        "question_original_pl": "Podaj identyfikatory dokumentów, które mają opis budżetu \"Rząd\".",
        "question": "Give the ids for files that have the budget description 'Government'.",
        "question_pl": "Podaj identyfikatory plików, które mają opis budżetu \"Rząd\".",
        "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
        "query_pl": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Rząd\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show budget type codes and the number of documents in each budget type.",
        "question_original_pl": "Pokaż kody typów budżetu i liczbę dokumentów w każdym typie budżetu.",
        "question": "Show budget type codes and the number of files in each budget type.",
        "question_pl": "Pokaż kody typów budżetu i liczbę plików w każdym typie budżetu.",
        "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
        "query_pl": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the different budget type codes, and how many documents are there for each?",
        "question_original_pl": "Jakie są różne kody typów budżetu i ile dokumentów jest dostępnych dla każdego z nich?",
        "question": "What are the different budget type codes, and how many files are there for each?",
        "question_pl": "Jakie są różne kody typów budżetu i ile jest plików dla każdego z nich?",
        "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
        "query_pl": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What is the budget type code with most number of documents.",
        "question_original_pl": "Jaki jest kod typu budżetu z największą liczbą dokumentów.",
        "question": "What is the budget type code with most number of files.",
        "question_pl": "Jaki jest kod typu budżetu z największą liczbą plików.",
        "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the budget type code that is most common among documents with expenses.",
        "question_original_pl": "Podaj kod typu budżetu, który jest najbardziej powszechny wśród dokumentów z wydatkami.",
        "question": "Give the budget type code that is most common among files with expenses.",
        "question_pl": "Podaj kod typu budżetu, który jest najbardziej powszechny wśród plików z wydatkami.",
        "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids of documents which don't have expense budgets?",
        "question_original_pl": "Jakie są identyfikatory dokumentów, które nie mają budżetów wydatków?",
        "question": "What are the ids of files which don't have expense budgets?",
        "question_pl": "Jakie są identyfikatory plików, które nie mają budżetów wydatków?",
        "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
        "query_pl": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the ids of documents that do not have expenses.",
        "question_original_pl": "Zwróć identyfikatory dokumentów, które nie mają wydatków.",
        "question": "Return the ids of files that do not have expenses.",
        "question_pl": "Zwróć identyfikatory plików, które nie mają wydatków.",
        "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
        "query_pl": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Show ids for all documents in type CV without expense budgets.",
        "question_original_pl": "Pokaż identyfikatory wszystkich dokumentów typu CV bez budżetów wydatków.",
        "question": "Show ids for all files in type CV without expense budgets.",
        "question_pl": "Pokaż identyfikatory wszystkich plików w typie CV bez budżetów wydatków.",
        "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses",
        "query_pl": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids of documents with the type code CV that do not have expenses.",
        "question_original_pl": "Jakie są identyfikatory dokumentów z kodem typu CV, które nie mają wydatków.",
        "question": "What are the ids of files with the type code CV that do not have expenses.",
        "question_pl": "Jakie są identyfikatory plików z kodem typu CV, które nie mają wydatków.",
        "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses",
        "query_pl": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the ids of documents with letter 's' in the name with any expense budgets.",
        "question_original_pl": "Jakie są identyfikatory dokumentów z literą \"s\" w nazwie z dowolnymi budżetami wydatków.",
        "question": "What are the ids of files with letter 's' in the name with any expense budgets.",
        "question_pl": "Jakie są identyfikatory plików z literą \"s\" w nazwie z dowolnymi budżetami wydatków.",
        "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
        "query_pl": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the ids of documents that have expenses and contain the letter s in their names.",
        "question_original_pl": "Podaj identyfikatory dokumentów, które mają wydatki i zawierają literę s w nazwie.",
        "question": "Give the ids of files that have expenses and contain the letter s in their names.",
        "question_pl": "Podaj identyfikatory plików, które mają wydatki i zawierają literę s w nazwie.",
        "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
        "query_pl": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "How many documents do not have any expense?",
        "question_original_pl": "Ile dokumentów nie wiąże się z żadnymi kosztami?",
        "question": "How many files do not have any expense?",
        "question_pl": "Ile plików nie ma żadnych kosztów?",
        "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
        "query_pl": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Count the number of documents that do not have expenses.",
        "question_original_pl": "Policz liczbę dokumentów, które nie mają wydatków.",
        "question": "Count the number of files that do not have expenses.",
        "question_pl": "Policz liczbę plików, które nie mają wydatków.",
        "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
        "query_pl": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?",
        "question_original_pl": "Jakie są daty dokumentów zawierających zarówno wydatki typu \"GV\", jak i \"SF\"?",
        "question": "What are the day for the files with both 'GV' type and 'SF' type expenses?",
        "question_pl": "Jaki jest dzień dla plików z wydatkami typu \"GV\" i \"SF\"?",
        "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'",
        "query_pl": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'.",
        "question_original_pl": "Podaj daty utworzenia dokumentów, które mają zarówno kody typu budżetu \"GV\", jak i \"SF\".",
        "question": "Give the day of creation for files that have both budget type codes 'GV' and 'SF'.",
        "question_pl": "Podaj dzień utworzenia dla plików, które mają oba kody typu budżetu \"GV\" i \"SF\".",
        "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'",
        "query_pl": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "What are the account details with the largest value or with value having char '5' in it?",
        "question_original_pl": "Jakie są dane konta z największą wartością lub z wartością zawierającą znak \"5\"?",
        "question": "What are the account information with the largest value or with value having char '5' in it?",
        "question_pl": "Jakie są informacje o koncie z największą wartością lub z wartością zawierającą znak \"5\"?",
        "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
        "query_pl": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "question_original": "Return the account details with the greatest value, as well as those that include the character 5.",
        "question_original_pl": "Zwróć dane konta o największej wartości, a także te, które zawierają znak 5.",
        "question": "Return the account information with the greatest value, as well as those that include the character 5.",
        "question_pl": "Zwróć informacje o koncie z największą wartością, a także te, które zawierają znak 5.",
        "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
        "query_pl": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
    },
    {
        "db_id": "scientist_1",
        "question_original": "Find the number of distinct projects.",
        "question_original_pl": "Znajdź liczbę odrębnych projektów.",
        "question": "Find the number of different projects.",
        "question_pl": "Znajdź liczbę różnych projektów.",
        "query": "SELECT count(DISTINCT name) FROM projects",
        "query_pl": "SELECT count(DISTINCT name) FROM projects"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the name of the highest rated wine?",
        "question_original_pl": "Jak nazywa się najwyżej ocenione wino?",
        "question": "What is the name of the highest rated alcoholic drink?",
        "question_pl": "Jak nazywa się najwyżej oceniany napój alkoholowy?",
        "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
        "query_pl": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "Give the name of the wine with the highest score.",
        "question_original_pl": "Podaj nazwę wina z najwyższym wynikiem.",
        "question": "Give the name of the alcoholic drink with the highest score.",
        "question_pl": "Podaj nazwę napoju alkoholowego z najwyższym wynikiem.",
        "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
        "query_pl": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "Which winery is the wine that has the highest score from?",
        "question_original_pl": "Z której winnicy pochodzi wino, które uzyskało najwyższy wynik?",
        "question": "Which wine-making establishment is the alcoholic drink that has the highest score from?",
        "question_pl": "Z którego zakładu winiarskiego pochodzi najwyżej oceniony napój alkoholowy?",
        "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
        "query_pl": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the winery at which the wine with the highest score was made?",
        "question_original_pl": "W jakiej winnicy powstało wino z najwyższą oceną?",
        "question": "What is the wine-making establishment at which the alcoholic drink with the highest score was made?",
        "question_pl": "W jakim zakładzie winiarskim powstał napój alkoholowy z najwyższym wynikiem?",
        "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
        "query_pl": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the names of all wines produced in 2008.",
        "question_original_pl": "Znajdź nazwy wszystkich win wyprodukowanych w 2008 roku.",
        "question": "Find the names of all alcoholic drink produced in 2008.",
        "question_pl": "Znajdź nazwy wszystkich napojów alkoholowych wyprodukowanych w 2008 roku.",
        "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
        "query_pl": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of all wines produced in 2008?",
        "question_original_pl": "Jak nazywają się wszystkie wina wyprodukowane w 2008 roku?",
        "question": "What are the names of all alcoholic drink produced in 2008?",
        "question_pl": "Jak nazywają się wszystkie napoje alkoholowe wyprodukowane w 2008 roku?",
        "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
        "query_pl": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
    },
    {
        "db_id": "wine_1",
        "question_original": "List the grapes and appelations of all wines.",
        "question_original_pl": "Wymień szczepy i apelacje wszystkich win.",
        "question": "List the grapes and grown places of all wines.",
        "question_pl": "Wymień winogrona i miejsca uprawy wszystkich win.",
        "query": "SELECT Grape ,  Appelation FROM WINE",
        "query_pl": "SELECT Grape ,  Appelation FROM WINE"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the grapes and appelations of each wine?",
        "question_original_pl": "Jakie są winogrona i apelacje każdego wina?",
        "question": "What are the grapes and grown places of each wine?",
        "question_pl": "Jakie są winogrona i miejsca uprawy każdego wina?",
        "query": "SELECT Grape ,  Appelation FROM WINE",
        "query_pl": "SELECT Grape ,  Appelation FROM WINE"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the names and scores of all wines.",
        "question_original_pl": "Wymień nazwy i oceny wszystkich win.",
        "question": "List the names and scores of all alcoholic drink.",
        "question_pl": "Wymień nazwy i wyniki wszystkich napojów alkoholowych.",
        "query": "SELECT Name ,  Score FROM WINE",
        "query_pl": "SELECT Name ,  Score FROM WINE"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names and scores of all wines?",
        "question_original_pl": "Jakie są nazwy i oceny wszystkich win?",
        "question": "What are the names and scores of all alcoholic drink?",
        "question_pl": "Jakie są nazwy i wyniki wszystkich napojów alkoholowych?",
        "query": "SELECT Name ,  Score FROM WINE",
        "query_pl": "SELECT Name ,  Score FROM WINE"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the area and county of all appelations.",
        "question_original_pl": "Wymień obszar i hrabstwo wszystkich apelacji.",
        "question": "List the district and county of all grown places.",
        "question_pl": "Wymień dzielnicę i hrabstwo wszystkich uprawianych miejsc.",
        "query": "SELECT Area ,  County FROM APPELLATIONS",
        "query_pl": "SELECT Area ,  County FROM APPELLATIONS"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the areas and counties for all appelations?",
        "question_original_pl": "Jakie są obszary i hrabstwa dla wszystkich apelacji?",
        "question": "What are the districts and counties for all grown places?",
        "question_pl": "Jakie są okręgi i powiaty dla wszystkich uprawianych miejsc?",
        "query": "SELECT Area ,  County FROM APPELLATIONS",
        "query_pl": "SELECT Area ,  County FROM APPELLATIONS"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the prices of wines produced before the year of 2010?",
        "question_original_pl": "Jakie są ceny win wyprodukowanych przed rokiem 2010?",
        "question": "What are the prices of alcoholic drink produced before the year of 2010?",
        "question_pl": "Jakie są ceny napojów alkoholowych wyprodukowanych przed rokiem 2010?",
        "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
        "query_pl": "SELECT Price FROM WINE WHERE YEAR  <  2010"
    },
    {
        "db_id": "wine_1",
        "question_original": "Return the prices of wines produced before 2010.",
        "question_original_pl": "Zwróć ceny win wyprodukowanych przed 2010 rokiem.",
        "question": "Return the prices of alcoholic drink produced before 2010.",
        "question_pl": "Zwróć ceny napojów alkoholowych wyprodukowanych przed 2010 rokiem.",
        "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
        "query_pl": "SELECT Price FROM WINE WHERE YEAR  <  2010"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the names of all distinct wines that have scores higher than 90.",
        "question_original_pl": "Wymień nazwy wszystkich wyróżniających się win, które uzyskały oceny wyższe niż 90.",
        "question": "List the names of all different alcoholic drink that have scores higher than 90.",
        "question_pl": "Wymień nazwy wszystkich różnych napojów alkoholowych, które uzyskały wyniki wyższe niż 90.",
        "query": "SELECT Name FROM WINE WHERE score  >  90",
        "query_pl": "SELECT Name FROM WINE WHERE score  >  90"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines with scores higher than 90?",
        "question_original_pl": "Jak nazywają się wina z oceną wyższą niż 90?",
        "question": "What are the names of alcoholic drink with scores higher than 90?",
        "question_pl": "Jak nazywają się napoje alkoholowe z wynikami wyższymi niż 90?",
        "query": "SELECT Name FROM WINE WHERE score  >  90",
        "query_pl": "SELECT Name FROM WINE WHERE score  >  90"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the names of all distinct wines that are made of red color grape.",
        "question_original_pl": "Wymień nazwy wszystkich różnych win produkowanych z czerwonych winogron.",
        "question": "List the names of all different alcoholic drink that are made of red color grape.",
        "question_pl": "Wymień nazwy wszystkich różnych napojów alkoholowych wytwarzanych z czerwonych winogron.",
        "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Czerwony\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines made from red grapes?",
        "question_original_pl": "Jak nazywają się wina produkowane z czerwonych winogron?",
        "question": "What are the names of alcoholic drink made from red grapes?",
        "question_pl": "Jak nazywa się napój alkoholowy wytwarzany z czerwonych winogron?",
        "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Czerwony\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the names of all distinct wines that have appellations in North Coast area.",
        "question_original_pl": "Znajdź nazwy wszystkich różnych win, które mają apelacje na obszarze North Coast.",
        "question": "Find the names of all different alcoholic drink that have appellations in North Coast area.",
        "question_pl": "Znajdź nazwy wszystkich różnych napojów alkoholowych, które mają apelacje na obszarze North Coast.",
        "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Północne wybrzeże\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the distinct names of wines that have appellations in the North Coast area?",
        "question_original_pl": "Jakie są odrębne nazwy win, które mają apelacje w regionie North Coast?",
        "question": "What are the different names of alcoholic drink that have appellations in the North Coast area?",
        "question_pl": "Jakie są różne nazwy napojów alkoholowych, które mają apelacje w regionie North Coast?",
        "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"",
        "query_pl": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Północne wybrzeże\""
    },
    {
        "db_id": "wine_1",
        "question_original": "How many wines are produced at Robert Biale winery?",
        "question_original_pl": "Ile win produkuje winiarnia Robert Biale?",
        "question": "How many alcoholic drink are produced at Robert Biale winery?",
        "question_pl": "Ile napojów alkoholowych produkuje winiarnia Robert Biale?",
        "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
        "query_pl": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Count the number of wines produced at Robert Biale winery.",
        "question_original_pl": "Policz liczbę win produkowanych w winiarni Robert Biale.",
        "question": "Count the number of alcoholic drink produced at Robert Biale winery.",
        "question_pl": "Policz liczbę napojów alkoholowych produkowanych w winiarni Robert Biale.",
        "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
        "query_pl": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
    },
    {
        "db_id": "wine_1",
        "question_original": "How many appelations are in Napa Country?",
        "question_original_pl": "Ile apelacji znajduje się w kraju Napa?",
        "question": "How many grown places are in Napa Country?",
        "question_pl": "Ile uprawianych miejsc znajduje się w Napa Country?",
        "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
        "query_pl": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Count the number of appelations in Napa County.",
        "question_original_pl": "Policz liczbę apelacji w hrabstwie Napa.",
        "question": "Count the number of grown places in Napa County.",
        "question_pl": "Policz liczbę uprawianych roślin w hrabstwie Napa.",
        "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
        "query_pl": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Give me the average prices of wines that are produced by appelations in Sonoma County.",
        "question_original_pl": "Podaj mi średnie ceny win produkowanych przez apelacje w hrabstwie Sonoma.",
        "question": "Give me the average prices of wines that are produced by grown places in Sonoma County.",
        "question_pl": "Podaj mi średnie ceny win produkowanych przez uprawiane miejsca w hrabstwie Sonoma.",
        "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"",
        "query_pl": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the average price of wines produced in appelations in Sonoma County?",
        "question_original_pl": "Jaka jest średnia cena win produkowanych w apelacjach w hrabstwie Sonoma?",
        "question": "What is the average price of wines produced in grown places in Sonoma County?",
        "question_pl": "Jaka jest średnia cena win produkowanych w uprawianych miejscach w hrabstwie Sonoma?",
        "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"",
        "query_pl": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005.",
        "question_original_pl": "Znajdź maksymalną cenę win z apelacji w regionie Central Coast wyprodukowanych przed rokiem 2005.",
        "question": "Find the maximum price of wins from the grown places in Central Coast area and produced before the year of 2005.",
        "question_pl": "Znajdź maksymalną cenę wygranych z miejsc uprawianych w regionie Central Coast i wyprodukowanych przed rokiem 2005.",
        "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005",
        "query_pl": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Wybrzeże Środkowe\" AND T2.year  <  2005"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?",
        "question_original_pl": "Jaka jest maksymalna cena win z apelacji w regionie Central Coast, które zostały wyprodukowane przed 2005 rokiem?",
        "question": "What is the maximum price of wines from the grown place in the Central Coast area, which was produced before 2005?",
        "question_pl": "Jaka jest maksymalna cena win z upraw w regionie Central Coast, które zostały wyprodukowane przed 2005 rokiem?",
        "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005",
        "query_pl": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Wybrzeże Środkowe\" AND T2.year  <  2005"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the wines that have prices lower than 50 and have appelations in Monterey county?",
        "question_original_pl": "Jakie są wina, które mają ceny niższe niż 50 i mają apelacje w hrabstwie Monterey?",
        "question": "What are the wines that have prices lower than 50 and have grown places in Monterey county?",
        "question_pl": "Jakie są wina, które mają ceny niższe niż 50 i wyrosły w hrabstwie Monterey?",
        "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50",
        "query_pl": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"
    },
    {
        "db_id": "wine_1",
        "question_original": "Give the neames of wines with prices below 50 and with appelations in Monterey county.",
        "question_original_pl": "Podaj nazwy win z cenami poniżej 50 i z apelacjami w hrabstwie Monterey.",
        "question": "Give the neames of wines with prices below 50 and with grown places in Monterey county.",
        "question_pl": "Podaj nazwy win w cenach poniżej 50 i z miejsc uprawianych w hrabstwie Monterey.",
        "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50",
        "query_pl": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the numbers of wines for different grapes?",
        "question_original_pl": "Jaka jest liczba win dla różnych winogron?",
        "question": "What are the numbers of alcoholic drink for different grapes?",
        "question_pl": "Jakie są liczby napojów alkoholowych dla różnych winogron?",
        "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape",
        "query_pl": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
    },
    {
        "db_id": "wine_1",
        "question_original": "How many wines are there for each grape?",
        "question_original_pl": "Ile jest win z każdego szczepu?",
        "question": "How many alcoholic drink are there for each grape?",
        "question_pl": "Ile napojów alkoholowych zawiera każde winogrono?",
        "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape",
        "query_pl": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the average prices of wines for different years?",
        "question_original_pl": "Jakie są średnie ceny win z różnych lat?",
        "question": "What are the average prices of alcoholic drink for different years?",
        "question_pl": "Jakie są średnie ceny napojów alkoholowych w różnych latach?",
        "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR",
        "query_pl": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the average prices of wines for each each?",
        "question_original_pl": "Jakie są średnie ceny win dla każdego z nich?",
        "question": "What is the average prices of alcoholic drink for each each?",
        "question_pl": "Jaka jest średnia cena napoju alkoholowego dla każdego z nich?",
        "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR",
        "query_pl": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.",
        "question_original_pl": "Znajdź odrębne nazwy wszystkich win, których ceny są wyższe niż niektórych win z winiarni John Anthony.",
        "question": "Find the different names of all alcoholic drink that have prices higher than some alcoholic drink from John Anthony winery.",
        "question_pl": "Znajdź różne nazwy wszystkich napojów alkoholowych, których ceny są wyższe niż niektóre napoje alkoholowe z winiarni John Anthony.",
        "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the distinct names of wines with prices higher than any wine from John Anthony winery.",
        "question_original_pl": "Jakie są odrębne nazwy win, których ceny są wyższe niż jakiegokolwiek wina z winiarni John Anthony.",
        "question": "What are the different names of alcoholic drink with prices higher than any alcoholic drink from John Anthony winery.",
        "question_pl": "Jakie są różne nazwy napojów alkoholowych z cenami wyższymi niż jakikolwiek napój alkoholowy z winiarni John Anthony.",
        "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the names of all distinct wines in alphabetical order.",
        "question_original_pl": "Wymień nazwy wszystkich win w kolejności alfabetycznej.",
        "question": "List the names of all different alcoholic drink in alphabetical order.",
        "question_pl": "Wymień nazwy różnych napojów alkoholowych w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
        "query_pl": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines, sorted in alphabetical order?",
        "question_original_pl": "Jakie są nazwy win posortowane w kolejności alfabetycznej?",
        "question": "What are the names of alcoholic drink, sorted in alphabetical order?",
        "question_pl": "Jakie są nazwy napojów alkoholowych, posortowane w kolejności alfabetycznej?",
        "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
        "query_pl": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the names of all distinct wines ordered by price.",
        "question_original_pl": "Wymień nazwy wszystkich wyróżniających się win uporządkowane według ceny.",
        "question": "List the names of all different alcoholic drink ordered by price.",
        "question_pl": "Wymień nazwy różnych napojów alkoholowych uporządkowane według ceny.",
        "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
        "query_pl": "SELECT DISTINCT Name FROM WINE ORDER BY price"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines, sorted by price ascending?",
        "question_original_pl": "Jakie są nazwy win posortowane rosnąco według ceny?",
        "question": "What are the names of alcoholic drink, sorted by price ascending?",
        "question_pl": "Jakie są nazwy napojów alkoholowych, posortowane rosnąco według ceny?",
        "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
        "query_pl": "SELECT DISTINCT Name FROM WINE ORDER BY price"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the area of the appelation that produces the highest number of wines before the year of 2010?",
        "question_original_pl": "Który obszar apelacji produkuje najwięcej win przed rokiem 2010?",
        "question": "What is the district of the grown place that produces the highest number of wines before the year of 2010?",
        "question_pl": "W którym okręgu uprawia się najwięcej win przed rokiem 2010?",
        "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the area for the appelation which produced the most wines prior to 2010?",
        "question_original_pl": "Jaki jest obszar apelacji, w której wyprodukowano najwięcej win przed 2010 rokiem?",
        "question": "What is the district for the grown place which produced the most wines prior to 2010?",
        "question_pl": "W jakim okręgu znajduje się miejsce, w którym wyprodukowano najwięcej win przed 2010 rokiem?",
        "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the distinct names of wines produced before the year of 2000 or after the year of 2010.",
        "question_original_pl": "Znajdź odrębne nazwy win wyprodukowanych przed rokiem 2000 lub po roku 2010.",
        "question": "Find the different names of alcoholic drink produced before the year of 2000 or after the year of 2010.",
        "question_pl": "Znajdź różne nazwy napojów alkoholowych wyprodukowanych przed rokiem 2000 lub po roku 2010.",
        "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
    },
    {
        "db_id": "wine_1",
        "question_original": "Give the distinct names of wines made before 2000 or after 2010.",
        "question_original_pl": "Podaj odrębne nazwy win wyprodukowanych przed rokiem 2000 lub po roku 2010.",
        "question": "Give the different names of alcoholic drink made before 2000 or after 2010.",
        "question_pl": "Podaj różne nazwy napojów alkoholowych wyprodukowanych przed rokiem 2000 lub po roku 2010.",
        "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010",
        "query_pl": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the distinct winery of wines having price between 50 and 100.",
        "question_original_pl": "Znajdź wyróżniającą się winiarnię win o cenie między 50 a 100.",
        "question": "Find the different wine-making establishment of wines having price between 50 and 100.",
        "question_pl": "Znajdź różne zakłady winiarskie produkujące wina w cenie od 50 do 100.",
        "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
        "query_pl": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the distinct wineries which produce wines costing between 50 and 100?",
        "question_original_pl": "Jakie są wyróżniające się winiarnie, które produkują wina kosztujące od 50 do 100?",
        "question": "What are the different wine-making establishment which produce wines costing between 50 and 100?",
        "question_pl": "Jakie są różne zakłady winiarskie, które produkują wina kosztujące od 50 do 100?",
        "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100",
        "query_pl": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the maximum price and score of wines produced by St. Helena appelation?",
        "question_original_pl": "Jaka jest maksymalna cena i ocena win produkowanych w apelacji St. Helena?",
        "question": "What are the maximum price and score of alcoholic drink produced by St. Helena appelation?",
        "question_pl": "Jaka jest maksymalna cena i wynik napoju alkoholowego produkowanego w apelacji St. Helena?",
        "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
        "query_pl": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"Święta Helena\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Give the maximum price and score for wines produced in the appelation St. Helena.",
        "question_original_pl": "Podaj maksymalną cenę i ocenę dla win produkowanych w apelacji St. Helena.",
        "question": "Give the maximum price and score for alcoholic drink produced in the appelation St. Helena.",
        "question_pl": "Podaj maksymalną cenę i ocenę napoju alkoholowego produkowanego w apelacji St. Helena.",
        "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\"",
        "query_pl": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"Święta Helena\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the maximum price and score of wines in each year?",
        "question_original_pl": "Jaka jest maksymalna cena i ocena win w każdym roku?",
        "question": "What are the maximum price and score of alcoholic drink in each year?",
        "question_pl": "Jaka jest maksymalna cena i wynik napoju alkoholowego w każdym roku?",
        "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
        "query_pl": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the maximum price and score of wines for each year?",
        "question_original_pl": "Jaka jest maksymalna cena i punktacja win dla każdego roku?",
        "question": "What are the maximum price and score of alcoholic drink for each year?",
        "question_pl": "Jaka jest maksymalna cena i wynik napoju alkoholowego dla każdego roku?",
        "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
        "query_pl": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the average price and score of wines grouped by appelation?",
        "question_original_pl": "Jaka jest średnia cena i ocena win pogrupowanych według apelacji?",
        "question": "What are the average price and score of alcoholic drink grouped by grown place?",
        "question_pl": "Jaka jest średnia cena i wynik napoju alkoholowego pogrupowanego według miejsca uprawy?",
        "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
        "query_pl": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the average price and score of wines for each appelation?",
        "question_original_pl": "Jaka jest średnia cena i ocena win w poszczególnych apelacjach?",
        "question": "What are the average price and score of alcoholic drink for each grown place?",
        "question_pl": "Jaka jest średnia cena i wynik napoju alkoholowego dla każdego uprawianego miejsca?",
        "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
        "query_pl": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the wineries that have at least four wines.",
        "question_original_pl": "Znajdź winiarnie, które mają co najmniej cztery wina.",
        "question": "Find the wine-making establishment that have at least four wines.",
        "question_pl": "Znajdź zakład winiarski, który ma co najmniej cztery wina.",
        "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
        "query_pl": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
    },
    {
        "db_id": "wine_1",
        "question_original": "Which wineries produce at least four wines?",
        "question_original_pl": "Które winiarnie produkują co najmniej cztery wina?",
        "question": "Which wine-making establishment produce at least four wines?",
        "question_pl": "Który zakład winiarski produkuje co najmniej cztery wina?",
        "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
        "query_pl": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the country of all appelations who have at most three wines.",
        "question_original_pl": "Znajdź kraj wszystkich apelacji, które mają co najmniej trzy wina.",
        "question": "Find the nation of all grown places who have at most three wines.",
        "question_pl": "Znajdź naród wszystkich uprawianych miejsc, które mają co najmniej trzy wina.",
        "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
        "query_pl": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the countries for appelations with at most 3 wines?",
        "question_original_pl": "Jakie są kraje dla apelacji z co najwyżej 3 winami?",
        "question": "What are the nations for grown places with at most 3 wines?",
        "question_pl": "Jakie są narody dla wyhodowanych miejsc z co najwyżej 3 winami?",
        "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
        "query_pl": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines whose production year are before the year of all wines by Brander winery?",
        "question_original_pl": "Jak nazywają się wina, których rok produkcji jest wcześniejszy niż rok produkcji wszystkich win firmy Brander?",
        "question": "What are the names of alcoholic drink whose production year are before the year of all alcoholic drink by Brander winery?",
        "question_pl": "Jakie są nazwy napojów alkoholowych, których rok produkcji jest wcześniejszy niż rok produkcji wszystkich napojów alkoholowych przez winiarnię Brander?",
        "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
        "query_pl": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines produced before any wine from the Brander winery?",
        "question_original_pl": "Jak nazywają się wina wyprodukowane przed winem z winiarni Brander?",
        "question": "What are the names of alcoholic drink produced before any alcoholic drink from the Brander winery?",
        "question_pl": "Jak nazywa się napój alkoholowy produkowany przed jakimkolwiek napojem alkoholowym z winiarni Brander?",
        "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
        "query_pl": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the names of wines that are more expensive then all wines made in the year 2006?",
        "question_original_pl": "Jakie są nazwy win, które są droższe niż wszystkie wina wyprodukowane w 2006 roku?",
        "question": "What are the names of alcoholic drink that are more expensive then all alcoholic drink made in the year 2006?",
        "question_pl": "Jakie są nazwy napojów alkoholowych, które są droższe niż wszystkie napoje alkoholowe wyprodukowane w 2006 roku?",
        "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
        "query_pl": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
    },
    {
        "db_id": "wine_1",
        "question_original": "Give the names of wines with prices above any wine produced in 2006.",
        "question_original_pl": "Podaj nazwy win, których ceny przewyższają ceny win wyprodukowanych w 2006 roku.",
        "question": "Give the names of alcoholic drink with prices above any alcoholic drink produced in 2006.",
        "question_pl": "Podaj nazwy napojów alkoholowych z cenami powyżej dowolnego napoju alkoholowego wyprodukowanego w 2006 roku.",
        "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
        "query_pl": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the top 3 wineries with the greatest number of wines made of white color grapes.",
        "question_original_pl": "Znajdź 3 najlepsze winiarnie z największą liczbą win wyprodukowanych z białych winogron.",
        "question": "Find the top 3 wine-making establishment with the greatest number of wines made of white color grapes.",
        "question_pl": "Znajdź 3 najlepsze zakłady winiarskie z największą liczbą win produkowanych z białych winogron.",
        "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"Biały\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "wine_1",
        "question_original": "Which 3 wineries produce the most wines made from white grapes?",
        "question_original_pl": "Które 3 winiarnie produkują najwięcej win z białych winogron?",
        "question": "Which 3 wine-making establishment produce the most wines made from white grapes?",
        "question_pl": "Które 3 zakłady winiarskie produkują najwięcej win z białych winogron?",
        "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
        "query_pl": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"Biały\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.",
        "question_original_pl": "Wymień szczep, winnicę i rocznik win, których cena jest wyższa niż 100, uporządkowanych według roku.",
        "question": "List the grape, wine-making establishment and year of the wines whose price is bigger than 100 ordered by year.",
        "question_pl": "Wymień szczep, zakład winiarski i rok produkcji win, których cena jest wyższa niż 100, uporządkowanych według roku.",
        "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR",
        "query_pl": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the grapes, wineries and years for wines with price higher than 100, sorted by year?",
        "question_original_pl": "Jakie są winogrona, winnice i lata dla win o cenie wyższej niż 100, posortowane według roku?",
        "question": "What are the grapes, wine-making establishment and years for wines with price higher than 100, sorted by year?",
        "question_pl": "Jakie są szczepy winogron, zakłady winiarskie i lata produkcji win o cenie wyższej niż 100, posortowane według roku?",
        "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR",
        "query_pl": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
    },
    {
        "db_id": "wine_1",
        "question_original": "List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.",
        "question_original_pl": "Wymień szczep, apelację i nazwę win, których ocena jest wyższa niż 93, uporządkowanych według nazwy.",
        "question": "List the grape, grown place and name of wines whose score is higher than 93 ordered by Name.",
        "question_pl": "Wymień szczep, miejsce uprawy i nazwę win, których ocena jest wyższa niż 93, uporządkowane według nazwy.",
        "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
        "query_pl": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the grapes, appelations, and wines with scores above 93, sorted by Name?",
        "question_original_pl": "Jakie są winogrona, apelacje i wina z oceną powyżej 93, posortowane według nazwy?",
        "question": "What are the grapes, grown places, and wines with scores above 93, sorted by Name?",
        "question_pl": "Jakie są winogrona, miejsca uprawy i wina z oceną powyżej 93, posortowane według nazwy?",
        "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
        "query_pl": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the appelations that produce wines after the year of 2008 but not in Central Coast area.",
        "question_original_pl": "Znajdź apelacje, które produkują wina po roku 2008, ale nie w regionie Central Coast.",
        "question": "Find the grown places that produce wines after the year of 2008 but not in Central Coast area.",
        "question_pl": "Znajdź uprawiane miejsca, które produkują wina po roku 2008, ale nie w regionie Central Coast.",
        "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
        "query_pl": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Wybrzeże Środkowe\""
    },
    {
        "db_id": "wine_1",
        "question_original": "What are the appelations for wines produced after 2008 but not in the Central Coast area?",
        "question_original_pl": "Jakie są apelacje dla win wyprodukowanych po 2008 roku, ale nie w regionie Central Coast?",
        "question": "What are the grown places for wines produced after 2008 but not in the Central Coast area?",
        "question_pl": "Jakie są miejsca uprawy win wyprodukowanych po 2008 roku, ale nie w regionie Central Coast?",
        "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
        "query_pl": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Wybrzeże Środkowe\""
    },
    {
        "db_id": "wine_1",
        "question_original": "Find the average price of wines that are not produced from Sonoma county.",
        "question_original_pl": "Znajdź średnią cenę win, które nie są produkowane w hrabstwie Sonoma.",
        "question": "Find the average price of alcoholic drink that are not produced from Sonoma county.",
        "question_pl": "Znajdź średnią cenę napojów alkoholowych, które nie są produkowane w hrabstwie Sonoma.",
        "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
        "query_pl": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"
    },
    {
        "db_id": "wine_1",
        "question_original": "What is the average price for wines not produced in Sonoma county?",
        "question_original_pl": "Jaka jest średnia cena win nieprodukowanych w hrabstwie Sonoma?",
        "question": "What is the average price for alcoholic drink not produced in Sonoma county?",
        "question_pl": "Jaka jest średnia cena napoju alkoholowego nieprodukowanego w hrabstwie Sonoma?",
        "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
        "query_pl": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"
    },
    {
        "db_id": "train_station",
        "question_original": "How many train stations are there?",
        "question_original_pl": "Ile jest stacji kolejowych?",
        "question": "How many train terminals are there?",
        "question_pl": "Ile jest terminali kolejowych?",
        "query": "SELECT count(*) FROM station",
        "query_pl": "SELECT count(*) FROM station"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the name, location, and number of platforms for all stations.",
        "question_original_pl": "Pokaż nazwę, lokalizację i liczbę peronów dla wszystkich stacji.",
        "question": "Show the name, city, and number of platforms for all terminals.",
        "question_pl": "Pokaż nazwę, miasto i liczbę platform dla wszystkich terminali.",
        "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station",
        "query_pl": "SELECT name ,  LOCATION ,  number_of_platforms FROM station"
    },
    {
        "db_id": "train_station",
        "question_original": "What are all locations of train stations?",
        "question_original_pl": "Jakie są wszystkie lokalizacje stacji kolejowych?",
        "question": "What are all cities of train terminals?",
        "question_pl": "Jakie są wszystkie miasta terminali kolejowych?",
        "query": "SELECT DISTINCT LOCATION FROM station",
        "query_pl": "SELECT DISTINCT LOCATION FROM station"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the names and total passengers for all train stations not in London.",
        "question_original_pl": "Pokaż nazwy i łączną liczbę pasażerów na wszystkich stacjach kolejowych poza Londynem.",
        "question": "Show the names and total passengers for all train terminals not in London.",
        "question_pl": "Pokaż nazwy i łączną liczbę pasażerów dla wszystkich terminali kolejowych poza Londynem.",
        "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'",
        "query_pl": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'Londyn'"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the names and main services for train stations that have the top three total number of passengers.",
        "question_original_pl": "Pokaż nazwy i główne usługi dla stacji kolejowych, które mają trzy najwyższe łączne liczby pasażerów.",
        "question": "Show the names and main services for train terminals that have the top three total number of passengers.",
        "question_pl": "Podaj nazwy i główne usługi terminali kolejowych, które obsługują trzy największe łączne liczby pasażerów.",
        "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
        "query_pl": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3"
    },
    {
        "db_id": "train_station",
        "question_original": "What is the average and maximum number of total passengers for train stations in London or Glasgow?",
        "question_original_pl": "Jaka jest średnia i maksymalna łączna liczba pasażerów na stacjach kolejowych w Londynie lub Glasgow?",
        "question": "What is the average and maximum number of total passengers for train terminals in London or Glasgow?",
        "question_pl": "Jaka jest średnia i maksymalna łączna liczba pasażerów na terminalach kolejowych w Londynie lub Glasgow?",
        "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'",
        "query_pl": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'Londyn' OR LOCATION  =  'Glasgow'"
    },
    {
        "db_id": "train_station",
        "question_original": "Show all locations and the total number of platforms and passengers for all train stations in each location.",
        "question_original_pl": "Pokaż wszystkie lokalizacje oraz łączną liczbę peronów i pasażerów dla wszystkich stacji kolejowych w każdej lokalizacji.",
        "question": "Show all cities and the total number of platforms and passengers for all train terminals in each city.",
        "question_pl": "Pokaż wszystkie miasta oraz łączną liczbę peronów i pasażerów dla wszystkich terminali kolejowych w każdym mieście.",
        "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION",
        "query_pl": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION"
    },
    {
        "db_id": "train_station",
        "question_original": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.",
        "question_original_pl": "Pokaż wszystkie lokalizacje, w których znajdują się stacje kolejowe z co najmniej 15 peronami i stacje kolejowe z ponad 25 pasażerami.",
        "question": "Show all cities that have train terminals with at least 15 platforms and train terminals with more than 25 total passengers.",
        "question_pl": "Pokaż wszystkie miasta, które mają terminale kolejowe z co najmniej 15 peronami i terminale kolejowe z ponad 25 pasażerami.",
        "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25",
        "query_pl": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25"
    },
    {
        "db_id": "train_station",
        "question_original": "Show all locations which don't have a train station with at least 15 platforms.",
        "question_original_pl": "Pokaż wszystkie lokalizacje, w których nie ma stacji kolejowej z co najmniej 15 peronami.",
        "question": "Show all cities which don't have a train terminal with at least 15 platforms.",
        "question_pl": "Pokaż wszystkie miasta, które nie mają terminalu kolejowego z co najmniej 15 peronami.",
        "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15",
        "query_pl": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the location with most number of train stations.",
        "question_original_pl": "Pokaż lokalizację z największą liczbą stacji kolejowych.",
        "question": "Show the city with most number of train terminals.",
        "question_pl": "Pokaż miasto z największą liczbą terminali kolejowych.",
        "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the station name and number of trains in each station.",
        "question_original_pl": "Pokaż nazwę stacji i liczbę pociągów na każdej stacji.",
        "question": "Show the terminal name and number of trains in each terminal.",
        "question_pl": "Pokaż nazwę terminalu i liczbę pociągów w każdym terminalu.",
        "query": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id",
        "query_pl": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id"
    },
    {
        "db_id": "train_station",
        "question_original": "show the train name and station name for each train.",
        "question_original_pl": "pokaż nazwę pociągu i nazwę stacji dla każdego pociągu.",
        "question": "show the train name and terminal name for each train.",
        "question_pl": "pokaż nazwę pociągu i nazwę terminala dla każdego pociągu.",
        "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",
        "query_pl": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"
    },
    {
        "db_id": "train_station",
        "question_original": "Show all train names and times in stations in London in descending order by train time.",
        "question_original_pl": "Pokaż wszystkie nazwy i czasy pociągów na stacjach w Londynie w kolejności malejącej według czasu pociągu.",
        "question": "Show all train names and times in terminals in London in descending order by train time.",
        "question_pl": "Pokaż wszystkie nazwy i czasy pociągów w terminalach w Londynie w kolejności malejącej według czasu pociągu.",
        "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC",
        "query_pl": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'Londyn' ORDER BY T3.time DESC"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the station name with greatest number of trains.",
        "question_original_pl": "Pokaż nazwę stacji z największą liczbą pociągów.",
        "question": "Show the terminal name with greatest number of trains.",
        "question_pl": "Pokaż nazwę terminalu z największą liczbą pociągów.",
        "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "train_station",
        "question_original": "Show the station name with at least two trains.",
        "question_original_pl": "Pokaż nazwę stacji z co najmniej dwoma pociągami.",
        "question": "Show the terminal name with at least two trains.",
        "question_pl": "Pokaż nazwę terminala z co najmniej dwoma pociągami.",
        "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2",
        "query_pl": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2"
    },
    {
        "db_id": "train_station",
        "question_original": "Show all locations with only 1 station.",
        "question_original_pl": "Pokaż wszystkie lokalizacje z tylko 1 stacją.",
        "question": "Show all cities with only 1 station.",
        "question_pl": "Pokaż wszystkie miasta z tylko 1 stacją.",
        "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
        "query_pl": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"
    },
    {
        "db_id": "train_station",
        "question_original": "Show station names without any trains.",
        "question_original_pl": "Pokaż nazwy stacji bez żadnych pociągów.",
        "question": "Show terminal names without any trains.",
        "question_pl": "Pokaż nazwy terminali bez żadnych pociągów.",
        "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)",
        "query_pl": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)"
    },
    {
        "db_id": "train_station",
        "question_original": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?",
        "question_original_pl": "Jak nazywają się stacje obsługujące pociągi \"Ananthapuri Express\" i \"Guruvayur Express\"?",
        "question": "What are the names of the terminals which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?",
        "question_pl": "Jak nazywają się terminale obsługujące pociągi \"Ananthapuri Express\" i \"Guruvayur Express\"?",
        "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"",
        "query_pl": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\""
    },
    {
        "db_id": "train_station",
        "question_original": "Find the names of the trains that do not pass any station located in London.",
        "question_original_pl": "Znajdź nazwy pociągów, które nie przejeżdżają przez żadną stację w Londynie.",
        "question": "Find the names of the trains that do not pass any terminal located in London.",
        "question_pl": "Znajdź nazwy pociągów, które nie przejeżdżają przez żaden terminal znajdujący się w Londynie.",
        "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")",
        "query_pl": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"Londyn\")"
    },
    {
        "db_id": "train_station",
        "question_original": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.",
        "question_original_pl": "Wymień nazwy i lokalizacje wszystkich stacji uporządkowanych według rocznych kwot wejścia, wyjścia i wymiany.",
        "question": "List the names and cities of all stations ordered by their yearly entry exit and interchange amounts.",
        "question_pl": "Wymień nazwy i miasta wszystkich stacji uporządkowanych według rocznych kwot wjazdu, wyjazdu i wymiany.",
        "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges",
        "query_pl": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges"
    },
    {
        "db_id": "driving_school",
        "question_original": "Show the detail of vehicle with id 1.",
        "question_original_pl": "Pokaż szczegóły pojazdu o identyfikatorze 1.",
        "question": "Show the information of vehicle with id 1.",
        "question_pl": "Wyświetl informacje o pojeździe o identyfikatorze 1.",
        "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
        "query_pl": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
    },
    {
        "db_id": "driving_school",
        "question_original": "What are the details of the car with id 1?",
        "question_original_pl": "Jakie są szczegóły samochodu o identyfikatorze 1?",
        "question": "What are the information of the car with id 1?",
        "question_pl": "Jakie są informacje o samochodzie o identyfikatorze 1?",
        "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
        "query_pl": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the nickname of staff with first name as Janessa and last name as Sawayn?",
        "question_original_pl": "Jaki jest pseudonim personelu o imieniu Janessa i nazwisku Sawayn?",
        "question": "What is the monicker of employee with first name as Janessa and last name as Sawayn?",
        "question_pl": "Jaki jest pseudonim pracownika o imieniu Janessa i nazwisku Sawayn?",
        "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
        "query_pl": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "Which city does staff with first name as Janessa and last name as Sawayn live?",
        "question_original_pl": "W jakim mieście mieszkają pracownicy o imieniu Janessa i nazwisku Sawayn?",
        "question": "Which city does employee with first name as Janessa and last name as Sawayn live?",
        "question_pl": "W którym mieście mieszka pracownik o imieniu Janessa i nazwisku Sawayn?",
        "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?",
        "question_original_pl": "Jak długi jest całkowity czas trwania lekcji klienta o imieniu Rylan i nazwisku Goodwin?",
        "question": "How long is the total class time took by customer with first name as Rylan and last name as Goodwin?",
        "question_pl": "Ile wynosi łączny czas zajęć klienta o imieniu Rylan i nazwisku Goodwin?",
        "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
        "query_pl": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How long is the total lesson time took by the customer named Rylan Goodwin?",
        "question_original_pl": "Jak długo łącznie trwała lekcja przeprowadzona przez klienta Rylan Goodwin?",
        "question": "How long is the total class time took by the customer named Rylan Goodwin?",
        "question_pl": "Jak długi jest całkowity czas zajęć przeprowadzonych przez klienta o imieniu Rylan Goodwin?",
        "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
        "query_pl": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the zip code of the hosue of the employee named Janessa Sawayn?",
        "question_original_pl": "Jaki jest kod pocztowy domu pracownika o imieniu Janessa Sawayn?",
        "question": "What is the postal code of the hosue of the employee named Janessa Sawayn?",
        "question_pl": "Jaki jest kod pocztowy domu pracownika o nazwisku Janessa Sawayn?",
        "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "Find out the first name and last name of staff lived in city Damianfort.",
        "question_original_pl": "Znajdź imię i nazwisko personelu mieszkającego w mieście Damianfort.",
        "question": "Find out the full name of staff lived in city Damianfort.",
        "question_pl": "Znajdź pełną nazwę personelu mieszkającego w mieście Damianfort.",
        "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "Which city lives most of staffs? List the city name and number of staffs.",
        "question_original_pl": "W którym mieście mieszka najwięcej pracowników? Wymień nazwę miasta i liczbę pracowników.",
        "question": "Which city lives most of employees? List the city name and number of employees.",
        "question_pl": "W którym mieście mieszka najwięcej pracowników? Podaj nazwę miasta i liczbę pracowników.",
        "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",
        "query_pl": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"
    },
    {
        "db_id": "driving_school",
        "question_original": "List the first name and last name of all customers.",
        "question_original_pl": "Podaj imię i nazwisko wszystkich klientów.",
        "question": "List the forename and family name of all customers.",
        "question_pl": "Wymień imiona i nazwiska wszystkich klientów.",
        "query": "SELECT first_name ,  last_name FROM Customers;",
        "query_pl": "SELECT first_name ,  last_name FROM Customers;"
    },
    {
        "db_id": "driving_school",
        "question_original": "What are the email addresses and date of births for all customers who have a first name of Carole?",
        "question_original_pl": "Jakie są adresy e-mail i daty urodzenia wszystkich klientów, którzy mają na imię Carole?",
        "question": "What are the email addresses and birthdays for all customers who have a first name of Carole?",
        "question_pl": "Jakie są adresy e-mail i daty urodzin wszystkich klientów, którzy mają na imię Carole?",
        "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"",
        "query_pl": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\""
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the date of birth of every customer whose status code is 'Good Customer'?",
        "question_original_pl": "Jaka jest data urodzenia każdego klienta, którego kod statusu to \"Dobry klient\"?",
        "question": "What is the birthday of every customer whose status code is 'Good Customer'?",
        "question_pl": "Jaka jest data urodzin każdego klienta, którego kod statusu to \"Dobry klient\"?",
        "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
        "query_pl": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Dobry klient'"
    },
    {
        "db_id": "driving_school",
        "question_original": "When did Carole Bernhard first become a customer?",
        "question_original_pl": "Kiedy Carole Bernhard po raz pierwszy została klientką?",
        "question": "When did Carole Bernhard first become a client?",
        "question_pl": "Kiedy Carole Bernhard po raz pierwszy została Twoją klientką?",
        "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
        "query_pl": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many customers in total?",
        "question_original_pl": "Ilu jest łącznie klientów?",
        "question": "How many clients in total?",
        "question_pl": "Ilu masz łącznie klientów?",
        "query": "SELECT count(*) FROM Customers;",
        "query_pl": "SELECT count(*) FROM Customers;"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?",
        "question_original_pl": "Ile lekcji zostało ukończonych przez klienta o imieniu Rylan i nazwisku Goodwin?",
        "question": "How many classes taken by customer with first name as Rylan and last name as Goodwin were completed?",
        "question_pl": "Ile zajęć ukończył klient o imieniu Rylan i nazwisku Goodwin?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Zakończone\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons did the customer Ryan Goodwin complete?",
        "question_original_pl": "Ile lekcji ukończył klient Ryan Goodwin?",
        "question": "How many classes did the customer Ryan Goodwin complete?",
        "question_pl": "Ile klas ukończył klient Ryan Goodwin?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Zakończone\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich klientów, których zaległości wynoszą od 1000 do 3000 dolarów?",
        "question": "What are the full names of all customers with between 1000 and 3000 dollars outstanding?",
        "question_pl": "Jakie są pełne nazwy wszystkich klientów, którzy mają od 1000 do 3000 dolarów zaległości?",
        "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;",
        "query_pl": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"
    },
    {
        "db_id": "driving_school",
        "question_original": "List first name and last name of customers lived in city Lockmanfurt.",
        "question_original_pl": "Wymień imię i nazwisko klientów mieszkających w mieście Lockmanfurt.",
        "question": "List forename and family name of customers lived in city Lockmanfurt.",
        "question_pl": "Wymień imiona i nazwiska klientów mieszkających w mieście Lockmanfurt.",
        "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
        "query_pl": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "List first name and last name of customers that have more than 2 payments.",
        "question_original_pl": "Wymień imię i nazwisko klientów, którzy dokonali więcej niż 2 płatności.",
        "question": "List forename and family name of customers that have more than 2 payments.",
        "question_pl": "Wymień imiona i nazwiska klientów, którzy dokonali więcej niż 2 płatności.",
        "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
    },
    {
        "db_id": "driving_school",
        "question_original": "What are the first and last names of all customers with more than 2 payments?",
        "question_original_pl": "Jakie są imiona i nazwiska wszystkich klientów, którzy dokonali więcej niż 2 płatności?",
        "question": "What are the full names of all customers with more than 2 payments?",
        "question_pl": "Jakie są pełne nazwy wszystkich klientów z więcej niż 2 płatnościami?",
        "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;",
        "query_pl": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
    },
    {
        "db_id": "driving_school",
        "question_original": "List all payment methods and number of payments using each payment methods.",
        "question_original_pl": "Wymień wszystkie metody płatności i liczbę płatności przy użyciu każdej z nich.",
        "question": "List all payment types and number of payments using each payment types.",
        "question_pl": "Wymień wszystkie typy płatności i liczbę płatności przy użyciu każdego z nich.",
        "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;",
        "query_pl": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
    },
    {
        "db_id": "driving_school",
        "question_original": "For each payment method, how many payments were made?",
        "question_original_pl": "Ile płatności dokonano dla każdej metody płatności?",
        "question": "For each payment type, how many payments were made?",
        "question_pl": "Ile płatności dokonano dla każdego typu płatności?",
        "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;",
        "query_pl": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons were in cancelled state?",
        "question_original_pl": "Ile lekcji zostało anulowanych?",
        "question": "How many classes were in cancelled state?",
        "question_pl": "Ile klas zostało odwołanych?",
        "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
        "query_pl": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Anulowane\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons have been cancelled?",
        "question_original_pl": "Ile lekcji zostało odwołanych?",
        "question": "How many classes have been cancelled?",
        "question_pl": "Ile zajęć zostało odwołanych?",
        "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
        "query_pl": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Anulowane\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",
        "question_original_pl": "Wyświetl identyfikatory wszystkich lekcji prowadzonych przez pracowników o imieniu Janessa, nazwisku Sawayn i pseudonimie zawierającym literę \"s\".",
        "question": "List class id of all classes taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",
        "question_pl": "Wyświetl identyfikatory klas wszystkich klas prowadzonych przez pracowników o imieniu Janessa, nazwisku Sawayn i pseudonimie zawierającym literę \"s\".",
        "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";",
        "query_pl": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?",
        "question_original_pl": "Jakie są identyfikatory lekcji wszystkich pracowników nauczanych przez Janessę Sawayn, której pseudonim zawiera literę s?",
        "question": "What are the the class ids of all staff taught by Janessa Sawayn whose nickname has the letter s?",
        "question_pl": "Jakie są identyfikatory klas wszystkich pracowników nauczanych przez Janessę Sawayn, której pseudonim zawiera literę s?",
        "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";",
        "query_pl": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons taught by staff whose first name has letter 'a' in it?",
        "question_original_pl": "Ile lekcji poprowadzili pracownicy, których imię zawiera literę \"a\"?",
        "question": "How many classes taught by staff whose first name has letter 'a' in it?",
        "question_pl": "Ile klas jest prowadzonych przez pracowników, których imię ma literę \"a\"?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?",
        "question_original_pl": "Ile lekcji poprowadził pracownik, którego imię zawiera literę \"a\"?",
        "question": "How many classes were taught by a staff member whose first name has the letter 'a' in it?",
        "question_pl": "Ile zajęć prowadził pracownik, którego imię zawiera literę \"a\"?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""
    },
    {
        "db_id": "driving_school",
        "question_original": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?",
        "question_original_pl": "Jak długi jest całkowity czas trwania lekcji prowadzonych przez pracowników o imieniu Janessa i nazwisku Sawayn?",
        "question": "How long is the total class time taught by staff with first name as Janessa and last name as Sawayn?",
        "question_pl": "Jak długi jest łączny czas zajęć prowadzonych przez pracowników o imieniu Janessa i nazwisku Sawayn?",
        "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the total time for all lessons taught by Janessa Sawayn?",
        "question_original_pl": "Jaki jest łączny czas wszystkich lekcji prowadzonych przez Janessę Sawayn?",
        "question": "What is the total time for all classes taught by Janessa Sawayn?",
        "question_pl": "Jaki jest łączny czas wszystkich zajęć prowadzonych przez Janessę Sawayn?",
        "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?",
        "question_original_pl": "Jaka jest średnia cena lekcji prowadzonych przez pracowników z imieniem Janessa i nazwiskiem Sawayn?",
        "question": "What is average class price taught by staff with first name as Janessa and last name as Sawayn?",
        "question_pl": "Jaka jest średnia cena zajęć prowadzonych przez personel o imieniu Janessa i nazwisku Sawayn?",
        "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the average price for a lesson taught by Janessa Sawayn?",
        "question_original_pl": "Jaka jest średnia cena za lekcję prowadzoną przez Janessa Sawayn?",
        "question": "What is the average price for a class taught by Janessa Sawayn?",
        "question_pl": "Jaka jest średnia cena za lekcje prowadzone przez Janessa Sawayn?",
        "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
        "query_pl": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lesson does customer with first name Ray took?",
        "question_original_pl": "Ile lekcji odbył klient o imieniu Ray?",
        "question": "How many class does customer with first name Ray took?",
        "question_pl": "Ile zajęć odbył klient o imieniu Ray?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""
    },
    {
        "db_id": "driving_school",
        "question_original": "How many lessons did the customer with the first name Ray take?",
        "question_original_pl": "Ile lekcji odbył klient o imieniu Ray?",
        "question": "How many classes did the customer with the first name Ray take?",
        "question_pl": "Ile zajęć odbył klient o imieniu Ray?",
        "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
        "query_pl": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""
    },
    {
        "db_id": "driving_school",
        "question_original": "What is the id and detail of the vehicle used in lessons for most of the times?",
        "question_original_pl": "Jaki jest identyfikator i szczegóły pojazdu używanego na lekcjach przez większość czasu?",
        "question": "What is the id and information of the vehicle used in lessons for most of the times?",
        "question_pl": "Jaki jest identyfikator i informacje o pojeździe używanym na lekcjach przez większość czasu?",
        "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty do we have?",
        "question_original_pl": "Ilu mamy wykładowców?",
        "question": "How many teachers do we have?",
        "question_pl": "Ilu mamy nauczycieli?",
        "query": "SELECT count(*) FROM Faculty",
        "query_pl": "SELECT count(*) FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "What is the total number of faculty members?",
        "question_original_pl": "Jaka jest całkowita liczba członków wydziału?",
        "question": "What is the total number of teachers?",
        "question_pl": "Jaka jest całkowita liczba nauczycieli?",
        "query": "SELECT count(*) FROM Faculty",
        "query_pl": "SELECT count(*) FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "What ranks do we have for faculty?",
        "question_original_pl": "Jakie rangi mamy dla wykładowców?",
        "question": "What is the job title of teacher?",
        "question_pl": "Jaki jest tytuł zawodowy nauczyciela?",
        "query": "SELECT DISTINCT rank FROM Faculty",
        "query_pl": "SELECT DISTINCT rank FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the list of distinct ranks for faculty.",
        "question_original_pl": "Znajdź listę różnych rang dla wykładowców.",
        "question": "Find the list of different job title of teacher.",
        "question_pl": "Znajdź listę różnych tytułów zawodowych nauczyciela.",
        "query": "SELECT DISTINCT rank FROM Faculty",
        "query_pl": "SELECT DISTINCT rank FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show all the distinct buildings that have faculty rooms.",
        "question_original_pl": "Pokaż wszystkie budynki, w których znajdują się pokoje dla wykładowców.",
        "question": "Show all the different buildings that have teacher rooms.",
        "question_pl": "Pokaż różne budynki, w których znajdują się pokoje nauczycielskie.",
        "query": "SELECT DISTINCT building FROM Faculty",
        "query_pl": "SELECT DISTINCT building FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "What buildings have faculty offices?",
        "question_original_pl": "W jakich budynkach znajdują się biura wydziałów?",
        "question": "What buildings have teacher offices?",
        "question_pl": "W jakich budynkach znajdują się biura nauczycieli?",
        "query": "SELECT DISTINCT building FROM Faculty",
        "query_pl": "SELECT DISTINCT building FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the rank, first name, and last name for all the faculty.",
        "question_original_pl": "Pokaż rangę, imię i nazwisko wszystkich wykładowców.",
        "question": "Show the job title, forename, and family name for all the faculty.",
        "question_pl": "Pokaż stanowisko, imię i nazwisko oraz nazwisko rodowe wszystkich pracowników.",
        "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
        "query_pl": "SELECT rank ,  Fname ,  Lname FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the rank, first name, and last name of the faculty members?",
        "question_original_pl": "Jaki jest stopień, imię i nazwisko członków wydziału?",
        "question": "What are the job title, forename, and surname of the faculty members?",
        "question_pl": "Jaki jest tytuł zawodowy, imię i nazwisko członków wydziału?",
        "query": "SELECT rank ,  Fname ,  Lname FROM Faculty",
        "query_pl": "SELECT rank ,  Fname ,  Lname FROM Faculty"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the first name, last name, and phone number of all the female faculty members?",
        "question_original_pl": "Podaj imię, nazwisko i numer telefonu wszystkich członkiń wydziału?",
        "question": "What are the forename, surname, and telephone number of all the female faculty members?",
        "question_pl": "Jakie są imiona, nazwiska i numery telefonów wszystkich członkiń wydziału?",
        "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'",
        "query_pl": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show ids for all the male faculty.",
        "question_original_pl": "Pokaż identyfikatory wszystkich wydziałów płci męskiej.",
        "question": "Show ids for all the male teacher.",
        "question_pl": "Pokaż identyfikatory wszystkich nauczycieli płci męskiej.",
        "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
        "query_pl": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the faculty ids of all the male faculty members?",
        "question_original_pl": "Jakie są identyfikatory wszystkich wykładowców płci męskiej?",
        "question": "What are the teacher ids of all the male teacher members?",
        "question_pl": "Jakie są identyfikatory wszystkich nauczycieli płci męskiej?",
        "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
        "query_pl": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the phone, room, and building for the faculty named Jerry Prince.",
        "question_original_pl": "Wskaż telefon, pokój i budynek, w którym znajduje się wydział Jerry\"ego Princea.",
        "question": "Show the telephone, room, and building for the teacher named Jerry Prince.",
        "question_pl": "Wskaż telefon, pokój i budynek nauczyciela o imieniu Jerry Prince.",
        "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
        "query_pl": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Książę\""
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the phone, room, and building of the faculty member called Jerry Prince?",
        "question_original_pl": "Jaki jest telefon, pokój i budynek członka wydziału o imieniu Jerry Prince?",
        "question": "What are the telephone, room, and building of the teacher member called Jerry Prince?",
        "question_pl": "Jaki jest telefon, pokój i budynek nauczyciela o imieniu Jerry Prince?",
        "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
        "query_pl": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Książę\""
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the first name and last name for all the instructors.",
        "question_original_pl": "Pokaż imię i nazwisko wszystkich instruktorów.",
        "question": "Show the full name for all the instructors.",
        "question_pl": "Pokaż pełne imię i nazwisko wszystkich instruktorów.",
        "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"",
        "query_pl": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instruktor\""
    },
    {
        "db_id": "activity_1",
        "question_original": "Show all the buildings along with the number of faculty members the buildings have.",
        "question_original_pl": "Pokaż wszystkie budynki wraz z liczbą wykładowców w nich zatrudnionych.",
        "question": "Show all the buildings along with the number of teacher members the buildings have.",
        "question_pl": "Pokaż wszystkie budynki wraz z liczbą zatrudnionych w nich nauczycieli.",
        "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building",
        "query_pl": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty members does each building have? List the result with the name of the building.",
        "question_original_pl": "Ilu pracowników ma każdy z budynków? Wymień wynik wraz z nazwą budynku.",
        "question": "How many teacher members does each building have? List the result with the name of the building.",
        "question_pl": "Ilu nauczycieli liczy każdy budynek? Wymień wynik wraz z nazwą budynku.",
        "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building",
        "query_pl": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which building has most faculty members?",
        "question_original_pl": "Który budynek ma najwięcej wykładowców?",
        "question": "Which building has most teacher members?",
        "question_pl": "Który budynek ma najwięcej nauczycieli?",
        "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the building that has the largest number of faculty members.",
        "question_original_pl": "Znajdź budynek z największą liczbą wykładowców.",
        "question": "Find the building that has the largest number of teacher members.",
        "question_pl": "Znajdź budynek, w którym pracuje największa liczba nauczycieli.",
        "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "For each faculty rank, show the number of faculty members who have it.",
        "question_original_pl": "Dla każdej rangi wydziału podaj liczbę członków wydziału, którzy ją posiadają.",
        "question": "For each job title of teacher, show the number of teacher members who have it.",
        "question_pl": "Dla każdego stanowiska nauczyciela podaj liczbę nauczycieli, którzy je zajmują.",
        "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank",
        "query_pl": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty members do we have for each faculty rank?",
        "question_original_pl": "Ilu mamy wykładowców dla każdego stopnia?",
        "question": "How many teacher members do we have for each job title of teacher?",
        "question_pl": "Ilu członków mamy dla każdego stanowiska nauczyciela?",
        "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank",
        "query_pl": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show all the ranks and the number of male and female faculty for each rank.",
        "question_original_pl": "Pokaż wszystkie rangi oraz liczbę wykładowców płci męskiej i żeńskiej dla każdej rangi.",
        "question": "Show all the job title and the number of male and female teacher for each job title.",
        "question_pl": "Pokaż wszystkie nazwy stanowisk oraz liczbę nauczycieli płci męskiej i żeńskiej dla każdego stanowiska.",
        "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
        "query_pl": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty members do we have for each rank and gender?",
        "question_original_pl": "Ilu mamy wykładowców dla każdej rangi i płci?",
        "question": "How many teacher members do we have for each job title and gender?",
        "question_pl": "Ilu mamy nauczycieli dla każdego stanowiska i płci?",
        "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
        "query_pl": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which rank has the smallest number of faculty members?",
        "question_original_pl": "Która ranga ma najmniejszą liczbę członków wydziału?",
        "question": "Which job title has the smallest number of teacher members?",
        "question_pl": "Które stanowisko ma najmniejszą liczbę nauczycieli?",
        "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the faculty rank that has the least members.",
        "question_original_pl": "Znajdź wydział, który ma najmniej członków.",
        "question": "Find the job title of teacher that has the least members.",
        "question_pl": "Znajdź stanowisko nauczyciela, które ma najmniej członków.",
        "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1",
        "query_pl": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Who is the advisor of Linda Smith? Give me the first name and last name.",
        "question_original_pl": "Kto jest doradcą Lindy Smith? Podaj imię i nazwisko.",
        "question": "Who is the advisor of Linda Smith? Give me the full name.",
        "question_pl": "Kto jest doradcą Lindy Smith? Podaj pełne imię i nazwisko.",
        "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"",
        "query_pl": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\""
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the faculty id of each faculty member, along with the number of students he or she advises.",
        "question_original_pl": "Pokaż identyfikator każdego członka wydziału wraz z liczbą studentów, którym doradza.",
        "question": "Show the teacher id of each teacher member, along with the number of students he or she advises.",
        "question_pl": "Pokaż identyfikator każdego nauczyciela wraz z liczbą uczniów, którym doradza.",
        "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
        "query_pl": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the faculty id and the number of students each faculty has?",
        "question_original_pl": "Jakie są identyfikatory wydziałów i liczba studentów na każdym z nich?",
        "question": "What are the teacher id and the number of students each teacher has?",
        "question_pl": "Jakie są identyfikatory nauczycieli i liczba uczniów każdego z nich?",
        "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
        "query_pl": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show all the faculty ranks and the number of students advised by each rank.",
        "question_original_pl": "Pokaż wszystkie rangi wykładowców i liczbę studentów, którym doradza każda ranga.",
        "question": "Show all the job title of teacher and the number of students advised by each job title.",
        "question_pl": "Pokaż wszystkie stanowiska nauczycieli i liczbę uczniów, którym doradza każdy z nich.",
        "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank",
        "query_pl": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many students are advised by each rank of faculty? List the rank and the number of students.",
        "question_original_pl": "Ilu studentom doradzają poszczególni wykładowcy? Wymień rangę i liczbę studentów.",
        "question": "How many students are advised by each job title of faculty? List the job title and the number of students.",
        "question_pl": "Ilu studentów studiuje na poszczególnych stanowiskach? Wymień stanowisko i liczbę studentów.",
        "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank",
        "query_pl": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the first and last name of the faculty who has the most students?",
        "question_original_pl": "Podaj imię i nazwisko wykładowcy, który ma najwięcej studentów?",
        "question": "What are the forename and surname of the faculty who has the most students?",
        "question_pl": "Jakie jest imię i nazwisko wykładowcy, który ma najwięcej studentów?",
        "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Give me the the first and last name of the faculty who advises the most students.",
        "question_original_pl": "Podaj mi imię i nazwisko wykładowcy, który doradza największej liczbie studentów.",
        "question": "Give me the the full name of the faculty who advises the most students.",
        "question_pl": "Podaj pełne imię i nazwisko wykładowcy, który doradza największej liczbie studentów.",
        "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the ids for all the faculty members who have at least 2 students.",
        "question_original_pl": "Pokaż identyfikatory wszystkich członków wydziału, którzy mają co najmniej 2 studentów.",
        "question": "Show the ids for all the teacher members who have at least 2 students.",
        "question_pl": "Pokaż identyfikatory wszystkich nauczycieli, którzy mają co najmniej 2 uczniów.",
        "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which faculty members advise two ore more students? Give me their faculty ids.",
        "question_original_pl": "Którzy wykładowcy doradzają dwóm lub więcej studentom? Podaj mi ich identyfikatory.",
        "question": "Which teacher members advise two ore more students? Give me their teacher ids.",
        "question_pl": "Którzy nauczyciele doradzają dwóm lub więcej uczniom? Podaj mi ich identyfikatory.",
        "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
        "query_pl": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show ids for the faculty members who don't advise any student.",
        "question_original_pl": "Pokaż identyfikatory członków wydziału, którzy nie doradzają żadnemu studentowi.",
        "question": "Show ids for the teacher members who don't advise any student.",
        "question_pl": "Pokaż identyfikatory nauczycieli, którzy nie doradzają żadnemu uczniowi.",
        "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
        "query_pl": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are the ids of the faculty members who do not advise any student.",
        "question_original_pl": "Jakie są identyfikatory członków wydziału, którzy nie doradzają żadnemu studentowi.",
        "question": "What are the ids of the teacher members who do not advise any student.",
        "question_pl": "Jakie są identyfikatory nauczycieli, którzy nie doradzają żadnemu uczniowi.",
        "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student",
        "query_pl": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty members participate in an activity?",
        "question_original_pl": "Ilu członków wydziału uczestniczy w zajęciach?",
        "question": "How many teacher members participate in an activity?",
        "question_pl": "Ilu nauczycieli uczestniczy w zajęciach?",
        "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
        "query_pl": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
    },
    {
        "db_id": "activity_1",
        "question_original": "Give me the number of faculty members who participate in an activity",
        "question_original_pl": "Podaj liczbę członków wydziału, którzy uczestniczą w zajęciach",
        "question": "Give me the number of teacher members who participate in an activity",
        "question_pl": "Podaj liczbę nauczycieli, którzy biorą udział w zajęciach.",
        "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
        "query_pl": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the ids of the faculty who don't participate in any activity.",
        "question_original_pl": "Pokaż identyfikatory wydziałów, które nie uczestniczą w żadnej aktywności.",
        "question": "Show the ids of the teacher who don't participate in any activity.",
        "question_pl": "Pokaż identyfikatory nauczycieli, którzy nie uczestniczą w żadnych zajęciach.",
        "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
        "query_pl": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which faculty do not participate in any activity? Find their faculty ids.",
        "question_original_pl": "Które wydziały nie uczestniczą w żadnych zajęciach? Znajdź ich identyfikatory.",
        "question": "Which teacher do not participate in any activity? Find their teacher ids.",
        "question_pl": "Którzy nauczyciele nie uczestniczą w żadnych zajęciach? Znajdź ich identyfikatory.",
        "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
        "query_pl": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the ids of all the faculty members who participate in an activity and advise a student.",
        "question_original_pl": "Pokaż identyfikatory wszystkich członków wydziału, którzy uczestniczą w zajęciach i doradzają studentowi.",
        "question": "Show the ids of all the teacher members who participate in an activity and advise a student.",
        "question_pl": "Pokaż identyfikatory wszystkich nauczycieli, którzy uczestniczą w aktywności i doradzają uczniowi.",
        "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
        "query_pl": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
    },
    {
        "db_id": "activity_1",
        "question_original": "What are ids of the faculty members who not only participate in an activity but also advise a student.",
        "question_original_pl": "Jakie są identyfikatory członków wydziału, którzy nie tylko uczestniczą w zajęciach, ale także doradzają studentom.",
        "question": "What are ids of the teacher members who not only participate in an activity but also advise a student.",
        "question_pl": "Jakie są identyfikatory nauczycieli, którzy nie tylko uczestniczą w zajęciach, ale także doradzają uczniom.",
        "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student",
        "query_pl": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in.",
        "question_original_pl": "Podaj imię i nazwisko wszystkich członków wydziału, którzy brali udział w jakiejś aktywności, wraz z liczbą aktywności, w których uczestniczyli.",
        "question": "Show the full name of all the teacher members who participated in some activity, together with the number of activities they participated in.",
        "question_pl": "Podaj pełne imiona i nazwiska wszystkich nauczycieli, którzy brali udział w jakichś zajęciach, wraz z liczbą zajęć, w których uczestniczyli.",
        "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
        "query_pl": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
    },
    {
        "db_id": "activity_1",
        "question_original": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.",
        "question_original_pl": "Podaj imię i nazwisko członków wydziału, którzy uczestniczyli w co najmniej jednym działaniu? Dla każdego z nich podaj również liczbę zajęć, w których uczestniczyli.",
        "question": "What is the forename and surname of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.",
        "question_pl": "Podaj imię i nazwisko członków wydziału, którzy uczestniczyli w co najmniej jednym działaniu? Dla każdego z nich wskaż również liczbę działań, w których uczestniczyli.",
        "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
        "query_pl": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
    },
    {
        "db_id": "activity_1",
        "question_original": "Show all the activity names and the number of faculty involved in each activity.",
        "question_original_pl": "Pokaż wszystkie nazwy działań i liczbę wydziałów zaangażowanych w każde działanie.",
        "question": "Show all the activity names and the number of teacher involved in each activity.",
        "question_pl": "Pokaż nazwy wszystkich aktywności i liczbę nauczycieli zaangażowanych w każdą z nich.",
        "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID",
        "query_pl": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
    },
    {
        "db_id": "activity_1",
        "question_original": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.",
        "question_original_pl": "Ilu członków wydziału uczestniczy w każdym działaniu? Podaj nazwy aktywności i liczbę członków wydziału.",
        "question": "How many teacher members participate in each activity? Return the activity names and the number of teacher members.",
        "question_pl": "Ilu nauczycieli uczestniczy w poszczególnych zajęciach? Podaj nazwy aktywności i liczbę nauczycieli biorących w nich udział.",
        "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID",
        "query_pl": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
    },
    {
        "db_id": "activity_1",
        "question_original": "What is the first and last name of the faculty participating in the most activities?",
        "question_original_pl": "Jakie jest imię i nazwisko wykładowcy uczestniczącego w większości działań?",
        "question": "What is the full name of the faculty participating in the most activities?",
        "question_pl": "Jakie jest pełne imię i nazwisko wykładowcy uczestniczącego w większości działań?",
        "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the first and last name of the faculty who is involved in the largest number of activities.",
        "question_original_pl": "Znajdź imię i nazwisko wykładowcy, który jest zaangażowany w największą liczbę działań.",
        "question": "Find the forename and family name of the faculty who is involved in the largest number of activities.",
        "question_pl": "Znajdź imię i nazwisko wydziału, który jest zaangażowany w największą liczbę działań.",
        "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "What is the name of the activity that has the most faculty members involved in?",
        "question_original_pl": "Jak nazywa się aktywność, w którą zaangażowanych jest najwięcej członków wydziału?",
        "question": "What is the name of the activity that has the most teacher members involved in?",
        "question_pl": "Jak nazywa się działanie, w które zaangażowanych jest najwięcej nauczycieli?",
        "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which activity has the most faculty members participating in? Find the activity name.",
        "question_original_pl": "W której aktywności uczestniczy najwięcej członków wydziału? Znajdź nazwę aktywności.",
        "question": "Which activity has the most teacher members participating in? Find the activity name.",
        "question_pl": "W której aktywności uczestniczy najwięcej nauczycieli? Znajdź nazwę aktywności.",
        "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Tell me the first and last name of the student who has the most activities.",
        "question_original_pl": "Podaj imię i nazwisko ucznia, który ma najwięcej aktywności.",
        "question": "Tell me the full name of the student who has the most activities.",
        "question_pl": "Podaj pełne imię i nazwisko ucznia, który ma najwięcej aktywności.",
        "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the first names of the faculty members who are playing Canoeing or Kayaking.",
        "question_original_pl": "Znajdź imiona członków wydziału, którzy grają w kajakarstwo.",
        "question": "Find the forenames of the faculty members who are playing Canoeing or Kayaking.",
        "question_pl": "Znajdź imiona członków wydziału, którzy grają w kajakarstwo lub kajakarstwo.",
        "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
        "query_pl": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kajakarstwo' OR T3.activity_name  =  'Kajakarstwo'"
    },
    {
        "db_id": "activity_1",
        "question_original": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
        "question_original_pl": "Którzy członkowie wydziału grają w kajakarstwo lub kajakarstwo? Podaj ich imiona.",
        "question": "Which teacher members are playing either Canoeing or Kayaking? Tell me their forenames.",
        "question_pl": "Którzy nauczyciele grają w kajakarstwo lub spływy kajakowe? Podaj ich imiona i nazwiska.",
        "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
        "query_pl": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kajakarstwo' OR T3.activity_name  =  'Kajakarstwo'"
    },
    {
        "db_id": "activity_1",
        "question_original": "Find the first names of the faculty members who participate in Canoeing and Kayaking.",
        "question_original_pl": "Znajdź imiona członków wydziału, którzy uczestniczą w spływach kajakowych.",
        "question": "Find the forenames of the faculty members who participate in Canoeing and Kayaking.",
        "question_pl": "Znajdź imiona członków wydziału, którzy biorą udział w spływach kajakowych.",
        "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'",
        "query_pl": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kajakarstwo' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kajakarstwo'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.",
        "question_original_pl": "Znajdź nazwę, miasto, kraj i wysokość lotnisk w mieście Nowy Jork.",
        "question": "Find the name, city, nation, and altitude (or elevation) of the aerodromes in the city of New York.",
        "question_pl": "Znajdź nazwę, miasto, kraj i wysokość lotniska w mieście Nowy Jork.",
        "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",
        "query_pl": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'Nowy Jork'"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the maximum elevation of all airports in the country of Iceland?",
        "question_original_pl": "Jakie jest maksymalne wzniesienie wszystkich lotnisk w kraju Islandia?",
        "question": "What is the maximum altitude of all aerodromes in the country of Iceland?",
        "question_pl": "Jaka jest maksymalna wysokość wszystkich lotnisk w Islandii?",
        "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
        "query_pl": "SELECT max(elevation) FROM airports WHERE country  =  'Islandia'"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the highest elevation of an airport in the country of Iceland?",
        "question_original_pl": "Jakie jest najwyżej położone lotnisko w kraju Islandia?",
        "question": "What is the highest altitude of an aerodrome in the country of Iceland?",
        "question_pl": "Jaka jest najwyższa wysokość lotniska w kraju Islandia?",
        "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
        "query_pl": "SELECT max(elevation) FROM airports WHERE country  =  'Islandia'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the country of the airlines whose name starts with 'Orbit'.",
        "question_original_pl": "Znajdź kraj linii lotniczych, których nazwa zaczyna się na \"Orbit\".",
        "question": "Find the nation of the airlines whose name starts with 'Orbit'.",
        "question_pl": "Znajdź kraj linii lotniczych, których nazwa zaczyna się na \"Orbita\".",
        "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
        "query_pl": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
    },
    {
        "db_id": "flight_4",
        "question_original": "What are the countries of all airlines whose names start with Orbit?",
        "question_original_pl": "Jakie są kraje wszystkich linii lotniczych, których nazwy zaczynają się na Orbit?",
        "question": "What are the nations of all airlines whose names start with Orbit?",
        "question_pl": "Jakie są nazwy wszystkich linii lotniczych, których nazwy zaczynają się od Orbit?",
        "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
        "query_pl": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Which country is the airport that has the highest altitude located in?",
        "question_original_pl": "W którym kraju znajduje się lotnisko o największej wysokości nad poziomem morza?",
        "question": "Which nation is the aerodrome that has the highest altitude located in?",
        "question_pl": "W którym kraju znajduje się lotnisko o największej wysokości?",
        "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
        "query_pl": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the country of the airport with the highest elevation?",
        "question_original_pl": "W jakim kraju znajduje się lotnisko o najwyższym wzniesieniu?",
        "question": "What is the nation of the aerodrome with the highest altitude?",
        "question_pl": "Jaki jest kraj lotniska o największej wysokości?",
        "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
        "query_pl": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of airports whose name contain the word 'International'.",
        "question_original_pl": "Znajdź liczbę lotnisk, których nazwy zawierają słowo \"Międzynarodowy\".",
        "question": "Find the number of aerodromes whose name contain the word 'International'.",
        "question_pl": "Znajdź liczbę lotnisk, których nazwa zawiera słowo \"Międzynarodowy\".",
        "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
        "query_pl": "SELECT count(*) FROM airports WHERE name LIKE '%Międzynarodowy%'"
    },
    {
        "db_id": "flight_4",
        "question_original": "How many airports' names have the word Interanation in them?",
        "question_original_pl": "Ile nazw lotnisk zawiera słowo Międzynarodowy?",
        "question": "How many aerodromes' names have the word Interanation in them?",
        "question_pl": "Ile nazw lotnisk zawiera słowo Interanation?",
        "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
        "query_pl": "SELECT count(*) FROM airports WHERE name LIKE '%Międzynarodowy%'"
    },
    {
        "db_id": "flight_4",
        "question_original": "How many different cities do have some airport in the country of Greenland?",
        "question_original_pl": "Ile różnych miast ma lotnisko w kraju Grenlandia?",
        "question": "How many different cities do have some aerodrome in the country of Greenland?",
        "question_pl": "W ilu miastach w kraju Grenlandia znajdują się lotniska?",
        "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
        "query_pl": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Grenlandia'"
    },
    {
        "db_id": "flight_4",
        "question_original": "In how many cities are there airports in the country of Greenland?",
        "question_original_pl": "W ilu miastach w kraju Grenlandia znajdują się lotniska?",
        "question": "In how many cities are there aerodromes in the country of Greenland?",
        "question_pl": "W ilu miastach na Grenlandii znajdują się lotniska?",
        "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
        "query_pl": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Grenlandia'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of routes whose destination airports are in Canada.",
        "question_original_pl": "Znajdź liczbę tras, których lotniska docelowe znajdują się w Kanadzie.",
        "question": "Find the number of routes whose terminal aerodromes are in Canada.",
        "question_pl": "Znajdź liczbę tras, których lotniska końcowe znajdują się w Kanadzie.",
        "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
        "query_pl": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Kanada'"
    },
    {
        "db_id": "flight_4",
        "question_original": "How many routes end in a Canadian airport?",
        "question_original_pl": "Ile tras kończy się na kanadyjskim lotnisku?",
        "question": "How many paths end in a Canadian aerodrome?",
        "question_pl": "Ile ścieżek kończy się na kanadyjskim lotnisku?",
        "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
        "query_pl": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Kanada'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the name, city, and country of the airport that has the lowest altitude.",
        "question_original_pl": "Znajdź nazwę, miasto i kraj lotniska o najniższej wysokości.",
        "question": "Find the name, city, and nation of the aerodrome that has the lowest altitude.",
        "question_pl": "Znajdź nazwę, miasto i kraj, w którym znajduje się lotnisko o najniższej wysokości.",
        "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1",
        "query_pl": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the name, city, and country of the airport with the lowest altitude?",
        "question_original_pl": "Podaj nazwę, miasto i kraj lotniska o najniższej wysokości?",
        "question": "What is the name, city, and nation of the aerodrome with the lowest altitude?",
        "question_pl": "Jaka jest nazwa, miasto i kraj lotniska o najniższej wysokości?",
        "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1",
        "query_pl": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the name, city, and country of the airport with the highest elevation?",
        "question_original_pl": "Podaj nazwę, miasto i kraj lotniska o najwyższym wzniesieniu?",
        "question": "What is the name, city, and nation of the aerodrome with the highest elevation?",
        "question_pl": "Jaka jest nazwa, miasto i kraj lotniska o najwyższym wzniesieniu?",
        "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1",
        "query_pl": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the name and city of the airport that the most routes end at?",
        "question_original_pl": "Jaka jest nazwa i miasto lotniska, na którym kończy się najwięcej tras?",
        "question": "What is the name and city of the aerodrome that the most routes end at?",
        "question_pl": "Jak nazywa się i w jakim mieście znajduje się lotnisko, na którym kończy się najwięcej tras?",
        "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the names of the top 10 airlines that operate the most number of routes.",
        "question_original_pl": "Znajdź nazwy 10 najlepszych linii lotniczych obsługujących największą liczbę tras.",
        "question": "Find the names of the top 10 airlines that operate the most number of paths.",
        "question_pl": "Znajdź nazwy 10 najlepszych linii lotniczych, które obsługują największą liczbę połączeń.",
        "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
        "query_pl": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of different airports which are the destinations of the American Airlines.",
        "question_original_pl": "Znajdź liczbę różnych lotnisk, na które docierają linie American Airlines.",
        "question": "Find the number of different aerodromes which are the destinations of the American Airlines.",
        "question_pl": "Znajdź liczbę różnych lotnisk, które są miejscami docelowymi American Airlines.",
        "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
        "query_pl": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Which countries has the most number of airlines?",
        "question_original_pl": "Które kraje mają największą liczbę linii lotniczych?",
        "question": "Which nations has the most number of airlines?",
        "question_pl": "Który kraj ma najwięcej linii lotniczych?",
        "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What are the countries with the most airlines whose active status is Y?",
        "question_original_pl": "W jakich krajach najwięcej linii lotniczych ma status aktywny Y?",
        "question": "What are the nations with the most airlines whose active status is Y?",
        "question_pl": "Jakie są kraje z największą liczbą linii lotniczych, których aktywny status to Y?",
        "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "How many airports are there per country? Order the countries by decreasing number of airports.",
        "question_original_pl": "Ile lotnisk znajduje się w każdym kraju? Uporządkuj kraje według malejącej liczby lotnisk.",
        "question": "How many aerodromes are there per nation? Order the nations by decreasing number of aerodromes.",
        "question_pl": "Ile jest lotnisk w każdym kraju? Uporządkuj kraje według malejącej liczby lotnisk.",
        "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC",
        "query_pl": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.",
        "question_original_pl": "Znajdź liczbę tras i nazwę lotniska dla każdego lotniska źródłowego, uporządkuj wyniki według malejącej liczby tras.",
        "question": "Find the number of paths and aerodrome name for each source aerodrome, order the results by decreasing number of paths.",
        "question_pl": "Znajdź liczbę ścieżek i nazwę lotniska dla każdego lotniska źródłowego, uporządkuj wyniki według malejącej liczby ścieżek.",
        "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
        "query_pl": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
    },
    {
        "db_id": "flight_4",
        "question_original": "For each  airport name, how many routes start at that airport, ordered from most to least?",
        "question_original_pl": "Dla każdej nazwy lotniska, ile tras rozpoczyna się na tym lotnisku, w kolejności od największej do najmniejszej?",
        "question": "For each aerodrome name, how many paths start at that aerodrome, ordered from most to least?",
        "question_pl": "Dla każdej nazwy lotniska, ile ścieżek rozpoczyna się na tym lotnisku, w kolejności od największej do najmniejszej?",
        "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
        "query_pl": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the average elevation of all airports for each country.",
        "question_original_pl": "Znajdź średnią wysokość wszystkich lotnisk w każdym kraju.",
        "question": "Find the average altitude of all aerodromes for each nation",
        "question_pl": "Znajdź średnią wysokość wszystkich lotnisk dla każdego kraju.",
        "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country",
        "query_pl": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of routes with destination airports in Italy.",
        "question_original_pl": "Znajdź liczbę tras z lotniskami docelowymi we Włoszech.",
        "question": "Find the number of routes with terminal aerodromes in Italy.",
        "question_pl": "Znajdź liczbę tras z lotniskami końcowymi we Włoszech.",
        "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
        "query_pl": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Włochy'"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the number of routes whose destinations are Italian airports?",
        "question_original_pl": "Jaka jest liczba tras, których portami docelowymi są włoskie lotniska?",
        "question": "What is the number of routes whose destinations are Italian aerodromes?",
        "question_pl": "Jaka jest liczba tras, których celem są włoskie lotniska?",
        "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
        "query_pl": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Włochy'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
        "question_original_pl": "Zwróć liczbę tras z lotniskiem docelowym we Włoszech obsługiwanych przez linię lotniczą o nazwie \"American Airlines\".",
        "question": "Return the number of routes with terminal aerodrome in Italy operated by the airline with name 'American Airlines'.",
        "question_pl": "Zwróć liczbę tras z lotniskiem końcowym we Włoszech obsługiwanych przez linię lotniczą o nazwie \"American Airlines\".",
        "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
        "query_pl": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Włochy' AND T3.name  =  'American Airlines'"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the number of routes that have destination John F Kennedy International Airport.",
        "question_original_pl": "Znajdź liczbę tras, których celem jest międzynarodowe lotnisko im. Johna F. Kennedyego.",
        "question": "Find the number of routes that have terminal John F Kennedy International Airport.",
        "question_pl": "Znajdź liczbę tras z terminalem na międzynarodowym lotnisku im. Johna F. Kennedy'ego.",
        "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
        "query_pl": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'Międzynarodowy port lotniczy im. Johna F. Kennedyego'"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the number of routes that end at John F Kennedy International Airport?",
        "question_original_pl": "Jaka jest liczba tras, które kończą się na międzynarodowym lotnisku Johna F. Kennedyego?",
        "question": "What is the number of routes that end at John F Kennedy International Airport?",
        "question_pl": "Jaka jest liczba tras, które kończą się na międzynarodowym lotnisku Johna F. Kennedy'ego?",
        "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
        "query_pl": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'Międzynarodowy port lotniczy im. Johna F. Kennedyego'"
    },
    {
        "db_id": "flight_4",
        "question_original": "How many routes go from the United States to Canada?",
        "question_original_pl": "Ile tras prowadzi ze Stanów Zjednoczonych do Kanady?",
        "question": "How many paths go from the United States to Canada?",
        "question_pl": "Ile tras biegnie ze Stanów Zjednoczonych do Kanady?",
        "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
        "query_pl": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Kanada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'Stany Zjednoczone')"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the id of routes whose source and destination airports are in the United States.",
        "question_original_pl": "Znajdź identyfikatory tras, których lotniska źródłowe i docelowe znajdują się w Stanach Zjednoczonych.",
        "question": "Find the id of paths whose source and terminal aerodromes are in the United States.",
        "question_pl": "Znajdź identyfikator tras, których lotniska początkowe i końcowe znajdują się w Stanach Zjednoczonych.",
        "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
        "query_pl": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Stany Zjednoczone') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'Stany Zjednoczone')"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the id of the routes whose source and destination airports are in the United States?",
        "question_original_pl": "Jaki jest identyfikator tras, których lotniska źródłowe i docelowe znajdują się w Stanach Zjednoczonych?",
        "question": "What is the id of the paths whose source and terminal aerodromes are in the United States?",
        "question_pl": "Jaki jest identyfikator tras, których lotniska początkowe i końcowe znajdują się w Stanach Zjednoczonych?",
        "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
        "query_pl": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Stany Zjednoczone') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'Stany Zjednoczone')"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the busiest source airport that runs most number of routes in China.",
        "question_original_pl": "Znajdź najbardziej ruchliwe lotnisko źródłowe, które obsługuje najwięcej tras w Chinach.",
        "question": "Find the busiest source aerodrome that runs most number of routes in China.",
        "question_pl": "Znajdź najbardziej ruchliwe lotnisko źródłowe obsługujące największą liczbę tras w Chinach.",
        "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'Chiny' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "Find the busiest destination airport that runs most number of routes in China.",
        "question_original_pl": "Znajdź najbardziej ruchliwe lotnisko docelowe, które obsługuje najwięcej tras w Chinach.",
        "question": "Find the busiest terminal aerodrome that runs most number of routes in China.",
        "question_pl": "Znajdź najbardziej ruchliwe lotnisko, które obsługuje najwięcej tras w Chinach.",
        "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'Chiny' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "flight_4",
        "question_original": "What is the name of the airport that is the destination of the most number of routes that start in China?",
        "question_original_pl": "Jak nazywa się lotnisko, które jest celem największej liczby tras rozpoczynających się w Chinach?",
        "question": "What is the name of the aerodrome that is the terminal of the most number of routes that start in China?",
        "question_pl": "Jak nazywa się lotnisko, które jest terminalem dla największej liczby tras rozpoczynających się w Chinach?",
        "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'Chiny' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Find the ids of all the order items whose product id is 11.",
        "question_original_pl": "Znajdź identyfikatory wszystkich pozycji zamówienia, których identyfikator produktu to 11.",
        "question": "Find the ids of all the order items whose goods id is 11.",
        "question_pl": "Znajdź identyfikatory wszystkich pozycji zamówienia, których identyfikator towaru to 11.",
        "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
        "query_pl": "SELECT order_item_id FROM order_items WHERE product_id = 11"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Find all the order items whose product id is 11. What are the order item ids?",
        "question_original_pl": "Znajdź wszystkie pozycje zamówienia, których identyfikator produktu to 11. Jakie są identyfikatory pozycji zamówienia?",
        "question": "Find all the order items whose goods id is 11. What are the order item ids?",
        "question_pl": "Znajdź wszystkie pozycje zamówienia, których identyfikator towaru to 11. Jakie są identyfikatory pozycji zamówienia?",
        "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
        "query_pl": "SELECT order_item_id FROM order_items WHERE product_id = 11"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the name of all the distinct customers who have orders with status \"Packing\".",
        "question_original_pl": "Wyświetl nazwy wszystkich klientów, którzy mają zamówienia ze statusem \"Pakowanie\".",
        "question": "List the name of all the different clients who have orders with status \"Packing\".",
        "question_pl": "Wymień nazwy wszystkich różnych klientów, którzy mają zamówienia ze statusem \"Pakowanie\".",
        "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
        "query_pl": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Pakowanie\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Find the details of all the distinct customers who have orders with status \"On Road\".",
        "question_original_pl": "Znajdź szczegóły wszystkich klientów, którzy mają zamówienia ze statusem \"W drodze\".",
        "question": "Find the information of all the different clients who have orders with status \"On Road\".",
        "question_pl": "Znajdź informacje o wszystkich różnych klientach, którzy mają zamówienia ze statusem \"W drodze\".",
        "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
        "query_pl": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Na drodze\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
        "question_original_pl": "Którzy klienci mają zamówienia ze statusem \"W drodze\"? Podaj mi szczegóły klienta?",
        "question": "What are the different clients who have orders with status \"On Road\"? Give me the client information?",
        "question_pl": "Jacy klienci mają zamówienia ze statusem \"W drodze\"? Podaj mi informacje o kliencie?",
        "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
        "query_pl": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Na drodze\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.",
        "question_original_pl": "Które zamówienia zostały złożone przez klienta o imieniu \"Jeramie\"? Podaj mi identyfikatory zamówień i ich status.",
        "question": "Which orders are made by the client named \"Jeramie\"? Give me the order ids and status.",
        "question_pl": "Które zamówienia zostały złożone przez klienta o nazwie \"Jeramie\"? Podaj mi identyfikatory zamówień i status.",
        "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
        "query_pl": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Find the dates of orders which belong to the customer named \"Jeramie\".",
        "question_original_pl": "Znajdź daty zamówień należących do klienta o nazwie \"Jeramie\".",
        "question": "Find the day of orders which belong to the client named \"Jeramie\".",
        "question_pl": "Znajdź dzień zamówień należących do klienta o nazwie \"Jeramie\".",
        "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
        "query_pl": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What are the dates of the orders made by the customer named \"Jeramie\"?",
        "question_original_pl": "Jakie są daty zamówień złożonych przez klienta o imieniu \"Jeramie\"?",
        "question": "What are the day of the orders made by the client named \"Jeramie\"?",
        "question_pl": "Jaki jest dzień złożenia zamówienia przez klienta o imieniu \"Jeramie\"?",
        "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
        "query_pl": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.",
        "question_original_pl": "Podaj nazwiska klientów, którzy złożyli zamówienia w okresie od 2009-01-01 do 2010-01-01.",
        "question": "Give me the names of clients who have placed orders between 2009-01-01 and 2010-01-01.",
        "question_pl": "Podaj mi nazwy klientów, którzy złożyli zamówienia w okresie od 2009-01-01 do 2010-01-01.",
        "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"",
        "query_pl": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?",
        "question_original_pl": "Podaj mi listę odrębnych identyfikatorów produktów z zamówień złożonych w okresie od 1975-01-01 do 1976-01-01?",
        "question": "Give me a list of different goods ids from orders placed between 1975-01-01 and 1976-01-01?",
        "question_pl": "Podaj mi listę różnych identyfikatorów towarów z zamówień złożonych w okresie od 1975-01-01 do 1976-01-01?",
        "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
        "query_pl": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??",
        "question_original_pl": "Jakie są odrębne identyfikatory produktów zamówionych w okresie od 1975-01-01 do 1976-01-01?",
        "question": "What are the different ids of goods ordered between 1975-01-01 and 1976-01-01??",
        "question_pl": "Jakie są różne identyfikatory towarów zamówionych w okresie od 1975-01-01 do 1976-01-01?",
        "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
        "query_pl": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "When was the order placed whose shipment tracking number is 3452? Give me the date.",
        "question_original_pl": "Kiedy zostało złożone zamówienie, którego numer śledzenia przesyłki to 3452? Podaj mi datę.",
        "question": "When was the order placed whose shipment tracking number is 3452? Give me the day.",
        "question_pl": "Kiedy zostało złożone zamówienie, którego numer śledzenia przesyłki to 3452? Podaj mi dzień.",
        "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
        "query_pl": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What is the placement date of the order whose invoice number is 10?",
        "question_original_pl": "Jaka jest data złożenia zamówienia, którego numer faktury to 10?",
        "question": "What is the placement day of the order whose invoice number is 10?",
        "question_pl": "Jaki jest dzień złożenia zamówienia, którego numer faktury to 10?",
        "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
        "query_pl": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the count and id of each product in all the orders.",
        "question_original_pl": "Wyświetl liczbę i identyfikator każdego produktu we wszystkich zamówieniach.",
        "question": "List the count and id of each goods in all the orders.",
        "question_pl": "Podaj liczbę i identyfikator każdego towaru we wszystkich zamówieniach.",
        "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "query_pl": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "For each product, return its id and the number of times it was ordered.",
        "question_original_pl": "Dla każdego produktu zwróć jego identyfikator i liczbę zamówień.",
        "question": "For each goods, return its id and the number of times it was ordered.",
        "question_pl": "Dla każdego towaru zwróć jego identyfikator i liczbę zamówień.",
        "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "query_pl": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the name and count of each product in all orders.",
        "question_original_pl": "Podaj nazwę i liczbę każdego produktu we wszystkich zamówieniach.",
        "question": "List the name and count of each goods in all orders.",
        "question_pl": "Podaj nazwę i liczbę każdego towaru we wszystkich zamówieniach.",
        "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "query_pl": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "For each product, show its name and the number of times it was ordered.",
        "question_original_pl": "Dla każdego produktu podaj jego nazwę i liczbę zamówień.",
        "question": "For each goods, show its name and the number of times it was ordered.",
        "question_pl": "Dla każdego towaru podaj jego nazwę i liczbę zamówień.",
        "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "query_pl": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the names of all distinct products in alphabetical order.",
        "question_original_pl": "Wymień nazwy wszystkich odrębnych produktów w kolejności alfabetycznej.",
        "question": "List the names of all different goods in alphabetical order.",
        "question_pl": "Wymień nazwy wszystkich towarów w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
        "query_pl": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Sort all the distinct products in alphabetical order.",
        "question_original_pl": "Posortuj wszystkie produkty w kolejności alfabetycznej.",
        "question": "Sort all the different goods in alphabetical order.",
        "question_pl": "Posortuj wszystkie towary w kolejności alfabetycznej.",
        "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
        "query_pl": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the ids of all distinct orders ordered by placed date.",
        "question_original_pl": "Wyświetl identyfikatory wszystkich odrębnych zamówień uporządkowanych według daty złożenia.",
        "question": "List the ids of all different orders ordered by placed day.",
        "question_pl": "Wyświetl identyfikatory wszystkich różnych zamówień uporządkowanych według złożonego dnia.",
        "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
        "query_pl": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What are ids of the all distinct orders, sorted by placement date?",
        "question_original_pl": "Jakie są identyfikatory wszystkich odrębnych zamówień, posortowane według daty złożenia?",
        "question": "What are ids of the all different orders, sorted by placement day?",
        "question_pl": "Jakie są identyfikatory różnych zamówień, posortowane według dnia złożenia?",
        "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
        "query_pl": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
    },
    {
        "db_id": "tracking_orders",
        "question_original": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.",
        "question_original_pl": "Znajdź wyraźne szczegóły faktur, które zostały utworzone przed 1989-09-03 lub po 2007-12-25.",
        "question": "Find the different information of invoices which are created before 1989-09-03 or after 2007-12-25.",
        "question_pl": "Znajdź różne informacje o fakturach utworzonych przed 1989-09-03 lub po 2007-12-25.",
        "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
        "query_pl": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?",
        "question_original_pl": "Jakie są szczegóły faktur utworzonych przed 1989-09-03 lub po 2007-12-25?",
        "question": "What are the different information of invoices created before 1989-09-03 or after 2007-12-25?",
        "question_pl": "Jakie są różne informacje o fakturach utworzonych przed 1989-09-03 lub po 2007-12-25?",
        "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
        "query_pl": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
    },
    {
        "db_id": "tracking_orders",
        "question_original": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").",
        "question_original_pl": "Wyświetl listę nazwisk klientów, którzy raz anulowali zakup produktu \"jedzenie\" (status produktu to \"Anuluj\").",
        "question": "List the names of clients who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").",
        "question_pl": "Wymień nazwiska klientów, którzy raz anulowali zakup produktu \"żywność\" (status pozycji to \"Anuluj\").",
        "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
        "query_pl": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Anuluj\" AND T4.product_name = \"jedzenie\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
    },
    {
        "db_id": "architecture",
        "question_original": "How many architects are female?",
        "question_original_pl": "Ilu architektów to kobiety?",
        "question": "count the number of female architectural designers?",
        "question_pl": "policzyć liczbę projektantek architektury?",
        "query": "SELECT count(*) FROM architect WHERE gender  =  'female'",
        "query_pl": "SELECT count(*) FROM architect WHERE gender  =  'kobieta'"
    },
    {
        "db_id": "architecture",
        "question_original": "List the name, nationality and id of all male architects ordered by their names lexicographically.",
        "question_original_pl": "Wymień imię, narodowość i identyfikator wszystkich architektów płci męskiej uporządkowanych leksykograficznie według ich imion.",
        "question": "List the name, nation and id of all male architects ordered by their names lexicographically.",
        "question_pl": "Wymień imię, naród i identyfikator wszystkich architektów płci męskiej uporządkowanych leksykograficznie według ich imion.",
        "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name",
        "query_pl": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'mężczyzna' ORDER BY name"
    },
    {
        "db_id": "architecture",
        "question_original": "What are the distinct names and nationalities of the architects who have ever built a mill?",
        "question_original_pl": "Jakie są różne nazwiska i narodowości architektów, którzy kiedykolwiek zbudowali młyn?",
        "question": "What are the different names and nations of the architects who have ever built a mill?",
        "question_pl": "Jakie są różne nazwiska i nacje architektów, którzy kiedykolwiek zbudowali młyn?",
        "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id",
        "query_pl": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id"
    },
    {
        "db_id": "architecture",
        "question_original": "What are the distinct types of mills that are built by American or Canadian architects?",
        "question_original_pl": "Jakie są rodzaje młynów budowanych przez amerykańskich lub kanadyjskich architektów?",
        "question": "What are the different categories of mills that are built by American or Canadian architects?",
        "question_pl": "Jakie są różne kategorie młynów zbudowanych przez amerykańskich lub kanadyjskich architektów?",
        "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'",
        "query_pl": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'Amerykanin' OR T2.nationality  =  'Kanadyjczyk'"
    },
    {
        "db_id": "architecture",
        "question_original": "What is the id, name and nationality of the architect who built most mills?",
        "question_original_pl": "Jakie jest imię, nazwisko i narodowość architekta, który zbudował większość młynów?",
        "question": "What is the id, name and nation of the architect who built most mills?",
        "question_pl": "Jakie jest imię, nazwisko i nacja architekta, który zbudował większość młynów?",
        "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "architecture",
        "question_original": "What are the ids, names and genders of the architects who built two bridges or one mill?",
        "question_original_pl": "Jakie są imiona, nazwiska i płeć architektów, którzy zbudowali dwa mosty lub jeden młyn?",
        "question": "What are the ids, names and sex of the architects who built two bridges or one mill?",
        "question_pl": "Jakie są nazwiska, imiona i płeć architektów, którzy zbudowali dwa mosty lub jeden młyn?",
        "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1",
        "query_pl": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1"
    },
    {
        "db_id": "architecture",
        "question_original": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
        "question_original_pl": "Jaka jest lokalizacja mostu o nazwie \"Kolob Arch\" lub \"Rainbow Bridge\"?",
        "question": "What is the position of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?",
        "question_pl": "Jakie jest położenie mostu o nazwie \"Kolob Arch\" lub \"Rainbow Bridge\"?",
        "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'",
        "query_pl": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Tęczowy Most'"
    },
    {
        "db_id": "architecture",
        "question_original": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?",
        "question_original_pl": "Jak nazywają się młyny zbudowane przez architektów, którzy również zbudowali most dłuższy niż 80 metrów?",
        "question": "What are the different name of the mills built by the architects who have also built a bridge longer than 80 meters?",
        "question_pl": "Jak inaczej nazywają się młyny zbudowane przez architektów, którzy również zbudowali most dłuższy niż 80 metrów?",
        "query": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80",
        "query_pl": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80"
    },
    {
        "db_id": "architecture",
        "question_original": "What is the most common mill type, and how many are there?",
        "question_original_pl": "Jaki jest najpopularniejszy typ młyna i ile ich jest?",
        "question": "What is the most common mill category, and how many are there?",
        "question_pl": "Jaka jest najpopularniejsza kategoria młynów i ile ich jest?",
        "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
        "query_pl": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
    },
    {
        "db_id": "culture_company",
        "question_original": "show the titles, and authors or editors for all books made after the year 1989.",
        "question_original_pl": "pokaż tytuły i autorów lub redaktorów wszystkich książek wydanych po 1989 roku.",
        "question": "show the names, and writers or editors for all books made after the year 1989.",
        "question_pl": "Pokaż nazwiska i autorów lub redaktorów wszystkich książek wydanych po 1989 roku.",
        "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
        "query_pl": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
    },
    {
        "db_id": "culture_company",
        "question_original": "What are the titles and authors or editors that correspond to books made after 1989?",
        "question_original_pl": "Jakie tytuły i autorzy lub redaktorzy odpowiadają książkom wydanym po 1989 roku?",
        "question": "What are the names and writers or editors that correspond to books made after 1989?",
        "question_pl": "Jakie nazwiska i autorzy lub redaktorzy odpowiadają książkom wydanym po 1989 roku?",
        "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
        "query_pl": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
    },
    {
        "db_id": "culture_company",
        "question_original": "Show the years, book titles, and publishers for all books, in descending order by year.",
        "question_original_pl": "Pokaż lata, tytuły książek i wydawców dla wszystkich książek, w kolejności malejącej według roku.",
        "question": "Show the years, book names, and publishers for all books, in descending order by year.",
        "question_pl": "Pokaż lata, nazwy książek i wydawców dla wszystkich książek, w kolejności malejącej według roku.",
        "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC",
        "query_pl": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
    },
    {
        "db_id": "culture_company",
        "question_original": "What are the years, titles, and publishers for all books, ordered by year descending?",
        "question_original_pl": "Jakie są lata, tytuły i wydawcy wszystkich książek, uporządkowane według malejących lat?",
        "question": "What are the years, names, and publishers for all books, ordered by year descending?",
        "question_pl": "Jakie są lata, nazwy i wydawcy wszystkich książek, uporządkowane według malejących lat?",
        "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC",
        "query_pl": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
    },
    {
        "db_id": "culture_company",
        "question_original": "Show all book categories and the number of books in each category.",
        "question_original_pl": "Pokaż wszystkie kategorie książek i liczbę książek w każdej kategorii.",
        "question": "Show all book types and the number of books in each type.",
        "question_pl": "Pokaż wszystkie typy książek i liczbę książek w każdym typie.",
        "query": "SELECT category ,  count(*) FROM book_club GROUP BY category",
        "query_pl": "SELECT category ,  count(*) FROM book_club GROUP BY category"
    },
    {
        "db_id": "culture_company",
        "question_original": "How many books fall into each category?",
        "question_original_pl": "Ile książek należy do każdej kategorii?",
        "question": "How many books fall into each type?",
        "question_pl": "Ile książek należy do każdego typu?",
        "query": "SELECT category ,  count(*) FROM book_club GROUP BY category",
        "query_pl": "SELECT category ,  count(*) FROM book_club GROUP BY category"
    },
    {
        "db_id": "culture_company",
        "question_original": "List categories that have at least two books after year 1989.",
        "question_original_pl": "Wymień kategorie, które mają co najmniej dwie książki po roku 1989.",
        "question": "List types that have at least two books after year 1989.",
        "question_pl": "Wymień typy, które mają co najmniej dwie książki po roku 1989.",
        "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
        "query_pl": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
    },
    {
        "db_id": "culture_company",
        "question_original": "What categories have two or more corresponding books that were made after 1989?",
        "question_original_pl": "Jakie kategorie mają dwie lub więcej odpowiadających im książek, które powstały po 1989 roku?",
        "question": "What types have two or more corresponding books that were made after 1989?",
        "question_pl": "Jakie typy mają dwie lub więcej odpowiednich książek, które zostały wyprodukowane po 1989 roku?",
        "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
        "query_pl": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
    },
    {
        "db_id": "culture_company",
        "question_original": "Show all movie titles, years, and directors, ordered by budget.",
        "question_original_pl": "Pokaż wszystkie tytuły filmów, lata i reżyserów, uporządkowane według budżetu.",
        "question": "Show all film names, years, and directors, ordered by budget.",
        "question_pl": "Pokaż wszystkie nazwy filmów, lata i reżyserów, uporządkowane według budżetu.",
        "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million",
        "query_pl": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
    },
    {
        "db_id": "culture_company",
        "question_original": "What are the titles, years, and directors of all movies, ordered by budget in millions?",
        "question_original_pl": "Jakie są tytuły, lata i reżyserzy wszystkich filmów, uporządkowane według budżetu w milionach?",
        "question": "What are the names, years, and directors of all films, ordered by budget in millions?",
        "question_pl": "Jakie są nazwy, lata i reżyserzy wszystkich filmów, uporządkowane według budżetu w milionach?",
        "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million",
        "query_pl": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
    },
    {
        "db_id": "culture_company",
        "question_original": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?",
        "question_original_pl": "Jaki tytuł i reżysera ma film, który w 2000 roku lub wcześniej osiągnął najwyższy światowy dochód?",
        "question": "What is the name and director for the film with highest worldwide gross in the year 2000 or before?",
        "question_pl": "Podaj nazwę i reżysera filmu, który w 2000 roku lub wcześniej osiągnął najwyższy światowy dochód?",
        "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1",
        "query_pl": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
    },
    {
        "db_id": "culture_company",
        "question_original": "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.",
        "question_original_pl": "Podaj tytuł i reżysera filmu wydanego w 2000 roku lub wcześniej, który osiągnął najwyższy światowy dochód.",
        "question": "Return the name and director of the film released in the year 2000 or earlier that had the highest worldwide gross.",
        "question_pl": "Podaj nazwę i reżysera filmu wydanego w 2000 roku lub wcześniej, który osiągnął najwyższy światowy dochód brutto.",
        "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1",
        "query_pl": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
    },
    {
        "db_id": "culture_company",
        "question_original": "Show all director names who have a movie in the year 1999 or 2000.",
        "question_original_pl": "Pokaż wszystkie nazwiska reżyserów, których filmy powstały w 1999 lub 2000 roku.",
        "question": "Show all director names who have a film in the year 1999 or 2000.",
        "question_pl": "Pokaż wszystkie nazwiska reżyserów, którzy mają film w roku 1999 lub 2000.",
        "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000",
        "query_pl": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"
    },
    {
        "db_id": "culture_company",
        "question_original": "What is the average, maximum, and minimum budget for all movies before 2000.",
        "question_original_pl": "Jaki jest średni, maksymalny i minimalny budżet wszystkich filmów sprzed 2000 roku.",
        "question": "What is the average, maximum, and minimum expenditure estimate for all films before 2000.",
        "question_pl": "Jaka jest średnia, maksymalna i minimalna szacunkowa wartość wydatków dla wszystkich filmów sprzed 2000 roku.",
        "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
        "query_pl": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
    },
    {
        "db_id": "culture_company",
        "question_original": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.",
        "question_original_pl": "Zwróć średnie, maksymalne i minimalne budżety w milionach dla filmów wyprodukowanych przed 2000 rokiem.",
        "question": "Return the average, maximum, and minimum expenditure estimate in millions for films made before the year 2000.",
        "question_pl": "Zwróć średnią, maksymalną i minimalną szacunkową kwotę wydatków w milionach dla filmów wyprodukowanych przed rokiem 2000.",
        "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
        "query_pl": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
    },
    {
        "db_id": "culture_company",
        "question_original": "Show the movie titles and book titles for all companies in China.",
        "question_original_pl": "Pokaż tytuły filmów i książek dla wszystkich firm w Chinach.",
        "question": "Show the film names and book names for all enterprise in China.",
        "question_pl": "Pokaż nazwy filmów i książek dla wszystkich przedsiębiorstw w Chinach.",
        "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'",
        "query_pl": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'Chiny'"
    },
    {
        "db_id": "culture_company",
        "question_original": "What are the titles of movies and books corresponding to companies incorporated in China?",
        "question_original_pl": "Jakie tytuły filmów i książek odpowiadają firmom zarejestrowanym w Chinach?",
        "question": "What are the names of films and books corresponding to companies incorporated in China?",
        "question_pl": "Jak nazywają się filmy i książki odpowiadające firmom zarejestrowanym w Chinach?",
        "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'",
        "query_pl": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'Chiny'"
    },
    {
        "db_id": "culture_company",
        "question_original": "What are all company names that have a corresponding movie directed in the year 1999?",
        "question_original_pl": "Jakie są wszystkie nazwy firm, które mają odpowiadający im film wyreżyserowany w 1999 roku?",
        "question": "What are all enterprise names that have a corresponding film directed in the year 1999?",
        "question_pl": "Jakie są wszystkie nazwy przedsiębiorstw, które mają odpowiadający im film wyreżyserowany w 1999 roku?",
        "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999",
        "query_pl": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"
    }
]