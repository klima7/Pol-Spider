[
    {
        "db_id": "geo",
        "question": "what is the biggest city in wyoming",
        "question_pl": "Jakie jest największe miasto w wyoming?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what wyoming city has the largest population",
        "question_pl": "Które miasto w wyoming ma największą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in wyoming",
        "question_pl": "Jakie jest największe miasto w wyoming?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "where is the most populated area of wyoming",
        "question_pl": "Gdzie jest najbardziej zaludniony obszar Wyoming?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "which city in wyoming has the largest population",
        "question_pl": "Które miasto w wyoming ma największą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what cities in wyoming have the highest number of citizens",
        "question_pl": "Jakie miasta w wyoming mają największą liczbę mieszkańców?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what cities in wyoming have the highest populations",
        "question_pl": "Jakie miasta w wyoming mają największą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the most populous city in wyoming",
        "question_pl": "Jakie jest najbardziej zaludnione miasto w wyoming?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in wyoming by population",
        "question_pl": "Jakie jest największe miasto w wyoming pod względem liczby ludności?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city of wyoming",
        "question_pl": "Jakie jest największe miasto w wyoming?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the city in wyoming with the largest population",
        "question_pl": "Jakie miasto w wyoming ma największą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "which rivers run through the state with the largest city in the us",
        "question_pl": "które rzeki przepływają przez stan z największym miastem w USA",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );"
    },
    {
        "db_id": "geo",
        "question": "how big is new mexico",
        "question_pl": "Jak duży jest nowy meksyk?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "what is the area of new mexico",
        "question_pl": "Jaki jest obszar nowego meksyku?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "how large is new mexico",
        "question_pl": "Jak duży jest nowy meksyk?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the new mexico state",
        "question_pl": "Jaki jest obszar stanu nowy meksyk?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "what is the size of new mexico",
        "question_pl": "Jaki jest rozmiar nowego meksyku?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "what is the area of new mexico in square kilometers",
        "question_pl": "Jaka jest powierzchnia nowego meksyku w kilometrach kwadratowych?",
        "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
        "query_pl": "SELECT area FROM state WHERE state_name  =  \"nowy meksyk\";"
    },
    {
        "db_id": "geo",
        "question": "how many people live in california",
        "question_pl": "ile osób mieszka w kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many people reside in california",
        "question_pl": "Ile osób mieszka w Kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many residents live in california",
        "question_pl": "Ilu mieszkańców żyje w Kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how much population does california have",
        "question_pl": "Jaką populację ma Kalifornia?",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "what are the population of california",
        "question_pl": "Jaka jest populacja kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of california",
        "question_pl": "Jaka jest populacja kalifornia",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many people are in the state of california",
        "question_pl": "Ile osób mieszka w stanie kalifornia?",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "what can you tell me about the population of california",
        "question_pl": "Co możesz powiedzieć o populacji Kalifornii?",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many people are there in california",
        "question_pl": "Ile osób mieszka w Kalifornii?",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many citizens in california",
        "question_pl": "Ilu mieszkańców ma Kalifornia",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many people stay in california",
        "question_pl": "Ile osób zostaje w Kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "how many citizens live in california",
        "question_pl": "Ilu obywateli mieszka w Kalifornii",
        "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
        "query_pl": "SELECT population FROM state WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the smallest population",
        "question_pl": "Który stan ma najmniejszą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the least populous state",
        "question_pl": "Jaki jest najmniej zaludniony stan",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the lowest population",
        "question_pl": "Który stan ma najniższą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "give me the cities in texas",
        "question_pl": "podaj mi miasta w teksasie",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "tell me what cities are in texas",
        "question_pl": "Powiedz mi, jakie miasta znajdują się w Teksasie",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what cities are located in texas",
        "question_pl": "Jakie miasta znajdują się w teksasie?",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the cities in texas",
        "question_pl": "Jakie są miasta w teksasie?",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what cities in texas",
        "question_pl": "jakie miasta w teksasie",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "give me the cities which are in texas",
        "question_pl": "Podaj mi miasta, które znajdują się w Teksasie",
        "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT city_name FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the state with the capital albany",
        "question_pl": "Jaki jest obszar stanu ze stolicą w Albany?",
        "query": "SELECT area FROM state WHERE capital  =  \"albany\";",
        "query_pl": "SELECT area FROM state WHERE capital  =  \"albania\";"
    },
    {
        "db_id": "geo",
        "question": "give me the lakes in california",
        "question_pl": "Dajcie mi jeziora w Kalifornii",
        "query": "SELECT lake_name FROM lake WHERE state_name  =  \"california\";",
        "query_pl": "SELECT lake_name FROM lake WHERE state_name  =  \"kalifornia\";"
    },
    {
        "db_id": "geo",
        "question": "name the major lakes in michigan",
        "question_pl": "Wymień główne jeziora w stanie Michigan",
        "query": "SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  \"michigan\";",
        "query_pl": "SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  \"michigan\";"
    },
    {
        "db_id": "geo",
        "question": "what are the states",
        "question_pl": "Jakie są stany",
        "query": "SELECT state_name FROM state;",
        "query_pl": "SELECT state_name FROM state;"
    },
    {
        "db_id": "geo",
        "question": "list the states",
        "question_pl": "wymień stany",
        "query": "SELECT state_name FROM state;",
        "query_pl": "SELECT state_name FROM state;"
    },
    {
        "db_id": "geo",
        "question": "give me all the states of usa",
        "question_pl": "podaj mi wszystkie stany usa",
        "query": "SELECT state_name FROM state;",
        "query_pl": "SELECT state_name FROM state;"
    },
    {
        "db_id": "geo",
        "question": "which states do ohio river flow through",
        "question_pl": "Przez które stany przepływa rzeka Ohio",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states does the ohio river run through",
        "question_pl": "przez jakie stany przepływa rzeka ohio",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states border the ohio river",
        "question_pl": "Jakie stany graniczą z rzeką ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "which states border the ohio river",
        "question_pl": "Które stany graniczą z rzeką ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states does the ohio run through",
        "question_pl": "Przez jakie stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "where is the ohio river",
        "question_pl": "Gdzie znajduje się rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "which states does the ohio river run through",
        "question_pl": "Przez które stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "which states does the ohio run through",
        "question_pl": "Przez które stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "which states does the ohio river pass through",
        "question_pl": "Przez które stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what are the states that the ohio run through",
        "question_pl": "Przez jakie stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "which state has the ohio river",
        "question_pl": "W którym stanie znajduje się rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states have rivers named ohio",
        "question_pl": "Jakie stany mają rzeki o nazwie ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "through which states does the ohio flow",
        "question_pl": "przez które stany przepływa rzeka ohio",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states are next to the ohio",
        "question_pl": "jakie stany znajdują się obok ohio",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "through which states does the ohio run",
        "question_pl": "Przez które stany przebiega rzeka ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what states does the ohio river go through",
        "question_pl": "Przez jakie stany przepływa rzeka Ohio?",
        "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
        "query_pl": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest population",
        "question_pl": "Który stan ma największą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the most populous state",
        "question_pl": "Jaki jest najbardziej zaludniony stan",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state is the largest in population",
        "question_pl": "Który stan ma największą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the biggest population",
        "question_pl": "Który stan ma największą populację",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the greatest population",
        "question_pl": "Który stan ma największą populację",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the most population",
        "question_pl": "Który stan ma największą populację",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the most people",
        "question_pl": "który stan ma najwięcej mieszkańców",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the most people",
        "question_pl": "Który stan ma najwięcej mieszkańców",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the most populous state in the us",
        "question_pl": "Jaki jest najbardziej zaludniony stan w USA?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the highest population",
        "question_pl": "Który stan ma największą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest elevation in pennsylvania",
        "question_pl": "Jakie jest najniższe wzniesienie w Pensylwanii?",
        "query": "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pennsylvania\";",
        "query_pl": "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pensylwania\";"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in each state whose lowest point is sea level",
        "question_pl": "Jaki jest najwyższy punkt w każdym stanie, którego najniższy punkt znajduje się na poziomie morza?",
        "query": "SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;",
        "query_pl": "SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;"
    },
    {
        "db_id": "geo",
        "question": "what is the length of the longest river in the usa",
        "question_pl": "Jaka jest długość najdłuższej rzeki w usa?",
        "query": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "how long is the longest river in the usa",
        "question_pl": "Jak długa jest najdłuższa rzeka w USA?",
        "query": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river flowing through texas",
        "question_pl": "Jaka jest najdłuższa rzeka przepływająca przez Teksas?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the largest river in texas state",
        "question_pl": "Jaka jest największa rzeka w stanie Teksas?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in texas",
        "question_pl": "Jaka jest najdłuższa rzeka w Teksasie?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest river in texas",
        "question_pl": "Jaka jest największa rzeka w Teksasie?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river that flows through texas",
        "question_pl": "Jaka jest najdłuższa rzeka przepływająca przez Teksas?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the biggest rivers in texas",
        "question_pl": "Jakie są największe rzeki w Teksasie?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are in idaho",
        "question_pl": "ile rzek znajduje się w idaho",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "give me the number of rivers in idaho",
        "question_pl": "Podaj liczbę rzek w stanie Idaho",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers does idaho have",
        "question_pl": "Ile rzek ma idaho?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are there in idaho",
        "question_pl": "Ile rzek znajduje się w idaho?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers run through idaho",
        "question_pl": "Ile rzek przepływa przez idaho?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are found in idaho",
        "question_pl": "Ile rzek znajduje się w idaho?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers in idaho",
        "question_pl": "ile rzek w idaho",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
    },
    {
        "db_id": "geo",
        "question": "what states neighbor kentucky",
        "question_pl": "jakie stany sąsiadują z kentucky",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "which states border kentucky",
        "question_pl": "Które stany graniczą z kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what states border kentucky",
        "question_pl": "Jakie stany graniczą z kentucky",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "give me the states that border kentucky",
        "question_pl": "Podaj mi stany graniczące z Kentucky",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what state borders kentucky",
        "question_pl": "Jaki stan graniczy z kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what states are next to kentucky",
        "question_pl": "Jakie stany sąsiadują z kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what states surround kentucky",
        "question_pl": "Jakie stany otaczają kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "which state borders kentucky",
        "question_pl": "Który stan graniczy z Kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what are the neighboring states for kentucky",
        "question_pl": "Jakie są sąsiednie stany dla kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "which states adjoin kentucky",
        "question_pl": "Które stany sąsiadują z kentucky",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "states bordering kentucky",
        "question_pl": "stany graniczące z kentucky",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "which state border kentucky",
        "question_pl": "Który stan graniczy z Kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what is the adjacent state of kentucky",
        "question_pl": "Jaki jest sąsiedni stan kentucky?",
        "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "name all the rivers in illinois",
        "question_pl": "Wymień wszystkie rzeki w stanie Illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "rivers in illinois",
        "question_pl": "rzeki w illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are all the rivers in illinois",
        "question_pl": "Jakie są wszystkie rzeki w Illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are the rivers in illinois",
        "question_pl": "Jakie są rzeki w stanie Illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what rivers are in illinois",
        "question_pl": "jakie rzeki znajdują się w illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what rivers are there in illinois",
        "question_pl": "Jakie rzeki znajdują się w illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what rivers run through illinois",
        "question_pl": "jakie rzeki przepływają przez illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what rivers flow through illinois",
        "question_pl": "jakie rzeki przepływają przez illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what river flows through illinois",
        "question_pl": "jaka rzeka przepływa przez illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are the rivers in the state of illinois",
        "question_pl": "Jakie są rzeki w stanie illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "name the rivers in illinois",
        "question_pl": "nazwij rzeki w illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are the rivers of illinois",
        "question_pl": "Jakie są rzeki stanu Illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "which rivers are in illinois",
        "question_pl": "które rzeki znajdują się w illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "which rivers flow through illinois",
        "question_pl": "które rzeki przepływają przez illinois",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what is the river that cross over illinois",
        "question_pl": "Jaka rzeka przepływa przez stan Illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what river runs through illinois",
        "question_pl": "Jaka rzeka przepływa przez illinois?",
        "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what state is springfield in",
        "question_pl": "W jakim stanie znajduje się Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "where is springfield",
        "question_pl": "Gdzie jest Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "springfield is in what state",
        "question_pl": "W jakim stanie znajduje się Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what states have cities named springfield",
        "question_pl": "W jakich stanach znajdują się miasta o nazwie springfield",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "which states have cities named springfield",
        "question_pl": "W których stanach znajdują się miasta o nazwie springfield",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "which state is springfield in",
        "question_pl": "W którym stanie znajduje się Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what states have a city named springfield",
        "question_pl": "W jakich stanach znajduje się miasto o nazwie Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the city springfield",
        "question_pl": "W jakim stanie znajduje się miasto Springfield",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what states have towns named springfield",
        "question_pl": "W jakich stanach znajdują się miasta o nazwie Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what state is springfield located in",
        "question_pl": "W jakim stanie znajduje się Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "in which state is springfield",
        "question_pl": "W którym stanie znajduje się Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "which state is the city springfield located in",
        "question_pl": "W którym stanie znajduje się miasto Springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what states in the united states have a city of springfield",
        "question_pl": "W jakich stanach w USA znajduje się miasto springfield?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the state with the largest area",
        "question_pl": "Jaka jest populacja stanu o największej powierzchni?",
        "query": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the largest state",
        "question_pl": "Jaka jest populacja największego stanu",
        "query": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "how many people live in boulder",
        "question_pl": "Ile osób mieszka w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of boulder",
        "question_pl": "Jaka jest populacja boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "how many people lived in boulder",
        "question_pl": "ile osób mieszka w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "number of people in boulder",
        "question_pl": "liczba osób w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of boulder city",
        "question_pl": "Jaka jest populacja boulder city",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "how big is the city of boulder",
        "question_pl": "Jak duże jest miasto boulder?",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "population of boulder",
        "question_pl": "populacja boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population in boulder",
        "question_pl": "Jaka jest populacja w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "people in boulder",
        "question_pl": "ludzie w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "how many people in boulder",
        "question_pl": "ile osób w boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "how many inhabitants does boulder have",
        "question_pl": "ilu mieszkańców ma boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "number of citizens in boulder",
        "question_pl": "liczba mieszkańców boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "how many citizens in boulder",
        "question_pl": "ilu mieszkańców ma boulder",
        "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"głaz\";"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest city in alaska",
        "question_pl": "Jakie jest najmniejsze miasto na alasce?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"
    },
    {
        "db_id": "geo",
        "question": "which states lie on the largest river in the united states",
        "question_pl": "Które stany leżą nad największą rzeką w stanach zjednoczonych?",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "which states does the longest river run through",
        "question_pl": "Przez które stany przepływa najdłuższa rzeka",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "which state has the longest river",
        "question_pl": "Który stan ma najdłuższą rzekę?",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what are the states through which the longest river runs",
        "question_pl": "Przez które stany przepływa najdłuższa rzeka?",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "which states does the longest river cross",
        "question_pl": "Przez które stany przepływa najdłuższa rzeka",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the population density of the state with the smallest area",
        "question_pl": "Jaka jest gęstość zaludnienia w stanie o najmniejszej powierzchni?",
        "query": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the population density of the smallest state",
        "question_pl": "Jaka jest gęstość zaludnienia najmniejszego stanu",
        "query": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which states have points higher than the highest point in colorado",
        "question_pl": "Które stany mają punkty wyższe niż najwyższy punkt w Kolorado?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"kolorado\" );"
    },
    {
        "db_id": "geo",
        "question": "which states have points that are higher than the highest point in colorado",
        "question_pl": "Które stany mają punkty wyższe niż najwyższy punkt w Kolorado?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"kolorado\" );"
    },
    {
        "db_id": "geo",
        "question": "what states high point are higher than that of colorado",
        "question_pl": "Które stany są wyższe niż Kolorado?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"kolorado\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest elevation in delaware",
        "question_pl": "Jakie jest najwyższe wzniesienie w delaware?",
        "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
    },
    {
        "db_id": "geo",
        "question": "how high is the highest point of delaware",
        "question_pl": "jak wysoki jest najwyższy punkt delaware",
        "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
    },
    {
        "db_id": "geo",
        "question": "how tall is the highest point in delaware",
        "question_pl": "Jak wysoki jest najwyższy punkt w delaware?",
        "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in delaware in meters",
        "question_pl": "Jaki jest najwyższy punkt w delaware w metrach?",
        "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
    },
    {
        "db_id": "geo",
        "question": "how high is the highest point in delaware",
        "question_pl": "Jak wysoki jest najwyższy punkt w delaware?",
        "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
    },
    {
        "db_id": "geo",
        "question": "give me the longest river that passes through the us",
        "question_pl": "Podaj mi najdłuższą rzekę przepływającą przez USA",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "which is the longest river in usa",
        "question_pl": "która rzeka jest najdłuższa w usa",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in america",
        "question_pl": "Jaka jest najdłuższa rzeka w ameryce?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "name the longest river in us",
        "question_pl": "nazwij najdłuższą rzekę w USA",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what river is the longest one in the united states",
        "question_pl": "Jaka rzeka jest najdłuższa w stanach zjednoczonych?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the us",
        "question_pl": "Jaka jest najdłuższa rzeka w USA?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river",
        "question_pl": "jaka jest najdłuższa rzeka",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the united states",
        "question_pl": "Jaka jest najdłuższa rzeka w stanach zjednoczonych?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what state has the city with the largest population",
        "question_pl": "W którym stanie znajduje się miasto o największej populacji",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest city",
        "question_pl": "Który stan ma największe miasto?",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "which state has the largest city",
        "question_pl": "Który stan ma największe miasto?",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what state has the city with the most population",
        "question_pl": "W jakim stanie znajduje się miasto o największej liczbie mieszkańców?",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest city in the largest state",
        "question_pl": "Jakie jest najmniejsze miasto w największym stanie?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what state is the biggest",
        "question_pl": "który stan jest największy",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the largest area",
        "question_pl": "Jaki jest stan o największej powierzchni?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest area",
        "question_pl": "Jaki stan ma największą powierzchnię?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest state in continental us",
        "question_pl": "Jaki jest największy stan w kontynentalnej części USA?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "state the state with the largest area",
        "question_pl": "stan stan o największej powierzchni",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state in usa",
        "question_pl": "Jaki jest największy stan w usa?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest state",
        "question_pl": "Jaki jest największy stan",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest state in the usa",
        "question_pl": "Jaki jest największy stan w USA?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "give me the largest state",
        "question_pl": "Podaj mi największy stan",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state in the us",
        "question_pl": "Jaki jest największy stan w USA?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state",
        "question_pl": "Jaki jest największy stan",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what are the highest points of states surrounding mississippi",
        "question_pl": "Jakie są najwyższe punkty stanów otaczających missisipi?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the high points of states surrounding mississippi",
        "question_pl": "Jakie są najważniejsze punkty stanów otaczających missisipi?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in states bordering colorado",
        "question_pl": "Jaki jest najwyższy punkt w stanach graniczących z Kolorado?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" ) ORDER BY highest_elevation DESC LIMIT 1;",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kolorado\" ) ORDER BY highest_elevation DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the states bordering colorado",
        "question_pl": "Jaki jest najwyższy punkt w stanach graniczących z Kolorado?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" ) ORDER BY highest_elevation DESC LIMIT 1;",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kolorado\" ) ORDER BY highest_elevation DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the lowest population density",
        "question_pl": "Który stan ma najniższą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the lowest population density",
        "question_pl": "Który stan ma najniższą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the lowest population density",
        "question_pl": "Który stan ma najniższą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the smallest population density",
        "question_pl": "Który stan ma najmniejszą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the sparsest population density",
        "question_pl": "Który stan ma najmniejszą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the sparsest population density",
        "question_pl": "który stan ma najmniejszą gęstość zaludnienia",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the least population density",
        "question_pl": "Który stan ma najmniejszą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the least population density",
        "question_pl": "Który stan ma najmniejszą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the smallest population density",
        "question_pl": "Który stan ma najmniejszą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "where is the highest point in texas",
        "question_pl": "Gdzie jest najwyższy punkt w Teksas?",
        "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in texas",
        "question_pl": "Jaki jest najwyższy punkt w Teksasie?",
        "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the high point of texas",
        "question_pl": "Jaki jest najwyższy punkt w Teksasie?",
        "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the highest mountain in texas",
        "question_pl": "Jaka jest najwyższa góra w Teksasie?",
        "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "could you tell me what is the highest point in the state of texas",
        "question_pl": "Czy możesz mi powiedzieć, jaki jest najwyższy punkt w stanie Teksas?",
        "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what states have no bordering state",
        "question_pl": "Jakie stany nie graniczą z żadnym państwem",
        "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );",
        "query_pl": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
    },
    {
        "db_id": "geo",
        "question": "name the states which have no surrounding states",
        "question_pl": "nazwij stany, które nie mają sąsiednich stanów",
        "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );",
        "query_pl": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
    },
    {
        "db_id": "geo",
        "question": "which states border no other states",
        "question_pl": "które stany nie graniczą z innymi stanami",
        "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );",
        "query_pl": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the state with the smallest population density",
        "question_pl": "Jaki jest obszar stanu o najmniejszej gęstości zaludnienia?",
        "query": "SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );",
        "query_pl": "SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "count the states which have elevations lower than what alabama has",
        "question_pl": "policz stany, które mają wysokość niższą niż Alabama",
        "query": "SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"alabama\" );",
        "query_pl": "SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"alabama\" );"
    },
    {
        "db_id": "geo",
        "question": "how high is guadalupe peak",
        "question_pl": "Jak wysoki jest szczyt Guadalupe",
        "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"szczyt guadalupe\";"
    },
    {
        "db_id": "geo",
        "question": "how tall is guadalupe peak",
        "question_pl": "Jak wysoki jest szczyt Guadalupe",
        "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"szczyt guadalupe\";"
    },
    {
        "db_id": "geo",
        "question": "what is the maximum elevation of guadalupe peak",
        "question_pl": "Jaka jest maksymalna wysokość szczytu Guadalupe?",
        "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
        "query_pl": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"szczyt guadalupe\";"
    },
    {
        "db_id": "geo",
        "question": "how high is the highest point in america",
        "question_pl": "Jak wysoki jest najwyższy punkt w ameryce?",
        "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
        "query_pl": "SELECT MAX ( highest_elevation ) FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "what is the highest elevation in the united states",
        "question_pl": "Jakie jest najwyższe wzniesienie w stanach zjednoczonych?",
        "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
        "query_pl": "SELECT MAX ( highest_elevation ) FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "what is the elevation of the highest point in the usa",
        "question_pl": "jaka jest wysokość najwyższego punktu w usa?",
        "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
        "query_pl": "SELECT MAX ( highest_elevation ) FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "what is the height of the highest point in the usa",
        "question_pl": "Jaka jest wysokość najwyższego punktu w usa?",
        "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
        "query_pl": "SELECT MAX ( highest_elevation ) FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "how long is the rio grande river",
        "question_pl": "Jak długa jest rzeka rio grande?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "what is the length of the rio grande river",
        "question_pl": "Jaka jest długość rzeki rio grande?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "what length is the rio grande",
        "question_pl": "Jakiej długości jest rio grande?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "how long is the rio grande",
        "question_pl": "Jak długa jest rio grande?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "how long is the rio grande river in miles",
        "question_pl": "Jak długa jest rzeka rio grande w milach?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "how long is rio grande",
        "question_pl": "Jak długo trwa rio grande?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
    },
    {
        "db_id": "geo",
        "question": "how long is the longest river in texas",
        "question_pl": "Jak długa jest najdłuższa rzeka w Teksasie?",
        "query": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the length of the longest river that runs through texas",
        "question_pl": "Jaka jest długość najdłuższej rzeki przepływającej przez Teksas?",
        "query": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many capitals does rhode island have",
        "question_pl": "Ile stolic ma wyspa rhode?",
        "query": "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"rhode island\";",
        "query_pl": "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"wyspa rhode\";"
    },
    {
        "db_id": "geo",
        "question": "how many cities are there in the united states",
        "question_pl": "Ile jest miast w stanach zjednoczonych?",
        "query": "SELECT COUNT ( city_name ) FROM city;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city;"
    },
    {
        "db_id": "geo",
        "question": "how many cities does the usa have",
        "question_pl": "ile miast ma usa",
        "query": "SELECT COUNT ( city_name ) FROM city;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city;"
    },
    {
        "db_id": "geo",
        "question": "how many cities are there in the us",
        "question_pl": "ile jest miast w usa?",
        "query": "SELECT COUNT ( city_name ) FROM city;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city;"
    },
    {
        "db_id": "geo",
        "question": "how many cities are there in usa",
        "question_pl": "Ile jest miast w usa?",
        "query": "SELECT COUNT ( city_name ) FROM city;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city;"
    },
    {
        "db_id": "geo",
        "question": "how many cities are there in us",
        "question_pl": "Ile jest miast w naszym kraju?",
        "query": "SELECT COUNT ( city_name ) FROM city;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city;"
    },
    {
        "db_id": "geo",
        "question": "how many major cities are there",
        "question_pl": "Ile jest dużych miast",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;"
    },
    {
        "db_id": "geo",
        "question": "how many citizens does the biggest city have in the usa",
        "question_pl": "ilu mieszkańców ma największe miasto w usa?",
        "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "how many colorado rivers are there",
        "question_pl": "Ile jest rzek w Kolorado?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"kolorado\";"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are called colorado",
        "question_pl": "Ile rzek nazywa się Kolorado?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"kolorado\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of seattle washington",
        "question_pl": "Jaka jest populacja seattle washington",
        "query": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"waszyngton\";"
    },
    {
        "db_id": "geo",
        "question": "how many people live in seattle washington",
        "question_pl": "ile osób mieszka w seattle washington",
        "query": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";",
        "query_pl": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"waszyngton\";"
    },
    {
        "db_id": "geo",
        "question": "how many people live in the biggest city in alaska state",
        "question_pl": "Ile osób mieszka w największym mieście w stanie alaska?",
        "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";",
        "query_pl": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"
    },
    {
        "db_id": "geo",
        "question": "how large is the largest city in alaska",
        "question_pl": "Jak duże jest największe miasto na Alasce?",
        "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";",
        "query_pl": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"
    },
    {
        "db_id": "geo",
        "question": "how many people live in the capital of texas",
        "question_pl": "Ile osób mieszka w stolicy stanu texas?",
        "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the size of the capital of texas",
        "question_pl": "Jaki jest rozmiar stolicy teksasu?",
        "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "how many people live in the united states",
        "question_pl": "ile osób mieszka w stanach zjednoczonych",
        "query": "SELECT SUM ( population ) FROM state;",
        "query_pl": "SELECT SUM ( population ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what is the combined population of all 50 states",
        "question_pl": "Jaka jest łączna populacja wszystkich 50 stanów?",
        "query": "SELECT SUM ( population ) FROM state;",
        "query_pl": "SELECT SUM ( population ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states are in the usa",
        "question_pl": "Ile stanów znajduje się w usa?",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states are there",
        "question_pl": "Ile jest stanów",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states are there in the usa",
        "question_pl": "ile jest stanów w usa?",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states does usa have",
        "question_pl": "ile stanów ma usa",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states are in the united states",
        "question_pl": "Ile stanów znajduje się w USA?",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states are there in united states",
        "question_pl": "ile jest stanów w stanach zjednoczonych",
        "query": "SELECT COUNT ( state_name ) FROM state;",
        "query_pl": "SELECT COUNT ( state_name ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states border kentucky",
        "question_pl": "Ile stanów graniczy z Kentucky?",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "how many states does kentucky border",
        "question_pl": "Z iloma stanami graniczy Kentucky",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "kentucky borders how many states",
        "question_pl": "Z iloma stanami graniczy Kentucky",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "number of states bordering kentucky",
        "question_pl": "liczba stanów graniczących z kentucky",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "what is the number of neighboring states for kentucky",
        "question_pl": "Jaka jest liczba sąsiednich stanów dla kentucky?",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
    },
    {
        "db_id": "geo",
        "question": "how many states border the state with the largest population",
        "question_pl": "Ile stanów graniczy ze stanem o największej populacji?",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "how many states do not have rivers",
        "question_pl": "Ile stanów nie ma rzek?",
        "query": "SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );",
        "query_pl": "SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"
    },
    {
        "db_id": "geo",
        "question": "how many states have a higher point than the highest point of the state with the largest capital city in the us",
        "question_pl": "Ile stanów ma wyższy punkt niż najwyższy punkt stanu z największą stolicą w USA?",
        "query": "SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );",
        "query_pl": "SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );"
    },
    {
        "db_id": "geo",
        "question": "name the major rivers in illinois",
        "question_pl": "Wymień główne rzeki w stanie Illinois",
        "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major rivers in illinois",
        "question_pl": "Jakie są główne rzeki w Illinois?",
        "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what are major rivers in illinois",
        "question_pl": "Jakie są główne rzeki w illinois?",
        "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "what major rivers run through illinois",
        "question_pl": "Jakie główne rzeki przepływają przez illinois?",
        "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"
    },
    {
        "db_id": "geo",
        "question": "through which states does the longest river in texas run",
        "question_pl": "Przez które stany przepływa najdłuższa rzeka w Teksasie?",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the capital city in texas",
        "question_pl": "Jakie są stolice w stanie Teksas?",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of texas",
        "question_pl": "Jaka jest stolica stanu texas?",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the texas state",
        "question_pl": "Jaka jest stolica stanu texas?",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is capital of texas",
        "question_pl": "co jest stolicą stanu texas",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state texas",
        "question_pl": "Jaka jest stolica stanu texas?",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "can you tell me the capital of texas",
        "question_pl": "Czy możesz mi podać stolicę Teksasu?",
        "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT capital FROM state WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the capitals of states that border texas",
        "question_pl": "Jakie są stolice stanów graniczących z Teksasem?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the capital cities of the states which border texas",
        "question_pl": "Jakie są stolice stanów graniczących z Teksasem?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the capitals of the states that border texas",
        "question_pl": "Jakie są stolice stanów graniczących z Teksasem?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "which capitals are in the states that border texas",
        "question_pl": "Które stolice znajdują się w stanach graniczących z Teksasem?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the cities in states through which the mississippi runs",
        "question_pl": "Jakie są miasta w stanach, przez które przepływa Missisipi?",
        "query": "SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the cities of the state with the highest point",
        "question_pl": "Jakie są miasta w kraju związkowym o najwyższym punkcie",
        "query": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );",
        "query_pl": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );"
    },
    {
        "db_id": "geo",
        "question": "what are the highest points of all the states",
        "question_pl": "Jakie są najwyższe punkty wszystkich stanów?",
        "query": "SELECT highest_point FROM highlow;",
        "query_pl": "SELECT highest_point FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in kansas",
        "question_pl": "Jakie są główne miasta w stanie kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in the state of kansas",
        "question_pl": "Jakie są główne miasta w stanie kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what major cities are located in kansas",
        "question_pl": "Jakie główne miasta znajdują się w stanie kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "show major cities in kansas",
        "question_pl": "pokaż główne miasta w kansas",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the names of the major cities in kansas",
        "question_pl": "Jak nazywają się główne miasta w stanie kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities of kansas",
        "question_pl": "Jakie są główne miasta w stanie kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the major cities in kansas",
        "question_pl": "Jakie są główne miasta w kansas?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in states through which the mississippi runs",
        "question_pl": "Jakie są główne miasta w stanach, przez które przepływa Missisipi?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  \"mississippi\" );",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in the usa",
        "question_pl": "jakie są główne miasta w usa",
        "query": "SELECT city_name FROM city WHERE population  >  150000;",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000;"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities of the united states",
        "question_pl": "Jakie są główne miasta w stanach zjednoczonych?",
        "query": "SELECT city_name FROM city WHERE population  >  150000;",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000;"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities of the us",
        "question_pl": "Jakie są główne miasta w USA?",
        "query": "SELECT city_name FROM city WHERE population  >  150000;",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000;"
    },
    {
        "db_id": "geo",
        "question": "what are the population densities of each us state",
        "question_pl": "Jaka jest gęstość zaludnienia w poszczególnych stanach USA?",
        "query": "SELECT density FROM state;",
        "query_pl": "SELECT density FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of states through which the mississippi river run",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa rzeka Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of states through which the mississippi runs",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of the states through which the mississippi runs",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of states through which the mississippi river runs",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa rzeka Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of the states through which the mississippi run",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of the states through which the mississippi river run",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa rzeka Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of states through which the mississippi run",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of the states through which the mississippi river runs",
        "question_pl": "Jaka jest populacja stanów, przez które przepływa rzeka Missisipi?",
        "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of states which border texas",
        "question_pl": "Jaka jest populacja stanów graniczących z teksasem?",
        "query": "SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of the major cities of wisconsin",
        "question_pl": "Jaka jest populacja głównych miast w wisconsin?",
        "query": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";",
        "query_pl": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"
    },
    {
        "db_id": "geo",
        "question": "what are the populations of all the major cities in wisconsin",
        "question_pl": "Jaka jest populacja wszystkich głównych miast w Wisconsin?",
        "query": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";",
        "query_pl": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the major cities in wisconsin",
        "question_pl": "Jaka jest populacja głównych miast w wisconsin?",
        "query": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";",
        "query_pl": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"
    },
    {
        "db_id": "geo",
        "question": "what city has the most people",
        "question_pl": "które miasto ma najwięcej mieszkańców",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what city in the united states has the highest population density",
        "question_pl": "Jakie miasto w stanach zjednoczonych ma największą gęstość zaludnienia?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the most populous city",
        "question_pl": "Jakie jest najbardziej zaludnione miasto",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "which us city has the highest population density",
        "question_pl": "Które amerykańskie miasto ma największą gęstość zaludnienia?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest city in the usa",
        "question_pl": "Jakie jest największe miasto w usa?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "whats the largest city",
        "question_pl": "Jakie jest największe miasto",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what city has the largest population",
        "question_pl": "Jakie miasto ma największą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest city in the us",
        "question_pl": "Jakie jest największe miasto w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest city in usa",
        "question_pl": "Jakie jest największe miasto w usa?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest capital city in the us",
        "question_pl": "Jaka jest największa stolica w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest capital city in the usa",
        "question_pl": "Jaka jest największa stolica w usa?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state capital in population",
        "question_pl": "Jaka jest największa stolica stanu pod względem liczby ludności?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest capital",
        "question_pl": "Jaki jest największy kapitał",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is the most populated capital in the usa",
        "question_pl": "Jaka jest najbardziej zaludniona stolica w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what capital is the largest in the us",
        "question_pl": "Jaki kapitał jest największy w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what capital has the largest population",
        "question_pl": "która stolica ma największą populację",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is largest capital",
        "question_pl": "Co to jest największy kapitał",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of states that have cities named durham",
        "question_pl": "Jakie są stolice stanów, w których znajdują się miasta o nazwie durham?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name  =  t1.state_name WHERE t1.city_name  =  \"durham\";",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name  =  t1.state_name WHERE t1.city_name  =  \"durham\";"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the smallest state",
        "question_pl": "Jaka jest stolica najmniejszego państwa",
        "query": "SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the largest population density",
        "question_pl": "Jaka jest stolica stanu o największej gęstości zaludnienia?",
        "query": "SELECT DISTINCT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT DISTINCT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the largest population",
        "question_pl": "Jaka jest stolica stanu o największej populacji?",
        "query": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the most inhabitants",
        "question_pl": "Jaka jest stolica państwa z największą liczbą mieszkańców?",
        "query": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );",
        "query_pl": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the longest river",
        "question_pl": "Jaka jest stolica stanu z najdłuższą rzeką?",
        "query": "SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );",
        "query_pl": "SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the combined area of all 50 states",
        "question_pl": "Jaka jest łączna powierzchnia wszystkich 50 stanów?",
        "query": "SELECT SUM ( area ) FROM state;",
        "query_pl": "SELECT SUM ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what is the area of all the states combined",
        "question_pl": "Jaka jest powierzchnia wszystkich stanów razem wziętych?",
        "query": "SELECT SUM ( area ) FROM state;",
        "query_pl": "SELECT SUM ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many square kilometers in the us",
        "question_pl": "ile kilometrów kwadratowych w usa",
        "query": "SELECT SUM ( area ) FROM state;",
        "query_pl": "SELECT SUM ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what is the total area of the usa",
        "question_pl": "Jaki jest całkowity obszar USA?",
        "query": "SELECT SUM ( area ) FROM state;",
        "query_pl": "SELECT SUM ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what is the density of the wyoming",
        "question_pl": "Jaka jest gęstość wyoming",
        "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
        "query_pl": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population density of wyoming",
        "question_pl": "Jaka jest gęstość zaludnienia wyoming",
        "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
        "query_pl": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the density of wyoming",
        "question_pl": "Jaka jest gęstość wyoming",
        "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
        "query_pl": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
    },
    {
        "db_id": "geo",
        "question": "what is the highest mountain in the us",
        "question_pl": "Jaka jest najwyższa góra w USA?",
        "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest mountain in us",
        "question_pl": "jaka jest najwyższa góra w nas",
        "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "what is the tallest mountain in america",
        "question_pl": "Jaka jest najwyższa góra w ameryce?",
        "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "what is the tallest mountain in the united states",
        "question_pl": "Jaka jest najwyższa góra w stanach zjednoczonych?",
        "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the state with capital des moines",
        "question_pl": "Jaki jest najwyższy punkt w stanie ze stolicą Des Moines?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des Moines\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the state with the capital des moines",
        "question_pl": "Jaki jest najwyższy punkt w stanie ze stolicą Des Moines?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des Moines\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the usa",
        "question_pl": "Jaki jest najwyższy punkt w usa?",
        "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point of the usa",
        "question_pl": "Jaki jest najwyższy punkt USA?",
        "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the country",
        "question_pl": "Jaki jest najwyższy punkt w kraju?",
        "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the us",
        "question_pl": "Jaki jest najwyższy punkt w USA?",
        "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the united states",
        "question_pl": "Jaki jest najwyższy punkt w stanach zjednoczonych?",
        "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point of the state with the smallest population density",
        "question_pl": "Jaki jest najwyższy punkt kraju o najmniejszej gęstości zaludnienia?",
        "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );",
        "query_pl": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in smallest state through which the mississippi runs",
        "question_pl": "Jakie jest największe miasto w najmniejszym stanie, przez który przepływa Missisipi?",
        "query": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) ) ORDER BY population DESC LIMIT 1;",
        "query_pl": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ) ) ORDER BY population DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in the smallest state in the usa",
        "question_pl": "Jakie jest największe miasto w najmniejszym stanie w usa?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest city in the smallest state",
        "question_pl": "Jakie jest największe miasto w najmniejszym stanie?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state bordering california",
        "question_pl": "Jaki jest największy stan graniczący z Kalifornią?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state that borders california",
        "question_pl": "Jaki jest największy stan graniczący z Kalifornią?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" );"
    },
    {
        "db_id": "geo",
        "question": "what state that borders california is the largest",
        "question_pl": "Który stan graniczący z Kalifornią jest największy?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the largest state",
        "question_pl": "Jaka jest najdłuższa rzeka w największym stanie?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the states that border tennessee",
        "question_pl": "Jaka jest najdłuższa rzeka w stanach graniczących z Tennessee?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river that flows through a state that borders tennessee",
        "question_pl": "Jaka jest najdłuższa rzeka przepływająca przez stan graniczący z Tennessee?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river that runs through a state that borders tennessee",
        "question_pl": "Jaka jest najdłuższa rzeka przepływająca przez stan graniczący z Tennessee?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the state with the most major cities",
        "question_pl": "Jaka jest najdłuższa rzeka w stanie z największą liczbą dużych miast?",
        "query": "SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point in iowa",
        "question_pl": "Jaki jest najniższy punkt w iowa?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point in iowa in meters",
        "question_pl": "Jaki jest najniższy punkt w iowa w metrach?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point in the state of iowa",
        "question_pl": "Jaki jest najniższy punkt w stanie iowa?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "where is the lowest point in iowa",
        "question_pl": "Gdzie jest najniższy punkt w iowa",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point of iowa",
        "question_pl": "Jaki jest najniższy punkt iowa?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "where is the lowest spot in iowa",
        "question_pl": "Gdzie jest najniższy punkt w stanie iowa?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point in usa",
        "question_pl": "Jaki jest najniższy punkt w usa?",
        "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point in the united states",
        "question_pl": "Jaki jest najniższy punkt w stanach zjednoczonych?",
        "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "where is the lowest point in the us",
        "question_pl": "gdzie jest najniższy punkt w USA",
        "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point of the us",
        "question_pl": "Jaki jest najniższy punkt USA?",
        "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point of all states through which the mississippi river runs through",
        "question_pl": "Jaki jest najniżej położony punkt spośród wszystkich stanów, przez które przepływa rzeka Missisipi?",
        "query": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ORDER BY lowest_elevation LIMIT 1;",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ORDER BY lowest_elevation LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which is the lowest point of the states that the mississippi runs through",
        "question_pl": "który jest najniższym punktem stanów, przez które przepływa Missisipi",
        "query": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ORDER BY lowest_elevation LIMIT 1;",
        "query_pl": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ORDER BY lowest_elevation LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the most dense state in the usa",
        "question_pl": "który stan w usa ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the highest population density",
        "question_pl": "Który stan ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the greatest density",
        "question_pl": "Który stan ma największą gęstość",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the highest population density",
        "question_pl": "Który stan ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the greatest population density",
        "question_pl": "Który stan ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest population density",
        "question_pl": "Który stan ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the largest density in usa",
        "question_pl": "Jaki jest stan o największej gęstości zaludnienia w USA?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the largest population density",
        "question_pl": "Który stan ma największą gęstość zaludnienia?",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state has the largest density",
        "question_pl": "Który stan ma największą gęstość",
        "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the most populous state through which the mississippi runs",
        "question_pl": "Jaki jest najbardziej zaludniony stan, przez który przepływa Missisipi?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what state which the mississippi runs through has the largest population",
        "question_pl": "Który stan, przez który przepływa Missisipi, ma największą populację?",
        "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the population density of the largest state",
        "question_pl": "Jaka jest gęstość zaludnienia największego stanu",
        "query": "SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the largest city in the state with the largest area",
        "question_pl": "Jaka jest populacja największego miasta w stanie o największej powierzchni?",
        "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the smallest state",
        "question_pl": "Jaka jest populacja najmniejszego państwa",
        "query": "SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the state with the highest population density",
        "question_pl": "Jaka jest populacja stanu o największej gęstości zaludnienia?",
        "query": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "how many people live in the state with the largest population density",
        "question_pl": "ile osób mieszka w stanie o największej gęstości zaludnienia",
        "query": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );",
        "query_pl": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest city in the usa",
        "question_pl": "Jakie jest najmniejsze miasto w usa?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest city in the us",
        "question_pl": "Jakie jest najmniejsze miasto w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what city has the least population",
        "question_pl": "Jakie miasto ma najmniejszą populację?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the city with the smallest population",
        "question_pl": "Jakie jest miasto o najmniejszej populacji?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state bordering texas",
        "question_pl": "Jaki jest najmniejszy stan graniczący z Teksasem?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state that borders texas",
        "question_pl": "Jaki jest najmniejszy stan graniczący z Teksasem?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "which state has the smallest area that borders texas",
        "question_pl": "Który stan ma najmniejszy obszar graniczący z Teksasem?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state that the mississippi river runs through",
        "question_pl": "Jaki jest najmniejszy stan, przez który przepływa rzeka Missisipi?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the smallest area",
        "question_pl": "Który stan ma najmniejszą powierzchnię?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which is the smallest state",
        "question_pl": "który jest najmniejszym stanem",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which state is the smallest",
        "question_pl": "który stan jest najmniejszy",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state in the usa",
        "question_pl": "Jaki jest najmniejszy stan w usa?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state by area",
        "question_pl": "Jaki jest najmniejszy stan pod względem powierzchni?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what state has the smallest area",
        "question_pl": "Który stan ma najmniejszą powierzchnię?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the total length of all rivers in the usa",
        "question_pl": "Jaka jest łączna długość wszystkich rzek w usa?",
        "query": "SELECT SUM ( LENGTH ) FROM river;",
        "query_pl": "SELECT SUM ( LENGTH ) FROM river;"
    },
    {
        "db_id": "geo",
        "question": "what river flows through the most states",
        "question_pl": "Jaka rzeka przepływa przez najwięcej stanów?",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which river goes through the most states",
        "question_pl": "Która rzeka przepływa przez najwięcej stanów?",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which river runs through most states",
        "question_pl": "która rzeka przepływa przez większość stanów",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which river traverses most states",
        "question_pl": "która rzeka przecina większość stanów",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what river traverses the most states",
        "question_pl": "Jaka rzeka przecina najwięcej stanów?",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which river runs through the most states",
        "question_pl": "Która rzeka przepływa przez najwięcej stanów",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what river runs through the most states",
        "question_pl": "Jaka rzeka przepływa przez najwięcej stanów?",
        "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;",
        "query_pl": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what rivers are in states that border alabama",
        "question_pl": "Jakie rzeki znajdują się w stanach graniczących z Alabamą?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"
    },
    {
        "db_id": "geo",
        "question": "which rivers run through states bordering alabama",
        "question_pl": "Które rzeki przepływają przez stany graniczące z alabamą?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"
    },
    {
        "db_id": "geo",
        "question": "what rivers flow through states that alabama borders",
        "question_pl": "Jakie rzeki przepływają przez stany, z którymi graniczy Alabama?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"
    },
    {
        "db_id": "geo",
        "question": "what state bordering oklahoma has the largest population",
        "question_pl": "Który stan graniczący z oklahomą ma największą populację?",
        "query": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;",
        "query_pl": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which of the states bordering oklahoma has the largest population",
        "question_pl": "Który ze stanów graniczących z Oklahoma ma największą populację?",
        "query": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;",
        "query_pl": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what state that borders oklahoma has the highest population",
        "question_pl": "Który stan graniczący z Oklahomą ma największą populację?",
        "query": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;",
        "query_pl": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the most populated state bordering oklahoma",
        "question_pl": "Jaki jest najbardziej zaludniony stan graniczący z Oklahoma?",
        "query": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;",
        "query_pl": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what state contains the highest point of those the colorado river traverses",
        "question_pl": "W którym stanie znajduje się najwyższy punkt spośród tych, przez które przepływa rzeka Kolorado?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"colorado\" ) );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"kolorado\" ) );"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest capital",
        "question_pl": "Który stan ma największy kapitał?",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "which state 's capital city is the largest",
        "question_pl": "Stolica którego stanu jest największa",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "what state has the longest river",
        "question_pl": "Który stan ma najdłuższą rzekę?",
        "query": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );",
        "query_pl": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what state has the smallest urban population",
        "question_pl": "Który stan ma najmniejszą populację miejską?",
        "query": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;",
        "query_pl": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what states border states that border colorado",
        "question_pl": "Jakie stany graniczą ze stanami graniczącymi z Kolorado",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kolorado\" );"
    },
    {
        "db_id": "geo",
        "question": "what states border states that the mississippi runs through",
        "question_pl": "Przez jakie stany graniczy Missisipi?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "which states border states through which the mississippi traverses",
        "question_pl": "Które stany graniczą ze stanami, przez które przepływa Missisipi?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what states border states which the mississippi runs through",
        "question_pl": "Jakie stany graniczą z państwami, przez które przepływa Missisipi?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what states border texas and have a major river",
        "question_pl": "Jakie stany graniczą z Teksasem i mają dużą rzekę?",
        "query": "SELECT state_name FROM border_info WHERE border  =  \"texas\" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );",
        "query_pl": "SELECT state_name FROM border_info WHERE border  =  \"teksas\" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );"
    },
    {
        "db_id": "geo",
        "question": "what states border the most populous state",
        "question_pl": "Jakie stany graniczą z najbardziej zaludnionym stanem",
        "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what are the states that border the state with the greatest population",
        "question_pl": "Jakie stany graniczą ze stanem o największej populacji?",
        "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what states border the state with the smallest area",
        "question_pl": "Jakie stany graniczą ze stanem o najmniejszej powierzchni?",
        "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "which states border the state with the smallest area",
        "question_pl": "które stany graniczą ze stanem o najmniejszej powierzchni",
        "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what states contain at least one major rivers",
        "question_pl": "w których stanach znajduje się co najmniej jedna duża rzeka",
        "query": "SELECT traverse FROM river WHERE LENGTH  >  750;",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  >  750;"
    },
    {
        "db_id": "geo",
        "question": "where are mountains",
        "question_pl": "gdzie są góry",
        "query": "SELECT state_name FROM mountain;",
        "query_pl": "SELECT state_name FROM mountain;"
    },
    {
        "db_id": "geo",
        "question": "where is the highest mountain of the united states",
        "question_pl": "Gdzie jest najwyższa góra w stanach zjednoczonych?",
        "query": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "which state has the highest peak in the country",
        "question_pl": "Który stan ma najwyższy szczyt w kraju?",
        "query": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
    },
    {
        "db_id": "geo",
        "question": "where is the smallest city",
        "question_pl": "gdzie jest najmniejsze miasto",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
    },
    {
        "db_id": "geo",
        "question": "which is the density of the state that the largest river in the united states runs through",
        "question_pl": "Jaka jest gęstość stanu, przez który przepływa największa rzeka w Stanach Zjednoczonych?",
        "query": "SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );",
        "query_pl": "SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
    },
    {
        "db_id": "geo",
        "question": "which is the highest peak not in alaska",
        "question_pl": "Który szczyt nie znajduje się na Alasce?",
        "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != \"alaska\" );",
        "query_pl": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != \"alaska\" );"
    },
    {
        "db_id": "geo",
        "question": "which rivers do not run through tennessee",
        "question_pl": "które rzeki nie przepływają przez tennessee",
        "query": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );",
        "query_pl": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );"
    },
    {
        "db_id": "geo",
        "question": "what rivers do not run through tennessee",
        "question_pl": "Jakie rzeki nie przepływają przez tennessee?",
        "query": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );",
        "query_pl": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );"
    },
    {
        "db_id": "geo",
        "question": "which rivers do not run through usa",
        "question_pl": "które rzeki nie przepływają przez usa",
        "query": "SELECT river_name FROM river WHERE country_name != \"usa\";",
        "query_pl": "SELECT river_name FROM river WHERE country_name != \"uSA\";"
    },
    {
        "db_id": "geo",
        "question": "which rivers run through states that border the state with the capital atlanta",
        "question_pl": "Które rzeki przepływają przez stany graniczące ze stolicą w Atlancie?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );"
    },
    {
        "db_id": "geo",
        "question": "what rivers run through the states that border the state with the capital atlanta",
        "question_pl": "Jakie rzeki przepływają przez stany graniczące ze stolicą w Atlancie?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );"
    },
    {
        "db_id": "geo",
        "question": "which state capital has the smallest population",
        "question_pl": "Stolica którego stanu ma najmniejszą populację",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
    },
    {
        "db_id": "geo",
        "question": "which state has the highest elevation",
        "question_pl": "Który stan ma najwyższą wysokość?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "which state has the highest point",
        "question_pl": "Który stan ma najwyższy punkt",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what state has the highest elevation",
        "question_pl": "Który stan ma najwyższą wysokość nad poziomem morza?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "in which state does the highest point in usa exist",
        "question_pl": "w którym stanie znajduje się najwyższy punkt w usa?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what state has highest elevation",
        "question_pl": "Jaki stan ma najwyższą wysokość?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the highest elevation in the united states",
        "question_pl": "Jaki jest stan z najwyższym wzniesieniem w stanach zjednoczonych?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the state that contains the highest point",
        "question_pl": "Państwo, w którym znajduje się najwyższy punkt",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what state contains the highest point in the us",
        "question_pl": "W którym stanie znajduje się najwyższy punkt w USA?",
        "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "which state has the lowest elevation",
        "question_pl": "Który stan ma najniższą wysokość",
        "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the name of the state with the lowest point",
        "question_pl": "Jak nazywa się stan z najniżej położonym punktem?",
        "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the state with the lowest point",
        "question_pl": "Który stan ma najniższy punkt?",
        "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );",
        "query_pl": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "which state has the lowest point that borders idaho",
        "question_pl": "Który stan ma najniższy punkt graniczny Idaho?",
        "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" );",
        "query_pl": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" );"
    },
    {
        "db_id": "geo",
        "question": "which state has the smallest average urban population",
        "question_pl": "Który stan ma najmniejszą średnią populację miejską?",
        "query": "SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;",
        "query_pl": "SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "which state is mount whitney in",
        "question_pl": "W którym stanie znajduje się Mount Whitney?",
        "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
    },
    {
        "db_id": "geo",
        "question": "in what state is mount whitney",
        "question_pl": "W jakim stanie znajduje się Mount Whitney?",
        "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
    },
    {
        "db_id": "geo",
        "question": "where is mount whitney",
        "question_pl": "Gdzie jest Mount Whitney?",
        "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
    },
    {
        "db_id": "geo",
        "question": "where is mount whitney located",
        "question_pl": "Gdzie znajduje się Mount Whitney?",
        "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
        "query_pl": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
    },
    {
        "db_id": "geo",
        "question": "which states have a river",
        "question_pl": "które stany mają rzekę",
        "query": "SELECT traverse FROM river;",
        "query_pl": "SELECT traverse FROM river;"
    },
    {
        "db_id": "geo",
        "question": "what states have rivers running through them",
        "question_pl": "przez jakie stany przepływają rzeki",
        "query": "SELECT traverse FROM river;",
        "query_pl": "SELECT traverse FROM river;"
    },
    {
        "db_id": "geo",
        "question": "which states have a major city named austin",
        "question_pl": "W których stanach znajduje się duże miasto o nazwie austin?",
        "query": "SELECT state_name FROM city WHERE city_name  =  \"austin\" AND population  >  150000;",
        "query_pl": "SELECT state_name FROM city WHERE city_name  =  \"austin\" AND population  >  150000;"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in a state that borders california",
        "question_pl": "Jakie jest największe miasto w stanie graniczącym z Kalifornią?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest city in states that border california",
        "question_pl": "Jakie jest największe miasto w stanach graniczących z kalifornią?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"kalifornia\" );"
    },
    {
        "db_id": "geo",
        "question": "how many rivers do not traverse the state with the capital albany",
        "question_pl": "Ile rzek nie przecina stanu ze stolicą w Albany?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  \"albany\" );",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  \"albania\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the shortest river in texas",
        "question_pl": "Jaka jest najkrótsza rzeka w Teksasie?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  \"teksas\" ) AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in the smallest state in the us",
        "question_pl": "Jakie są główne miasta w najmniejszym stanie w USA?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the capital of the largest state through which the mississippi runs",
        "question_pl": "Jaka jest populacja stolicy największego stanu, przez który przepływa Missisipi?",
        "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  \"mississippi\" ) );",
        "query_pl": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  \"missisipi\" ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the shortest river in the usa",
        "question_pl": "Jaka jest najkrótsza rzeka w usa?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the shortest river",
        "question_pl": "jaka jest najkrótsza rzeka",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the shortest river in the us",
        "question_pl": "Jaka jest najkrótsza rzeka w USA?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the shortest river in the united states",
        "question_pl": "Jaka jest najkrótsza rzeka w stanach zjednoczonych?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "which is the shortest river",
        "question_pl": "która jest najkrótszą rzeką",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state that borders the state that borders texas",
        "question_pl": "Jaka jest stolica stanu graniczącego ze stanem graniczącym z Teksasem?",
        "query": "SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) );",
        "query_pl": "SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest city of the smallest state in the us",
        "question_pl": "Jakie jest najmniejsze miasto najmniejszego stanu w USA?",
        "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the largest state that borders texas",
        "question_pl": "Jaka jest populacja największego stanu graniczącego z Teksasem?",
        "query": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "what state is salem the capital of",
        "question_pl": "Stolicą jakiego stanu jest Salem",
        "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
        "query_pl": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
    },
    {
        "db_id": "geo",
        "question": "what states capital is salem",
        "question_pl": "Stolicą jakiego stanu jest Salem",
        "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
        "query_pl": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
    },
    {
        "db_id": "geo",
        "question": "salem is the capital of which state",
        "question_pl": "Salem jest stolicą którego stanu",
        "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
        "query_pl": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the capital salem",
        "question_pl": "Jaki stan ma stolicę w Salem?",
        "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
        "query_pl": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
    },
    {
        "db_id": "geo",
        "question": "what rivers flow through the state with the largest population",
        "question_pl": "Jakie rzeki przepływają przez stan o największej populacji?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state that borders the state with the highest population",
        "question_pl": "Jaki jest największy stan graniczący ze stanem o największej populacji?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are there in us",
        "question_pl": "Ile rzek jest w nas?",
        "query": "SELECT COUNT ( river_name ) FROM river;",
        "query_pl": "SELECT COUNT ( river_name ) FROM river;"
    },
    {
        "db_id": "geo",
        "question": "name the 50 capitals in the usa",
        "question_pl": "wymień 50 stolic w usa",
        "query": "SELECT DISTINCT capital FROM state;",
        "query_pl": "SELECT DISTINCT capital FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states have a city named springfield",
        "question_pl": "Ile stanów ma miasto o nazwie Springfield?",
        "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "how many states have a city called springfield",
        "question_pl": "Ile stanów ma miasto o nazwie Springfield?",
        "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "how many states have cities named springfield",
        "question_pl": "Ile stanów ma miasta o nazwie Springfield?",
        "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "how many states have cities or towns named springfield",
        "question_pl": "W ilu stanach znajdują się miasta o nazwie Springfield?",
        "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
        "query_pl": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
    },
    {
        "db_id": "geo",
        "question": "what state borders the state with the smallest population",
        "question_pl": "Jaki stan graniczy ze stanem o najmniejszej populacji?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what are the lakes in states bordering texas",
        "question_pl": "Jakie są jeziora w stanach graniczących z Teksasem?",
        "query": "SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "how many major cities are in texas",
        "question_pl": "Ile dużych miast znajduje się w Teksasie?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many big cities are in texas",
        "question_pl": "Ile dużych miast znajduje się w Teksasie?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many major cities are there in texas",
        "question_pl": "Ile dużych miast znajduje się w stanie teksas?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how high are the highest points of all the states",
        "question_pl": "Jak wysokie są najwyższe punkty wszystkich stanów?",
        "query": "SELECT highest_elevation FROM highlow;",
        "query_pl": "SELECT highest_elevation FROM highlow;"
    },
    {
        "db_id": "geo",
        "question": "how many states does the missouri run through",
        "question_pl": "Przez ile stanów przepływa rzeka Missouri?",
        "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
        "query_pl": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
    },
    {
        "db_id": "geo",
        "question": "how many states does the missouri river flow through",
        "question_pl": "przez ile stanów przepływa rzeka Missouri?",
        "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
        "query_pl": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
    },
    {
        "db_id": "geo",
        "question": "how many states does the missouri river run through",
        "question_pl": "Przez ile stanów przepływa rzeka Missouri?",
        "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
        "query_pl": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the smallest state in the usa",
        "question_pl": "Jaka jest najdłuższa rzeka w najmniejszym stanie w usa?",
        "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the average population per square km in pennsylvania",
        "question_pl": "Jaka jest średnia liczba ludności na km kwadratowy w Pensylwanii?",
        "query": "SELECT population / area FROM state WHERE state_name  =  \"pennsylvania\";",
        "query_pl": "SELECT population / area FROM state WHERE state_name  =  \"pensylwania\";"
    },
    {
        "db_id": "geo",
        "question": "what states border states that border states that border florida",
        "question_pl": "Jakie stany graniczą ze stanami graniczącymi z Florydą?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"florida\" ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"floryda\" ) );"
    },
    {
        "db_id": "geo",
        "question": "how many states border at least one other state",
        "question_pl": "Ile stanów graniczy z co najmniej jednym innym stanem",
        "query": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;",
        "query_pl": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;"
    },
    {
        "db_id": "geo",
        "question": "what is the height of the highest mountain in texas",
        "question_pl": "Jaka jest wysokość najwyższej góry w Teksasie?",
        "query": "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many states border colorado and border new mexico",
        "question_pl": "Ile stanów graniczy z Kolorado i Nowym Meksykiem?",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"new mexico\" ) AND state_name  =  \"colorado\";",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"nowy meksyk\" ) AND state_name  =  \"kolorado\";"
    },
    {
        "db_id": "geo",
        "question": "how many major cities are in states bordering nebraska",
        "question_pl": "Ile dużych miast znajduje się w stanach graniczących z Nebraską?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"nebraska\" );",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"nebraska\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the total population of the states that border texas",
        "question_pl": "Jaka jest łączna populacja stanów graniczących z texas?",
        "query": "SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";",
        "query_pl": "SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what are the major lakes in united states",
        "question_pl": "Jakie są główne jeziora w stanach zjednoczonych?",
        "query": "SELECT lake_name FROM lake WHERE area  >  750;",
        "query_pl": "SELECT lake_name FROM lake WHERE area  >  750;"
    },
    {
        "db_id": "geo",
        "question": "show me all the major lakes in the us",
        "question_pl": "pokaż mi wszystkie główne jeziora w USA",
        "query": "SELECT lake_name FROM lake WHERE area  >  750;",
        "query_pl": "SELECT lake_name FROM lake WHERE area  >  750;"
    },
    {
        "db_id": "geo",
        "question": "name all the lakes of us",
        "question_pl": "wymień wszystkie nasze jeziora",
        "query": "SELECT lake_name FROM lake;",
        "query_pl": "SELECT lake_name FROM lake;"
    },
    {
        "db_id": "geo",
        "question": "how many major rivers cross ohio",
        "question_pl": "Ile głównych rzek przecina Ohio",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  \"ohio\";",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  \"ohio\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the shortest river",
        "question_pl": "Który stan ma najkrótszą rzekę?",
        "query": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );",
        "query_pl": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "how many states are next to major rivers",
        "question_pl": "Ile stanów leży obok głównych rzek",
        "query": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;",
        "query_pl": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;"
    },
    {
        "db_id": "geo",
        "question": "what is the height of mount mckinley",
        "question_pl": "Jaka jest wysokość góry Mckinley?",
        "query": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";",
        "query_pl": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";"
    },
    {
        "db_id": "geo",
        "question": "what states does the shortest river run through",
        "question_pl": "Przez jakie stany przepływa najkrótsza rzeka",
        "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the state with the smallest population",
        "question_pl": "Jaki jest najwyższy punkt w stanie o najmniejszej populacji?",
        "query": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );",
        "query_pl": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "which rivers run through the state with the lowest elevation in the usa",
        "question_pl": "Które rzeki przepływają przez stan o najniższym wzniesieniu w USA?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"
    },
    {
        "db_id": "geo",
        "question": "what rivers run through the state with the lowest point in the usa",
        "question_pl": "Jakie rzeki przepływają przez stan z najniżej położonym punktem w usa?",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"
    },
    {
        "db_id": "geo",
        "question": "what mountains are in alaska",
        "question_pl": "jakie góry znajdują się na alasce",
        "query": "SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";",
        "query_pl": "SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";"
    },
    {
        "db_id": "geo",
        "question": "how many states have major rivers",
        "question_pl": "Ile stanów ma główne rzeki",
        "query": "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;",
        "query_pl": "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;"
    },
    {
        "db_id": "geo",
        "question": "what is the smallest state through which the longest river runs",
        "question_pl": "Jakie jest najmniejsze państwo, przez które przepływa najdłuższa rzeka?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state traversed by the rio grande river",
        "question_pl": "Jaki jest największy stan, przez który przepływa rzeka rio grande?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest of the state that the rio grande runs through",
        "question_pl": "Jaki jest największy stan, przez który przepływa rio grande?",
        "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );",
        "query_pl": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );"
    },
    {
        "db_id": "geo",
        "question": "how many rivers run through the states bordering colorado",
        "question_pl": "Ile rzek przepływa przez stany graniczące z Kolorado?",
        "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );",
        "query_pl": "SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"kolorado\" );"
    },
    {
        "db_id": "geo",
        "question": "what state has no rivers",
        "question_pl": "Jaki stan nie ma rzek?",
        "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );",
        "query_pl": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the largest state",
        "question_pl": "Jaka jest stolica największego państwa",
        "query": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital city of the largest state in the us",
        "question_pl": "Jaka jest stolica największego stanu w USA?",
        "query": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "how many cities are in texas",
        "question_pl": "Ile miast znajduje się w teksasie?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many cities does texas have",
        "question_pl": "Ile miast ma stan teksas?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the states",
        "question_pl": "Jaki jest obszar państw",
        "query": "SELECT area FROM state;",
        "query_pl": "SELECT area FROM state;"
    },
    {
        "db_id": "geo",
        "question": "how many states in the us does the shortest river run through",
        "question_pl": "Przez ile stanów w USA przepływa najkrótsza rzeka?",
        "query": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );",
        "query_pl": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what rivers flow through states that border the state with the largest population",
        "question_pl": "jakie rzeki przepływają przez stany, które graniczą ze stanem o największej populacji",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in the largest state",
        "question_pl": "Jakie są główne miasta w największym stanie",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the smallest state",
        "question_pl": "Jaki jest obszar najmniejszego państwa",
        "query": "SELECT area FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT area FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "which states border the longest river in the usa",
        "question_pl": "Które stany graniczą z najdłuższą rzeką w usa?",
        "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );",
        "query_pl": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the population density of the state with the smallest population",
        "question_pl": "Jaka jest gęstość zaludnienia w stanie o najmniejszej populacji?",
        "query": "SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );",
        "query_pl": "SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "how many states border the mississippi river",
        "question_pl": "Ile stanów graniczy z rzeką Missisipi?",
        "query": "SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );",
        "query_pl": "SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"missisipi\" );"
    },
    {
        "db_id": "geo",
        "question": "what states have a capital that is the highest point in the state",
        "question_pl": "Jakie stany mają stolicę, która jest najwyższym punktem w stanie?",
        "query": "SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;",
        "query_pl": "SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the capital of the smallest state",
        "question_pl": "Jaka jest populacja stolicy najmniejszego państwa?",
        "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );",
        "query_pl": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the population of the capital of the largest state",
        "question_pl": "Jaka jest populacja stolicy największego państwa",
        "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the lowest point of the state with the largest area",
        "question_pl": "Jaki jest najniższy punkt stanu o największej powierzchni?",
        "query": "SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what states border states that border the state with the largest population",
        "question_pl": "Jakie stany graniczą ze stanami, które graniczą ze stanem o największej populacji?",
        "query": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the size of the largest state in the usa",
        "question_pl": "Jaki jest rozmiar największego stanu w usa?",
        "query": "SELECT MAX ( area ) FROM state;",
        "query_pl": "SELECT MAX ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what is the area of the largest state",
        "question_pl": "Jaki jest obszar największego państwa",
        "query": "SELECT MAX ( area ) FROM state;",
        "query_pl": "SELECT MAX ( area ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "which capitals are not major cities",
        "question_pl": "Które stolice nie są głównymi miastami?",
        "query": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;",
        "query_pl": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;"
    },
    {
        "db_id": "geo",
        "question": "give me the cities in usa",
        "question_pl": "podaj mi miasta w usa",
        "query": "SELECT city_name FROM city;",
        "query_pl": "SELECT city_name FROM city;"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point of the state with the largest area",
        "question_pl": "Jaki jest najwyższy punkt stanu o największej powierzchni?",
        "query": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "where is massachusetts",
        "question_pl": "Gdzie jest Massachusetts",
        "query": "SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";",
        "query_pl": "SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";"
    },
    {
        "db_id": "geo",
        "question": "what state has the largest urban population",
        "question_pl": "Jaki stan ma największą populację miejską?",
        "query": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;",
        "query_pl": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what are the major rivers in the us",
        "question_pl": "Jakie są główne rzeki w USA?",
        "query": "SELECT river_name FROM river;",
        "query_pl": "SELECT river_name FROM river;"
    },
    {
        "db_id": "geo",
        "question": "how many cities named austin are there in the usa",
        "question_pl": "Ile jest miast o nazwie austin w usa?",
        "query": "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";",
        "query_pl": "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";"
    },
    {
        "db_id": "geo",
        "question": "how many people live in the smallest state bordering wyoming",
        "question_pl": "Ile osób mieszka w najmniejszym stanie graniczącym z Wyoming?",
        "query": "SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" );",
        "query_pl": "SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" );"
    },
    {
        "db_id": "geo",
        "question": "what is the length of the colorado river in texas",
        "question_pl": "Jaka jest długość rzeki Kolorado w Teksasie?",
        "query": "SELECT LENGTH FROM river WHERE river_name  =  \"colorado\" AND traverse  =  \"texas\";",
        "query_pl": "SELECT LENGTH FROM river WHERE river_name  =  \"kolorado\" AND traverse  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "what is the population density in the state with capital austin",
        "question_pl": "Jaka jest gęstość zaludnienia w stanie ze stolicą w austin?",
        "query": "SELECT density FROM state WHERE capital  =  \"austin\";",
        "query_pl": "SELECT density FROM state WHERE capital  =  \"austin\";"
    },
    {
        "db_id": "geo",
        "question": "how long is the shortest river in the usa",
        "question_pl": "Jak długa jest najkrótsza rzeka w USA?",
        "query": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );",
        "query_pl": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
    },
    {
        "db_id": "geo",
        "question": "what is the elevation of death valley",
        "question_pl": "Jaka jest wysokość doliny śmierci?",
        "query": "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"death valley\";",
        "query_pl": "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"dolina śmierci\";"
    },
    {
        "db_id": "geo",
        "question": "what is the average population of the us by state",
        "question_pl": "Jaka jest średnia populacja USA według stanów",
        "query": "SELECT AVG ( population ) FROM state;",
        "query_pl": "SELECT AVG ( population ) FROM state;"
    },
    {
        "db_id": "geo",
        "question": "what rivers flow through the largest state",
        "question_pl": "Jakie rzeki przepływają przez największy stan",
        "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what states border states that border states that border states that border texas",
        "question_pl": "Jakie stany graniczą ze stanami graniczącymi ze stanami graniczącymi ze stanami graniczącymi z teksasem?",
        "query": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"texas\";",
        "query_pl": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"teksas\";"
    },
    {
        "db_id": "geo",
        "question": "how many states border on the state whose capital is boston",
        "question_pl": "Ile stanów graniczy ze stanem, którego stolicą jest boston?",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  \"boston\" );",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  \"boston\" );"
    },
    {
        "db_id": "geo",
        "question": "what are the major cities in the states through which the major river in virginia runs",
        "question_pl": "Jakie są główne miasta w stanach, przez które przepływa główna rzeka w Wirginii?",
        "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"virginia\" ) );",
        "query_pl": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"wirginia\" ) );"
    },
    {
        "db_id": "geo",
        "question": "which states does not border texas",
        "question_pl": "Które stany nie graniczą z Teksasem?",
        "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );",
        "query_pl": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  \"teksas\" );"
    },
    {
        "db_id": "geo",
        "question": "how many states border the largest state",
        "question_pl": "Ile stanów graniczy z największym stanem",
        "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );",
        "query_pl": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "which state is the largest city in montana in",
        "question_pl": "W którym stanie znajduje się największe miasto w Montanie?",
        "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"montana\" ) AND state_name  =  \"montana\";",
        "query_pl": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"montana\" ) AND state_name  =  \"montana\";"
    },
    {
        "db_id": "geo",
        "question": "what is capital of the state with the lowest point",
        "question_pl": "Jaka jest stolica kraju związkowego o najniższym punkcie",
        "query": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;",
        "query_pl": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;"
    },
    {
        "db_id": "geo",
        "question": "what is the biggest american city in a state with a river",
        "question_pl": "Jakie jest największe amerykańskie miasto w stanie z rzeką?",
        "query": "SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );",
        "query_pl": "SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are in the state with the largest population",
        "question_pl": "Ile rzek znajduje się w stanie o największej populacji?",
        "query": "SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );",
        "query_pl": "SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
    },
    {
        "db_id": "geo",
        "question": "what is the largest state that borders the state with the lowest point in the usa",
        "question_pl": "Jaki jest największy stan, który graniczy ze stanem o najniższym punkcie w usa?",
        "query": "SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;",
        "query_pl": "SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the highest point",
        "question_pl": "Jaka jest stolica kraju związkowego o najwyższym punkcie",
        "query": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the capital of the state with the highest elevation",
        "question_pl": "Jaka jest stolica stanu o najwyższym wzniesieniu?",
        "query": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "what is the highest point in the smallest state",
        "question_pl": "Jaki jest najwyższy punkt w najmniejszym stanie",
        "query": "SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );",
        "query_pl": "SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "how many rivers are in the state with the highest point.",
        "question_pl": "Ile rzek znajduje się w stanie z najwyższym punktem.",
        "query": "SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );",
        "query_pl": "SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
    },
    {
        "db_id": "geo",
        "question": "how high is the highest point in the largest state",
        "question_pl": "Jak wysoki jest najwyższy punkt w największym stanie",
        "query": "SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );",
        "query_pl": "SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );"
    },
    {
        "db_id": "geo",
        "question": "what is the longest river in the state with the highest point",
        "question_pl": "Jaka jest najdłuższa rzeka w stanie z najwyższym punktem?",
        "query": "SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;",
        "query_pl": "SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;"
    },
    {
        "db_id": "scholar",
        "question": "papers that are coauthored by Peter Mertens and Dina Barbian",
        "question_pl": "artykuły, których współautorami są Peter Mertens i Dina Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "papers written by Peter Mertens and Dina Barbian",
        "question_pl": "artykuły napisane przez Petera Mertensa i Dinę Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "what are the papers that have Peter Mertens and Dina Barbian as co-authors",
        "question_pl": "Jakie są artykuły, których współautorami są Peter Mertens i Dina Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers have Peter Mertens and Dina Barbian written ?",
        "question_pl": "Jakie prace napisali Peter Mertens i Dina Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "what paper did Peter Mertens and Dina Barbian write together ?",
        "question_pl": "Jaką pracę napisali wspólnie Peter Mertens i Dina Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Has Peter Mertens and Dina Barbian written a paper together ?",
        "question_pl": "Czy Peter Mertens i Dina Barbian napisali razem artykuł?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers by Peter Mertens and Dina Barbian",
        "question_pl": "Artykuły Petera Mertensa i Diny Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by authors Peter Mertens and Dina Barbian",
        "question_pl": "artykuły autorów Petera Mertensa i Diny Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers were written by authors Peter Mertens and Dina Barbian",
        "question_pl": "Jakie artykuły zostały napisane przez autorów Petera Mertensa i Dinę Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by Peter Mertens and Dina Barbian",
        "question_pl": "artykuły Petera Mertensa i Diny Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "papers written by authors Peter Mertens and Dina Barbian",
        "question_pl": "artykuły napisane przez autorów Petera Mertensa i Dinę Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "When did Peter Mertens and Dina Barbian collaborate ?",
        "question_pl": "Kiedy Peter Mertens i Dina Barbian nawiązali współpracę?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "what are the collaborations of Peter Mertens and Dina Barbian ?",
        "question_pl": "Jak wygląda współpraca Petera Mertensa i Diny Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Have Peter Mertens and Dina Barbian written a paper together ?",
        "question_pl": "Czy Peter Mertens i Dina Barbian napisali razem artykuł?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Peter Mertens and Dina Barbian as co-authors",
        "question_pl": "Peter Mertens i Dina Barbian jako współautorzy",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Does Peter Mertens ever collaborated with Dina Barbian ?",
        "question_pl": "Czy Peter Mertens kiedykolwiek współpracował z Diną Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "Which papers have Peter Mertens and Dina Barbian as co-authors ?",
        "question_pl": "Które artykuły mają Petera Mertensa i Dinę Barbian jako współautorów?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "papers coauthored by Peter Mertens and Dina Barbian",
        "question_pl": "artykuły, których współautorami są Peter Mertens i Dina Barbian",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers have been written by Peter Mertens and Dina Barbian ?",
        "question_pl": "Jakie prace zostały napisane przez Petera Mertensa i Dinę Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers have been written by both Peter Mertens and Dina Barbian ?",
        "question_pl": "Jakie dokumenty zostały napisane przez Petera Mertensa i Dinę Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers have been written by Peter Mertens and Dina Barbian .",
        "question_pl": "Jakie artykuły zostały napisane przez Petera Mertensa i Dinę Barbian?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"
    },
    {
        "db_id": "scholar",
        "question": "who has written the most syntactic parsing papers ?",
        "question_pl": "Kto napisał najwięcej artykułów na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who is the most published author in syntactic parsing ?",
        "question_pl": "Kto jest najczęściej publikowanym autorem w dziedzinie parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who has the most publications in syntactic parsing ?",
        "question_pl": "Kto ma najwięcej publikacji na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who has written the most papers on syntactic parsing ?",
        "question_pl": "Kto napisał najwięcej artykułów na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "List prominent scholars in syntactic parsing ?",
        "question_pl": "Wymień wybitnych naukowców zajmujących się parsowaniem składniowym?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who wrote the most papers on syntactic parsing ?",
        "question_pl": "Kto napisał najwięcej artykułów na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Who are the authors with the most published papers in syntactic parsing ?",
        "question_pl": "Kim są autorzy z największą liczbą opublikowanych artykułów na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "top syntactic parsing author",
        "question_pl": "najlepszy autor parsowania składniowego",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "top author in syntactic parsing",
        "question_pl": "najlepszy autor w dziedzinie parsowania składniowego",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published the most in syntactic parsing ?",
        "question_pl": "Kto opublikował najwięcej na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published the most papers in syntactic parsing ?",
        "question_pl": "Kto opublikował najwięcej artykułów na temat parsowania składniowego?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie składniowe\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many citation noah a smith has ?",
        "question_pl": "Ile cytatów ma Noah Smith?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "noah a smith citation count",
        "question_pl": "liczba cytowań noah a smith",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "how many citations does noah a smith have ?",
        "question_pl": "Ile cytatów ma Noah Smith?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "How many citations does noah a smith have ?",
        "question_pl": "Ile cytatów ma Noah Smith?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "number of citations of noah a smith",
        "question_pl": "liczba cytowań noah a smith",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "How many citations does noah a smith have",
        "question_pl": "Ile cytatów ma Noah Smith?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "How many times was noah a smith cited ?",
        "question_pl": "Ile razy Noe był cytowany jako kowal?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "How many citations does noah a smith has ?",
        "question_pl": "Ile cytatów ma Noah Smith?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"
    },
    {
        "db_id": "scholar",
        "question": "chi papers",
        "question_pl": "papiery chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers at chi",
        "question_pl": "dokumenty na chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers in chi",
        "question_pl": "papiery w chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "chi",
        "question_pl": "chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers about chi",
        "question_pl": "Dokumenty o chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Show me chi papers .",
        "question_pl": "Pokaż mi dokumenty chi.",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "what papers did chi publish ?",
        "question_pl": "Jakie artykuły opublikował chi?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "list papers published in chi",
        "question_pl": "lista artykułów opublikowanych w chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers on chi",
        "question_pl": "Dokumenty na temat chi",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Has mirella lapata written any papers in 2016 ?",
        "question_pl": "Czy mirella lapata napisała jakieś artykuły w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mirella lapata\" AND t3.year  =  2016 GROUP BY t2.authorid;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mirella lapata\" AND t3.year  =  2016 GROUP BY t2.authorid;"
    },
    {
        "db_id": "scholar",
        "question": "What papers has sharon goldwater written ?",
        "question_pl": "Jakie artykuły napisała Sharon Goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers has written by sharon goldwater ?",
        "question_pl": "Jakie prace napisała Sharon Goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by sharon goldwater",
        "question_pl": "artykuły sharon goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "what did sharon goldwater write ?",
        "question_pl": "Co napisała Sharon Goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "papers where sharon goldwater is an author",
        "question_pl": "artykuły, których autorem jest sharon goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers authored by sharon goldwater",
        "question_pl": "Artykuły, których autorem jest Sharon Goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "sharon goldwater papers",
        "question_pl": "dokumenty sharon goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers by sharon goldwater",
        "question_pl": "Dokumenty autorstwa Sharon Goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers written by sharon goldwater",
        "question_pl": "Artykuły napisane przez Sharon Goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "which papers has sharon goldwater written ?",
        "question_pl": "Jakie artykuły napisała sharon goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "papers written by sharon goldwater",
        "question_pl": "artykuły napisane przez sharon goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "What has sharon goldwater published ?",
        "question_pl": "Co opublikowała Sharon Goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "Does sharon goldwater have any papers published ?",
        "question_pl": "Czy Sharon Goldwater opublikowała jakieś artykuły?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "sharon goldwater 's papers",
        "question_pl": "dokumenty sharon goldwater",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "show me papers by sharon goldwater .",
        "question_pl": "pokaż mi dokumenty sharon goldwater.",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers are authored by sharon goldwater ?",
        "question_pl": "Jakie dokumenty są autorstwa Sharon Goldwater?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by sharon goldwater ?",
        "question_pl": "dokumenty sharon goldwater ?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"
    },
    {
        "db_id": "scholar",
        "question": "What was oren etzioni 's latest paper ?",
        "question_pl": "Jaki był najnowszy artykuł oren etzioni?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Latest paper by oren etzioni",
        "question_pl": "Najnowszy artykuł autorstwa oren etzioni",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the latest paper by oren etzioni ?",
        "question_pl": "Jaki jest najnowszy artykuł orena etzioni?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is oren etzioni 's latest paper ?",
        "question_pl": "Jaki jest najnowszy artykuł oren etzioni?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What are the latest papers by oren etzioni ?",
        "question_pl": "Jakie są najnowsze artykuły oren etzioni?",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most recent papers by oren etzioni",
        "question_pl": "najnowsze artykuły orena etzioni",
        "query": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "are there any monte carlo simulation papers since 2011 ?",
        "question_pl": "Czy są jakieś symulacje monte carlo od 2011 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"symulacja monte carlo\" AND t3.year  >  2011;"
    },
    {
        "db_id": "scholar",
        "question": "monte carlo simulation papers later than 2011",
        "question_pl": "papiery symulacyjne monte carlo później niż w 2011 r.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"symulacja monte carlo\" AND t3.year  >  2011;"
    },
    {
        "db_id": "scholar",
        "question": "monte carlo simulation later than 2011",
        "question_pl": "symulacja monte carlo później niż w 2011 r.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"symulacja monte carlo\" AND t3.year  >  2011;"
    },
    {
        "db_id": "scholar",
        "question": "monte carlo simulation papers published after 2011",
        "question_pl": "symulacje monte carlo opublikowane po 2011 roku",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"symulacja monte carlo\" AND t3.year  >  2011;"
    },
    {
        "db_id": "scholar",
        "question": "monte carlo simulation papers since 2011",
        "question_pl": "symulacje monte carlo od 2011 roku",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"symulacja monte carlo\" AND t3.year  >  2011;"
    },
    {
        "db_id": "scholar",
        "question": "does ras bodik publish a lot ?",
        "question_pl": "Czy ras bodik dużo publikuje?",
        "query": "SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ras bodik\";",
        "query_pl": "SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ras bodik\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers did David M. Blei publish at AISTATS ?",
        "question_pl": "Ile artykułów opublikował David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does David M. Blei have in AISTATS ?",
        "question_pl": "Ile artykułów ma David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers has David M. Blei published in AISTATS ?",
        "question_pl": "Ile artykułów opublikował David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers does David M. Blei have at AISTATS",
        "question_pl": "Ile prac ma David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers does David M. Blei have in AISTATS ?",
        "question_pl": "Ile artykułów ma David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "how many David M. Blei papers are in AISTATS ?",
        "question_pl": "Ile dokumentów Davida M. Blei znajduje się w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers David M. Blei has in AISTATS ?",
        "question_pl": "Ile artykułów ma David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does David M. Blei have in AISTATS",
        "question_pl": "Ile prac ma David M. Blei w AISTATS?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"
    },
    {
        "db_id": "scholar",
        "question": "List all academic papers on machine networks for one shot learning",
        "question_pl": "Wymień wszystkie artykuły naukowe na temat sieci maszyn do uczenia jednostopniowego",
        "query": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"machine networks for one shot learning\";",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"sieci maszynowe do jednorazowego uczenia się\";"
    },
    {
        "db_id": "scholar",
        "question": "machine networks for one shot learning",
        "question_pl": "sieci maszynowe do jednorazowego uczenia się",
        "query": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"machine networks for one shot learning\";",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"sieci maszynowe do jednorazowego uczenia się\";"
    },
    {
        "db_id": "scholar",
        "question": "which EMNLP 2010 papers have the most citations ?",
        "question_pl": "Które artykuły z EMNLP 2010 mają najwięcej cytowań?",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Which paper from EMNLP 2010 was cited most ?",
        "question_pl": "Który artykuł z EMNLP 2010 był najczęściej cytowany?",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most cited EMNLP 2010 papers",
        "question_pl": "Najczęściej cytowane artykuły EMNLP 2010",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "which EMNLP 2010 papers have been cited the most ?",
        "question_pl": "Które artykuły EMNLP 2010 były najczęściej cytowane?",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What papers were published at CVPR in 2016 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?",
        "question_pl": "Jakie artykuły zostały opublikowane na CVPR w 2016 roku na temat spójnej klasowo fuzji multimodalnej z cechami binarnymi zastosowanymi do zbioru danych obiektów RGB-D?",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D Object Dataset\" AND t3.title  =  \"Class consistent multi-modal fusion with binary features\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"Zestaw danych obiektów RGB-D\" AND t3.title  =  \"Spójna klasowo fuzja multimodalna z cechami binarnymi\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers were published at CVPR '16 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?",
        "question_pl": "Jakie artykuły zostały opublikowane na CVPR '16 na temat spójnej klasowo fuzji multimodalnej z cechami binarnymi zastosowanymi do zbioru danych obiektów RGB-D?",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D Object Dataset\" AND t3.title  =  \"Class consistent multi-modal fusion with binary features\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"Zestaw danych obiektów RGB-D\" AND t3.title  =  \"Spójna klasowo fuzja multimodalna z cechami binarnymi\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers are in deep learning ?",
        "question_pl": "Ile artykułów dotyczy uczenia głębokiego?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers are about deep learning ?",
        "question_pl": "Ile artykułów dotyczy uczenia głębokiego?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers about deep learning ?",
        "question_pl": "Ile jest artykułów na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers are related to deep learning ?",
        "question_pl": "Ile artykułów dotyczy uczenia głębokiego?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers has Christopher D. Manning written ?",
        "question_pl": "Ile artykułów napisał Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does Christopher D. Manning have ?",
        "question_pl": "Ile dokumentów posiada Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers has Christopher D. Manning ?",
        "question_pl": "Ile dokumentów ma na swoim koncie Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers has Christopher D. Manning published ?",
        "question_pl": "Ile artykułów opublikował Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers has Christopher D. Manning written ?",
        "question_pl": "Ile artykułów napisał Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "Has Christopher D. Manning published any papers ?",
        "question_pl": "Czy Christopher D. Manning opublikował jakieś artykuły?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers has Christopher D. Manning published ?",
        "question_pl": "Ile artykułów opublikował Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers does Christopher D. Manning have ?",
        "question_pl": "Ile dokumentów posiada Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many paper does Christopher D. Manning have ?",
        "question_pl": "Ile papierów ma Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many publications does Christopher D. Manning have ?",
        "question_pl": "Ile publikacji ma na swoim koncie Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does Christopher D. Manning have",
        "question_pl": "Ile dokumentów ma Christopher D. Manning?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "number of papers written by Christopher D. Manning",
        "question_pl": "liczba artykułów napisanych przez Christophera D. Manninga",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"
    },
    {
        "db_id": "scholar",
        "question": "what kind of papers does Luke Zettlemoyer publish",
        "question_pl": "Jakie artykuły publikuje Luke Zettlemoyer?",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "Keyphrases used by Luke Zettlemoyer",
        "question_pl": "Frazy kluczowe używane przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "What keywords are in papers by Luke Zettlemoyer ?",
        "question_pl": "Jakie słowa kluczowe znajdują się w artykułach Luke'a Zettlemoyera?",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "keywords used by Luke Zettlemoyer",
        "question_pl": "Słowa kluczowe używane przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "what keywords are used by Luke Zettlemoyer",
        "question_pl": "Jakie słowa kluczowe są używane przez Luke'a Zettlemoyera?",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases used by Luke Zettlemoyer",
        "question_pl": "frazy kluczowe używane przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases by Luke Zettlemoyer",
        "question_pl": "frazy kluczowe autorstwa Luke Zettlemoyer",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "give me the keywords used by Luke Zettlemoyer",
        "question_pl": "Podaj mi słowa kluczowe używane przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "What topic does Luke Zettlemoyer write about ?",
        "question_pl": "Na jaki temat pisze Luke Zettlemoyer?",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "what topics does Luke Zettlemoyer publish in",
        "question_pl": "W jakich tematach publikuje Luke Zettlemoyer?",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "keywords in the papers written by Luke Zettlemoyer",
        "question_pl": "słowa kluczowe w artykułach napisanych przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases used by Luke Zettlemoyer .",
        "question_pl": "frazy kluczowe używane przez Luke'a Zettlemoyera.",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "topics used by Luke Zettlemoyer",
        "question_pl": "tematy używane przez Luke'a Zettlemoyera",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"
    },
    {
        "db_id": "scholar",
        "question": "What conference does Daniella Coelho publish in ?",
        "question_pl": "Na jakiej konferencji publikuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "conferences that Daniella Coelho has published in",
        "question_pl": "konferencje, na których Daniella Coelho publikowała w",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "In which conferences does Daniella Coelho typically publish ?",
        "question_pl": "W jakich konferencjach zazwyczaj publikuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "in what conferences does Daniella Coelho publish ?",
        "question_pl": "Na jakich konferencjach publikuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "What conferences does Daniella Coelho publish in ?",
        "question_pl": "Na jakich konferencjach publikuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "At which conferences does Daniella Coelho publish ?",
        "question_pl": "Na jakich konferencjach publikuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "What conferences does Daniella Coelho submit to ?",
        "question_pl": "Jakie konferencje organizuje Daniella Coelho?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers are there ?",
        "question_pl": "Ile jest tych dokumentów?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers by Ed Desmond contain the keyphrases Semantic Parsing ?",
        "question_pl": "Ile artykułów Eda Desmonda zawiera frazy kluczowe Semantic Parsing?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does Ed Desmond have in Semantic Parsing area ?",
        "question_pl": "Ile artykułów ma Ed Desmond w obszarze parsowania semantycznego?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "How many Semantic Parsing papers has Ed Desmond written ?",
        "question_pl": "Ile artykułów na temat parsowania semantycznego napisał Ed Desmond?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "How many paper has Ed Desmond written about Semantic Parsing ?",
        "question_pl": "Ile artykułów na temat parsowania semantycznego napisał Ed Desmond?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "What conferences did li dong submit to in 2016 ?",
        "question_pl": "Na jakie konferencje li dong zgłosił się w 2016 roku?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "Where did li dong publish in 2016",
        "question_pl": "Gdzie li dong publikował w 2016 roku?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "What conferences did li dong publish in in 2016 ?",
        "question_pl": "Na jakich konferencjach li dong publikował w 2016 roku?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "Where did li dong publish in 2016 ?",
        "question_pl": "Gdzie li dong publikował w 2016 roku?",
        "query": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "acl papers in 2012 on Parsing",
        "question_pl": "acl papers in 2012 on Parsing",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers were published in acl in 2012 about Parsing ?",
        "question_pl": "Jakie artykuły na temat parsowania zostały opublikowane w acl w 2012 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "papers on Parsing appeared at acl last year",
        "question_pl": "artykuły na temat parsowania pojawiły się na acl w zeszłym roku",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "Parsing papers from acl 2012",
        "question_pl": "Parsowanie dokumentów z acl 2012",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "papers about Parsing in acl 2012",
        "question_pl": "Artykuły na temat parsowania w acl 2012",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "acl papers in 2012 in Parsing",
        "question_pl": "acl papers in 2012 in Parsing",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "acl papers in 2012 about Parsing",
        "question_pl": "artykuły acl z 2012 roku na temat parsowania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers were published at acl in 2012 were about Parsing ?",
        "question_pl": "Jakie artykuły opublikowane na acl w 2012 roku dotyczyły parsowania?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "papers on Parsing appeared at acl in 2012",
        "question_pl": "artykuły na temat parsowania pojawiły się na acl w 2012 roku",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "how many Parsing papers did acl 2012 have ?",
        "question_pl": "Ile dokumentów dotyczących parsowania było dostępnych w acl 2012?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "who published Parsing papers at acl 2012",
        "question_pl": "którzy opublikowali artykuły o parsowaniu na acl 2012",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "which papers in acl 2012 had Parsing in them ?",
        "question_pl": "Które artykuły z acl 2012 zawierały parsowanie?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "what were some Parsing based papers in acl 2012 ?",
        "question_pl": "Jakie były artykuły oparte na parsowaniu w acl 2012?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsowanie\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "List the popular publications on dependent types",
        "question_pl": "Wymień popularne publikacje na temat typów zależnych",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"typy zależne\";"
    },
    {
        "db_id": "scholar",
        "question": "Which paper should I read about dependent types ?",
        "question_pl": "Który artykuł powinienem przeczytać o typach zależnych?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"typy zależne\";"
    },
    {
        "db_id": "scholar",
        "question": "top dependent types papers",
        "question_pl": "Papiery najlepszych typów zależnych",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"typy zależne\";"
    },
    {
        "db_id": "scholar",
        "question": "List papers that has a keyword Question Answering",
        "question_pl": "Lista artykułów ze słowem kluczowym Odpowiadanie na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Question Answering research papers",
        "question_pl": "Dokumenty badawcze dotyczące odpowiedzi na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers on Question Answering",
        "question_pl": "Artykuły na temat odpowiadania na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers related to Question Answering",
        "question_pl": "dokumenty związane z odpowiadaniem na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers about Question Answering",
        "question_pl": "Artykuły o odpowiadaniu na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers about Question Answering",
        "question_pl": "Artykuły o odpowiadaniu na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers published in the area of Question Answering",
        "question_pl": "artykułów opublikowanych w dziedzinie odpowiadania na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Question Answering experiments",
        "question_pl": "Eksperymenty z odpowiadaniem na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Show me the papers on Question Answering",
        "question_pl": "Pokaż mi artykuły na temat odpowiadania na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers that used Question Answering",
        "question_pl": "dokumenty, w których wykorzystano odpowiadanie na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers that mention Question Answering",
        "question_pl": "Artykuły wspominające o odpowiadaniu na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Question Answering papers",
        "question_pl": "Odpowiedzi na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Show me Question Answering papers .",
        "question_pl": "Pokaż mi dokumenty z odpowiedziami na pytania.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Question Answering publications",
        "question_pl": "Publikacje z odpowiedziami na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Fetch me some papers on Question Answering",
        "question_pl": "Przynieś mi jakieś dokumenty na temat odpowiadania na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers on Question Answering experiments",
        "question_pl": "artykuły na temat eksperymentów z odpowiadaniem na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers talk about Question Answering ?",
        "question_pl": "Jakie dokumenty mówią o odpowiadaniu na pytania?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "What is the paper about Question Answering ?",
        "question_pl": "Co to jest artykuł o odpowiadaniu na pytania?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "Which papers are about about Question Answering ?",
        "question_pl": "Które artykuły dotyczą odpowiadania na pytania?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "list papers that used Question Answering",
        "question_pl": "Wymień dokumenty, w których użyto odpowiedzi na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers for Question Answering",
        "question_pl": "Dokumenty do odpowiadania na pytania",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "List papers that has keyword Question Answering",
        "question_pl": "Lista artykułów zawierających słowo kluczowe Question Answering",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "papers with Question Answering in keyphrases",
        "question_pl": "Artykuły z odpowiedziami na pytania w frazach kluczowych",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odpowiadanie na pytania\";"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases used by Luke S Zettlemoyer for each year",
        "question_pl": "frazy kluczowe używane przez Luke'a S Zettlemoyera dla każdego roku",
        "query": "SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year  ,  t2.keyphraseid;",
        "query_pl": "SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year  ,  t2.keyphraseid;"
    },
    {
        "db_id": "scholar",
        "question": "recent research interests of sanjeev arora",
        "question_pl": "najnowsze zainteresowania badawcze sanjeeva arory",
        "query": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "recent papers by sanjeev arora",
        "question_pl": "ostatnie artykuły sanjeeva arory",
        "query": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "recent papers written by sanjeev arora",
        "question_pl": "ostatnie artykuły napisane przez sanjeev arora",
        "query": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "list papers published by balakrishnan prabhakaran",
        "question_pl": "lista artykułów opublikowanych przez balakrishnan prabhakaran",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"balakrishnan prabhakaran\";",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"balakrishnan prabhakaran\";"
    },
    {
        "db_id": "scholar",
        "question": "citation count of zachary tatlock 's papers",
        "question_pl": "liczba cytowań dokumentów zacharego tatlocka",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"zachary tatlock\";",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"zachary tatlock\";"
    },
    {
        "db_id": "scholar",
        "question": "subhasis chaudhuri",
        "question_pl": "subhasis chaudhuri",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"
    },
    {
        "db_id": "scholar",
        "question": "list papers by subhasis chaudhuri",
        "question_pl": "lista dokumentów autorstwa subhasis chaudhuri",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"
    },
    {
        "db_id": "scholar",
        "question": "List of papers by subhasis chaudhuri",
        "question_pl": "Lista artykułów autorstwa subhasis chaudhuri",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"
    },
    {
        "db_id": "scholar",
        "question": "conference papers of subhasis chaudhuri",
        "question_pl": "materiały konferencyjne subhasis chaudhuri",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"
    },
    {
        "db_id": "scholar",
        "question": "how many parsing papers in ACL 2014",
        "question_pl": "Ile artykułów na temat parsowania pojawiło się w ACL 2014",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsowanie\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "how many parsing papers appeared in the proceeeding of ACL 2014 ?",
        "question_pl": "Ile artykułów dotyczących parsowania pojawiło się w trakcie ACL 2014?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsowanie\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "how many parsing papers were published at ACL 2014 ?",
        "question_pl": "Ile artykułów na temat parsowania zostało opublikowanych na ACL 2014?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsowanie\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "brian curless convolution paper",
        "question_pl": "brian curless convolution paper",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "convolution by brian curless",
        "question_pl": "convolution by brian curless",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by brian curless about convolution",
        "question_pl": "artykuły briana curlessa na temat splotu",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "brian curless 's paper about convolution",
        "question_pl": "artykuł briana curlessa na temat splotu",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "What are the papers of brian curless in convolution ?",
        "question_pl": "Jakie są prace Briana Curlessa dotyczące splotu?",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "papers brian curless wrote about convolution",
        "question_pl": "artykuły briana curlessa na temat splotu",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "brian curless 's papers on convolution",
        "question_pl": "prace briana curlessa na temat splotu",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "What is the paper about convolution from brian curless ?",
        "question_pl": "Co to za artykuł o splotach od Briana Curlessa?",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by brian curless in convolution topic",
        "question_pl": "Artykuły autorstwa brian curless w temacie splot",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "I want the papers on keyphrase0 by brian curless",
        "question_pl": "Chcę dokumenty na temat keyphrase0 autorstwa brian curless",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "convolution papers by brian curless",
        "question_pl": "convolution papers by brian curless",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers has brian curless written on convolution ?",
        "question_pl": "Jakie artykuły na temat splotu napisał Brian Curless?",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers has brian curless written about convolution ?",
        "question_pl": "Jakie prace na temat splotu napisał Brian Curless?",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "convolution paper by brian curless",
        "question_pl": "papier splotowy autorstwa briana curlessa",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "Does brian curless do convolution ?",
        "question_pl": "Czy brian curless wykonuje konwolucję?",
        "query": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";",
        "query_pl": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"splot\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers has Liwen Xiong written in 2015",
        "question_pl": "Jakie artykuły napisał Liwen Xiong w 2015 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "papers by Liwen Xiong in 2015",
        "question_pl": "artykuły autorstwa Liwen Xiong w 2015 r.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "What did Liwen Xiong published in 2015 ?",
        "question_pl": "Co Liwen Xiong opublikował w 2015 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Papers written by Liwen Xiong in 2015",
        "question_pl": "Artykuły napisane przez Liwen Xiong w 2015 roku",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "What are the papers of Liwen Xiong in 2015",
        "question_pl": "Jakie są prace Liwen Xiong w 2015 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "papers by Liwen Xiong from 2015",
        "question_pl": "artykuły autorstwa Liwen Xiong z 2015 r.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Papers published in 2015 by Liwen Xiong",
        "question_pl": "Artykuły opublikowane w 2015 roku przez Liwen Xiong",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "what has Liwen Xiong done in the past year",
        "question_pl": "Co Liwen Xiong zrobił w ciągu ostatniego roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "What papers did Liwen Xiong publish last year ?",
        "question_pl": "Jakie artykuły opublikował Liwen Xiong w zeszłym roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "papers published in 2015 by Liwen Xiong",
        "question_pl": "artykuły opublikowane w 2015 roku przez Liwen Xiong",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Liwen Xiong 's papers in 2015 ?",
        "question_pl": "Dokumenty Liwen Xiong w latach 2015 ?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Liwen Xiong 's papers in 2015",
        "question_pl": "Dokumenty Liwen Xiong w 2015 r.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Liwen Xiong publication 2015",
        "question_pl": "Publikacja Liwen Xiong 2015",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Papers authored by Liwen Xiong in 2015",
        "question_pl": "Publikacje, których autorem jest Liwen Xiong w 2015 r.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "Papers from Liwen Xiong in 2015",
        "question_pl": "Publikacje Liwen Xiong z 2015 r.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "what papers are published by Liwen Xiong in 2015",
        "question_pl": "Jakie artykuły zostały opublikowane przez Liwen Xiong w 2015 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "What TAIL paper published in NIPS ?",
        "question_pl": "Jaki artykuł TAIL został opublikowany w NIPS?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "List the papers on TAIL that were published in NIPS",
        "question_pl": "Wymień artykuły na temat TAIL, które zostały opublikowane w NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "what are the papers in NIPS about TAIL ?",
        "question_pl": "Jakie są artykuły w NIPS na temat TAIL?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers about TAIL in NIPS",
        "question_pl": "Artykuły na temat TAIL w NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "papers at NIPS related to TAIL",
        "question_pl": "artykuły w NIPS związane z TAIL",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "papers about TAIL published at NIPS",
        "question_pl": "artykuły o TAIL opublikowane w NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "TAIL papers in NIPS",
        "question_pl": "Artykuły TAIL w NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "papers on TAIL NIPS",
        "question_pl": "dokumenty dotyczące TAIL NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "TAIL papers used in NIPS",
        "question_pl": "Dokumenty TAIL używane w NIPS",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"OGON\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "How many co-authors has Mark Steedman had ?",
        "question_pl": "Ilu współautorów miał Mark Steedman?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"Mark Steedman\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Mark Steedman\" );",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"Mark Steedman\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Mark Steedman\" );"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases used by Christof Dallermassl in 2000",
        "question_pl": "frazy kluczowe używane przez Christofa Dallermassla w 2000 r.",
        "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
        "query_pl": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"
    },
    {
        "db_id": "scholar",
        "question": "Keyphrases used by Christof Dallermassl in 2000",
        "question_pl": "Frazy kluczowe używane przez Christofa Dallermassla w 2000 r.",
        "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
        "query_pl": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases Christof Dallermassl used in papers written last year",
        "question_pl": "fraz kluczowych używanych przez Christofa Dallermassla w artykułach napisanych w ubiegłym roku",
        "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
        "query_pl": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"
    },
    {
        "db_id": "scholar",
        "question": "What are keyphrases by Christof Dallermassl in 2000 ?",
        "question_pl": "Czym są frazy kluczowe według Christof Dallermassl w 2000 ?",
        "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
        "query_pl": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"
    },
    {
        "db_id": "scholar",
        "question": "what author is most cited ?",
        "question_pl": "Który autor jest najczęściej cytowany?",
        "query": "SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "journal articles by mohammad rastegari",
        "question_pl": "artykuły mohammada rastegari w czasopismach",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;"
    },
    {
        "db_id": "scholar",
        "question": "Journal Papers by mohammad rastegari",
        "question_pl": "Artykuły w czasopismach autorstwa mohammad rastegari",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;"
    },
    {
        "db_id": "scholar",
        "question": "best paper in TACL 2014 ?",
        "question_pl": "najlepszy artykuł w TACL 2014?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What was the best paper at TACL 2014 ?",
        "question_pl": "Jaki był najlepszy artykuł na TACL 2014?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published at acl 2016 ?",
        "question_pl": "Kto publikował na acl 2016?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "acl 2016 authors",
        "question_pl": "autorzy acl 2016",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "authors of acl 2016 papers",
        "question_pl": "autorzy artykułów na acl 2016",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "List of authors acl 2016",
        "question_pl": "Lista autorów acl 2016",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "author published acl 2016",
        "question_pl": "autor opublikował acl 2016",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "who had papers at acl 2016 ?",
        "question_pl": "Kto miał papiery na acl 2016?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "List of authors in acl 2016",
        "question_pl": "Lista autorów w acl 2016",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were written on Multiuser Receiver in the Decision Feedback this year ?",
        "question_pl": "Ile artykułów napisano w tym roku na temat Multiuser Receiver w Decision Feedback?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Multiuser Receiver in the Decision Feedback\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Odbiornik wieloużytkownikowy w decyzyjnym sprzężeniu zwrotnym\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers run experiments on ImageNet ?",
        "question_pl": "Ile artykułów przeprowadziło eksperymenty na ImageNet?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers used ImageNet dataset ?",
        "question_pl": "W ilu artykułach wykorzystano zbiór danych ImageNet?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers written on ImageNet ?",
        "question_pl": "Ile artykułów napisano na temat ImageNet?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers are based on ImageNet",
        "question_pl": "Ile artykułów opiera się na ImageNet",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers use ImageNet ?",
        "question_pl": "Ile artykułów korzysta z ImageNet?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers did Mirella Lapata cite ?",
        "question_pl": "Ile dokumentów zacytowała Mirella Lapata?",
        "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers does Mirella Lapata cite",
        "question_pl": "Ile dokumentów cytuje Mirella Lapata?",
        "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers has Mirella Lapata cited ?",
        "question_pl": "Ile artykułów zacytowała Mirella Lapata?",
        "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"
    },
    {
        "db_id": "scholar",
        "question": "When does Michael Stonebraker publish the first VLDB paper ?",
        "question_pl": "Kiedy Michael Stonebraker opublikował pierwszy artykuł VLDB?",
        "query": "SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "semantic parsing dataset",
        "question_pl": "zestaw danych parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "data sets for semantic parsing",
        "question_pl": "zestawy danych do parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "list datasets for semantic parsing",
        "question_pl": "zestawów danych dla parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets for semantic parsing",
        "question_pl": "zestawy danych do parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "Datasets with semantic parsing information",
        "question_pl": "Zestawy danych z informacjami o parsowaniu semantycznym",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets used by semantic parsing papers",
        "question_pl": "zbiory danych używane w dokumentach dotyczących parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets in semantic parsing papers",
        "question_pl": "zestawów danych w dokumentach dotyczących parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "semantic parsing datasets",
        "question_pl": "zbiory danych parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets in papers about semantic parsing",
        "question_pl": "zestawów danych w artykułach na temat parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets used for semantic parsing",
        "question_pl": "zbiory danych używane do parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "large-scale datasets used in semantic parsing",
        "question_pl": "wielkoskalowe zbiory danych wykorzystywane w parsowaniu semantycznym",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets with semantic parsing",
        "question_pl": "zbiory danych z parsowaniem semantycznym",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets used for evaluating semantic parsing",
        "question_pl": "zestawy danych używane do oceny parsowania semantycznego",
        "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"parsowanie semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "where does Peter Mertens publish ?",
        "question_pl": "Gdzie publikuje Peter Mertens?",
        "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
        "query_pl": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"
    },
    {
        "db_id": "scholar",
        "question": "in what venues does Peter Mertens publish ?",
        "question_pl": "W jakich miejscach publikuje Peter Mertens?",
        "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
        "query_pl": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"
    },
    {
        "db_id": "scholar",
        "question": "Where does Peter Mertens publish ?",
        "question_pl": "Gdzie publikuje Peter Mertens?",
        "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
        "query_pl": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers appeared at nature communications last year",
        "question_pl": "Ile artykułów ukazało się w Nature Communications w zeszłym roku?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were at nature communications 2015 ?",
        "question_pl": "Ile artykułów pojawiło się na Nature Communications 2015?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers accepted in nature communications 2015",
        "question_pl": "Ile artykułów zaakceptowano w Nature Communications 2015",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were published in nature communications in 2015 ?",
        "question_pl": "Ile artykułów zostało opublikowanych w Nature Communications w 2015 roku?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers on nature communications in 2015 ?",
        "question_pl": "Ile artykułów na temat komunikacji przyrodniczej ukazało się w 2015 roku?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers in nature communications 2015",
        "question_pl": "Ile artykułów w Nature Communications 2015",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were accepted at nature communications 2015 ?",
        "question_pl": "Ile artykułów zostało zaakceptowanych na Nature Communications 2015?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers are presented in nature communications 2015 ?",
        "question_pl": "Ile artykułów zostało zaprezentowanych w Nature Communications 2015?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers published in nature communications in 2015 ?",
        "question_pl": "Ile artykułów opublikowano w Nature Communications w 2015 roku?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers published in nature communications 2015 ?",
        "question_pl": "Ile artykułów zostało opublikowanych w Nature Communications 2015?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were published in nature communications 2015 conference ?",
        "question_pl": "Ile artykułów zostało opublikowanych na konferencji Nature Communications 2015?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers was published in nature communications in 2015",
        "question_pl": "Ile artykułów zostało opublikowanych w Nature Communications w 2015 roku?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"komunikacja przyrodnicza\";"
    },
    {
        "db_id": "scholar",
        "question": "what was the first deep learning paper ?",
        "question_pl": "Jaki był pierwszy artykuł na temat głębokiego uczenia?",
        "query": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;",
        "query_pl": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"głębokie uczenie\" ORDER BY t4.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "what year was the first deep learning paper published ?",
        "question_pl": "W którym roku opublikowano pierwszy artykuł na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;",
        "query_pl": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"głębokie uczenie\" ORDER BY t4.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "datasets mentioned at ACL",
        "question_pl": "zbiory danych wspomniane w ACL",
        "query": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "what datasets do papers at ACL use most ?",
        "question_pl": "Z jakich zbiorów danych najczęściej korzystają artykuły w ACL?",
        "query": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "the papers on semantic parsing by li dong at acl in 2016",
        "question_pl": "referaty na temat parsowania semantycznego autorstwa li donga na acl w 2016 r.",
        "query": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"li dong\" AND t3.keyphrasename  =  \"semantic parsing\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"li dong\" AND t3.keyphrasename  =  \"parsowanie semantyczne\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were written on convolutional neural networks in the past year ?",
        "question_pl": "Ile artykułów napisano na temat konwolucyjnych sieci neuronowych w ciągu ostatniego roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"konwolucyjne sieci neuronowe\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were published on convolutional neural networks in 2016 ?",
        "question_pl": "Ile artykułów opublikowano na temat konwolucyjnych sieci neuronowych w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"konwolucyjne sieci neuronowe\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were written on convolutional neural networks in 2016 ?",
        "question_pl": "Ile artykułów napisano na temat konwolucyjnych sieci neuronowych w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"konwolucyjne sieci neuronowe\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were written on the convolutional neural networks this year ?",
        "question_pl": "Ile artykułów na temat konwolucyjnych sieci neuronowych napisano w tym roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"konwolucyjne sieci neuronowe\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "how many papers on convolutional neural networks have been published in the past year ?",
        "question_pl": "Ile artykułów na temat konwolucyjnych sieci neuronowych zostało opublikowanych w ciągu ostatniego roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"konwolucyjne sieci neuronowe\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "What papers were written on question answering this year ?",
        "question_pl": "Jakie prace zostały napisane na temat odpowiadania na pytania w tym roku?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"odpowiadanie na pytania\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "which year had the most NIPS papers ?",
        "question_pl": "Który rok miał najwięcej artykułów NIPS?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what year had the most NIPS papers ?",
        "question_pl": "W którym roku opublikowano najwięcej artykułów NIPS?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what year had the most number of NIPS papers ?",
        "question_pl": "W którym roku ukazało się najwięcej artykułów NIPS?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "when were most NIPS papers published ?",
        "question_pl": "Kiedy opublikowano większość artykułów NIPS?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who writes papers with Noah A Smith ?",
        "question_pl": "Kto pisze artykuły z Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "Who is a coauthor with Noah A Smith ?",
        "question_pl": "Kto jest współautorem z Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "Who are Noah A Smith 's co-authors",
        "question_pl": "Kim są współautorzy Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "Who has coauthored with Noah A Smith ?",
        "question_pl": "Kto jest współautorem z Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "co-authors of Noah A Smith",
        "question_pl": "współautorzy Noah A Smith",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "author who wrote papers with Noah A Smith",
        "question_pl": "autor, który napisał artykuły z Noah A Smith",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "authors who collaborated with Noah A Smith",
        "question_pl": "Autorzy, którzy współpracowali z Noah A Smith",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "who does Noah A Smith author with ?",
        "question_pl": "Z kim współpracuje Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "Who are Noah A Smith 's coauthors",
        "question_pl": "Kim są współautorzy Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "who are all the co-authors of Noah A Smith ?",
        "question_pl": "Kim są wszyscy współautorzy Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "who does Noah A Smith work with ?",
        "question_pl": "Z kim współpracuje Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "who does Noah A Smith collaborate with ?",
        "question_pl": "Z kim współpracuje Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "Who are Noah A Smith 's coauthors ?",
        "question_pl": "Kim są współautorzy Noah A Smith?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "coauthors of Noah A Smith",
        "question_pl": "współautorzy Noah A Smith",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"
    },
    {
        "db_id": "scholar",
        "question": "what datasets did jitendra malik use ?",
        "question_pl": "Z jakich zestawów danych korzystał Jitendra Malik?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "what datasets are used in papers by jitendra malik",
        "question_pl": "Jakie zbiory danych są używane w artykułach jitendry malik?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "what datasets did jitendra malik use in his papers ?",
        "question_pl": "Jakich zestawów danych używał Jitendra Malik w swoich artykułach?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "what datasets were used by jitendra malik ?",
        "question_pl": "Z jakich zestawów danych korzystał jitendra malik?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "datasets used in papers written by jitendra malik ?",
        "question_pl": "zbiory danych użyte w artykułach napisanych przez jitendra malik?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "Datasets by jitendra malik",
        "question_pl": "Zbiory danych autorstwa jitendra malik",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "What datasets have jitendra malik used",
        "question_pl": "Z jakich zestawów danych korzystał jitendra malik?",
        "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
        "query_pl": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"
    },
    {
        "db_id": "scholar",
        "question": "recent deep learning papers",
        "question_pl": "najnowsze artykuły dotyczące uczenia głębokiego",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "new deep learning papers",
        "question_pl": "nowe artykuły dotyczące głębokiego uczenia",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What are the latest publications on deep learning ?",
        "question_pl": "Jakie są najnowsze publikacje na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Most recent deep learning conference ?",
        "question_pl": "Ostatnia konferencja poświęcona uczeniu głębokiemu ?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Show me some recent papers on deep learning ?",
        "question_pl": "Pokaż mi jakieś najnowsze artykuły na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What are some recent papers written in deep learning ?",
        "question_pl": "Jakie są najnowsze artykuły na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the most recent paper of deep learning ?",
        "question_pl": "Jaki jest najnowszy artykuł na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What are recent papers on deep learning ?",
        "question_pl": "Jakie są najnowsze artykuły na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Current research on deep learning",
        "question_pl": "Bieżące badania nad uczeniem głębokim",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "latest deep learning papers",
        "question_pl": "najnowsze artykuły dotyczące głębokiego uczenia",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "newest deep learning papers",
        "question_pl": "Najnowsze artykuły dotyczące głębokiego uczenia",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What years did Pedro Domingos publish papers in ?",
        "question_pl": "W jakich latach Pedro Domingos publikował swoje artykuły?",
        "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "In what years did Pedro Domingos publish a paper ?",
        "question_pl": "W których latach Pedro Domingos opublikował artykuł?",
        "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "jamie callan 's publications by year",
        "question_pl": "publikacje jamiego callana według lat",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does jamie callan publish each year ?",
        "question_pl": "Ile artykułów publikuje Jamie Callan każdego roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "number of papers by year from jamie callan",
        "question_pl": "liczba publikacji jamiego callana według roku",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "how many papers jamie callan published each year ?",
        "question_pl": "Ile artykułów publikuje Jamie Callan każdego roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "who does oren etzioni cite",
        "question_pl": "na kogo powołuje się oren etzioni",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";"
    },
    {
        "db_id": "scholar",
        "question": "what papers does oren etzioni cite",
        "question_pl": "jakie dokumenty cytuje oren etzioni",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";"
    },
    {
        "db_id": "scholar",
        "question": "papers citing Daniel Jurafsky",
        "question_pl": "dokumenty powołujące się na Daniel Jurafsky",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers cite Daniel Jurafsky ?",
        "question_pl": "Jakie dokumenty cytują Daniela Jurafsky'ego?",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"
    },
    {
        "db_id": "scholar",
        "question": "Which papers cite Daniel Jurafsky ?",
        "question_pl": "Które artykuły cytują Daniela Jurafsky'ego?",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"
    },
    {
        "db_id": "scholar",
        "question": "citations for Daniel Jurafsky",
        "question_pl": "Cytaty dla Daniela Jurafsky'ego",
        "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"
    },
    {
        "db_id": "scholar",
        "question": "journal papers for instance segmentation",
        "question_pl": "artykuły w czasopismach dotyczące segmentacji instancji",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"instance segmentation\" AND t3.journalid  >=  0;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"segmentacja instancji\" AND t3.journalid  >=  0;"
    },
    {
        "db_id": "scholar",
        "question": "who has the most papers in semantic parsing after 2005 ?",
        "question_pl": "Kto ma najwięcej artykułów na temat parsowania semantycznego po 2005 roku?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie semantyczne\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who has written the most papers on semantic parsing since 2005 ?",
        "question_pl": "Kto napisał najwięcej artykułów na temat parsowania semantycznego od 2005 roku?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie semantyczne\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published the most in semantic parsing after 2005 ?",
        "question_pl": "Kto opublikował najwięcej na temat parsowania semantycznego po 2005 roku?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"parsowanie semantyczne\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many citations does Dan Makumbi 's Genetic Identity paper have ?",
        "question_pl": "Ile cytowań ma artykuł Dana Makumbi o tożsamości genetycznej?",
        "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Dan Makumbi\" AND t3.keyphrasename  =  \"Genetic Identity\";",
        "query_pl": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Dan Makumbi\" AND t3.keyphrasename  =  \"Tożsamość genetyczna\";"
    },
    {
        "db_id": "scholar",
        "question": "character recognition papers earlier than 2010",
        "question_pl": "dokumenty dotyczące rozpoznawania znaków sprzed 2010 r.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"rozpoznawanie znaków\" AND t3.year  <  2010;"
    },
    {
        "db_id": "scholar",
        "question": "papers before 2010 about character recognition",
        "question_pl": "artykułów sprzed 2010 roku na temat rozpoznawania znaków",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"rozpoznawanie znaków\" AND t3.year  <  2010;"
    },
    {
        "db_id": "scholar",
        "question": "character recognition papers from before 2010",
        "question_pl": "dokumenty dotyczące rozpoznawania znaków sprzed 2010 r.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"rozpoznawanie znaków\" AND t3.year  <  2010;"
    },
    {
        "db_id": "scholar",
        "question": "papers about character recognition from before 2010",
        "question_pl": "artykuły na temat rozpoznawania znaków sprzed 2010 roku",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"rozpoznawanie znaków\" AND t3.year  <  2010;"
    },
    {
        "db_id": "scholar",
        "question": "character recognition papers before 2010",
        "question_pl": "dokumenty dotyczące rozpoznawania znaków przed 2010 r.",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"rozpoznawanie znaków\" AND t3.year  <  2010;"
    },
    {
        "db_id": "scholar",
        "question": "what topics does oren etzioni write about most ?",
        "question_pl": "o jakich tematach najczęściej pisze oren etzioni?",
        "query": "SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers related to deep learning cited the dataset ImageNet ?",
        "question_pl": "W ilu artykułach związanych z uczeniem głębokim cytowano zbiór danych ImageNet?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"deep learning\";",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"głębokie uczenie\";"
    },
    {
        "db_id": "scholar",
        "question": "most cited papers on parsing",
        "question_pl": "najczęściej cytowane artykuły na temat parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "parsing top papers",
        "question_pl": "analizowanie najlepszych dokumentów",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "List top papers for parsing",
        "question_pl": "Lista najlepszych dokumentów do parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "parsing papers that have the most citations",
        "question_pl": "analizowanie artykułów, które mają najwięcej cytowań",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the paper about parsing of the most citation ?",
        "question_pl": "Jaki jest artykuł o parsowaniu większości cytowań?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Paper on parsing with most citations",
        "question_pl": "Artykuł na temat parsowania z największą liczbą cytowań",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "parsing papers with most citations",
        "question_pl": "analizowanie dokumentów z największą liczbą cytowań",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most cited parsing papers",
        "question_pl": "najczęściej cytowane artykuły dotyczące parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what are the parsing papers that have the most citations ?",
        "question_pl": "Jakie artykuły dotyczące parsowania mają najwięcej cytowań?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "highly cited parsing papers",
        "question_pl": "najczęściej cytowane artykuły dotyczące parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most cited papers for parsing",
        "question_pl": "najczęściej cytowane artykuły dotyczące parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Most cited papers on parsing",
        "question_pl": "Najczęściej cytowane artykuły na temat parsowania",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsowanie\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What paper did Michael Armstrong wrote in the 90s ?",
        "question_pl": "Jaką pracę napisał Michael Armstrong w latach 90-tych?",
        "query": "SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Michael Armstrong\" AND t3.year LIKE \"199\";",
        "query_pl": "SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Michael Armstrong\" AND t3.year LIKE \"199\";"
    },
    {
        "db_id": "scholar",
        "question": "What is the most cited paper by ohad shamir ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł autorstwa ohada shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the highest cited paper by ohad shamir ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł Ohada Shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the most cited paper of ohad shamir ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł Ohada Shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is ohad shamir 's highest cited paper ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł Ohada Shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What paper by ohad shamir has the most citation ?",
        "question_pl": "Który artykuł Ohada Shamira ma najwięcej cytowań?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what is the most cited paper of ohad shamir ?",
        "question_pl": "Jaka jest najczęściej cytowana praca ohada shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what is ohad shamir 's most cited paper ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł ohada shamira?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers did michael i. jordan publish in 2016 ?",
        "question_pl": "Ile artykułów opublikował Michael I. Jordan w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does michael i. jordan have in 2016 ?",
        "question_pl": "Ile dokumentów ma Michael I. Jordan w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers did michael i. jordan publish in 2016",
        "question_pl": "Ile artykułów opublikował Michael I. Jordan w 2016 roku?",
        "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "count of ACL papers by author",
        "question_pl": "Liczba artykułów ACL według autora",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
    },
    {
        "db_id": "scholar",
        "question": "how many ACL papers by author",
        "question_pl": "Ile artykułów ACL według autora",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
    },
    {
        "db_id": "scholar",
        "question": "number of ACL papers by author",
        "question_pl": "Liczba artykułów ACL według autora",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
    },
    {
        "db_id": "scholar",
        "question": "who wrote the most papers for CVPR 2007",
        "question_pl": "Kto napisał najwięcej artykułów na CVPR 2007",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published papers in CVPR 2007",
        "question_pl": "którzy opublikowali artykuły w CVPR 2007",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who wrote the most CVPR papers in 2007",
        "question_pl": "kto napisał najwięcej artykułów CVPR w 2007 roku",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most published author at CVPR 2007",
        "question_pl": "najczęściej publikowany autor na CVPR 2007",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published the most papers in CVPR 2007",
        "question_pl": "Kto opublikował najwięcej artykułów w CVPR 2007",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Who published the most papers in 2007 at CVPR ?",
        "question_pl": "Kto opublikował najwięcej artykułów w CVPR w 2007 roku?",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers in ACL 2015 ?",
        "question_pl": "Ile artykułów w ACL 2015?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "number of papers published in ACL 2015",
        "question_pl": "Liczba artykułów opublikowanych w ACL 2015",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "papers from 2014",
        "question_pl": "dokumenty z 2014 r.",
        "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
    },
    {
        "db_id": "scholar",
        "question": "2014 papers",
        "question_pl": "2014 dokumenty",
        "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
    },
    {
        "db_id": "scholar",
        "question": "What papers does Richard Ladner have in chi ?",
        "question_pl": "Jakie papiery ma Richard Ladner w chi?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "what paper has Richard Ladner published in chi journal ?",
        "question_pl": "Jaki artykuł opublikował Richard Ladner w czasopiśmie chi?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "what paper has Richard Ladner published in chi ?",
        "question_pl": "Jaki artykuł Richard Ladner opublikował w chi?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers by Richard Ladner published at chi",
        "question_pl": "artykuły Richarda Ladnera opublikowane w chi",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Does Richard Ladner publish in chi ?",
        "question_pl": "Czy Richard Ladner publikuje w chi ?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "What has Richard Ladner published at chi ?",
        "question_pl": "Co Richard Ladner opublikował w chi ?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers has Richard Ladner written at chi ?",
        "question_pl": "Jakie prace napisał Richard Ladner w chi ?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "Which paper did Richard Ladner present at chi ?",
        "question_pl": "Który referat Richard Ladner zaprezentował na chi?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"
    },
    {
        "db_id": "scholar",
        "question": "What is the paper with the most citation about Artificial Intelligence ?",
        "question_pl": "Jaki jest artykuł z największą liczbą cytowań na temat sztucznej inteligencji?",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Sztuczna inteligencja\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Fetch me the most cited publications for Artificial Intelligence",
        "question_pl": "Pobierz najczęściej cytowane publikacje dotyczące sztucznej inteligencji",
        "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Sztuczna inteligencja\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "topics at ACL 2014",
        "question_pl": "tematy na ACL 2014",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most common topics at NIPS 2015",
        "question_pl": "Najpopularniejsze tematy na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "most popular topics at NIPS 2015",
        "question_pl": "Najpopularniejsze tematy na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "hot topics at NIPS 2015",
        "question_pl": "Gorące tematy na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "popular topics at NIPS 2015",
        "question_pl": "Popularne tematy na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "which topics were most popular at NIPS 2015",
        "question_pl": "Które tematy były najbardziej popularne na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "topics popular at NIPS 2015",
        "question_pl": "Tematy popularne na NIPS 2015",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers related to deep reinforcement learning in nips ?",
        "question_pl": "Ile artykułów dotyczy głębokiego uczenia ze wzmocnieniem w nips?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep reinforcement learning\" AND t4.venuename  =  \"nips\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"głębokie uczenie ze wzmocnieniem\" AND t4.venuename  =  \"końcówki\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers on WebKB",
        "question_pl": "Dokumenty na WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "which papers used WebKB ?",
        "question_pl": "Które dokumenty korzystały z WebKB?",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "papers about WebKB",
        "question_pl": "Dokumenty dotyczące WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "List the papers that used WebKB dataset",
        "question_pl": "Wymień artykuły, w których wykorzystano zbiór danych WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "papers using WebKB",
        "question_pl": "dokumenty przy użyciu WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "papers that use WebKB",
        "question_pl": "Dokumenty korzystające z WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "WebKB papers",
        "question_pl": "Dokumenty WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "papers that used WebKB",
        "question_pl": "artykuły, w których wykorzystano WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers that use the WebKB dataset",
        "question_pl": "Artykuły korzystające ze zbioru danych WebKB",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
    },
    {
        "db_id": "scholar",
        "question": "conferences in 2013",
        "question_pl": "konferencje w 2013 r.",
        "query": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;",
        "query_pl": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;"
    },
    {
        "db_id": "scholar",
        "question": "how is the most cited author in CVPR ?",
        "question_pl": "Jaki jest najczęściej cytowany autor w CVPR?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who is the most cited author at CVPR ?",
        "question_pl": "Kto jest najczęściej cytowanym autorem w CVPR?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "what are some syntactic parsing papers that chris dyer did not write ?",
        "question_pl": "Jakie są artykuły na temat parsowania składniowego, których nie napisał Chris Dyer?",
        "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
        "query_pl": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris Dyer\" AND t5.keyphrasename  =  \"parsowanie składniowe\";"
    },
    {
        "db_id": "scholar",
        "question": "are there any syntactic parsing papers not written by chris dyer ?",
        "question_pl": "Czy są jakieś artykuły na temat parsowania składniowego, które nie zostały napisane przez Chrisa Dyera?",
        "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
        "query_pl": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris Dyer\" AND t5.keyphrasename  =  \"parsowanie składniowe\";"
    },
    {
        "db_id": "scholar",
        "question": "what are syntactic parsing papers not written by chris dyer",
        "question_pl": "Czym są dokumenty dotyczące parsowania składniowego, których nie napisał Chris Dyer?",
        "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
        "query_pl": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris Dyer\" AND t5.keyphrasename  =  \"parsowanie składniowe\";"
    },
    {
        "db_id": "scholar",
        "question": "syntactic parsing papers not written by chris dyer",
        "question_pl": "dokumenty dotyczące parsowania składniowego, których autorem nie jest Chris Dyer",
        "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
        "query_pl": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris Dyer\" AND t5.keyphrasename  =  \"parsowanie składniowe\";"
    },
    {
        "db_id": "scholar",
        "question": "papers published in the last year",
        "question_pl": "artykułów opublikowanych w ciągu ostatniego roku",
        "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );"
    },
    {
        "db_id": "scholar",
        "question": "When was benjamin mako hill 's first publication ?",
        "question_pl": "Kiedy miała miejsce pierwsza publikacja Benjamina Mako Hilla?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "When was benjamin mako hill 's first paper written ?",
        "question_pl": "Kiedy powstała pierwsza praca Benjamina Mako Hilla?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "When did ameet soni publish ?",
        "question_pl": "Kiedy ameet soni opublikował ?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ameet soni\" GROUP BY t3.year ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ameet soni\" GROUP BY t3.year ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "Who cites Daniel A Reed the most",
        "question_pl": "Kto najczęściej cytuje Daniela A. Reeda?",
        "query": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Who cites Daniel A Reed most ?",
        "question_pl": "Kto najczęściej cytuje Daniela A. Reeda?",
        "query": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "how many papers are in sigir ?",
        "question_pl": "Ile dokumentów znajduje się w sigir?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers does sigir have ?",
        "question_pl": "Ile dokumentów posiada Sigir?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers are published in sigir ?",
        "question_pl": "Ile artykułów zostało opublikowanych w sigir?",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
    },
    {
        "db_id": "scholar",
        "question": "number of papers in sigir conference",
        "question_pl": "liczba referatów na konferencji sigir",
        "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
        "query_pl": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
    },
    {
        "db_id": "scholar",
        "question": "what papers have fewer than 5 citations by ACL papers ?",
        "question_pl": "Jakie artykuły mają mniej niż 5 cytowań przez artykuły ACL?",
        "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
        "query_pl": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
    },
    {
        "db_id": "scholar",
        "question": "ACL papers with less than 5 citations",
        "question_pl": "Artykuły ACL z mniej niż 5 cytowaniami",
        "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
        "query_pl": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
    },
    {
        "db_id": "scholar",
        "question": "what ACL papers have less than 5 citations ?",
        "question_pl": "Jakie artykuły ACL mają mniej niż 5 cytowań?",
        "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
        "query_pl": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
    },
    {
        "db_id": "scholar",
        "question": "what papers have fewer than 5 citations by ACL papers",
        "question_pl": "Jakie artykuły mają mniej niż 5 cytowań przez artykuły ACL",
        "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
        "query_pl": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
    },
    {
        "db_id": "scholar",
        "question": "What are the 5 most recent papers of Mirella Lapata ?",
        "question_pl": "Jakie są 5 najnowszych prac Mirelli Lapaty?",
        "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mirella Lapata\" ORDER BY t3.year DESC LIMIT 5;",
        "query_pl": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mirella Lapata\" ORDER BY t3.year DESC LIMIT 5;"
    },
    {
        "db_id": "scholar",
        "question": "What were the papers published at pldi 2015 ?",
        "question_pl": "Jakie artykuły zostały opublikowane na pldi 2015?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers from pldi 2015 conference",
        "question_pl": "Artykuły z konferencji pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers published at pldi 2015",
        "question_pl": "artykuły opublikowane na pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "What are the papers from pldi 2015 ?",
        "question_pl": "Jakie są dokumenty z pldi 2015?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "Papers from pldi 2015 ?",
        "question_pl": "Dokumenty z pldi 2015 ?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "Which papers were accepted in pldi 2015 ?",
        "question_pl": "Które artykuły zostały zaakceptowane w pldi 2015?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "What papers were published during the conference pldi 2015 ?",
        "question_pl": "Jakie artykuły zostały opublikowane podczas konferencji pldi 2015?",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers in pldi 2015",
        "question_pl": "dokumenty w pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "List of papers in pldi 2015",
        "question_pl": "Lista referatów w pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "pldi papers in 2015",
        "question_pl": "dokumenty pldi w 2015 r.",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "what papers are published in pldi 2015",
        "question_pl": "Jakie artykuły zostały opublikowane w pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "papers from pldi 2015",
        "question_pl": "dokumenty z pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "pldi papers 2015",
        "question_pl": "dokumenty pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "pldi 2015 conference",
        "question_pl": "konferencja pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "pldi best paper award 2015",
        "question_pl": "pldi nagroda za najlepszy artykuł 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "pldi 2015 list of papers",
        "question_pl": "lista dokumentów pldi 2015",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
    },
    {
        "db_id": "scholar",
        "question": "List today 's journals",
        "question_pl": "Wymień dzisiejsze czasopisma",
        "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
        "query_pl": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
    },
    {
        "db_id": "scholar",
        "question": "List the journals published in March , 2011",
        "question_pl": "Wymień czasopisma opublikowane w marcu 2011 r.",
        "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
        "query_pl": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
    },
    {
        "db_id": "scholar",
        "question": "ACL papers in 2016 with neural attention in the title",
        "question_pl": "Artykuły ACL w 2016 roku z neural attention w tytule",
        "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"neural attention\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"neural attention\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "Who writes a lot of papers in Machine Learning ?",
        "question_pl": "Kto pisze dużo artykułów na temat uczenia maszynowego?",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"Machine Learning\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"Uczenie maszynowe\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Who wrote sensor fusion ?",
        "question_pl": "Kto napisał fuzję czujników?",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"fuzja czujników\";"
    },
    {
        "db_id": "scholar",
        "question": "Authors of papers on sensor fusion",
        "question_pl": "Autorzy artykułów na temat fuzji czujników",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"fuzja czujników\";"
    },
    {
        "db_id": "scholar",
        "question": "people working on sensor fusion",
        "question_pl": "osób pracujących nad fuzją czujników",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"fuzja czujników\";"
    },
    {
        "db_id": "scholar",
        "question": "Who publishes in sensor fusion ?",
        "question_pl": "Kto publikuje w dziedzinie fuzji czujników?",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"fuzja czujników\";"
    },
    {
        "db_id": "scholar",
        "question": "who publishes papers about sensor fusion",
        "question_pl": "kto publikuje artykuły na temat fuzji czujników",
        "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
        "query_pl": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"fuzja czujników\";"
    },
    {
        "db_id": "scholar",
        "question": "how many papers by dan klein are cited by michael i. jordan",
        "question_pl": "ile artykułów autorstwa dana kleina jest cytowanych przez michaela i. jordana?",
        "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";",
        "query_pl": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";"
    },
    {
        "db_id": "scholar",
        "question": "how many of dan klein 's papers cite michael i. jordan",
        "question_pl": "w ilu artykułach dan klein cytuje michaela i. jordana?",
        "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";",
        "query_pl": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";"
    },
    {
        "db_id": "scholar",
        "question": "who else was on the paper with Ameet Soni and Ras Bodik ?",
        "question_pl": "Kto jeszcze był na tapecie razem z Ameet Soni i Ras Bodik?",
        "query": "SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Ameet Soni\" AND t1.authorname  =  \"Ras Bodik\";",
        "query_pl": "SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Ameet Soni\" AND t1.authorname  =  \"Ras Bodik\";"
    },
    {
        "db_id": "scholar",
        "question": "2014 papers using ImageNet",
        "question_pl": "Artykuły z 2014 roku wykorzystujące ImageNet",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;"
    },
    {
        "db_id": "scholar",
        "question": "What journals are Takashi Matsumoto 's articles published in ?",
        "question_pl": "W jakich czasopismach publikowane są artykuły Takashi Matsumoto?",
        "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "What journals has Takashi Matsumoto published in ?",
        "question_pl": "W jakich czasopismach publikował Takashi Matsumoto?",
        "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "In what scholarly journals does Takashi Matsumoto publish ?",
        "question_pl": "W jakich czasopismach naukowych publikuje Takashi Matsumoto?",
        "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "What authors wrote papers about Bacterial Wilt in 2016 ?",
        "question_pl": "Jacy autorzy napisali artykuły o więdnięciu bakteryjnym w 2016 roku?",
        "query": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Więdnięcie bakteryjne\" AND t4.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "Who wrote on the topic of Bacterial Wilt in 2016 ?",
        "question_pl": "Kto pisał na temat więdnięcia bakteryjnego w 2016 roku?",
        "query": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Więdnięcie bakteryjne\" AND t4.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "When did Luke S Zettlemoyer publish ?",
        "question_pl": "Kiedy Luke S Zettlemoyer opublikował ?",
        "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year;",
        "query_pl": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "question answering 2016 papers",
        "question_pl": "Odpowiedzi na pytania 2016",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"odpowiadanie na pytania\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "What papers were written on question answering in 2016 ?",
        "question_pl": "Jakie artykuły zostały napisane na temat odpowiadania na pytania w 2016 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"odpowiadanie na pytania\" AND t3.year  =  2016;"
    },
    {
        "db_id": "scholar",
        "question": "what keyphrases get most citations ?",
        "question_pl": "Jakie frazy kluczowe uzyskują najwięcej cytowań?",
        "query": "SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Find journals about Temporal Data .",
        "question_pl": "Znajdź czasopisma o Temporal Data .",
        "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Dane czasowe\" GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "List the journals related to Temporal Data",
        "question_pl": "Lista czasopism związanych z Temporal Data",
        "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Dane czasowe\" GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "which ACL 2014 papers about Parsing used Jeopardy! Questions ?",
        "question_pl": "W których artykułach ACL 2014 na temat parsowania użyto Jeopardy! Questions?",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Pytania Jeopardy\" AND t1.keyphrasename  =  \"Parsowanie\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "Parsing papers using Jeopardy! Questions published at ACL 2014",
        "question_pl": "Analizuj artykuły za pomocą Jeopardy! Pytania opublikowane na ACL 2014",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Pytania Jeopardy\" AND t1.keyphrasename  =  \"Parsowanie\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "Parsing papers from ACL 2014 using Jeopardy! Questions",
        "question_pl": "Parsowanie artykułów z ACL 2014 przy użyciu Jeopardy! Pytania",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Pytania Jeopardy\" AND t1.keyphrasename  =  \"Parsowanie\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "Parsing papers from ACL 2014 that used Jeopardy! Questions",
        "question_pl": "Parsowanie artykułów z ACL 2014, w których użyto Jeopardy! Pytania",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Pytania Jeopardy\" AND t1.keyphrasename  =  \"Parsowanie\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "papers about Parsing that used Jeopardy! Questions and were published at ACL 2014",
        "question_pl": "artykuły na temat parsowania, w których wykorzystano pytania Jeopardy! Questions i zostały opublikowane na ACL 2014",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Pytania Jeopardy\" AND t1.keyphrasename  =  \"Parsowanie\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "in what journals does linda shapiro publish ?",
        "question_pl": "W jakich czasopismach publikuje Linda shapiro?",
        "query": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";",
        "query_pl": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";"
    },
    {
        "db_id": "scholar",
        "question": "Which journals did linda shapiro submit papers to ?",
        "question_pl": "Do jakich czasopism Linda shapiro składała artykuły?",
        "query": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";",
        "query_pl": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";"
    },
    {
        "db_id": "scholar",
        "question": "NIPS authors",
        "question_pl": "Autorzy NIPS",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "who are the authors at NIPS ?",
        "question_pl": "Kim są autorzy w NIPS?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "who authored papers at NIPS ?",
        "question_pl": "kto jest autorem artykułów na NIPS?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "who publishes in NIPS ?",
        "question_pl": "Kto publikuje w NIPS?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "who has papers at NIPS ?",
        "question_pl": "Kto ma artykuły w NIPS?",
        "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "which venue publishes the most papers about deep learning",
        "question_pl": "które miejsce publikuje najwięcej artykułów na temat uczenia głębokiego",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"głębokie uczenie\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many publications were added to the Cell journal this year ?",
        "question_pl": "Ile publikacji zostało dodanych do czasopisma Cell w tym roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Komórka\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "How many articles were published in the Cell journal in 2015 ?",
        "question_pl": "Ile artykułów zostało opublikowanych w czasopiśmie Cell w 2015 roku?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Komórka\" AND t3.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "What are all the publication titles by Donald E Knuth ?",
        "question_pl": "Jakie są wszystkie tytuły publikacji Donalda E Knutha?",
        "query": "SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\";",
        "query_pl": "SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\";"
    },
    {
        "db_id": "scholar",
        "question": "papers published in eccv 2016 by ali farhadi",
        "question_pl": "artykuły opublikowane w eccv 2016 przez ali farhadi",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "Does ali farhadi have a paper in eccv in 2016 ?",
        "question_pl": "Czy ali farhadi ma artykuł w eccv w 2016 roku?",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "papers of ali farhadi in eccv 2016",
        "question_pl": "dokumenty ali farhadiego w eccv 2016",
        "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "What are some papers dealing with Semantic Data in YAGO ?",
        "question_pl": "Jakie są artykuły dotyczące danych semantycznych w YAGO?",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"Semantic Data\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"Dane semantyczne\";"
    },
    {
        "db_id": "scholar",
        "question": "Who has published more papers in chi ?",
        "question_pl": "Kto opublikował więcej artykułów w chi?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "Who has written the most papers at chi ?",
        "question_pl": "Kto napisał najwięcej prac na chi?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "how is the most prolific author in chi ?",
        "question_pl": "Jaki jest najbardziej płodny autor w chi?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "who published the most at chi",
        "question_pl": "kto opublikował najwięcej w chi",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "In what year did Ye Cao publish the most papers",
        "question_pl": "W którym roku Ye Cao opublikował najwięcej artykułów?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What year did Ye Cao publish the most papers",
        "question_pl": "W którym roku Ye Cao opublikował najwięcej artykułów?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "conferences that mention ImageNet",
        "question_pl": "konferencje wspominające ImageNet",
        "query": "SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";"
    },
    {
        "db_id": "scholar",
        "question": "first deep learning paper",
        "question_pl": "pierwszy artykuł na temat uczenia głębokiego",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" GROUP BY t3.year ORDER BY t3.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "What was the first paper on deep learning written ?",
        "question_pl": "Jaki był pierwszy artykuł na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" GROUP BY t3.year ORDER BY t3.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "When was deep learning proposed ?",
        "question_pl": "Kiedy zaproponowano uczenie głębokie?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" GROUP BY t3.year ORDER BY t3.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "when was the first deep learning paper published ?",
        "question_pl": "Kiedy opublikowano pierwszy artykuł na temat uczenia głębokiego?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"głębokie uczenie\" GROUP BY t3.year ORDER BY t3.year ASC;"
    },
    {
        "db_id": "scholar",
        "question": "what papers were published in Academic radiology in 1995 ?",
        "question_pl": "Jakie artykuły zostały opublikowane w Academic radiology w 1995 roku?",
        "query": "SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"Academic radiology\" AND t2.year  =  1995;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"Radiologia akademicka\" AND t2.year  =  1995;"
    },
    {
        "db_id": "scholar",
        "question": "what papers do parsing papers typically cite ?",
        "question_pl": "Jakie dokumenty są zazwyczaj cytowane w artykułach dotyczących parsowania?",
        "query": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";",
        "query_pl": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsowanie\";"
    },
    {
        "db_id": "scholar",
        "question": "papers typically cited by parsing papers",
        "question_pl": "dokumenty zwykle cytowane przez dokumenty analizujące",
        "query": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";",
        "query_pl": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsowanie\";"
    },
    {
        "db_id": "scholar",
        "question": "venue for Trophic Cascade",
        "question_pl": "Miejsce dla kaskady troficznej",
        "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Kaskada troficzna\";"
    },
    {
        "db_id": "scholar",
        "question": "conferences for Trophic Cascade",
        "question_pl": "Konferencje dotyczące kaskady troficznej",
        "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Kaskada troficzna\";"
    },
    {
        "db_id": "scholar",
        "question": "what conferences are related to Trophic Cascade",
        "question_pl": "Jakie konferencje są związane z kaskadą troficzną?",
        "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Kaskada troficzna\";"
    },
    {
        "db_id": "scholar",
        "question": "What was the conference name that approved Trophic Cascade ?",
        "question_pl": "Jaka była nazwa konferencji, która zatwierdziła Trophic Cascade?",
        "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
        "query_pl": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Kaskada troficzna\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers were written on question answering in 2011 through 2016 ?",
        "question_pl": "Ile artykułów napisano na temat odpowiadania na pytania w latach 2011-2016?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  >=  2011;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"odpowiadanie na pytania\" AND t3.year  >=  2011;"
    },
    {
        "db_id": "scholar",
        "question": "What are the best NLP conferences ?",
        "question_pl": "Jakie są najlepsze konferencje NLP?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "ACL papers by author",
        "question_pl": "Artykuły ACL według autora",
        "query": "SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";",
        "query_pl": "SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";"
    },
    {
        "db_id": "scholar",
        "question": "papers with more than 10 citations",
        "question_pl": "artykuły z więcej niż 10 cytowaniami",
        "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;",
        "query_pl": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;"
    },
    {
        "db_id": "scholar",
        "question": "Which authors published papers in 2015 ?",
        "question_pl": "Którzy autorzy opublikowali artykuły w 2015 roku?",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "who wrote papers in 2015",
        "question_pl": "którzy napisali prace w 2015 roku",
        "query": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;",
        "query_pl": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"
    },
    {
        "db_id": "scholar",
        "question": "what keyphrase does Brian DeRenzi write about that gets most citations ?",
        "question_pl": "Na jakie hasło kluczowe Brian DeRenzi pisze najwięcej cytowań?",
        "query": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",
        "query_pl": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "main topics of work by Brian DeRenzi",
        "question_pl": "główne tematy prac Briana DeRenzi",
        "query": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",
        "query_pl": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "authors with at least 5 papers",
        "question_pl": "autorów z co najmniej 5 artykułami",
        "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;"
    },
    {
        "db_id": "scholar",
        "question": "papers that were not published in the last year",
        "question_pl": "artykuły, które nie zostały opublikowane w ciągu ostatniego roku",
        "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;",
        "query_pl": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;"
    },
    {
        "db_id": "scholar",
        "question": "When was Michael Stonebraker GIS Database published ?",
        "question_pl": "Kiedy opublikowano bazę danych GIS Michaela Stonebrakera?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"Baza danych GIS\";"
    },
    {
        "db_id": "scholar",
        "question": "When did Michael Stonebraker publish his GIS Database paper ?",
        "question_pl": "Kiedy Michael Stonebraker opublikował swój artykuł na temat bazy danych GIS?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"Baza danych GIS\";"
    },
    {
        "db_id": "scholar",
        "question": "When does Michael Stonebraker publish the GIS Database paper ?",
        "question_pl": "Kiedy Michael Stonebraker opublikuje dokument dotyczący bazy danych GIS?",
        "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
        "query_pl": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"Baza danych GIS\";"
    },
    {
        "db_id": "scholar",
        "question": "In 2010 what journal published an article about Trophic Cascade ?",
        "question_pl": "W 2010 roku jakie czasopismo opublikowało artykuł na temat kaskady troficznej?",
        "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\" AND t3.year  =  2010 GROUP BY t3.journalid;",
        "query_pl": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Kaskada troficzna\" AND t3.year  =  2010 GROUP BY t3.journalid;"
    },
    {
        "db_id": "scholar",
        "question": "What is the most popular paper this year in CVPR ?",
        "question_pl": "Jaki jest najpopularniejszy artykuł w CVPR w tym roku?",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many citations does luke zettlemoyer have per year",
        "question_pl": "Ile cytowań rocznie ma luke zettlemoyer?",
        "query": "SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"luke zettlemoyer\" GROUP BY t3.year;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"luke zettlemoyer\" GROUP BY t3.year;"
    },
    {
        "db_id": "scholar",
        "question": "authors working on ImageNet",
        "question_pl": "autorów pracujących nad ImageNet",
        "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;"
    },
    {
        "db_id": "scholar",
        "question": "What articles have been published since 2006 about the effects of juicing for cancer patients ?",
        "question_pl": "Jakie artykuły zostały opublikowane od 2006 roku na temat skutków picia soków przez pacjentów chorych na raka?",
        "query": "SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"the effects of juicing for cancer patients\" AND YEAR  >  2006;",
        "query_pl": "SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"skutki picia soków przez pacjentów chorych na raka\" AND YEAR  >  2006;"
    },
    {
        "db_id": "scholar",
        "question": "Eric C. Kerrigan 's Liquid Automatica paper",
        "question_pl": "Papier Liquid Automatica Erica C. Kerrigana",
        "query": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";",
        "query_pl": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Płyn\" AND t6.venuename  =  \"Automatica\";"
    },
    {
        "db_id": "scholar",
        "question": "Where did sergey levine publish his last paper ?",
        "question_pl": "Gdzie Sergey Levine opublikował swój ostatni artykuł?",
        "query": "SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"sergey levine\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"sergey levine\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "keyphrases used by dan klein in his emnlp papers",
        "question_pl": "frazy kluczowe używane przez dan klein w jego dokumentach emnlp",
        "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"dan klein\" AND t4.venuename  =  \"emnlp\";",
        "query_pl": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"dan klein\" AND t4.venuename  =  \"emnlp\";"
    },
    {
        "db_id": "scholar",
        "question": "Who are the prominent researchers in Neutralizing Antibody in 2012 ?",
        "question_pl": "Kim są wybitni badacze w dziedzinie przeciwciał neutralizujących w 2012 roku?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"Neutralizing Antibody\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"Przeciwciało neutralizujące\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "the papers at eccv in 2014 using ImageNet dataset",
        "question_pl": "referaty na eccv w 2014 roku z wykorzystaniem zbioru danych ImageNet",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "which papers in eccv 2014 use ImageNet ?",
        "question_pl": "Które artykuły z eccv 2014 wykorzystują ImageNet?",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "eccv 2014 papers using ImageNet",
        "question_pl": "Dokumenty eccv 2014 wykorzystujące ImageNet",
        "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
        "query_pl": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
    },
    {
        "db_id": "scholar",
        "question": "Euclidean Distance papers citing NIPS papers",
        "question_pl": "Artykuły dotyczące odległości euklidesowej cytujące artykuły NIPS",
        "query": "SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Euclidean Distance\" AND t4.venuename  =  \"NIPS\";",
        "query_pl": "SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Odległość euklidesowa\" AND t4.venuename  =  \"NIPS\";"
    },
    {
        "db_id": "scholar",
        "question": "top authors working on ImageNet ?",
        "question_pl": "najlepsi autorzy pracujący nad ImageNet?",
        "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "how many ACL 2012 papers have more than 7 citations ?",
        "question_pl": "Ile artykułów z ACL 2012 ma więcej niż 7 cytowań?",
        "query": "SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;",
        "query_pl": "SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;"
    },
    {
        "db_id": "scholar",
        "question": "What was the topic of best paper in 2012 EMNLP-CoNLL ?",
        "question_pl": "Jaki był temat najlepszego referatu w 2012 EMNLP-CoNLL?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "How many papers has Noah Smith co-authored since 2009 ?",
        "question_pl": "Ilu artykułów Noah Smith był współautorem od 2009 roku?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"Noah Smith\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Noah Smith\" );",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"Noah Smith\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Noah Smith\" );"
    },
    {
        "db_id": "scholar",
        "question": "Number of ACL papers with more than 2 citations",
        "question_pl": "Liczba artykułów ACL z więcej niż 2 cytowaniami",
        "query": "SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;"
    },
    {
        "db_id": "scholar",
        "question": "What is the name of Eric C. Kerrigan 's Liquid Automatica paper ?",
        "question_pl": "Jak nazywa się papier Liquid Automatica Erica C. Kerrigana?",
        "query": "SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";",
        "query_pl": "SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Płyn\" AND t6.venuename  =  \"Automatica\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers used ImageNet datasets in cvpr ?",
        "question_pl": "W ilu artykułach wykorzystano zbiory danych ImageNet w cvpr?",
        "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"cvpr\";",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"cvpr\";"
    },
    {
        "db_id": "scholar",
        "question": "What venues are for Neuroscience ?",
        "question_pl": "Jakie miejsca są przeznaczone dla Neuroscience?",
        "query": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";",
        "query_pl": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuronauka\";"
    },
    {
        "db_id": "scholar",
        "question": "When was the last time Mary Crainie published a paper ?",
        "question_pl": "Kiedy ostatni raz Mary Crainie opublikowała artykuł?",
        "query": "SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mary Crainie\";",
        "query_pl": "SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mary Crainie\";"
    },
    {
        "db_id": "scholar",
        "question": "I want the co-authors of papers on Machine Translation Output with Philipp Koehn",
        "question_pl": "Chcę, aby współautorzy artykułów na temat Machine Translation Output z Philippem Koehnem",
        "query": "SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"Philipp Koehn\" AND t3.keyphrasename  =  \"Machine Translation Output\";",
        "query_pl": "SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"Philipp Koehn\" AND t3.keyphrasename  =  \"Wynik tłumaczenia maszynowego\";"
    },
    {
        "db_id": "scholar",
        "question": "How many papers does Samuel Madden publish outside of PVLDB area ?",
        "question_pl": "Ile artykułów publikuje Samuel Madden poza obszarem PVLDB?",
        "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Samuel Madden\" AND t4.venuename != \"PVLDB\";",
        "query_pl": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Samuel Madden\" AND t4.venuename != \"PVLDB\";"
    },
    {
        "db_id": "scholar",
        "question": "which journal did Donald E Knuth publish his last paper ?",
        "question_pl": "W którym czasopiśmie Donald E. Knuth opublikował swoją ostatnią pracę?",
        "query": "SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the venue of Fracture of acrylic bone cement ?",
        "question_pl": "Jakie jest miejsce złamania akrylowego cementu kostnego?",
        "query": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";",
        "query_pl": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Złamanie akrylowego cementu kostnego\";"
    },
    {
        "db_id": "scholar",
        "question": "How many authors published at sigcse in 2010 ?",
        "question_pl": "Ilu autorów opublikowało w sigcse w 2010 roku?",
        "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"sigcse\";",
        "query_pl": "SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"sigcse\";"
    },
    {
        "db_id": "scholar",
        "question": "What is the year of publication of \" A Switching Architecture For ISDN \" ?",
        "question_pl": "Jaki jest rok publikacji \" Architektura przełączania dla ISDN \" ?",
        "query": "SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"A Switching Architecture For ISDN\";",
        "query_pl": "SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"Architektura przełączania dla ISDN\";"
    },
    {
        "db_id": "scholar",
        "question": "what keywords are used by papers at uist",
        "question_pl": "Jakie słowa kluczowe są używane w artykułach na uist",
        "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"uist\";",
        "query_pl": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"uist\";"
    },
    {
        "db_id": "scholar",
        "question": "Give me the papers written by Su-In Lee before 2012 .",
        "question_pl": "Podaj mi dokumenty napisane przez Su-In Lee przed 2012 rokiem.",
        "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Su-In Lee\" AND t3.year  <  2012;",
        "query_pl": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Su-In Lee\" AND t3.year  <  2012;"
    },
    {
        "db_id": "scholar",
        "question": "papers in semantic parsing for each year",
        "question_pl": "artykułów na temat parsowania semantycznego w każdym roku",
        "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"semantic parsing\" GROUP BY t3.year ORDER BY t3.year DESC;",
        "query_pl": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"parsowanie semantyczne\" GROUP BY t3.year ORDER BY t3.year DESC;"
    },
    {
        "db_id": "scholar",
        "question": "papers with at least 5 citations",
        "question_pl": "artykuły z co najmniej 5 cytowaniami",
        "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;",
        "query_pl": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"
    },
    {
        "db_id": "scholar",
        "question": "papers cited by at least 5 papers",
        "question_pl": "artykuły cytowane przez co najmniej 5 artykułów",
        "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;",
        "query_pl": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"
    },
    {
        "db_id": "scholar",
        "question": "What is the most cited paper at sigcomm ?",
        "question_pl": "Jaki jest najczęściej cytowany artykuł w sigcomm?",
        "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigcomm\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",
        "query_pl": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigcomm\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"
    },
    {
        "db_id": "scholar",
        "question": "What is the name of Ranjit Jhala 's Liquid Haskell paper ?",
        "question_pl": "Jak nazywa się artykuł Ranjita Jhali na temat Liquid Haskell?",
        "query": "SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Ranjit Jhala\" AND t5.keyphrasename  =  \"Liquid Haskell\";",
        "query_pl": "SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Ranjit Jhala\" AND t5.keyphrasename  =  \"Liquid Haskell\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the businesses with more than 4.5 stars",
        "question_pl": "Wymień wszystkie firmy z więcej niż 4,5 gwiazdkami",
        "query": "SELECT name FROM business WHERE rating  >  4.5;",
        "query_pl": "SELECT name FROM business WHERE rating  >  4.5;"
    },
    {
        "db_id": "yelp",
        "question": "List all businesses with rating 3.5",
        "question_pl": "Wymień wszystkie firmy z oceną 3,5",
        "query": "SELECT name FROM business WHERE rating  =  3.5;",
        "query_pl": "SELECT name FROM business WHERE rating  =  3.5;"
    },
    {
        "db_id": "yelp",
        "question": "List all user ids with name Michelle",
        "question_pl": "Wyświetl wszystkie identyfikatory użytkowników o nazwie Michelle",
        "query": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";",
        "query_pl": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all states in which there is a Whataburger",
        "question_pl": "Znajdź wszystkie stany, w których znajduje się Whataburger",
        "query": "SELECT state FROM business WHERE name  =  \"Whataburger\";",
        "query_pl": "SELECT state FROM business WHERE name  =  \"Whataburger\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all cities in which there is a restaurant called \" MGM Grand Buffet \"",
        "question_pl": "Znajdź wszystkie miasta, w których znajduje się restauracja o nazwie \" MGM Grand Buffet \"",
        "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t2.category_name  =  \"category_category_name0\";",
        "query_pl": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Bufet MGM Grand\" AND t2.category_name  =  \"category_category_name0\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the cities of businesses rated below 1.5",
        "question_pl": "Znajdź miasta firm ocenionych poniżej 1,5",
        "query": "SELECT city FROM business WHERE rating  <  1.5;",
        "query_pl": "SELECT city FROM business WHERE rating  <  1.5;"
    },
    {
        "db_id": "yelp",
        "question": "Find all cities which has a \" Taj Mahal \" .",
        "question_pl": "Znajdź wszystkie miasta, w których znajduje się \" Taj Mahal \".",
        "query": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";",
        "query_pl": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the reviews which rated a business less than 1",
        "question_pl": "Wymień wszystkie recenzje, w których firma została oceniona na mniej niż 1",
        "query": "SELECT text FROM review WHERE rating  <  1;",
        "query_pl": "SELECT text FROM review WHERE rating  <  1;"
    },
    {
        "db_id": "yelp",
        "question": "List all the restaurant rated more than 3.5",
        "question_pl": "Wymień wszystkie restauracje ocenione na więcej niż 3,5",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "find all cities which has a \" Taj Mahal \" restaurant",
        "question_pl": "Znajdź wszystkie miasta, w których znajduje się restauracja \"Taj Mahal\"",
        "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "list all the reviews by Niloofar",
        "question_pl": "Wymień wszystkie recenzje autorstwa Niloofar",
        "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";",
        "query_pl": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "list all the businesses which have a review by Niloofar",
        "question_pl": "Wymień wszystkie firmy, które mają recenzję Niloofar",
        "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";",
        "query_pl": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "list all the businesses which Niloofar rated 5",
        "question_pl": "wymień wszystkie firmy, które Niloofar ocenił na 5",
        "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";",
        "query_pl": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the reviews by Michelle for Italian restaurant",
        "question_pl": "Lista wszystkich opinii o Italian restaurant, napisanych przez Michelle",
        "query": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";",
        "query_pl": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Włoski\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "find the number of reviews written for \" Cafe Zinho \" restaurant in Texas",
        "question_pl": "Znajdź liczbę recenzji napisanych dla restauracji \" Cafe Zinho \" w Teksas",
        "query": "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Teksas\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all 5 star Italian restaurant",
        "question_pl": "Wymień wszystkie 5-gwiazdkowe włoskie restauracje",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Italian\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Włoski\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the neighbourhoods with Italian restaurant in Madison",
        "question_pl": "Lista wszystkich dzielnic z włoską restauracją w Madison",
        "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t3.category_name  =  \"Włoski\" AND t4.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the neighbourhoods with Italian restaurant rated less than 2.5 in Madison",
        "question_pl": "Lista wszystkich dzielnic z włoską restauracją z oceną poniżej 2,5 w Madison",
        "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Włoski\" AND t4.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "find all the restaurant in Pennsylvania",
        "question_pl": "Znajdź wszystkie restauracje w Pensylwanii",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pensylwania\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all businesses that are restaurant in Pennsylvania .",
        "question_pl": "Wymień wszystkie firmy, które są restauracjami w Pensylwanii.",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pensylwania\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all the reviews for all Pet Groomers with more than 100 reviews",
        "question_pl": "Znajdź wszystkie recenzje dla wszystkich Pet Groomers z ponad 100 recenzjami",
        "query": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Pet Groomers\";",
        "query_pl": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Groomerzy dla zwierząt\";"
    },
    {
        "db_id": "yelp",
        "question": "What are all the breweries in \" Los Angeles \" ?",
        "question_pl": "Jakie są wszystkie browary w \"Los Angeles\"?",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"browary\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all breweries in Los Angeles",
        "question_pl": "Znajdź wszystkie browary w Los Angeles",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"browary\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all breweries in \" Los Angeles \"",
        "question_pl": "Znajdź wszystkie browary w \" Los Angeles \"",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"browary\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all users who reviewed restaurant \" Mesa Grill \"",
        "question_pl": "Znajdź wszystkich użytkowników, którzy zrecenzowali restaurację \" Mesa Grill \"",
        "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List the addresses of all Walmart in \" Los Angeles \"",
        "question_pl": "Lista adresów wszystkich Walmartów w \" Los Angeles \".",
        "query": "SELECT full_address FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Walmart\";",
        "query_pl": "SELECT full_address FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Walmart\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all restaurant reviewed by Patrick in \" Dallas \"",
        "question_pl": "Znajdź wszystkie restauracje zrecenzowane przez Patrick w \" Dallas \"",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restauracja\" AND t4.name  =  \"Patrick\";"
    },
    {
        "db_id": "yelp",
        "question": "Which restaurant in Dallas were reviewed by user Patrick ?",
        "question_pl": "Które restauracje w Dallas zostały sprawdzone przez użytkownika Patrick ?",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restauracja\" AND t4.name  =  \"Patrick\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Bars reviewed by Patrick",
        "question_pl": "Znajdź wszystkie bary zrecenzowane przez Patricka",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bary\" AND t4.name  =  \"Patrick\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Bars reviewed by Patrick with at least 3 stars",
        "question_pl": "Znajdź wszystkie bary ocenione przez Patricka na co najmniej 3 gwiazdki",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bary\" AND t4.name  =  \"Patrick\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all users who have written tips for \" Barrio Cafe \" in 2015",
        "question_pl": "Znajdź wszystkich użytkowników, którzy napisali wskazówki dla \" Barrio Cafe \" w 2015 roku",
        "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;",
        "query_pl": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;"
    },
    {
        "db_id": "yelp",
        "question": "Find all businesses in Texas with a rating below 2",
        "question_pl": "Znajdź wszystkie firmy w Teksasie z oceną poniżej 2",
        "query": "SELECT name FROM business WHERE rating  <  2 AND state  =  \"Texas\";",
        "query_pl": "SELECT name FROM business WHERE rating  <  2 AND state  =  \"Teksas\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all restaurant Seafood in Los Angeles",
        "question_pl": "Znajdź wszystkie restauracje z owocami morza w Los Angeles",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Owoce morza\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all the Seafood restaurant in \" Los Angeles \"",
        "question_pl": "Lista wszystkich restauracji serwujących owoce morza w \" Los Angeles \"",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Owoce morza\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all restaurant that serve Seafood in \" Los Angeles \"",
        "question_pl": "Znajdź wszystkie restauracje serwujące owoce morza w mieście \" Los Angeles \"",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Owoce morza\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all reviews by Patrick with a rating above 4",
        "question_pl": "Znajdź wszystkie recenzje Patricka z oceną powyżej 4",
        "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";",
        "query_pl": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Apple Store in \" Los Angeles \"",
        "question_pl": "Znajdź wszystkie Apple Store w \" Los Angeles \"",
        "query": "SELECT business_id FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Apple Store\";",
        "query_pl": "SELECT business_id FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Apple Store\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Dallas restaurant with a rating above 4.5",
        "question_pl": "Znajdź wszystkie restauracje w Dallas z oceną powyżej 4,5",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "What neighbourhood is restaurant \" Flat Top Grill \" in ?",
        "question_pl": "W jakiej dzielnicy znajduje się restauracja \"Flat Top Grill\" ?",
        "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";",
        "query_pl": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Grill płaski\" AND t3.category_name  =  \"category_category_name0\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all tips about \" Vintner Grill \" that received more than 9 likes",
        "question_pl": "Znajdź wszystkie porady na temat \" Vintner Grill \", które otrzymały więcej niż 9 polubień",
        "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;",
        "query_pl": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;"
    },
    {
        "db_id": "yelp",
        "question": "Find all reviews about \" Kabob Palace \" in year 2014",
        "question_pl": "Znajdź wszystkie opinie na temat \" Kabob Palace \" w roku 2014",
        "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;",
        "query_pl": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;"
    },
    {
        "db_id": "yelp",
        "question": "Find all users who have written tips about businesses in Dallas",
        "question_pl": "Znajdź wszystkich użytkowników, którzy napisali porady na temat firm w Dallas",
        "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";",
        "query_pl": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all cities in Texas in which there is a restaurant called \" MGM Grand Buffet \"",
        "question_pl": "Znajdź wszystkie miasta w Teksas, w których znajduje się restauracja o nazwie \" MGM Grand Buffet \"",
        "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Bufet MGM Grand\" AND t1.state  =  \"Teksas\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the users who have given tips on Pet Groomers",
        "question_pl": "Znajdź użytkowników, którzy udzielili wskazówek na temat Pet Groomers",
        "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Pet Groomers\";",
        "query_pl": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Groomerzy dla zwierząt\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all tips for \" Cafe Zinho \" in Texas .",
        "question_pl": "Znajdź wszystkie wskazówki dotyczące \" Cafe Zinho \" w Teksas .",
        "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\";",
        "query_pl": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Teksas\";"
    },
    {
        "db_id": "yelp",
        "question": "List all users who reviewed businesses that are restaurant .",
        "question_pl": "Wymień wszystkich użytkowników, którzy sprawdzili firmy będące restauracjami.",
        "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "List all tips for \" Cafe Zinho \" in Pennsylvania in 2010 .",
        "question_pl": "Lista wszystkich wskazówek dotyczących \" Cafe Zinho \" w Pensylwanii w 2010 roku .",
        "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pennsylvania\" AND t2.year  =  2010;",
        "query_pl": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pensylwania\" AND t2.year  =  2010;"
    },
    {
        "db_id": "yelp",
        "question": "List all users who reviewed businesses that are restaurant in 2010 .",
        "question_pl": "Wymień wszystkich użytkowników, którzy sprawdzili firmy będące restauracjami w 2010 .",
        "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;",
        "query_pl": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restauracja\" AND t3.year  =  2010;"
    },
    {
        "db_id": "yelp",
        "question": "Find all the tips from a user who has written a review in 2012",
        "question_pl": "Znajdź wszystkie wskazówki od użytkownika, który napisał recenzję w 2012 roku",
        "query": "SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;",
        "query_pl": "SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;"
    },
    {
        "db_id": "yelp",
        "question": "Find all reviews for businesses rated 2.5",
        "question_pl": "Znajdź wszystkie opinie o firmach z oceną 2.5",
        "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;",
        "query_pl": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;"
    },
    {
        "db_id": "yelp",
        "question": "find the number of escape games in Madison",
        "question_pl": "Znajdź liczbę gier escape w Madison",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"gry ucieczki\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the number of escape games in Madison",
        "question_pl": "Jaka jest liczba gier escape w Madison?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"gry ucieczki\";"
    },
    {
        "db_id": "yelp",
        "question": "How many escape games exist in Madison",
        "question_pl": "Ile gier escape istnieje w Madison?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"gry ucieczki\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the number of escape games in \" Madison \" ?",
        "question_pl": "Jaka jest liczba gier escape w \" Madison \" ?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"gry ucieczki\";"
    },
    {
        "db_id": "yelp",
        "question": "How many escape games are there in Madison ?",
        "question_pl": "Ile gier ucieczki znajduje się w Madison?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"gry ucieczki\";"
    },
    {
        "db_id": "yelp",
        "question": "find the number of restaurant rated more than 3.5",
        "question_pl": "Znajdź liczbę restauracji ocenionych na więcej niż 3,5",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \"",
        "question_pl": "Znajdź wszystkie zameldowania w marokańskiej restauracji w \" Los Angeles \"",
        "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Moroccan\";",
        "query_pl": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restauracja\" AND t3.category_name  =  \"Marokański\";"
    },
    {
        "db_id": "yelp",
        "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" on Friday",
        "question_pl": "Znajdź wszystkie zameldowania w marokańskiej restauracji w \" Los Angeles \" w piątek",
        "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" AND t4.day  =  \"Friday\";",
        "query_pl": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Marokański\" AND t3.category_name  =  \"restauracja\" AND t4.day  =  \"Piątek\";"
    },
    {
        "db_id": "yelp",
        "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" per day",
        "question_pl": "Znajdź wszystkie zameldowania w marokańskiej restauracji w \" Los Angeles \" na dzień",
        "query": "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" GROUP BY t4.day;",
        "query_pl": "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Marokański\" AND t3.category_name  =  \"restauracja\" GROUP BY t4.day;"
    },
    {
        "db_id": "yelp",
        "question": "find the total checkins in Italian Delis in each state on Sunday",
        "question_pl": "Znajdź łączną liczbę odpraw we włoskich delikatesach w każdym stanie w niedzielę",
        "query": "SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"Delis\" AND t4.day  =  \"Sunday\" GROUP BY t1.state;",
        "query_pl": "SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"Włoski\" AND t3.category_name  =  \"Delikatesy\" AND t4.day  =  \"Niedziela\" GROUP BY t1.state;"
    },
    {
        "db_id": "yelp",
        "question": "How many reviews has Niloofar written in 2015",
        "question_pl": "Ile recenzji napisał Niloofar w 2015 roku?",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "what is the average rating given in Michelle reviews",
        "question_pl": "Jaka jest średnia ocena w recenzjach Michelle?",
        "query": "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";",
        "query_pl": "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the number of checkins for \" Cafe Zinho \" on Friday",
        "question_pl": "Jaka jest liczba zameldowań w obiekcie \" Cafe Zinho \" w piątek?",
        "query": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";",
        "query_pl": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Piątek\";"
    },
    {
        "db_id": "yelp",
        "question": "how many users reviewed \" Sushi Too \" in Pittsburgh",
        "question_pl": "Ilu użytkowników sprawdziło \" Sushi Too \" w Pittsburghu?",
        "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the number of restaurant in Pittsburgh rated 4.5",
        "question_pl": "Jaka jest liczba restauracji w Pittsburghu ocenianych na 4,5?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "How many tips have been written in 2015",
        "question_pl": "Ile porad zostało napisanych w 2015 roku?",
        "query": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;",
        "query_pl": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;"
    },
    {
        "db_id": "yelp",
        "question": "What is the total likes on tips from Niloofar",
        "question_pl": "Jaka jest łączna liczba polubień wskazówek od Niloofar?",
        "query": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";",
        "query_pl": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the total likes on tips about \" Cafe Zinho \"",
        "question_pl": "Jaka jest łączna liczba polubień wskazówek dotyczących \" Cafe Zinho \"?",
        "query": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";",
        "query_pl": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the total likes on tips from Niloofar about \" Cafe Zinho \"",
        "question_pl": "Jaka jest łączna liczba polubień wskazówek od Niloofar na temat \" Cafe Zinho \"?",
        "query": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Cafe Zinho\" AND t3.name  =  \"Niloofar\";",
        "query_pl": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Cafe Zinho\" AND t3.name  =  \"Niloofar\";"
    },
    {
        "db_id": "yelp",
        "question": "How many tips has Michelle written in 2010",
        "question_pl": "Ile porad napisała Michelle w 2010 roku?",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "Return me the number of tips that are written by Michelle in 2010 .",
        "question_pl": "Zwróć mi liczbę porad napisanych przez Michelle w 2010 roku.",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "How many tips has Michelle written in April",
        "question_pl": "Ile porad napisała Michelle w kwietniu?",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"Kwiecień\" AND t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "what is the number of restaurant in Texas",
        "question_pl": "Jaka jest liczba restauracji w Teksasie?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Teksas\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "How many Bars in \" Dallas \" have a rating above 3.5 ?",
        "question_pl": "Ile barów w \"Dallas\" ma ocenę powyżej 3,5?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bary\";"
    },
    {
        "db_id": "yelp",
        "question": "How many Bars in Dallas have a rating above 3.5 ?",
        "question_pl": "Ile barów w Dallas ma ocenę powyżej 3,5?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bary\";"
    },
    {
        "db_id": "yelp",
        "question": "How many people reviewed the restaurant \" Texas de Brazil \" in Dallas Texas ?",
        "question_pl": "Ile osób oceniło restaurację \"Texas de Brazil\" w Dallas, Teksas ?",
        "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Teksas\" AND t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "How many people reviewed \" Bistro Di Napoli \" in 2015 ?",
        "question_pl": "Ile osób zrecenzowało \" Bistro Di Napoli \" w 2015 roku ?",
        "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;"
    },
    {
        "db_id": "yelp",
        "question": "How many restaurant are there in the Hazelwood district of Dallas ?",
        "question_pl": "Ile restauracji znajduje się w dzielnicy Hazelwood w Dallas?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t3.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Hazelwood\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t3.category_name  =  \"restauracja\" AND t2.neighbourhood_name  =  \"Hazelwood\";"
    },
    {
        "db_id": "yelp",
        "question": "How many Starbucks are there in Dallas Texas ?",
        "question_pl": "Ile sieci Starbucks jest w mieście Dallas w stanie Teksas?",
        "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";",
        "query_pl": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Teksas\";"
    },
    {
        "db_id": "yelp",
        "question": "How many reviews does \" Acacia Cafe \" have ?",
        "question_pl": "Ile recenzji ma \" Acacia Cafe \" ?",
        "query": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";",
        "query_pl": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the average number of checkins in restaurant \" Barrio Cafe \" per day",
        "question_pl": "Znajdź średnią liczbę zameldowań w restauracji \" Barrio Cafe \" na dzień",
        "query": "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restaurant\" GROUP BY t3.day;",
        "query_pl": "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restauracja\" GROUP BY t3.day;"
    },
    {
        "db_id": "yelp",
        "question": "How many businesses are there in the \" Stone Meadows \" neighbourhood in Madison ?",
        "question_pl": "Ile firm znajduje się w dzielnicy Stone Meadows w Madison?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";"
    },
    {
        "db_id": "yelp",
        "question": "How many reviews has Adrienne written ?",
        "question_pl": "Ile recenzji napisała Adrienne?",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";"
    },
    {
        "db_id": "yelp",
        "question": "How many reviews has Michelle written in March 2014 ?",
        "question_pl": "Ile recenzji napisała Michelle w marcu 2014 roku?",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"March\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"Marzec\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "How many businesses has Michelle reviewed in 2010 ?",
        "question_pl": "Ile firm przejrzała Michelle w 2010 roku?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "How many businesses in \" San Diego \" has Christine reviewed in 2010 ?",
        "question_pl": "Ile firm w \" San Diego \" zostało sprawdzonych przez Christine w 2010 roku ?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"San Diego\" AND t2.year  =  2010 AND t3.name  =  \"Christine\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"San Diego\" AND t2.year  =  2010 AND t3.name  =  \"Christine\";"
    },
    {
        "db_id": "yelp",
        "question": "How many Target are there in \" Los Angeles \" ?",
        "question_pl": "Ile Target jest w \" Los Angeles \" ?",
        "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";",
        "query_pl": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Cel\";"
    },
    {
        "db_id": "yelp",
        "question": "How many users have reviewed Irish Pub in Dallas ?",
        "question_pl": "Ilu użytkowników sprawdziło Irish Pub w Dallas?",
        "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";"
    },
    {
        "db_id": "yelp",
        "question": "What is the average rating of reviews written in year 2014 ?",
        "question_pl": "Jaka jest średnia ocena recenzji napisanych w 2014 roku?",
        "query": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;",
        "query_pl": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;"
    },
    {
        "db_id": "yelp",
        "question": "How many people reviewed restaurant \" Vintner Grill \" in 2010 ?",
        "question_pl": "Ile osób oceniło restaurację \" Vintner Grill \" w 2010 roku ?",
        "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;",
        "query_pl": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;"
    },
    {
        "db_id": "yelp",
        "question": "Find the number of reviews on businesses located in \" South Summerlin \" neighbourhood",
        "question_pl": "Znajdź liczbę opinii o firmach znajdujących się w okolicy \" South Summerlin \".",
        "query": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the number of users called Michelle",
        "question_pl": "Znajdź liczbę użytkowników o nazwie Michelle",
        "query": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "Return me the number of businesses that are restaurant .",
        "question_pl": "Zwróć mi liczbę firm, które są restauracjami.",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Return me the number of cities that has \" Panda Express \" .",
        "question_pl": "Zwróć mi liczbę miast, w których znajduje się \"Panda Express\".",
        "query": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";",
        "query_pl": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";"
    },
    {
        "db_id": "yelp",
        "question": "Return me the number of tips that are written by Michelle .",
        "question_pl": "Zwróć mi liczbę wskazówek napisanych przez Michelle.",
        "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the total checkins in \" Brighton Heights \" neighbourhood",
        "question_pl": "Znajdź wszystkie zameldowania w \" Brighton Heights \" dzielnicy",
        "query": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";",
        "query_pl": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the total number of reviews written in March",
        "question_pl": "Znajdź całkowitą liczbę recenzji napisanych w marcu",
        "query": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";",
        "query_pl": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"Marzec\";"
    },
    {
        "db_id": "yelp",
        "question": "Find the number of tips written in each month",
        "question_pl": "Znajdź liczbę porad napisanych w każdym miesiącu",
        "query": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;",
        "query_pl": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;"
    },
    {
        "db_id": "yelp",
        "question": "How many neighbourhoods have a business with rating 5 in Madison ?",
        "question_pl": "Ile dzielnic w Madison ma firmy z oceną 5?",
        "query": "SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  =  5;",
        "query_pl": "SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  =  5;"
    },
    {
        "db_id": "yelp",
        "question": "Give me all the Moroccan restaurant in Texas",
        "question_pl": "Dajcie mi wszystkie marokańskie restauracje w Teksasie",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Teksas\" AND t2.category_name  =  \"Marokański\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "which business has the most number of checkins",
        "question_pl": "która firma ma największą liczbę zameldowań",
        "query": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;"
    },
    {
        "db_id": "yelp",
        "question": "which neighbourhood has the most number of businesses in Madison",
        "question_pl": "Która dzielnica ma najwięcej firm w Madison?",
        "query": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;"
    },
    {
        "db_id": "yelp",
        "question": "Find all Mexican restaurant in Dallas with at least 3.5 stars",
        "question_pl": "Znajdź wszystkie restauracje meksykańskie w Dallas z co najmniej 3,5 gwiazdkami",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Meksykański\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Mexican restaurant in Dallas with a rating above 3.5",
        "question_pl": "Znajdź wszystkie restauracje meksykańskie w Dallas z oceną powyżej 3,5",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Meksykański\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all restaurant with Valet Service in Dallas Texas",
        "question_pl": "Znajdź wszystkie restauracje z usługą Valet Service w Dallas, Teksas",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"Valet Service\" AND t3.category_name  =  \"restaurant\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.state  =  \"Teksas\" AND t2.category_name  =  \"Valet Service\" AND t3.category_name  =  \"restauracja\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Italian restaurant in the Meadowood neighbourhood of Madison",
        "question_pl": "Znajdź wszystkie włoskie restauracje w dzielnicy Meadowood w Madison",
        "query": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Meadowood\";",
        "query_pl": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Włoski\" AND t4.category_name  =  \"restauracja\" AND t2.neighbourhood_name  =  \"Meadowood\";"
    },
    {
        "db_id": "yelp",
        "question": "Find all Bars in \" Los Angeles \" with at least 30 reviews and average rating above 3 stars",
        "question_pl": "Znajdź wszystkie bary w mieście \" Los Angeles \" z co najmniej 30 recenzjami i średnią oceną powyżej 3 gwiazdek",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bars\";",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bary\";"
    },
    {
        "db_id": "yelp",
        "question": "How many Egyptian restaurant are there in Edinburgh ?",
        "question_pl": "Ile egipskich restauracji jest w Edynburgu?",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edynburg\" AND t2.category_name  =  \"restauracja\" AND t3.category_name  =  \"Egipcjanin\";"
    },
    {
        "db_id": "yelp",
        "question": "Find users whose average review rating is below 3",
        "question_pl": "Znajdź użytkowników, których średnia ocena recenzji jest niższa niż 3",
        "query": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;",
        "query_pl": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;"
    },
    {
        "db_id": "yelp",
        "question": "Find the business with the most number of reviews in April",
        "question_pl": "Znajdź firmę z największą liczbą recenzji w kwietniu",
        "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"Kwiecień\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;"
    },
    {
        "db_id": "yelp",
        "question": "Find the business which has the most number of categories",
        "question_pl": "Znajdź firmę, która ma najwięcej kategorii",
        "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the homepage of PVLDB .",
        "question_pl": "zwróć mi stronę główną PVLDB.",
        "query": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";",
        "query_pl": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the homepage of \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi stronę główną \"H. V. Jagadish\".",
        "query": "SELECT homepage FROM author WHERE name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT homepage FROM author WHERE name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the abstract of \" Making database systems usable \" .",
        "question_pl": "Zwróć mi streszczenie \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT abstract FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the year of \" Making database systems usable \"",
        "question_pl": "zwróć mi rok \"Uczenie systemów baz danych użytecznych\"",
        "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT YEAR FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the year of \" Making database systems usable \" .",
        "question_pl": "zwróć mi rok \"Uczenie systemów baz danych użytecznych\".",
        "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT YEAR FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers after 2000 .",
        "question_pl": "zwróć mi dokumenty po 2000 roku.",
        "query": "SELECT title FROM publication WHERE YEAR  >  2000;",
        "query_pl": "SELECT title FROM publication WHERE YEAR  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the homepage of the VLDB conference .",
        "question_pl": "zwróć mi stronę główną konferencji VLDB.",
        "query": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";",
        "query_pl": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the keywords .",
        "question_pl": "zwróć mi wszystkie słowa kluczowe.",
        "query": "SELECT keyword FROM keyword;",
        "query_pl": "SELECT keyword FROM keyword;"
    },
    {
        "db_id": "academic",
        "question": "return me all the organizations .",
        "question_pl": "zwróć mi wszystkie organizacje.",
        "query": "SELECT name FROM organization;",
        "query_pl": "SELECT name FROM organization;"
    },
    {
        "db_id": "academic",
        "question": "return me all the organizations in \" North America \" .",
        "question_pl": "Zwróć mi wszystkie organizacje w \"Ameryce Północnej\".",
        "query": "SELECT name FROM organization WHERE continent  =  \"North America\";",
        "query_pl": "SELECT name FROM organization WHERE continent  =  \"Ameryka Północna\";"
    },
    {
        "db_id": "academic",
        "question": "return me the homepage of \" University of Michigan \" .",
        "question_pl": "zwróć mi stronę główną \"Uniwersytet Michigan\".",
        "query": "SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";",
        "query_pl": "SELECT homepage FROM organization WHERE name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of references of \" Making database systems usable \" .",
        "question_pl": "zwróć mi liczbę odwołań do \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT reference_num FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the references of \" Making database systems usable \" .",
        "question_pl": "zwróć mi referencje do \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT reference_num FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of citations of \" Making database systems usable \" .",
        "question_pl": "zwróć mi liczbę cytowań hasła \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT citation_num FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the citations of \" Making database systems usable \" .",
        "question_pl": "Zwróć mi cytaty z \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
        "query_pl": "SELECT citation_num FROM publication WHERE title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the paper with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł z ponad 200 cytatami.",
        "query": "SELECT title FROM publication WHERE citation_num  >  200;",
        "query_pl": "SELECT title FROM publication WHERE citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in PVLDB 2010 .",
        "question_pl": "Zwróć mi autorów, którzy mają artykuły w PVLDB 2010.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in PVLDB after 2010 .",
        "question_pl": "Zwróć mi autorów, którzy mają artykuły w PVLDB po 2010 roku.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in VLDB conference in 2002 .",
        "question_pl": "Zwróć mi autorów, którzy wygłosili referaty na konferencji VLDB w 2002 roku.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in VLDB conference before 2002 .",
        "question_pl": "Zwróć mi autorów, którzy napisali artykuły na konferencji VLDB przed 2002 rokiem.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in VLDB conference before 2002 after 1995 .",
        "question_pl": "Zwróć mi autorów, którzy mają artykuły na konferencji VLDB przed 2002 po 1995.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;"
    },
    {
        "db_id": "academic",
        "question": "return me the area of PVLDB .",
        "question_pl": "zwróć mi obszar PVLDB.",
        "query": "SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";",
        "query_pl": "SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in PVLDB .",
        "question_pl": "Zwróć mi autorów, którzy mają artykuły w PVLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the organization \" H. V. Jagadish \" is in .",
        "question_pl": "Zwróć mi organizację, w której działa H. V. Jagadish.",
        "query": "SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the conferences, which have papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi konferencje, na których są referaty \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the journals, which have papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi czasopisma, w których znajdują się artykuły \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the domain where \" H. V. Jagadish \" is focused .",
        "question_pl": "zwróć mi domenę, na której koncentruje się \" H. V. Jagadish \".",
        "query": "SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the authors of \" Making database systems usable \" .",
        "question_pl": "Zwróć mi autorów \" Uczynienie systemów baz danych użytecznymi \" .",
        "query": "SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";",
        "query_pl": "SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the conference, which published \" Making database systems usable \" .",
        "question_pl": "Zwróćcie mi konferencję, na której opublikowano \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"Making database systems usable\";",
        "query_pl": "SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi dokumenty autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers on VLDB conference .",
        "question_pl": "zwróć mi dokumenty z konferencji VLDB.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers on PVLDB .",
        "question_pl": "zwróć mi dokumenty dotyczące PVLDB.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers on PVLDB after 2000 .",
        "question_pl": "zwróć mi dokumenty dotyczące PVLDB po 2000 roku.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers on VLDB conference after 2000 .",
        "question_pl": "zwróć mi dokumenty z konferencji VLDB po 2000 roku.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on PVLDB .",
        "question_pl": "Zwróć mi dokumenty autorstwa \"H. V. Jagadisha\" na PVLDB.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference .",
        "question_pl": "Zwróć mi dokumenty \"H. V. Jagadish\" na konferencji VLDB.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" after 2000 .",
        "question_pl": "zwróć mi dokumenty \"H. V. Jagadisha\" po 2000 roku.",
        "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;",
        "query_pl": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on PVLDB after 2000 .",
        "question_pl": "Zwróć mi dokumenty autorstwa \"H. V. Jagadisha\" na PVLDB po 2000 roku.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference after 2000 .",
        "question_pl": "Zwróć mi dokumenty \"H. V. Jagadish\" na konferencji VLDB po 2000 roku.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the area of the VLDB conference .",
        "question_pl": "zwróć mi obszar konferencji VLDB.",
        "query": "SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";",
        "query_pl": "SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers in the VLDB conference .",
        "question_pl": "Zwróć mi autorów, którzy mają referaty na konferencji VLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the keywords in Databases area .",
        "question_pl": "zwróć mi wszystkie słowa kluczowe w obszarze Bazy danych.",
        "query": "SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";",
        "query_pl": "SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Bazy danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers, which contain the keyword \" Natural Language \" .",
        "question_pl": "zwróć mi wszystkie artykuły, które zawierają słowo kluczowe \"język naturalny\".",
        "query": "SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
        "query_pl": "SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Język naturalny\";"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords of \" Making database systems usable \" .",
        "question_pl": "zwróć mi słowa kluczowe \"Użyteczność systemów baz danych\".",
        "query": "SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords related to \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi słowa kluczowe związane z \" H. V. Jagadish \" .",
        "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords in VLDB conference .",
        "question_pl": "zwróć mi słowa kluczowe w konferencji VLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords in PVLDB .",
        "question_pl": "zwróć mi słowa kluczowe w PVLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords in the papers of \" University of Michigan \" .",
        "question_pl": "zwróć mi słowa kluczowe w dokumentach \"Uniwersytet Michigan\".",
        "query": "SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .",
        "question_pl": "zwróć mi artykuły \" H. V. Jagadish \" zawierające słowo kluczowe \" Badanie użytkownika \" .",
        "query": "SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";",
        "query_pl": "SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"Badanie użytkownika\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers in PVLDB containing keyword \" Keyword search \" .",
        "question_pl": "zwróć mi dokumenty w PVLDB zawierające słowo kluczowe \"Wyszukiwanie słów kluczowych\".",
        "query": "SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";",
        "query_pl": "SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Wyszukiwanie słów kluczowych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers in VLDB conference containing keyword \" Information Retrieval \" .",
        "question_pl": "zwróć mi artykuły z konferencji VLDB zawierające słowo kluczowe \"Wyszukiwanie informacji\".",
        "query": "SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";",
        "query_pl": "SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Wyszukiwanie informacji\";"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi autorów, których artykuły zawierają słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relacyjna baza danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the organizations in Databases area .",
        "question_pl": "Zwróć mi wszystkie organizacje w obszarze Bazy danych.",
        "query": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";",
        "query_pl": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the organizations in Databases area located in \" North America \" .",
        "question_pl": "Zwróć mi wszystkie organizacje w obszarze Bazy danych zlokalizowane w \" Ameryce Północnej \".",
        "query": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";",
        "query_pl": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\" AND t2.continent  =  \"Ameryka Północna\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the researchers in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkich naukowców z \"Uniwersytet Michigan\".",
        "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the researchers in Databases area in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkich badaczy w obszarze Bazy danych w \" Uniwersytet Michigan \" .",
        "query": "SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\" AND t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkie dokumenty z \"Uniwersytet Michigan\".",
        "query": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers after 2000 in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkie dokumenty po 2000 roku z \"Uniwersytet Michigan\".",
        "query": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;",
        "query_pl": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers in VLDB conference in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkie referaty z konferencji VLDB na \"Uniwersytet Michigan\".",
        "query": "SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers in PVLDB in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkie dokumenty w PVLDB w \"Uniwersytet Michigan\".",
        "query": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me all the papers in PVLDB after 2000 in \" University of Michigan \" .",
        "question_pl": "Zwróć mi wszystkie dokumenty w PVLDB po 2000 roku w \"Uniwersytet Michigan\".",
        "query": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;",
        "query_pl": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"Uniwersytet Michigan\" AND t5.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in Databases area with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł w obszarze Bazy danych z ponad 200 cytowaniami.",
        "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200;",
        "query_pl": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Bazy danych\" AND t3.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in PVLDB with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł w PVLDB z ponad 200 cytowaniami.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in VLDB conference with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł na konferencji VLDB z ponad 200 cytowaniami.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper by \" H. V. Jagadish \" with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł \"H. V. Jagadish\" z ponad 200 cytatami.",
        "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.citation_num  >  200;",
        "query_pl": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on PVLDB with more than 200 citations .",
        "question_pl": "Zwróć mi dokumenty autorstwa \" H. V. Jagadish \" na PVLDB z ponad 200 cytowaniami.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference with more than 200 citations .",
        "question_pl": "Zwróć mi artykuły autorstwa \" H. V. Jagadish \" na konferencji VLDB z ponad 200 cytowaniami.",
        "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;",
        "query_pl": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku z ponad 200 cytatami.",
        "query": "SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;",
        "query_pl": "SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in Databases area with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku w obszarze Bazy danych z ponad 200 cytowaniami.",
        "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200 AND t3.year  >  2000;",
        "query_pl": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Bazy danych\" AND t3.citation_num  >  200 AND t3.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in PVLDB with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku w PVLDB z ponad 200 cytowaniami.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in VLDB conference with more than 200 citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku na konferencji VLDB z ponad 200 cytowaniami.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of conferences which have papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi liczbę konferencji, na których wygłoszono referaty \"H. V. Jagadisha\".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of journals which have papers by \" H. V. Jagadish \" .",
        "question_pl": "Podaj mi liczbę czasopism, w których ukazały się artykuły \"H. V. Jagadisha\".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers written by \" H. V. Jagadish \" in each year .",
        "question_pl": "Zwróć mi liczbę artykułów napisanych przez \"H. V. Jagadisha\" w każdym roku.",
        "query": "SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t3.year;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t3.year;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors of \" Making database systems usable \" .",
        "question_pl": "Zwróć mi liczbę autorów \"Uczynienie systemów baz danych użytecznymi\".",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of citations of \" Making database systems usable \" in each year .",
        "question_pl": "zwróć mi liczbę cytowań \"Uczynienie systemów baz danych użytecznymi\" w każdym roku.",
        "query": "SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"Making database systems usable\" GROUP BY YEAR;",
        "query_pl": "SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"Użyteczność systemów baz danych\" GROUP BY YEAR;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of citations of \" Making database systems usable \" before 2010 .",
        "question_pl": "zwróć mi liczbę cytowań \"Uczynienie systemów baz danych użytecznymi\" przed 2010 rokiem.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"Making database systems usable\" AND t2.year  <  2010;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"Użyteczność systemów baz danych\" AND t2.year  <  2010;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi liczbę artykułów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers on VLDB conference .",
        "question_pl": "Zwróć mi liczbę artykułów na konferencji VLDB.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers on PVLDB .",
        "question_pl": "zwróć mi liczbę dokumentów na PVLDB.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers after 2000 .",
        "question_pl": "Zwróć mi liczbę dokumentów po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers on PVLDB after 2000 .",
        "question_pl": "zwróć mi liczbę artykułów na PVLDB po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers on VLDB conference after 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów na konferencji VLDB po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" on PVLDB .",
        "question_pl": "Zwróć mi liczbę artykułów autorstwa \"H. V. Jagadisha\" na PVLDB.",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" on VLDB conference .",
        "question_pl": "Zwróć mi liczbę artykułów \"H. V. Jagadish\" na konferencji VLDB.",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" after 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów \"H. V. Jagadisha\" po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" on PVLDB after 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów autorstwa \"H. V. Jagadisha\" na PVLDB po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers by \" H. V. Jagadish \" on VLDB conference after 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów \"H. V. Jagadisha\" na konferencji VLDB po 2000 roku.",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of keywords .",
        "question_pl": "zwróć mi liczbę słów kluczowych.",
        "query": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;",
        "query_pl": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of keywords in Databases area .",
        "question_pl": "zwróć mi liczbę słów kluczowych w obszarze Bazy danych.",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Bazy danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers which contain the keyword \" Natural Language \" .",
        "question_pl": "zwróć liczbę artykułów zawierających słowo kluczowe \"język naturalny\".",
        "query": "SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Język naturalny\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of the keywords of \" Making database systems usable \" .",
        "question_pl": "zwróć mi liczbę słów kluczowych z \" Uczynienie systemów baz danych użytecznymi \" .",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Użyteczność systemów baz danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of the keywords related to \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi liczbę słów kluczowych związanych z \" H. V. Jagadish \" .",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of keywords in VLDB conference .",
        "question_pl": "zwróć mi liczbę słów kluczowych w konferencji VLDB.",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of keywords in PVLDB .",
        "question_pl": "zwróć mi liczbę słów kluczowych w PVLDB.",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of keywords in the papers of \" University of Michigan \" .",
        "question_pl": "zwróć mi liczbę słów kluczowych w dokumentach \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .",
        "question_pl": "zwróć mi liczbę artykułów \"H. V. Jagadish\" zawierających słowo kluczowe \"Badanie użytkownika\".",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"Badanie użytkownika\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in PVLDB containing keyword \" Keyword search \" .",
        "question_pl": "zwróć mi liczbę dokumentów w PVLDB zawierających słowo kluczowe \"Wyszukiwanie słów kluczowych\".",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Wyszukiwanie słów kluczowych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in VLDB conference containing keyword \" Information Retrieval \" .",
        "question_pl": "zwróć mi liczbę artykułów na konferencji VLDB zawierających słowo kluczowe \"Wyszukiwanie informacji\".",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Wyszukiwanie informacji\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors who have papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi liczbę autorów, których artykuły zawierają słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relacyjna baza danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of the papers containing keyword \" Natural Language \"",
        "question_pl": "zwróć całkowitą liczbę cytowań artykułów zawierających słowo kluczowe \"język naturalny\".",
        "query": "SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
        "query_pl": "SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Język naturalny\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of the organizations .",
        "question_pl": "Zwróć mi numer organizacji.",
        "query": "SELECT COUNT ( DISTINCT name ) FROM organization;",
        "query_pl": "SELECT COUNT ( DISTINCT name ) FROM organization;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of the organizations in \" North America \" .",
        "question_pl": "Zwróć mi numer organizacji w \"Ameryce Północnej\".",
        "query": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";",
        "query_pl": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"Ameryka Północna\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of organizations in Databases area .",
        "question_pl": "Zwróć mi liczbę organizacji w obszarze Bazy danych.",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of organizations in Databases area located in \" North America \" .",
        "question_pl": "Zwróć mi liczbę organizacji w obszarze Bazy danych zlokalizowanych w \" Ameryce Północnej \".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\" AND t2.continent  =  \"Ameryka Północna\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in \" University of Michigan \" .",
        "question_pl": "Zwróć mi liczbę dokumentów w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in \" University of Michigan \" in Databases area .",
        "question_pl": "zwróć mi liczbę dokumentów w obszarze \"Uniwersytet Michigan\" w bazach danych.",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"Bazy danych\" AND t5.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers after 2000 in \" University of Michigan \" .",
        "question_pl": "Zwróć mi liczbę artykułów po 2000 roku w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\" AND t4.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in VLDB conference in \" University of Michigan \" .",
        "question_pl": "Zwróć mi liczbę referatów na konferencji VLDB w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in PVLDB in \" University of Michigan \" .",
        "question_pl": "zwróć mi liczbę dokumentów w PVLDB w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers in PVLDB after 2000 in \" University of Michigan \" .",
        "question_pl": "zwróć mi liczbę artykułów w PVLDB po 2000 roku w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"Uniwersytet Michigan\" AND t5.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of the papers in \" University of Michigan \" .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań artykułów w \"Uniwersytet Michigan\".",
        "query": "SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of researchers in \" University of Michigan \" .",
        "question_pl": "Zwróć mi liczbę naukowców w \"Uniwersytet Michigan\".",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of researchers in Databases area in \" University of Michigan \" .",
        "question_pl": "Zwróć mi liczbę badaczy w obszarze Bazy danych w \" Uniwersytet Michigan \" .",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Bazy danych\" AND t2.name  =  \"Uniwersytet Michigan\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors who have papers in PVLDB .",
        "question_pl": "zwróć mi liczbę autorów, którzy mają artykuły w PVLDB.",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors who have papers in the VLDB conference .",
        "question_pl": "Zwróć mi liczbę autorów, którzy mają referaty na konferencji VLDB.",
        "query": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers published on PVLDB before 2000 .",
        "question_pl": "zwróć mi liczbę artykułów opublikowanych na PVLDB przed 2000 rokiem.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers published in the VLDB conference before 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów opublikowanych na konferencji VLDB przed 2000 rokiem.",
        "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of all the papers in PVLDB .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań wszystkich dokumentów w PVLDB.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the citations of each paper in PVLDB .",
        "question_pl": "zwróć mi cytaty każdego artykułu w PVLDB.",
        "query": "SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
        "query_pl": "SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in PVLDB in 2005 .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań artykułów w PVLDB w 2005 roku.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in PVLDB before 2005 .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań artykułów w PVLDB przed 2005 rokiem.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in PVLDB in each year .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań artykułów w PVLDB w każdym roku.",
        "query": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;",
        "query_pl": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers published in PVLDB in each year .",
        "question_pl": "zwróć mi liczbę artykułów opublikowanych w PVLDB w każdym roku.",
        "query": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of all the papers in the VLDB conference .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań wszystkich referatów na konferencji VLDB.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the citations of each paper in the VLDB conference .",
        "question_pl": "zwróć mi cytaty każdego artykułu z konferencji VLDB.",
        "query": "SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
        "query_pl": "SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in the VLDB conference in 2005 .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań referatów na konferencji VLDB w 2005 roku.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in the VLDB conference before 2005 .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań referatów na konferencji VLDB przed 2005 rokiem.",
        "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;",
        "query_pl": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the total citations of papers in the VLDB conference in each year .",
        "question_pl": "zwróć mi całkowitą liczbę cytowań artykułów na konferencji VLDB w każdym roku.",
        "query": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;",
        "query_pl": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers published in the VLDB conference in each year .",
        "question_pl": "zwróć mi liczbę artykułów opublikowanych na konferencji VLDB w każdym roku.",
        "query": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have cooperated both with \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
        "question_pl": "Zwróć mi autorów, którzy współpracowali zarówno z \" H. V. Jagadish \", jak i \" Divesh Srivastava \".",
        "query": "SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Divesh Srivastava\";",
        "query_pl": "SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Divesh Srivastava\";"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have cooperated with \" H. V. Jagadish \" after 2000 .",
        "question_pl": "Zwróć mi autorów, którzy współpracowali z \"H. V. Jagadish\" po 2000 roku.",
        "query": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t5.year  >  2000;",
        "query_pl": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t5.year  >  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
        "question_pl": "Zwróć mi dokumenty napisane przez \"H. V. Jagadisha\" i \"Divesha Srivastavę\".",
        "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";",
        "query_pl": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" after 2005 .",
        "question_pl": "Zwróć mi dokumenty napisane przez \"H. V. Jagadisha\" i \"Yunyao Li\" po 2005 roku.",
        "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t5.year  >  2005;",
        "query_pl": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t5.year  >  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB .",
        "question_pl": "Zwróć mi dokumenty napisane przez \"H. V. Jagadish\" i \"Yunyao Li\" na PVLDB.",
        "query": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\";",
        "query_pl": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB after 2005 .",
        "question_pl": "Zwróć mi artykuły napisane przez \"H. V. Jagadish\" i \"Yunyao Li\" na PVLDB po 2005 roku.",
        "query": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;",
        "query_pl": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have cooperated with \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi autorów, którzy współpracowali z \"H. V. Jagadish\".",
        "query": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .",
        "question_pl": "Zwróć mi dokumenty napisane przez \"H. V. Jagadish\" i \"Divesh Srivastava\" przed 2000 rokiem.",
        "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;",
        "query_pl": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have cited the papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi autorów, którzy cytowali prace \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
        "question_pl": "Zwróć mi liczbę artykułów napisanych przez \"H. V. Jagadisha\" i \"Divesha Srivastavę\".",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .",
        "question_pl": "Zwróć mi liczbę artykułów napisanych przez \"H. V. Jagadisha\" i \"Divesha Srivastavę\" przed 2000 rokiem.",
        "query": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;"
    },
    {
        "db_id": "academic",
        "question": "return me the number of papers written by \" H. V. Jagadish \" , \" Yunyao Li \" , and \" Cong Yu \" .",
        "question_pl": "Zwróć mi liczbę artykułów napisanych przez \"H. V. Jagadisha\", \"Yunyao Li\" i \"Cong Yu\".",
        "query": "SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"Cong Yu\" AND t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Yunyao Li\";",
        "query_pl": "SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"Cong Yu\" AND t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Yunyao Li\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors who have cooperated with \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi liczbę autorów, którzy współpracowali z \"H. V. Jagadish\".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the number of authors who have cited the papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi liczbę autorów, którzy cytowali prace \"H. V. Jagadisha\".",
        "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with more than 200 citations .",
        "question_pl": "Zwróć mi artykuły napisane przez \"H. V. Jagadish\" i \"Divesh Srivastava\" z ponad 200 cytatami.",
        "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.citation_num  >  200;",
        "query_pl": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.citation_num  >  200;"
    },
    {
        "db_id": "academic",
        "question": "return me the author who has the most number of papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi autora, który ma najwięcej artykułów zawierających słowo kluczowe \"Relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the conference that has the most number of papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi konferencję z największą liczbą referatów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the conference, which has the most number of papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi konferencję, która ma najwięcej referatów zawierających słowo kluczowe \"Relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the journal that has the most number of papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi czasopismo, które ma największą liczbę artykułów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the journal, which has the most number of papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi czasopismo, które ma najwięcej artykułów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the keyword, which have been contained by the most number of papers in VLDB conference .",
        "question_pl": "zwróć mi słowo kluczowe, które zostało zawarte w największej liczbie artykułów na konferencji VLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the keyword, which have been contained by the most number of papers in PVLDB .",
        "question_pl": "zwróć mi słowo kluczowe, które zostało zawarte w największej liczbie dokumentów w PVLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the keyword, which have been contained by the most number of papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi słowo kluczowe, które zostało zawarte w największej liczbie artykułów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the author in the \" University of Michigan \" whose papers have the most total citations .",
        "question_pl": "Zwróć mi autora z \"Uniwersytet Michigan\", którego artykuły mają najwięcej cytowań.",
        "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the author in the \" University of Michigan \" whose papers in Databases area have the most total citations .",
        "question_pl": "Zwróć mi autora w \"Uniwersytet Michigan\", którego artykuły w obszarze Bazy danych mają najwięcej cytowań.",
        "query": "SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"Databases\" AND t6.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"Bazy danych\" AND t6.name  =  \"Uniwersytet Michigan\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with the most number of citations .",
        "question_pl": "Zwróć mi artykuły napisane przez \" H. V. Jagadish \" i \" Divesh Srivastava \" z największą liczbą cytowań.",
        "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"Divesh Srivastava\" AND t1.name  =  \"H. V. Jagadish\" ORDER BY t5.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"Divesh Srivastava\" AND t1.name  =  \"H. V. Jagadish\" ORDER BY t5.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the conferences, which have more than 10 papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi konferencje, na których wygłoszono ponad 10 referatów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the conference, which have the most number of papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi konferencję, na której jest najwięcej referatów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the journals, which have more than 10 papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi czasopisma, w których znajduje się więcej niż 10 artykułów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the journal, which have the most number of papers by \" H. V. Jagadish \" .",
        "question_pl": "Zwróć mi czasopismo, w którym znajduje się najwięcej artykułów autorstwa \"H. V. Jagadisha\".",
        "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper with the most citations .",
        "question_pl": "Zwróć mi artykuł z największą liczbą cytowań.",
        "query": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;",
        "query_pl": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in Databases area with the most citations .",
        "question_pl": "Zwróć mi artykuł w obszarze Bazy danych z największą liczbą cytowań.",
        "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" ORDER BY t3.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Bazy danych\" ORDER BY t3.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in PVLDB with the most citations .",
        "question_pl": "zwróć mi artykuł w PVLDB z największą liczbą cytowań.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper in VLDB conference with the most citations .",
        "question_pl": "zwróć mi artykuł z konferencji VLDB z największą liczbą cytowań.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper by \" H. V. Jagadish \" with the most citations .",
        "question_pl": "Zwróć mi artykuł \"H. V. Jagadish\" z największą liczbą cytowań.",
        "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" ORDER BY t3.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" ORDER BY t3.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 with the most citations .",
        "question_pl": "zwróć mi artykuł po 2000 roku z największą liczbą cytowań.",
        "query": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;",
        "query_pl": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in Databases area with the most citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku w obszarze Bazy danych z największą liczbą cytowań.",
        "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Bazy danych\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in PVLDB with the most citations .",
        "question_pl": "zwróć mi artykuł po 2000 roku w PVLDB z największą liczbą cytowań.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the paper after 2000 in VLDB conference with the most citations .",
        "question_pl": "Zwróć mi artykuł po 2000 roku na konferencji VLDB z największą liczbą cytowań.",
        "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;",
        "query_pl": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have more than 10 papers in PVLDB .",
        "question_pl": "Zwróć mi autorów, którzy mają więcej niż 10 artykułów w PVLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have the most number of papers in PVLDB .",
        "question_pl": "Zwróć mi autorów, którzy mają najwięcej artykułów w PVLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have more than 10 papers containing keyword \" Relational Database \" .",
        "question_pl": "Zwróć mi autorów, którzy mają więcej niż 10 artykułów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the conferences, which have more than 60 papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi konferencje, które mają ponad 60 referatów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;",
        "query_pl": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;"
    },
    {
        "db_id": "academic",
        "question": "return me the journals, which have more than 60 papers containing keyword \" Relational Database \" .",
        "question_pl": "zwróć mi czasopisma, w których znajduje się ponad 60 artykułów zawierających słowo kluczowe \"relacyjna baza danych\".",
        "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;",
        "query_pl": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relacyjna baza danych\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords, which have been contained by more than 100 papers in VLDB conference .",
        "question_pl": "zwróć mi słowa kluczowe, które zostały zawarte w ponad 100 artykułach na konferencji VLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords, which have been contained by more than 100 papers in PVLDB .",
        "question_pl": "zwróć mi słowa kluczowe, które zostały zawarte w ponad 100 dokumentach w PVLDB.",
        "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;"
    },
    {
        "db_id": "academic",
        "question": "return me the keywords, which have been contained by more than 10 papers of \" H. V. Jagadish \" .",
        "question_pl": "zwróć mi słowa kluczowe, które zostały zawarte w ponad 10 artykułach \"H. V. Jagadisha\".",
        "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;",
        "query_pl": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the authors who have more than 10 papers in the VLDB conference .",
        "question_pl": "Zwróć mi autorów, którzy mają więcej niż 10 artykułów na konferencji VLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
    },
    {
        "db_id": "academic",
        "question": "return me the author who has the most number of papers in the VLDB conference .",
        "question_pl": "Zwróć mi autora, który ma najwięcej artykułów na konferencji VLDB.",
        "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
    },
    {
        "db_id": "academic",
        "question": "return me the author in the \" University of Michigan \" whose papers have more than 5000 total citations .",
        "question_pl": "Zwróć mi autora z \"Uniwersytet Michigan\", którego prace mają łącznie ponad 5000 cytowań.",
        "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;",
        "query_pl": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"Uniwersytet Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"
    },
    {
        "db_id": "academic",
        "question": "return me the author in the \" University of Michigan \" in Databases area whose papers have more than 5000 total citations .",
        "question_pl": "Zwróć mi autora w obszarze \"Uniwersytet Michigan\" w bazach danych, którego artykuły mają łącznie ponad 5000 cytowań.",
        "query": "SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;",
        "query_pl": "SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"Bazy danych\" AND t5.name  =  \"Uniwersytet Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"
    },
    {
        "db_id": "imdb",
        "question": "What year is the movie \" The Imitation Game \" from ?",
        "question_pl": "Z którego roku pochodzi film \"The Imitation Game\"?",
        "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
        "query_pl": "SELECT release_year FROM movie WHERE title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "What year was the movie \" The Imitation Game \" produced",
        "question_pl": "W którym roku został wyprodukowany film \"The Imitation Game\"?",
        "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
        "query_pl": "SELECT release_year FROM movie WHERE title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "What year was \" Benedict Cumberbatch \" born ?",
        "question_pl": "W którym roku urodził się Benedict Cumberbatch?",
        "query": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";",
        "query_pl": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";"
    },
    {
        "db_id": "imdb",
        "question": "In what year was \" Benedict Cumberbatch \" born",
        "question_pl": "W którym roku urodził się \" Benedict Cumberbatch \"?",
        "query": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";",
        "query_pl": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the nationality of the actress \" Christoph Waltz \" ?",
        "question_pl": "Jakiej narodowości jest aktorka \" Christoph Waltz \" ?",
        "query": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";",
        "query_pl": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the nationality of the actor \" Christoph Waltz \" ?",
        "question_pl": "Jakiej narodowości jest aktor \" Christoph Waltz \" ?",
        "query": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";",
        "query_pl": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies produced in 2015",
        "question_pl": "Znajdź wszystkie filmy wyprodukowane w 2015 roku",
        "query": "SELECT title FROM movie WHERE release_year  =  2015;",
        "query_pl": "SELECT title FROM movie WHERE release_year  =  2015;"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors born in \" Tehran \"",
        "question_pl": "Znajdź wszystkich aktorów urodzonych w \" Teheran \"",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Teheran\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors born in Tehran",
        "question_pl": "Znajdź wszystkich aktorów urodzonych w Teheranie",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Teheran\";"
    },
    {
        "db_id": "imdb",
        "question": "Which actors were born in Tehran",
        "question_pl": "Którzy aktorzy urodzili się w Teheranie?",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Teheran\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors who are from Afghanistan",
        "question_pl": "Znajdź wszystkich aktorów pochodzących z Afganistanu",
        "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
        "query_pl": "SELECT name FROM actor WHERE nationality  =  \"Afganistan\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors from Afghanistan",
        "question_pl": "Znajdź wszystkich aktorów z Afganistanu",
        "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
        "query_pl": "SELECT name FROM actor WHERE nationality  =  \"Afganistan\";"
    },
    {
        "db_id": "imdb",
        "question": "Give me the name of all the actors from Afghanistan",
        "question_pl": "Podaj mi nazwiska wszystkich aktorów z Afganistanu",
        "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
        "query_pl": "SELECT name FROM actor WHERE nationality  =  \"Afganistan\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors who were born in 1984",
        "question_pl": "Znajdź wszystkich aktorów urodzonych w 1984 roku",
        "query": "SELECT name FROM actor WHERE birth_year  =  1984;",
        "query_pl": "SELECT name FROM actor WHERE birth_year  =  1984;"
    },
    {
        "db_id": "imdb",
        "question": "When was \" Kevin Spacey \" born ?",
        "question_pl": "Kiedy urodził się \"Kevin Spacey\"?",
        "query": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";",
        "query_pl": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";"
    },
    {
        "db_id": "imdb",
        "question": "In what year was \" Kevin Spacey \" born ?",
        "question_pl": "W którym roku urodził się \"Kevin Spacey\"?",
        "query": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";",
        "query_pl": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";"
    },
    {
        "db_id": "imdb",
        "question": "Where is the birth place of \" Kevin Spacey \"",
        "question_pl": "Gdzie jest miejsce urodzenia \"Kevina Spacey\"?",
        "query": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";",
        "query_pl": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";"
    },
    {
        "db_id": "imdb",
        "question": "In what city was \" Kevin Spacey \" born ?",
        "question_pl": "W jakim mieście urodził się \"Kevin Spacey\"?",
        "query": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";",
        "query_pl": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the nationality of \" Kevin Spacey \" ?",
        "question_pl": "Jakiej narodowości jest \" Kevin Spacey \" ?",
        "query": "SELECT nationality FROM director WHERE name  =  \"director_name0\";",
        "query_pl": "SELECT nationality FROM director WHERE name  =  \"director_name0\";"
    },
    {
        "db_id": "imdb",
        "question": "How much was the budget of \" Finding Nemo \"",
        "question_pl": "Ile wynosił budżet filmu \"Finding Nemo\"?",
        "query": "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";",
        "query_pl": "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies directed by \" Steven Spielberg \" after 2006",
        "question_pl": "Znajdź wszystkie filmy wyreżyserowane przez \" Steven Spielberg \" po 2006 roku",
        "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\" AND t3.release_year  >  2006;",
        "query_pl": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\" AND t3.release_year  >  2006;"
    },
    {
        "db_id": "imdb",
        "question": "Who is the director of the movie \" James Bond \" ?",
        "question_pl": "Kto jest reżyserem filmu \"James Bond\"?",
        "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
        "query_pl": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"
    },
    {
        "db_id": "imdb",
        "question": "Who directed the movie \" James Bond \" ?",
        "question_pl": "Kto wyreżyserował film \"James Bond\"?",
        "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
        "query_pl": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"
    },
    {
        "db_id": "imdb",
        "question": "List \" James Bond \" directors",
        "question_pl": "Lista \" James Bond \" Reżyserzy",
        "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
        "query_pl": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"
    },
    {
        "db_id": "imdb",
        "question": "Find the actor who played \" Alan Turing \" in the movie \" The Imitation Game \"",
        "question_pl": "Znajdź aktora, który zagrał \"Alana Turinga\" w filmie \"Gra pozorów\".",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "Who acted \" Alan Turing \" in the movie \" The Imitation Game \" ?",
        "question_pl": "Kto zagrał rolę Alana Turinga w filmie \"The Imitation Game\"?",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "Who was the actor that played \" Alan Turing \" in the movie \" The Imitation Game \" ?",
        "question_pl": "Kto był aktorem grającym Alana Turinga w filmie \"Gra pozorów\"?",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "Who acts as \" Alan Turing \" in the movie \" The Imitation Game \" ?",
        "question_pl": "Kto wciela się w rolę Alana Turinga w filmie \"The Imitation Game\"?",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "Who is the actor playing \" Alan Turing \" in \" The Imitation Game \" ?",
        "question_pl": "Kto jest aktorem grającym \"Alana Turinga\" w \"The Imitation Game\"?",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"Imitation Game\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the genre of the movie \" Jurassic Park \" ?",
        "question_pl": "Jaki jest gatunek filmu \"Park Jurajski\"?",
        "query": "SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Jurassic Park\";",
        "query_pl": "SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Park Jurajski\";"
    },
    {
        "db_id": "imdb",
        "question": "Who was the director of the movie Joy from 2015 ?",
        "question_pl": "Kto był reżyserem filmu Joy z 2015 roku?",
        "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"Joy\";",
        "query_pl": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"Radość\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies written by \" Matt Damon \"",
        "question_pl": "Znajdź wszystkie filmy, których autorem jest \" Matt Damon \"",
        "query": "SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"Matt Damon\";",
        "query_pl": "SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"Matt Damon\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies written and produced by \" Woody Allen \"",
        "question_pl": "Znajdź wszystkie filmy napisane i wyprodukowane przez \" Woody Allen \"",
        "query": "SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"Woody Allen\" AND t4.name  =  \"Woody Allen\";",
        "query_pl": "SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"Woody Allen\" AND t4.name  =  \"Woody Allen\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies featuring \" Robin Wright \"",
        "question_pl": "Znajdź wszystkie filmy z udziałem \" Robin Wright \"",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"
    },
    {
        "db_id": "imdb",
        "question": "What are all the movies featuring \" Robin Wright \" ?",
        "question_pl": "Jakie są wszystkie filmy z udziałem \" Robin Wright \" ?",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies in which \" Robin Wright \" appears",
        "question_pl": "Znajdź wszystkie filmy, w których występuje \" Robin Wright \"",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"
    },
    {
        "db_id": "imdb",
        "question": "What was the budget of the movie Juno from 2007 ?",
        "question_pl": "Jaki był budżet filmu Juno z 2007 roku?",
        "query": "SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"Juno\";",
        "query_pl": "SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"Juno\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all Sci-Fi produced in year 2010",
        "question_pl": "Znajdź wszystkie filmy sci-fi wyprodukowane w 2010 roku",
        "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;",
        "query_pl": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;"
    },
    {
        "db_id": "imdb",
        "question": "List all the Sci-Fi movies which released in 2010",
        "question_pl": "Lista wszystkich filmów sci-fi, które ukazały się w 2010 roku",
        "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;",
        "query_pl": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors born in \" Austin \" after 1980",
        "question_pl": "Znajdź wszystkich aktorów urodzonych w \" Austin \" po 1980 roku",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"
    },
    {
        "db_id": "imdb",
        "question": "Who are the actors born in \" Austin \" after 1980 ?",
        "question_pl": "Kim są aktorzy urodzeni w Austin po 1980 roku?",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors from Austin born after 1980",
        "question_pl": "Znajdź wszystkich aktorów z Austin urodzonych po 1980 roku",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies by directors born in \" Los Angeles \"",
        "question_pl": "Znajdź wszystkie filmy reżyserów urodzonych w \" Los Angeles \"",
        "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"Los Angeles\";",
        "query_pl": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"Los Angeles\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors who were born in \" New York City \" in 1984",
        "question_pl": "Znajdź wszystkich aktorów, którzy urodzili się w \" Nowego Jorku \" w 1984 roku",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  =  1984;",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Nowy Jork\" AND birth_year  =  1984;"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies about nuclear weapons",
        "question_pl": "Znajdź wszystkie filmy o broni jądrowej",
        "query": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";",
        "query_pl": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"broń jądrowa\";"
    },
    {
        "db_id": "imdb",
        "question": "What are the movies related to nuclear weapons",
        "question_pl": "Jakie filmy są związane z bronią jądrową?",
        "query": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";",
        "query_pl": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"broń jądrowa\";"
    },
    {
        "db_id": "imdb",
        "question": "Which movies did \" Alfred Hitchcock \" direct ?",
        "question_pl": "Które filmy wyreżyserował \"Alfred Hitchcock\"?",
        "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Alfred Hitchcock\";",
        "query_pl": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Alfred Hitchcock\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \"",
        "question_pl": "Znajdź wszystkie filmy w reżyserii \" Asghar Farhadi \" i z udziałem \" Taraneh Alidoosti \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"
    },
    {
        "db_id": "imdb",
        "question": "What are all the movies directed by \" Asghar Farhadi \" featuring \" Taraneh Alidoosti \" ?",
        "question_pl": "Jakie są wszystkie filmy wyreżyserowane przez \" Asghar Farhadi \" z udziałem \" Taraneh Alidoosti \" ?",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"
    },
    {
        "db_id": "imdb",
        "question": "How many movies are there that are directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \" ?",
        "question_pl": "Ile jest filmów wyreżyserowanych przez \"Asghara Farhadiego\" z udziałem \"Taraneh Alidoosti\"?",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"
    },
    {
        "db_id": "imdb",
        "question": "List all the movies directed by \" Asghar Farhadi \" in which \" Taraneh Alidoosti \" played",
        "question_pl": "Lista wszystkich filmów wyreżyserowanych przez \" Asghar Farhadi \", w których zagrał \" Taraneh Alidoosti \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"
    },
    {
        "db_id": "imdb",
        "question": "What are all the tv series created by \" Shonda Rhimes \" ?",
        "question_pl": "Jakie są wszystkie seriale stworzone przez \"Shondę Rhimes\"?",
        "query": "SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Shonda Rhimes\";",
        "query_pl": "SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Shonda Rhimes\";"
    },
    {
        "db_id": "imdb",
        "question": "Who acts \" Olivia Pope \" in the series Scandal ?",
        "question_pl": "Kto gra \"Olivię Pope\" w serialu Scandal?",
        "query": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"Olivia Pope\" AND t2.title  =  \"Scandal\";",
        "query_pl": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"Olivia Pope\" AND t2.title  =  \"Skandal\";"
    },
    {
        "db_id": "imdb",
        "question": "Who is the writer of the movie \" The Truman Show \"",
        "question_pl": "Kto jest scenarzystą filmu \"Truman Show\"?",
        "query": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";",
        "query_pl": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"Truman Show\";"
    },
    {
        "db_id": "imdb",
        "question": "Who is the writer of \" The Truman Show \"",
        "question_pl": "Kto jest scenarzystą filmu \"Truman Show\"?",
        "query": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";",
        "query_pl": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"Truman Show\";"
    },
    {
        "db_id": "imdb",
        "question": "What are the series featuring \" Scott Foley \" ?",
        "question_pl": "Jakie są seriale z udziałem \"Scott Foley\"?",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";"
    },
    {
        "db_id": "imdb",
        "question": "What are the series in which \" Scott Foley \" is an actor ?",
        "question_pl": "W jakich serialach występuje \" Scott Foley \" ?",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";"
    },
    {
        "db_id": "imdb",
        "question": "Find the directors of all movies featuring \" Kate Winslet \"",
        "question_pl": "Znajdź reżyserów wszystkich filmów z udziałem \" Kate Winslet \"",
        "query": "SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Kate Winslet\";",
        "query_pl": "SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Kate Winslet\";"
    },
    {
        "db_id": "imdb",
        "question": "Find the producers of all movies in which \" Kate Winslet \" is an actor",
        "question_pl": "Znajdź producentów wszystkich filmów, w których \" Kate Winslet \" jest aktorem",
        "query": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"Kate Winslet\";",
        "query_pl": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"Kate Winslet\";"
    },
    {
        "db_id": "imdb",
        "question": "Who is the director of the tv series \" House of Cards \" from 2013 ?",
        "question_pl": "Kto jest reżyserem serialu telewizyjnego \"House of Cards\" z 2013 roku?",
        "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"House of Cards\";",
        "query_pl": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"House of Cards\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all the female actors from Austin",
        "question_pl": "Znajdź wszystkie aktorki z Austin",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND gender  =  \"female\";",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND gender  =  \"kobieta\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors from Italy born after 1980",
        "question_pl": "Znajdź wszystkich aktorów z Włoch urodzonych po 1980 roku",
        "query": "SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"Italy\";",
        "query_pl": "SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"Włochy\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all the female actors born in \" New York City \" after 1980",
        "question_pl": "Znajdź wszystkie aktorki urodzone w \" Nowy Jork \" po 1980 roku",
        "query": "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";",
        "query_pl": "SELECT name FROM actor WHERE birth_city  =  \"Nowy Jork\" AND birth_year  >  1980 AND gender  =  \"kobieta\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all the female actors in the movie \" Saving Private Ryan \"",
        "question_pl": "Znajdź wszystkie aktorki w filmie \"Szeregowiec Ryan\".",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"female\" AND t3.title  =  \"Saving Private Ryan\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"kobieta\" AND t3.title  =  \"Szeregowiec Ryan\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all the directors who are from Afghanistan",
        "question_pl": "Znajdź wszystkich reżyserów pochodzących z Afganistanu",
        "query": "SELECT name FROM director WHERE nationality  =  \"Afghanistan\";",
        "query_pl": "SELECT name FROM director WHERE nationality  =  \"Afganistan\";"
    },
    {
        "db_id": "imdb",
        "question": "Find the actors who played in the movie \" Camp X-Ray \"",
        "question_pl": "Znajdź aktorów, którzy zagrali w filmie \"Camp X-Ray\".",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Camp X-Ray\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Obóz X-Ray\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors from Canada who acted in \" James Bond \" movies",
        "question_pl": "Znajdź wszystkich aktorów z Kanady, którzy zagrali w filmach \" James Bond \"",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Canada\" AND t3.title  =  \"James Bond\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Kanada\" AND t3.title  =  \"James Bond\";"
    },
    {
        "db_id": "imdb",
        "question": "find all films in which \" Rowan Atkinson \" acted as \" Mr. Bean \"",
        "question_pl": "Znajdź wszystkie filmy, w których \" Rowan Atkinson \" wystąpił jako \" Mr. Bean \"",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Rowan Atkinson\" AND t3.role  =  \"Mr. Bean\";",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Rowan Atkinson\" AND t3.role  =  \"Mr. Bean\";"
    },
    {
        "db_id": "imdb",
        "question": "where is the director of \" The Past \" from",
        "question_pl": "Skąd pochodzi reżyser filmu \"Przeszłość\"?",
        "query": "SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"The Past\";",
        "query_pl": "SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Przeszłość\";"
    },
    {
        "db_id": "imdb",
        "question": "who acted the role of \" Mr. Bean \"",
        "question_pl": "który wcielił się w rolę \"Pana Fasoli\"",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"Mr. Bean\";",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"Mr. Bean\";"
    },
    {
        "db_id": "imdb",
        "question": "what are the genres of movies directed by \" Asghar Farhadi \"",
        "question_pl": "Jakie są gatunki filmów wyreżyserowanych przez \" Asghar Farhadi \"?",
        "query": "SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"Asghar Farhadi\";",
        "query_pl": "SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"Asghar Farhadi\";"
    },
    {
        "db_id": "imdb",
        "question": "Which movie had the character \" Daffy Duck \"",
        "question_pl": "W którym filmie pojawiła się postać \"Kaczor Daffy\"?",
        "query": "SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"Daffy Duck\";",
        "query_pl": "SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"Kaczor Daffy\";"
    },
    {
        "db_id": "imdb",
        "question": "What are the major roles in the movie \" Daddy Long Legs \"",
        "question_pl": "Jakie są główne role w filmie \"Długonogi tatuś\"?",
        "query": "SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Daddy Long Legs\";",
        "query_pl": "SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Daddy Long Legs\";"
    },
    {
        "db_id": "imdb",
        "question": "List all the directors of movies about nuclear weapons",
        "question_pl": "Wymień wszystkich reżyserów filmów o broni nuklearnej",
        "query": "SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"nuclear weapons\";",
        "query_pl": "SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"broń jądrowa\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies in which \" Jennifer Aniston \" acted after 2010 ?",
        "question_pl": "Jaka jest liczba filmów, w których \" Jennifer Aniston \" zagrała po 2010 roku ?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Jennifer Aniston\" AND t2.release_year  >  2010;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Jennifer Aniston\" AND t2.release_year  >  2010;"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of actors in the movie \" Saving Private Ryan \" ?",
        "question_pl": "Jaka jest liczba aktorów w filmie \"Szeregowiec Ryan\"?",
        "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Szeregowiec Ryan\";"
    },
    {
        "db_id": "imdb",
        "question": "How many actors are in the movie \" Saving Private Ryan \" ?",
        "question_pl": "Ilu aktorów występuje w filmie \"Szeregowiec Ryan\"?",
        "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Szeregowiec Ryan\";"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Steven Spielberg \" direct ?",
        "question_pl": "Ile filmów wyreżyserował \"Steven Spielberg\"?",
        "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\";",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\";"
    },
    {
        "db_id": "imdb",
        "question": "How many movies were produced in the year 2013 ?",
        "question_pl": "Ile filmów zostało wyprodukowanych w 2013 roku?",
        "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
        "query_pl": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies produced in 2013 ?",
        "question_pl": "Jaka jest liczba filmów wyprodukowanych w 2013 roku?",
        "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
        "query_pl": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies directed by \" Woody Allen \" per year ?",
        "question_pl": "Ile filmów rocznie reżyseruje \"Woody Allen\"?",
        "query": "SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Woody Allen\" GROUP BY t3.release_year;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Woody Allen\" GROUP BY t3.release_year;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Shahab Hosseini \" act in ?",
        "question_pl": "W ilu filmach zagrał \" Shahab Hosseini \" ?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies in which \" Shahab Hosseini \" acted ?",
        "question_pl": "Jaka jest liczba filmów, w których zagrał \" Shahab Hosseini \"?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies featuring \" Shahab Hosseini \" ?",
        "question_pl": "Jaka jest liczba filmów z udziałem \" Shahab Hosseini \" ?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Shahab Hosseini \" act in",
        "question_pl": "W ilu filmach wystąpił \" Shahab Hosseini \"?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"
    },
    {
        "db_id": "imdb",
        "question": "How many actors were born in \" Los Angeles \" after 2000 ?",
        "question_pl": "Ilu aktorów urodziło się w Los Angeles po 2000 roku?",
        "query": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Los Angeles\" AND birth_year  >  2000;",
        "query_pl": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Los Angeles\" AND birth_year  >  2000;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Humphrey Bogart \" act in before 1942 ?",
        "question_pl": "W ilu filmach zagrał Humphrey Bogart przed 1942 rokiem?",
        "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Humphrey Bogart\" AND t2.release_year  <  1942;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Humphrey Bogart\" AND t2.release_year  <  1942;"
    },
    {
        "db_id": "imdb",
        "question": "What is the number of movies that \" Brad Pitt \" acts in per year ?",
        "question_pl": "W ilu filmach rocznie występuje \"Brad Pitt\"?",
        "query": "SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Brad Pitt\" GROUP BY t2.release_year;",
        "query_pl": "SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Brad Pitt\" GROUP BY t2.release_year;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies about Iraq war were produced in 2015 ?",
        "question_pl": "Ile filmów o wojnie w Iraku wyprodukowano w 2015 roku?",
        "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Iraq war\" AND t3.release_year  =  2015;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Wojna w Iraku\" AND t3.release_year  =  2015;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies about Persians were released after 1990 ?",
        "question_pl": "Ile filmów o Persach zostało wydanych po 1990 roku?",
        "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Persians\" AND t3.release_year  >  1990;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Persowie\" AND t3.release_year  >  1990;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Quentin Tarantino \" direct after 2010 ?",
        "question_pl": "Ile filmów wyreżyserował \"Quentin Tarantino\" po 2010 roku?",
        "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  >  2010;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  >  2010;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Quentin Tarantino \" direct before 2010 ?",
        "question_pl": "Ile filmów wyreżyserował \"Quentin Tarantino\" przed 2010 rokiem?",
        "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  <  2010;",
        "query_pl": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  <  2010;"
    },
    {
        "db_id": "imdb",
        "question": "How many movies did \" Quentin Tarantino \" direct before 2002 and after 2010 ?",
        "question_pl": "Ile filmów wyreżyserował \"Quentin Tarantino\" przed 2002 rokiem i po 2010 roku?",
        "query": "SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"Quentin Tarantino\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;",
        "query_pl": "SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"Quentin Tarantino\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;"
    },
    {
        "db_id": "imdb",
        "question": "How many female actors were born in \" New York City \" after 1980 ?",
        "question_pl": "Ile aktorek urodziło się w Nowym Jorku po 1980 roku?",
        "query": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";",
        "query_pl": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Nowy Jork\" AND birth_year  >  1980 AND gender  =  \"kobieta\";"
    },
    {
        "db_id": "imdb",
        "question": "find the number of actors from Iran who played in \" Jim Jarmusch \" movies",
        "question_pl": "Znajdź liczbę aktorów z Iranu, którzy zagrali w filmach \"Jim Jarmusch\"",
        "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"Iran\" AND t3.name  =  \"Jim Jarmusch\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"Iran\" AND t3.name  =  \"Jim Jarmusch\";"
    },
    {
        "db_id": "imdb",
        "question": "How many actors from China have acted in \" Rush Hour 3 \"",
        "question_pl": "Ilu aktorów z Chin zagrało w filmie \"Godziny szczytu 3\"?",
        "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"China\" AND t3.title  =  \"Rush Hour 3\";",
        "query_pl": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Chiny\" AND t3.title  =  \"Godziny szczytu 3\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies that star both \" Woody Strode \" and \" Jason Robards \"",
        "question_pl": "Znajdź wszystkie filmy, w których występują zarówno \" Woody Strode \", jak i \" Jason Robards \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies featuring \" Woody Strode \" and \" Jason Robards \"",
        "question_pl": "Znajdź wszystkie filmy z udziałem \" Woody Strode \" i \" Jason Robards \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies featuring both \" Woody Strode \" and \" Jason Robards \"",
        "question_pl": "Znajdź wszystkie filmy z udziałem \" Woody Strode \" i \" Jason Robards \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all movies featuring \" Jason Robards \" and \" Woody Strode \"",
        "question_pl": "Znajdź wszystkie filmy z udziałem \" Jason Robards \" i \" Woody Strode \"",
        "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
        "query_pl": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"
    },
    {
        "db_id": "imdb",
        "question": "Find all actors who acted in the same movie as \" Tom Hanks \"",
        "question_pl": "Znajdź wszystkich aktorów, którzy zagrali w tym samym filmie co \" Tom Hanks \"",
        "query": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"Tom Hanks\";",
        "query_pl": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"Tom Hanks\";"
    },
    {
        "db_id": "imdb",
        "question": "What movies have the same director as the movie \" Revolutionary Road \" ?",
        "question_pl": "Jakie filmy mają tego samego reżysera co film \"Revolutionary Road\"?",
        "query": "SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"Revolutionary Road\";",
        "query_pl": "SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"Revolutionary Road\";"
    },
    {
        "db_id": "imdb",
        "question": "Find the movie which is classified in the most number of genres",
        "question_pl": "Znajdź film sklasyfikowany w największej liczbie gatunków.",
        "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;",
        "query_pl": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "which movie has the most number of actors from China ?",
        "question_pl": "Który film ma najwięcej aktorów z Chin?",
        "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"China\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;",
        "query_pl": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"Chiny\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "Find the actors who played in the latest movie by \" Quentin Tarantino \"",
        "question_pl": "Znajdź aktorów, którzy zagrali w najnowszym filmie Quentina Tarantino.",
        "query": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"Quentin Tarantino\" ORDER BY t5.release_year DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"Quentin Tarantino\" ORDER BY t5.release_year DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "Find the name and budget of the latest movie by \" Quentin Tarantino \"",
        "question_pl": "Znajdź nazwę i budżet najnowszego filmu \" Quentin Tarantino \"",
        "query": "SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" ORDER BY t3.release_year DESC LIMIT 1;",
        "query_pl": "SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" ORDER BY t3.release_year DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "What is the latest movie by \" Jim Jarmusch \"",
        "question_pl": "Jaki jest najnowszy film Jima Jarmuscha?",
        "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Jim Jarmusch\" ORDER BY t3.release_year DESC LIMIT 1;",
        "query_pl": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Jim Jarmusch\" ORDER BY t3.release_year DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "Which producer has worked with the most number of directors ?",
        "question_pl": "Który producent współpracował z największą liczbą reżyserów?",
        "query": "SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;"
    },
    {
        "db_id": "imdb",
        "question": "Find the latest movie which \" Gabriele Ferzetti \" acted in",
        "question_pl": "Znajdź najnowszy film, w którym zagrał \" Gabriele Ferzetti \"",
        "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"Gabriele Ferzetti\" ORDER BY t3.release_year DESC LIMIT 1;",
        "query_pl": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"Gabriele Ferzetti\" ORDER BY t3.release_year DESC LIMIT 1;"
    },
    {
        "db_id": "restaurants",
        "question": "how many buttercup kitchen are there in san francisco ?",
        "question_pl": "Ile buttercup kitchen jest w san francisco?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many chinese restaurants are there in the bay area ?",
        "question_pl": "Ile jest chińskich restauracji w rejonie zatoki?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"chiński\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many places for chinese food are there in the bay area ?",
        "question_pl": "Ile jest miejsc z chińskim jedzeniem w rejonie zatoki?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"chiński\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many chinese places are there in the bay area ?",
        "question_pl": "Ile jest chińskich miejsc w rejonie zatoki?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"chiński\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many places for chinese are there in the bay area ?",
        "question_pl": "Ile jest miejsc dla Chińczyków w rejonie zatoki?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"chiński\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many jamerican cuisine are there in santa cruz county ?",
        "question_pl": "Ile kuchni jamerykańskiej jest w hrabstwie santa cruz?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"hrabstwo santa cruz\" AND t1.name  =  \"kuchnia jamerykańska\";"
    },
    {
        "db_id": "restaurants",
        "question": "where is jamerican cuisine ?",
        "question_pl": "Gdzie jest kuchnia amerykańska?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"kuchnia jamerykańska\";"
    },
    {
        "db_id": "restaurants",
        "question": "what is the best french restaurant in san francisco ?",
        "question_pl": "Jaka jest najlepsza francuska restauracja w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "What is the best french in san francisco ?",
        "question_pl": "Jaki jest najlepszy francuski w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "What is the best place in san francisco for french food ?",
        "question_pl": "Jakie jest najlepsze miejsce z kuchnią francuską w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Give me the best place in san francisco for french food ?",
        "question_pl": "Podaj mi najlepsze miejsce w San Francisco na francuskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Where is the best french in san francisco ?",
        "question_pl": "Gdzie jest najlepszy francuski w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Give me the best french in san francisco ?",
        "question_pl": "Podaj mi najlepszy francuski w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Where is the best french restaurant in san francisco ?",
        "question_pl": "Gdzie jest najlepsza francuska restauracja w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Give me the best restaurant in san francisco for french food ?",
        "question_pl": "Podaj mi najlepszą restaurację w San Francisco z francuskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Give me the best french restaurant in san francisco ?",
        "question_pl": "Podaj mi najlepszą francuską restaurację w San Francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "What is the best restaurant in san francisco for french food ?",
        "question_pl": "Jaka jest najlepsza restauracja w San Francisco z kuchnią francuską?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "Where is the best restaurant in san francisco for french food ?",
        "question_pl": "Gdzie jest najlepsza restauracja w San Francisco z kuchnią francuską?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"francuski\" );"
    },
    {
        "db_id": "restaurants",
        "question": "where is denny in the bay area ?",
        "question_pl": "Gdzie jest Denny w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.name  =  \"denny\";"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good restaurants on bethel island rd in bethel island ?",
        "question_pl": "Jakie są dobre restauracje na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good restaurants on bethel island rd in bethel island ?",
        "question_pl": "Podaj mi jakieś dobre restauracje na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant on bethel island rd in bethel island ?",
        "question_pl": "Podaj mi dobrą restaurację na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what is a good restaurant on bethel island rd in bethel island ?",
        "question_pl": "Jaka jest dobra restauracja na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can we find a restaurant in alameda ?",
        "question_pl": "Gdzie możemy znaleźć restaurację w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me a restaurant in alameda ?",
        "question_pl": "Podaj mi restaurację w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"
    },
    {
        "db_id": "restaurants",
        "question": "where can we find some restaurants in alameda ?",
        "question_pl": "Gdzie możemy znaleźć jakieś restauracje w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"
    },
    {
        "db_id": "restaurants",
        "question": "where is a restaurant in alameda ?",
        "question_pl": "Gdzie jest restauracja w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants in alameda ?",
        "question_pl": "Podaj mi jakieś restauracje w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants good for french food ?",
        "question_pl": "Podaj mi jakieś restauracje dobre na francuskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some restaurants good for french food ?",
        "question_pl": "gdzie są restauracje z dobrym francuskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "how many places for french food are there in palo alto ?",
        "question_pl": "Ile jest miejsc z francuskim jedzeniem w Palo Alto?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many french restaurants are there in palo alto ?",
        "question_pl": "Ile francuskich restauracji jest w Palo Alto?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many french restaurant are there in palo alto ?",
        "question_pl": "Ile francuskich restauracji jest w palo alto?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many places for french are there in palo alto ?",
        "question_pl": "Ile jest miejsc z kuchnią francuską w Palo Alto?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many italian restaurants are in the yolo county ?",
        "question_pl": "Ile włoskich restauracji znajduje się w hrabstwie Yolo?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"yolo county\" AND t1.food_type  =  \"italian\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"hrabstwo yolo\" AND t1.food_type  =  \"włoski\";"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat french food in mountain view ?",
        "question_pl": "Gdzie mogę zjeść francuskie jedzenie w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "how many denny are there in the bay area ?",
        "question_pl": "Ilu denny jest w rejonie zatoki?",
        "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";",
        "query_pl": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.name  =  \"denny\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant in alameda ?",
        "question_pl": "Podaj mi dobrą restaurację w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good restaurants in alameda ?",
        "question_pl": "Jakie są dobre restauracje w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what is a good restaurant in alameda ?",
        "question_pl": "Jaka jest dobra restauracja w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good restaurants in alameda ?",
        "question_pl": "Podaj mi jakieś dobre restauracje w Alameda?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good restaurant on buchanan in san francisco for arabic food ?",
        "question_pl": "gdzie jest dobra restauracja na buchanan w san francisco z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some good arabics on buchanan in san francisco ?",
        "question_pl": "gdzie są jakieś dobre arabskie sklepy na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good arabic restaurant on buchanan in san francisco ?",
        "question_pl": "gdzie jest dobra arabska restauracja na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good places for arabic on buchanan in san francisco ?",
        "question_pl": "jakie są dobre miejsca na arabski na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good arabic on buchanan in san francisco ?",
        "question_pl": "podaj mi dobry arabski na buchanan w san francisco ?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants good for arabic food on buchanan in san francisco ?",
        "question_pl": "podaj mi jakieś restauracje z arabskim jedzeniem na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good place on buchanan in san francisco for arabic food ?",
        "question_pl": "podaj mi dobre miejsce na buchanan w san francisco na arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good place on buchanan in san francisco for arabic food ?",
        "question_pl": "gdzie jest dobre miejsce na buchanan w san francisco na arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat arabic food on buchanan in san francisco ?",
        "question_pl": "gdzie mogę zjeść arabskie jedzenie na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good places on buchanan in san francisco for arabic food ?",
        "question_pl": "podaj mi jakieś dobre miejsca na buchanan w san francisco z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a arabic restaurant on buchanan in san francisco ?",
        "question_pl": "gdzie jest arabska restauracja na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a restaurant on buchanan in san francisco that serves good arabic food ?",
        "question_pl": "podaj mi restaurację na buchanan w san francisco, która serwuje dobre arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant on buchanan in san francisco for arabic food ?",
        "question_pl": "podaj mi dobrą restaurację na buchanan w san francisco z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a restaurant on buchanan in san francisco that serves good arabic food ?",
        "question_pl": "gdzie jest restauracja na buchanan w san francisco, która serwuje dobre arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good restaurants on buchanan in san francisco for arabic food ?",
        "question_pl": "podaj mi jakieś dobre restauracje na buchanan w san francisco z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good places for arabic on buchanan in san francisco ?",
        "question_pl": "podaj mi jakieś dobre miejsca na arabski na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat some good arabic food on buchanan in san francisco ?",
        "question_pl": "gdzie mogę zjeść dobre arabskie jedzenie na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good arabic on buchanan in san francisco ?",
        "question_pl": "gdzie jest dobry arabski na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some restaurants good for arabic food on buchanan in san francisco ?",
        "question_pl": "gdzie są jakieś restauracje z arabskim jedzeniem na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some good places for arabic on buchanan in san francisco ?",
        "question_pl": "gdzie są jakieś dobre miejsca do nauki arabskiego na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good arabic restaurant on buchanan in san francisco ?",
        "question_pl": "podaj mi dobrą arabską restaurację na buchanan w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good arabics on buchanan in san francisco ?",
        "question_pl": "dajcie mi jakiś dobry arabik na buchanan w san francisco ?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat french food in the bay area ?",
        "question_pl": "Gdzie mogę zjeść francuskie jedzenie w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"francuski\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants on bethel island rd in bethel island ?",
        "question_pl": "Podaj mi jakieś restauracje na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\";"
    },
    {
        "db_id": "restaurants",
        "question": "give me a restaurant on bethel island rd in bethel island ?",
        "question_pl": "Podaj mi restaurację na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\";"
    },
    {
        "db_id": "restaurants",
        "question": "where can we find a restaurant on bethel island rd in bethel island ?",
        "question_pl": "Gdzie możemy znaleźć restaurację na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\";"
    },
    {
        "db_id": "restaurants",
        "question": "where can we find some restaurants on bethel island rd in bethel island ?",
        "question_pl": "Gdzie możemy znaleźć restauracje na bethel island rd w bethel island?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"wyspa bethel\" AND t2.street_name  =  \"bethel island rd\";"
    },
    {
        "db_id": "restaurants",
        "question": "where is the best restaurant in the bay area for american food ?",
        "question_pl": "Gdzie jest najlepsza restauracja z amerykańskim jedzeniem w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "where is the best restaurant in bay area for american food ?",
        "question_pl": "Gdzie jest najlepsza restauracja z amerykańskim jedzeniem w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "what is the best restaurant in bay area for american food ?",
        "question_pl": "Jaka jest najlepsza restauracja z amerykańskim jedzeniem w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "what is the best american restaurant in the bay area ?",
        "question_pl": "Jaka jest najlepsza amerykańska restauracja w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "where is the best american restaurant in the bay area ?",
        "question_pl": "Gdzie jest najlepsza amerykańska restauracja w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "what is the best american in the bay area ?",
        "question_pl": "Jaki jest najlepszy amerykański w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me the best restaurant in the bay area for american food ?",
        "question_pl": "Podaj mi najlepszą restaurację z amerykańskim jedzeniem w okolicy zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me the best restaurant in bay area for american food ?",
        "question_pl": "Podaj mi najlepszą restaurację w zatoce z amerykańskim jedzeniem?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "what is the best restaurant in the bay area for american food ?",
        "question_pl": "Jaka jest najlepsza restauracja z amerykańskim jedzeniem w Bay Area?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "where is the best american in the bay area ?",
        "question_pl": "Gdzie jest najlepszy amerykański w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me the best american in the bay area ?",
        "question_pl": "Podaj mi najlepszego Amerykanina w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me the best american restaurant in the bay area ?",
        "question_pl": "Podaj mi najlepszą amerykańską restaurację w rejonie zatoki?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"obszar zatoki\" AND t1.food_type  =  \"amerykański\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants good for french food in the yosemite and mono lake area ?",
        "question_pl": "podaj mi kilka restauracji dobrych na francuskie jedzenie w rejonie yosemite i mono lake?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good places in the yosemite and mono lake area for french food ?",
        "question_pl": "Jakie są dobre miejsca w okolicy yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant in the yosemite and mono lake area for french food ?",
        "question_pl": "Podaj mi dobrą restaurację w rejonie yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good french restaurant in the yosemite and mono lake area ?",
        "question_pl": "Podaj mi dobrą francuską restaurację w rejonie yosemite i mono lake?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good place in the yosemite and mono lake area for french food ?",
        "question_pl": "gdzie jest dobre miejsce w rejonie yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some restaurants good for french food in the yosemite and mono lake area ?",
        "question_pl": "gdzie są jakieś restauracje dobre na francuskie jedzenie w rejonie yosemite i mono lake?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good place in the yosemite and mono lake area for french food ?",
        "question_pl": "Podaj mi dobre miejsce w rejonie yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good restaurant in the yosemite and mono lake area for french food ?",
        "question_pl": "gdzie jest dobra restauracja w rejonie yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good restaurants in the yosemite and mono lake area for french food ?",
        "question_pl": "Jakie są dobre restauracje w okolicy yosemite i mono lake na francuskie jedzenie?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good french restaurant in the yosemite and mono lake area ?",
        "question_pl": "gdzie jest dobra francuska restauracja w rejonie yosemite i mono lake?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat some good french food in the yosemite and mono lake area ?",
        "question_pl": "gdzie mogę zjeść dobre francuskie jedzenie w rejonie yosemite i mono lake?",
        "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"obszar yosemite i mono lake\" AND t1.food_type  =  \"francuski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some restaurants good for arabic food in mountain view ?",
        "question_pl": "gdzie są jakieś restauracje z arabskim jedzeniem w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good places in mountain view for arabic food ?",
        "question_pl": "Jakie są dobre miejsca w Mountain View na arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some good arabic restaurants in mountain view ?",
        "question_pl": "gdzie są jakieś dobre arabskie restauracje w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "show me a good arabic restaurant in mountain view ?",
        "question_pl": "Pokaż mi dobrą arabską restaurację w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good arabic in mountain view ?",
        "question_pl": "Podaj mi dobry arabski w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good arabic restaurant in mountain view ?",
        "question_pl": "Podaj mi dobrą arabską restaurację w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good place in mountain view for arabic food ?",
        "question_pl": "Podaj mi dobre miejsce w Mountain View na arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some good arabics in mountain view ?",
        "question_pl": "Gdzie znajdziesz dobrych arabów w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a restaurant in mountain view that serves good arabic food ?",
        "question_pl": "Gdzie w Mountain View jest restauracja serwująca dobre arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good restaurants in mountain view for arabic food ?",
        "question_pl": "Jakie są dobre restauracje z arabskim jedzeniem w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants good for arabic food in mountain view ?",
        "question_pl": "Podaj mi jakieś restauracje z arabskim jedzeniem w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i eat some good arabic food in mountain view ?",
        "question_pl": "Gdzie mogę zjeść dobre arabskie jedzenie w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good places for arabic in mountain view ?",
        "question_pl": "Podaj mi jakieś dobre miejsca do nauki arabskiego w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good arabic in mountain view ?",
        "question_pl": "Gdzie jest dobry arabski w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a restaurant in mountain view that serves good arabic food ?",
        "question_pl": "Podaj mi restaurację w Mountain View, która serwuje dobre arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good arabic restaurants in mountain view ?",
        "question_pl": "Podaj mi jakieś dobre arabskie restauracje w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where are some good places for arabic in mountain view ?",
        "question_pl": "gdzie są jakieś dobre miejsca do nauki arabskiego w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good arabics in mountain view ?",
        "question_pl": "Podaj mi jakiś dobry arabski w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant in mountain view for arabic food ?",
        "question_pl": "Podaj mi dobrą restaurację w Mountain View z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good arabic restaurant in mountain view ?",
        "question_pl": "gdzie jest dobra arabska restauracja w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good places for arabic in mountain view ?",
        "question_pl": "Jakie są dobre miejsca do nauki arabskiego w Mountain View?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good restaurant in mountain view for arabic food ?",
        "question_pl": "gdzie w Mountain View jest dobra restauracja z arabskim jedzeniem?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where is a good place in mountain view for arabic food ?",
        "question_pl": "gdzie jest dobre miejsce w Mountain View na arabskie jedzenie?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"widok na góry\" AND t1.food_type  =  \"arabski\" AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "where can i find a jamerican cuisine in san francisco ?",
        "question_pl": "gdzie mogę znaleźć jamerican cuisine w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"kuchnia jamerykańska\";"
    },
    {
        "db_id": "restaurants",
        "question": "where is jamerican cuisine in san francisco ?",
        "question_pl": "gdzie jest kuchnia jamericana w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"kuchnia jamerykańska\";"
    },
    {
        "db_id": "restaurants",
        "question": "where is a jamerican cuisine in san francisco ?",
        "question_pl": "gdzie jest kuchnia jamerykańska w san francisco?",
        "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"kuchnia jamerykańska\";"
    },
    {
        "db_id": "restaurants",
        "question": "where can we find some restaurants in the bay area ?",
        "question_pl": "Gdzie możemy znaleźć jakieś restauracje w rejonie zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"obszar zatoki\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me some restaurants in the bay area ?",
        "question_pl": "Podaj mi jakieś restauracje w zatoce?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"obszar zatoki\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me a restaurant in the bay area ?",
        "question_pl": "Podaj mi restaurację w rejonie zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"obszar zatoki\" );"
    },
    {
        "db_id": "restaurants",
        "question": "where can i find a restaurant in the bay area ?",
        "question_pl": "Gdzie mogę znaleźć restaurację w rejonie zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"obszar zatoki\" );"
    },
    {
        "db_id": "restaurants",
        "question": "give me a good restaurant in the bay area ?",
        "question_pl": "Podaj mi dobrą restaurację w zatoce?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what are some good restaurants in the bay area ?",
        "question_pl": "Jakie są dobre restauracje w rejonie zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "give me some good restaurants in the bay area ?",
        "question_pl": "Podaj mi jakieś dobre restauracje w okolicy zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"
    },
    {
        "db_id": "restaurants",
        "question": "what is a good restaurant in the bay area ?",
        "question_pl": "Jaka jest dobra restauracja w rejonie zatoki?",
        "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
        "query_pl": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"
    }
]