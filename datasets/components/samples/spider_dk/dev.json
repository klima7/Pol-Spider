[
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "How many singers do we have?",
            "pl": "Ilu mamy wokalistów?"
        },
        "query": {
            "en": "SELECT count(*) FROM singer",
            "pl": "SELECT count(*) FROM singer"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What is the total number of singers?",
            "pl": "Jaka jest łączna liczba wokalistów?"
        },
        "query": {
            "en": "SELECT count(*) FROM singer",
            "pl": "SELECT count(*) FROM singer"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "Show name, country for all singers ordered by age from the oldest to the youngest.",
            "pl": "Pokaż imię i nazwisko, kraj dla wszystkich piosenkarzy uporządkowanych według wieku od najstarszego do najmłodszego."
        },
        "query": {
            "en": "SELECT name ,  country  FROM singer ORDER BY birthday ASC",
            "pl": "SELECT name ,  country  FROM singer ORDER BY birthday ASC"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are the names, countries for every singer in descending order of age?",
            "pl": "Jakie są nazwiska, kraje każdego piosenkarza w kolejności malejącej według wieku?"
        },
        "query": {
            "en": "SELECT name ,  country  FROM singer ORDER BY birthday ASC",
            "pl": "SELECT name ,  country  FROM singer ORDER BY birthday ASC"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 3,
        "question": {
            "en": "What is the average, minimum, and maximum id of all French singers?",
            "pl": "Jaki jest średni, minimalny i maksymalny id wszystkich francuskich piosenkarzy?"
        },
        "query": {
            "en": "SELECT avg(Singer_ID) ,  min(Singer_ID) ,  max(Singer_ID) FROM singer WHERE country  =  'France'",
            "pl": "SELECT avg(Singer_ID) ,  min(Singer_ID) ,  max(Singer_ID) FROM singer WHERE country  =  'Francja'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 3,
        "question": {
            "en": "What is the average, minimum, and maximum id for French singers?",
            "pl": "Jaka jest średnia, minimalna i maksymalna id dla francuskich piosenkarzy?"
        },
        "query": {
            "en": "SELECT avg(Singer_ID) ,  min(Singer_ID) ,  max(Singer_ID) FROM singer WHERE country  =  'France'",
            "pl": "SELECT avg(Singer_ID) ,  min(Singer_ID) ,  max(Singer_ID) FROM singer WHERE country  =  'Francja'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "Show the name and the release year of the song by the youngest singer.",
            "pl": "Pokaż nazwę i rok wydania utworu najmłodszego piosenkarza."
        },
        "query": {
            "en": "SELECT song_name ,  song_release_year FROM singer ORDER BY birthday desc LIMIT 1",
            "pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY birthday desc LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are the names and release years for all the songs of the youngest singer?",
            "pl": "Jakie są nazwy i lata wydania wszystkich piosenek najmłodszego piosenkarza?"
        },
        "query": {
            "en": "SELECT song_name ,  song_release_year FROM singer ORDER BY birthday desc LIMIT 1",
            "pl": "SELECT song_name ,  song_release_year FROM singer ORDER BY birthday desc LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are all distinct countries where singers born in 2001 are from?",
            "pl": "Z jakich krajów pochodzą piosenkarze urodzeni w 2001 roku?"
        },
        "query": {
            "en": "SELECT DISTINCT country FROM singer WHERE birthday  like '2001%'",
            "pl": "SELECT DISTINCT country FROM singer WHERE birthday  like '2001%'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are  the different countries with singers born in 2001?",
            "pl": "Z jakich krajów pochodzą piosenkarze urodzeni w 2001 roku?"
        },
        "query": {
            "en": "SELECT DISTINCT country FROM singer WHERE birthday  like  '2001%'",
            "pl": "SELECT DISTINCT country FROM singer WHERE birthday  like  '2001%'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Show all countries and the number of singers in each country.",
            "pl": "Pokaż wszystkie kraje i liczbę piosenkarzy w każdym z nich."
        },
        "query": {
            "en": "SELECT country ,  count(*) FROM singer GROUP BY country",
            "pl": "SELECT country ,  count(*) FROM singer GROUP BY country"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "How many singers are from each country?",
            "pl": "Ilu piosenkarzy pochodzi z każdego kraju?"
        },
        "query": {
            "en": "SELECT country ,  count(*) FROM singer GROUP BY country",
            "pl": "SELECT country ,  count(*) FROM singer GROUP BY country"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "List all song names by singers above the average age.",
            "pl": "Wymień wszystkie nazwy piosenek piosenkarzy powyżej średniego wieku."
        },
        "query": {
            "en": "SELECT song_name FROM singer WHERE birthday  <  (SELECT avg(birthday) FROM singer)",
            "pl": "SELECT song_name FROM singer WHERE birthday  <  (SELECT avg(birthday) FROM singer)"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are all the song names by singers who are older than average?",
            "pl": "Jakie są nazwy piosenek piosenkarzy, którzy są starsi niż przeciętnie?"
        },
        "query": {
            "en": "SELECT song_name FROM singer WHERE birthday  <  (SELECT avg(birthday) FROM singer)",
            "pl": "SELECT song_name FROM singer WHERE birthday  <  (SELECT avg(birthday) FROM singer)"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
            "pl": "Pokaż lokalizację i nazwę wszystkich stadionów o pojemności od 5000 do 10000."
        },
        "query": {
            "en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
            "pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What are the locations and names of all stations with capacity between 5000 and 10000?",
            "pl": "Jakie są lokalizacje i nazwy wszystkich stacji o pojemności od 5000 do 10000?"
        },
        "query": {
            "en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
            "pl": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "What is the average and the highest capacity of all stadiums?",
            "pl": "Jaka jest średnia i największa pojemność wszystkich stadionów?"
        },
        "query": {
            "en": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
            "pl": "SELECT avg(capacity) ,  max(capacity) FROM stadium"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "What is the average and highest capacities for all stations?",
            "pl": "Jaka jest średnia i najwyższa wydajność dla wszystkich stacji?"
        },
        "query": {
            "en": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
            "pl": "SELECT avg(capacity) ,  max(capacity) FROM stadium"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What is the name and capacity for the stadium with highest average attendance?",
            "pl": "Jaka jest nazwa i pojemność stadionu z najwyższą średnią frekwencją?"
        },
        "query": {
            "en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
            "pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What is the name and capacity for the stadium with the highest average attendance?",
            "pl": "Jak nazywa się stadion o największej średniej frekwencji i jaką ma pojemność?"
        },
        "query": {
            "en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
            "pl": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "How many concerts are there after or in year 2014?",
            "pl": "Ile koncertów odbędzie się po lub w 2014 roku?"
        },
        "query": {
            "en": "SELECT count(*) FROM concert WHERE YEAR  >=  2014",
            "pl": "SELECT count(*) FROM concert WHERE YEAR  >=  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "How many concerts occurred after or in 2014?",
            "pl": "Ile koncertów odbyło się po lub w 2014 roku?"
        },
        "query": {
            "en": "SELECT count(*) FROM concert WHERE YEAR  >=  2014",
            "pl": "SELECT count(*) FROM concert WHERE YEAR  >=  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Show the stadium name and the number of concerts in each stadium.",
            "pl": "Pokaż nazwę stadionu i liczbę koncertów na każdym stadionie."
        },
        "query": {
            "en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
            "pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "For each stadium, how many concerts play there?",
            "pl": "Ile koncertów odbywa się na każdym stadionie?"
        },
        "query": {
            "en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
            "pl": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
            "pl": "Pokaż nazwę i pojemność stadionu z największą liczbą koncertów w roku 2014 lub później."
        },
        "query": {
            "en": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What is the name and highest attendance of the stadium  with the most concerts after 2013?",
            "pl": "Jaka jest nazwa i najwyższa frekwencja na stadionie z największą liczbą koncertów po 2013 roku?"
        },
        "query": {
            "en": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "Which concert is the oldest?",
            "pl": "Który koncert jest najstarszy?"
        },
        "query": {
            "en": "SELECT concert_Name FROM concert ORDER BY YEAR asc LIMIT 1",
            "pl": "SELECT concert_Name FROM concert ORDER BY YEAR asc LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "Return the oldest concert name?",
            "pl": "Zwracasz najstarszą nazwę koncertu?"
        },
        "query": {
            "en": "SELECT concert_Name FROM concert ORDER BY YEAR asc LIMIT 1",
            "pl": "SELECT concert_Name FROM concert ORDER BY YEAR asc LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "Show the highest attendance without any concert.",
            "pl": "Pokaż najwyższą frekwencję bez żadnego koncertu."
        },
        "query": {
            "en": "SELECT highest FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "pl": "SELECT highest FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "What are lowest attendance of the stadiums without any concerts?",
            "pl": "Jaka jest najniższa frekwencja na stadionach bez koncertów?"
        },
        "query": {
            "en": "SELECT lowest FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "pl": "SELECT lowest FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "Show countries where a singer born in 1981 or 1991 are from.",
            "pl": "Pokaż kraje, z których pochodzą piosenkarze urodzeni w 1981 lub 1991 roku."
        },
        "query": {
            "en": "SELECT country FROM singer WHERE birthday  like  '1981%' or birthday  like  '1991%'",
            "pl": "SELECT country FROM singer WHERE birthday  like  '1981%' or birthday  like  '1991%'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "Show average attendance for all stadiums except for stadiums having a concert in year 2014.",
            "pl": "Pokaż średnią frekwencję dla wszystkich stadionów z wyjątkiem stadionów, na których odbył się koncert w 2014 roku."
        },
        "query": {
            "en": "SELECT average FROM stadium EXCEPT SELECT T2.average FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
            "pl": "SELECT average FROM stadium EXCEPT SELECT T2.average FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "What are the lowest attendance of all stadiums that did not have a concert in 2014?",
            "pl": "Jaka jest najniższa frekwencja na wszystkich stadionach, na których nie odbył się koncert w 2014 roku?"
        },
        "query": {
            "en": "SELECT lowest FROM stadium EXCEPT SELECT T2.lowest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
            "pl": "SELECT lowest FROM stadium EXCEPT SELECT T2.lowest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Show the name and theme for all concerts and the number of singers in each concert.",
            "pl": "Pokaż nazwę i temat wszystkich koncertów oraz liczbę wokalistów na każdym koncercie."
        },
        "query": {
            "en": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
            "pl": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What are the names, themes, and number of singers for each and every concert?",
            "pl": "Jakie są nazwy, tematy i liczba wokalistów na każdym koncercie?"
        },
        "query": {
            "en": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
            "pl": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "List singer names and number of concerts for each singer.",
            "pl": "Wymień nazwiska piosenkarzy i liczbę koncertów każdego z nich."
        },
        "query": {
            "en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What are the names of the singers and number of concerts for each person?",
            "pl": "Jakie są nazwiska piosenkarzy i liczba koncertów dla każdej osoby?"
        },
        "query": {
            "en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
            "pl": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "List all singer names in concerts after or in year 2014.",
            "pl": "Wymień wszystkie nazwiska piosenkarzy na koncertach po lub w 2014 roku."
        },
        "query": {
            "en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  >=  2014",
            "pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  >=  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 2,
        "question": {
            "en": "What are the names of the singers who performed in a concert before or in 2014?",
            "pl": "Jak nazywają się piosenkarze, którzy wystąpili na koncercie przed lub w 2014 roku?"
        },
        "query": {
            "en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  <=  2014",
            "pl": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  <=  2014"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
            "pl": "Jak nazywa się i z jakiego kraju pochodzi piosenkarz, którego utwór nosi tytuł \"Hej\"?"
        },
        "query": {
            "en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'",
            "pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
            "pl": "Jak nazywa się i z jakiego kraju pochodzi każdy piosenkarz, który ma w tytule utwór ze słowem \"Hej\"?"
        },
        "query": {
            "en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'",
            "pl": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hej%'"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "Find the lowest and highest attendance of the stadiums which some concerts happened in the years of both 2014 and 2015.",
            "pl": "Znajdź najniższą i najwyższą frekwencję na stadionach, na których odbyły się koncerty w latach 2014 i 2015."
        },
        "query": {
            "en": "SELECT T2.lowest ,  T2.highest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
            "pl": "SELECT T2.lowest ,  T2.highest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 5,
        "question": {
            "en": "What are the lowest and highest attendance of the stadiums that had concerts that occurred in both 2014 and 2015?",
            "pl": "Jaka jest najniższa i najwyższa frekwencja na stadionach, na których odbyły się koncerty w 2014 i 2015 roku?"
        },
        "query": {
            "en": "SELECT T2.lowest ,  T2.highest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
            "pl": "SELECT T2.lowest ,  T2.highest FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "Find the number of concerts happened in the stadium with the highest capacity.",
            "pl": "Znajdź liczbę koncertów, które odbyły się na stadionie o największej pojemności."
        },
        "query": {
            "en": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
            "pl": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_concert_singer",
        "type": 0,
        "question": {
            "en": "What are the number of concerts that occurred in the stadium with the largest capacity?",
            "pl": "Ile koncertów odbyło się na stadionie o największej pojemności?"
        },
        "query": {
            "en": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
            "pl": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the number of pets whose weight is heavier than 10.",
            "pl": "Znajdź liczbę zwierząt, których waga jest większa niż 10."
        },
        "query": {
            "en": "SELECT count(*) FROM pets WHERE weight  >  10",
            "pl": "SELECT count(*) FROM pets WHERE weight  >  10"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "How many pets have a greater weight than 10?",
            "pl": "Ile zwierząt ma wagę większą niż 10?"
        },
        "query": {
            "en": "SELECT count(*) FROM pets WHERE weight  >  10",
            "pl": "SELECT count(*) FROM pets WHERE weight  >  10"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "Find the weight of the youngest dog.",
            "pl": "Znajdź wagę najmłodszego psa."
        },
        "query": {
            "en": "SELECT weight FROM pets ORDER BY birthdate desc LIMIT 1",
            "pl": "SELECT weight FROM pets ORDER BY birthdate desc LIMIT 1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "How much does the youngest dog weigh?",
            "pl": "Ile waży najmłodszy pies?"
        },
        "query": {
            "en": "SELECT weight FROM pets ORDER BY birthdate desc LIMIT 1",
            "pl": "SELECT weight FROM pets ORDER BY birthdate desc LIMIT 1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
            "pl": "Znajdź maksymalną wagę dla każdego typu zwierzęcia. Wymień maksymalną wagę i typ zwierzęcia."
        },
        "query": {
            "en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "List the maximum weight and type for each type of pet.",
            "pl": "Wymień maksymalną wagę i typ dla każdego rodzaju zwierzęcia."
        },
        "query": {
            "en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
            "pl": "SELECT max(weight) ,  petType FROM pets GROUP BY petType"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find number of pets owned by students who are older than 20.",
            "pl": "Znajdź liczbę zwierząt domowych posiadanych przez uczniów w wieku powyżej 20 lat."
        },
        "query": {
            "en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
            "pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "How many pets are owned by students that have an age greater than 20?",
            "pl": "Ile zwierząt domowych posiadają uczniowie w wieku powyżej 20 lat?"
        },
        "query": {
            "en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
            "pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 34,
        "question": {
            "en": "Find the number of puppy pets that are raised by female students (with sex F).",
            "pl": "Znajdź liczbę szczeniąt wychowywanych przez studentki (z płcią F)."
        },
        "query": {
            "en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
            "pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 34,
        "question": {
            "en": "How many puppy pets are raised by female students?",
            "pl": "Ile szczeniąt jest wychowywanych przez studentki?"
        },
        "query": {
            "en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
            "pl": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the number of distinct type of pets.",
            "pl": "Znajdź liczbę różnych typów zwierząt domowych."
        },
        "query": {
            "en": "SELECT count(DISTINCT pettype) FROM pets",
            "pl": "SELECT count(DISTINCT pettype) FROM pets"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "How many different types of pet are there?",
            "pl": "Ile jest różnych rodzajów zwierząt domowych?"
        },
        "query": {
            "en": "SELECT count(DISTINCT pettype) FROM pets",
            "pl": "SELECT count(DISTINCT pettype) FROM pets"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "Find the first name of students who have kitten or puppy pet.",
            "pl": "Znajdź imiona uczniów, którzy mają kociaka lub szczeniaka."
        },
        "query": {
            "en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
            "pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot' OR T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "What are the first names of every student who has a kitten or puppy as a pet?",
            "pl": "Jakie są imiona każdego ucznia, który ma kociaka lub szczeniaka jako zwierzę domowe?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
            "pl": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot' OR T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "Find the name of students who have both Kitten and puppy pets.",
            "pl": "Znajdź imiona uczniów, którzy mają zarówno kociaka, jak i szczeniaka."
        },
        "query": {
            "en": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
            "pl": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "What are the students' first names who have both kitten and puppy as pets?",
            "pl": "Jak mają na imię uczniowie, którzy mają zarówno kociaka, jak i szczeniaka?"
        },
        "query": {
            "en": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
            "pl": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'pies'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "Find the major and age of students who do not have a kitten pet.",
            "pl": "Znajdź kierunek studiów i wiek studentów, którzy nie mają kociaka."
        },
        "query": {
            "en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
            "pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot')"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "What major is every student who does not own a kitten as a pet, and also how old are they?",
            "pl": "Na jakim kierunku jest każdy student, który nie posiada kociaka jako zwierzaka, a także ile ma lat?"
        },
        "query": {
            "en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
            "pl": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot')"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "Find the id of students who do not have a kitten pet.",
            "pl": "Znajdź identyfikator uczniów, którzy nie mają kociaka."
        },
        "query": {
            "en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
            "pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "What are the ids of the students who do not own kittens as pets?",
            "pl": "Jakie są identyfikatory uczniów, którzy nie posiadają kociąt jako zwierząt domowych?"
        },
        "query": {
            "en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
            "pl": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "Find the first name and age of students who have a dog but do not have a puppy as a pet.",
            "pl": "Znajdź imię i wiek uczniów, którzy mają psa, ale nie mają szczeniaka."
        },
        "query": {
            "en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
            "pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'pies' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot')"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 3,
        "question": {
            "en": "What is the first name of every student who has a puppy but does not have a kitten?",
            "pl": "Jak ma na imię każdy uczeń, który ma szczeniaka, ale nie ma kociaka?"
        },
        "query": {
            "en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
            "pl": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'pies' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'kot')"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "Find the type and weight of the youngest pet.",
            "pl": "Znajdź typ i wagę najmłodszego zwierzaka."
        },
        "query": {
            "en": "SELECT pettype ,  weight FROM pets ORDER BY birthdate desc LIMIT 1",
            "pl": "SELECT pettype ,  weight FROM pets ORDER BY birthdate desc LIMIT 1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "What type of pet is the youngest animal, and how much does it weigh?",
            "pl": "Jakiego rodzaju zwierzęciem jest najmłodsze zwierzę i ile waży?"
        },
        "query": {
            "en": "SELECT pettype ,  weight FROM pets ORDER BY birthdate desc LIMIT 1",
            "pl": "SELECT pettype ,  weight FROM pets ORDER BY birthdate desc LIMIT 1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "Find the id and weight of all pets older than that born in 2020.",
            "pl": "Znajdź identyfikator i wagę wszystkich zwierząt starszych niż urodzone w 2020 roku."
        },
        "query": {
            "en": "SELECT petid ,  weight FROM pets WHERE birthdate  <  '2020-01-01'",
            "pl": "SELECT petid ,  weight FROM pets WHERE birthdate  <  '2020-01-01'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 2,
        "question": {
            "en": "What is the id and weight of every pet who is older than that born in 2020?",
            "pl": "Jaki jest identyfikator i waga każdego zwierzaka, który jest starszy niż urodzony w 2020 roku?"
        },
        "query": {
            "en": "SELECT petid ,  weight FROM pets WHERE birthdate  <  '2020-05-01'",
            "pl": "SELECT petid ,  weight FROM pets WHERE birthdate  <  '2020-05-01'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 5,
        "question": {
            "en": "Find the average and maximum id for each type of pet.",
            "pl": "Znajdź średni i maksymalny id dla każdego typu zwierzaka."
        },
        "query": {
            "en": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype",
            "pl": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 5,
        "question": {
            "en": "What is the average and maximum id for each pet type?",
            "pl": "Jaki jest średni i maksymalny id dla każdego typu zwierzaka?"
        },
        "query": {
            "en": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype",
            "pl": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 5,
        "question": {
            "en": "Find the average and maximum id for each pet type.",
            "pl": "Znajdź średni i maksymalny id dla każdego typu zwierzaka."
        },
        "query": {
            "en": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype",
            "pl": "SELECT avg(PetID) ,  max(PetID) ,  pettype FROM pets GROUP BY pettype"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "What is the average weight for each type of pet?",
            "pl": "Jaka jest średnia waga dla każdego typu zwierzęcia?"
        },
        "query": {
            "en": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
            "pl": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 1,
        "question": {
            "en": "Find the name and age of students who have a pet.",
            "pl": "Znajdź imię i wiek uczniów, którzy mają zwierzę domowe."
        },
        "query": {
            "en": "SELECT DISTINCT T1.fname , T1.LName ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
            "pl": "SELECT DISTINCT T1.fname , T1.LName ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 1,
        "question": {
            "en": "What are the different names and ages of the students who do have pets?",
            "pl": "Jakie są imiona i wiek uczniów, którzy mają zwierzęta?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.fname , T1.LName ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
            "pl": "SELECT DISTINCT T1.fname , T1.LName ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the id of the pet owned by student whose last name is ‘Smith’.",
            "pl": "Znajdź identyfikator zwierzęcia należącego do ucznia, którego nazwisko to \"Smith\"."
        },
        "query": {
            "en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
            "pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "What is the id of the pet owned by the student whose last name is 'Smith'?",
            "pl": "Jaki jest identyfikator zwierzęcia należącego do ucznia o nazwisku \"Smith\"?"
        },
        "query": {
            "en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
            "pl": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the number of pets for each student who has any pet and student id.",
            "pl": "Znajdź liczbę zwierząt domowych dla każdego ucznia, który ma jakiekolwiek zwierzę domowe i identyfikator ucznia."
        },
        "query": {
            "en": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
            "pl": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "For students who have pets, how many pets does each student have?",
            "pl": "Ilu uczniów posiada zwierzęta domowe?"
        },
        "query": {
            "en": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
            "pl": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the first name and gender of student who have more than one pet.",
            "pl": "Znajdź imię i płeć ucznia, który ma więcej niż jedno zwierzę domowe."
        },
        "query": {
            "en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "What is the first name and gender of the all the students who have more than one pet?",
            "pl": "Jakie jest imię i płeć wszystkich uczniów, którzy mają więcej niż jedno zwierzę domowe?"
        },
        "query": {
            "en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
            "pl": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 23,
        "question": {
            "en": "Find the last name of the student who has a cat that born in 2001.",
            "pl": "Znajdź nazwisko ucznia, który ma kota urodzonego w 2001 roku."
        },
        "query": {
            "en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.birthdate  like  '2001%' AND T3.pettype  =  'cat'",
            "pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.birthdate  like  '2001%' AND T3.pettype  =  'kot'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 23,
        "question": {
            "en": "What is the last name of the student who has a cat that born in 2001?",
            "pl": "Jak nazywa się uczeń, który ma kota urodzonego w 2001 roku?"
        },
        "query": {
            "en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.birthdate  like '2001%' AND T3.pettype  =  'cat'",
            "pl": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.birthdate  like '2001%' AND T3.pettype  =  'kot'"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "Find the average age of students who do not have any pet.",
            "pl": "Znajdź średnią wieku uczniów, którzy nie mają żadnego zwierzaka."
        },
        "query": {
            "en": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
            "pl": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)"
        }
    },
    {
        "db_id": "new_pets_1",
        "type": 0,
        "question": {
            "en": "What is the average age for all students who do not own any pets?",
            "pl": "Jaki jest średni wiek wszystkich uczniów, którzy nie posiadają zwierząt domowych?"
        },
        "query": {
            "en": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
            "pl": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many continents are there?",
            "pl": "Ile jest kontynentów?"
        },
        "query": {
            "en": "SELECT count(*) FROM CONTINENTS;",
            "pl": "SELECT count(*) FROM CONTINENTS;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of continents?",
            "pl": "Jaka jest liczba kontynentów?"
        },
        "query": {
            "en": "SELECT count(*) FROM CONTINENTS;",
            "pl": "SELECT count(*) FROM CONTINENTS;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
            "pl": "Ile krajów ma każdy kontynent? Wymień identyfikator kontynentu, nazwę kontynentu i liczbę krajów."
        },
        "query": {
            "en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "For each continent, list its id, name, and how many countries it has?",
            "pl": "Dla każdego kontynentu wymień jego identyfikator, nazwę i liczbę krajów?"
        },
        "query": {
            "en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
            "pl": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many countries are listed?",
            "pl": "Ile krajów znajduje się na liście?"
        },
        "query": {
            "en": "SELECT count(*) FROM COUNTRIES;",
            "pl": "SELECT count(*) FROM COUNTRIES;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many countries exist?",
            "pl": "Ile krajów istnieje?"
        },
        "query": {
            "en": "SELECT count(*) FROM COUNTRIES;",
            "pl": "SELECT count(*) FROM COUNTRIES;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many models does each car maker produce? List maker full name, id and the number.",
            "pl": "Ile modeli produkują poszczególni producenci samochodów? Wymień pełną nazwę producenta, identyfikator i numer."
        },
        "query": {
            "en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
            "pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the full name of each car maker, along with its id and how many models it produces?",
            "pl": "Jaka jest pełna nazwa każdego producenta samochodów, wraz z jego identyfikatorem i liczbą produkowanych modeli?"
        },
        "query": {
            "en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
            "pl": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which model of the car has the minimum horsepower?",
            "pl": "Który model samochodu ma najmniejszą moc?"
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the model of the car with the smallest amount of horsepower?",
            "pl": "Jaki jest model samochodu o najmniejszej mocy?"
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Find the model of the car whose weight is below the average weight.",
            "pl": "Znajdź model samochodu, którego waga jest poniżej średniej wagi."
        },
        "query": {
            "en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
            "pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the model for the car with a weight smaller than the average?",
            "pl": "Jaki jest model samochodu o masie mniejszej niż średnia?"
        },
        "query": {
            "en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
            "pl": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "Find the name of the makers that produced some cars in the past two years?",
            "pl": "Znajdź nazwy producentów, którzy wyprodukowali kilka samochodów w ciągu ostatnich dwóch lat?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  >=  '2019';",
            "pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  >=  '2019';"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What is the name of the different car makers who produced a car in the past two years?",
            "pl": "Jak nazywają się różni producenci samochodów, którzy wyprodukowali samochód w ciągu ostatnich dwóch lat?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  >=  '2019';",
            "pl": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  >=  '2019';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Find the make and production time of the cars that were produced in the earliest year?",
            "pl": "Znajdź markę i czas produkcji samochodów, które zostały wyprodukowane w najwcześniejszym roku?"
        },
        "query": {
            "en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
            "pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the maker of the carr produced in the earliest year and what year was it?",
            "pl": "Jaki jest producent samochodu wyprodukowanego w najwcześniejszym roku i który to był rok?"
        },
        "query": {
            "en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
            "pl": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "Which distinct car models are the produced before or in 1980?",
            "pl": "Które modele samochodów zostały wyprodukowane przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  <=  1980;",
            "pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  <=  1980;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What are the different models for the cards produced before or in 1980?",
            "pl": "Jakie są różne modele kart wyprodukowanych przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  <=  1980;",
            "pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  <=  1980;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many car makers are there in each continents? List the continent name and the count.",
            "pl": "Ilu producentów samochodów jest na każdym kontynencie? Wymień nazwę kontynentu i liczbę producentów."
        },
        "query": {
            "en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the name of each continent and how many car makers are there in each one?",
            "pl": "Jak nazywają się poszczególne kontynenty i ilu producentów samochodów jest na każdym z nich?"
        },
        "query": {
            "en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
            "pl": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which of the countries has the most car makers? List the country name.",
            "pl": "Który z krajów ma najwięcej producentów samochodów? Wymień nazwę kraju."
        },
        "query": {
            "en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the name of the country with the most car makers?",
            "pl": "Jak nazywa się kraj z największą liczbą producentów samochodów?"
        },
        "query": {
            "en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
            "pl": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many car models are produced by each maker? List the count and the maker full name.",
            "pl": "Ile modeli samochodów produkują poszczególni producenci? Podaj liczbę i pełną nazwę producenta."
        },
        "query": {
            "en": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
            "pl": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
            "pl": "Jaka jest liczba modeli samochodów produkowanych przez każdego producenta i jaki jest identyfikator oraz pełna nazwa każdego producenta?"
        },
        "query": {
            "en": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
            "pl": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the accelerate of the car make amc hornet sportabout (sw)?",
            "pl": "Jakie jest przyspieszenie samochodu marki amc hornet sportabout (sw)?"
        },
        "query": {
            "en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
            "pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
            "pl": "Jak bardzo przyspiesza samochód, który robi amc hornet sportabout (sw)?"
        },
        "query": {
            "en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
            "pl": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "How many Japanese car makers are there?",
            "pl": "Ilu jest japońskich producentów samochodów?"
        },
        "query": {
            "en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Japan';",
            "pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Japonia';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What is the number of makers of Japanese care?",
            "pl": "Jaka jest liczba producentów japońskiej opieki?"
        },
        "query": {
            "en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Japan';",
            "pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Japonia';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "How many car models are produced in the america?",
            "pl": "Ile modeli samochodów jest produkowanych w Ameryce?"
        },
        "query": {
            "en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
            "pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'uSA';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the count of the car models produced in the United States?",
            "pl": "Jaka jest liczba modeli samochodów produkowanych w Stanach Zjednoczonych?"
        },
        "query": {
            "en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
            "pl": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'uSA';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
            "pl": "Jaka jest średnia mil na galon (mpg) samochodów z 4 cylindrami?"
        },
        "query": {
            "en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
            "pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the average miles per gallon of all the cards with 4 cylinders?",
            "pl": "Jaka jest średnia mil na galon wszystkich kart z 4 cylindrami?"
        },
        "query": {
            "en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
            "pl": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
            "pl": "Jaka jest najmniejsza waga samochodu z 8 cylindrami wyprodukowanego w 1974 roku?"
        },
        "query": {
            "en": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
            "pl": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the minimu weight of the car with 8 cylinders produced in 1974?",
            "pl": "Jaka jest minimalna masa samochodu z 8 cylindrami wyprodukowanego w 1974 roku?"
        },
        "query": {
            "en": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
            "pl": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are all the makers and models?",
            "pl": "Jacy są wszyscy producenci i modele?"
        },
        "query": {
            "en": "SELECT Maker ,  Model FROM MODEL_LIST;",
            "pl": "SELECT Maker ,  Model FROM MODEL_LIST;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the makers and models?",
            "pl": "Jacy są producenci i modele?"
        },
        "query": {
            "en": "SELECT Maker ,  Model FROM MODEL_LIST;",
            "pl": "SELECT Maker ,  Model FROM MODEL_LIST;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the countries having at least one car maker? List name and id.",
            "pl": "Jakie kraje mają co najmniej jednego producenta samochodów? Wymień nazwę i identyfikator."
        },
        "query": {
            "en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
            "pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the names and ids of all countries with at least one car maker?",
            "pl": "Jakie są nazwy i identyfikatory wszystkich krajów z co najmniej jednym producentem samochodów?"
        },
        "query": {
            "en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
            "pl": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of the cars with horsepower more than 150?",
            "pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of cars with a horsepower greater than 150?",
            "pl": "Jaka jest liczba samochodów o mocy większej niż 150 koni mechanicznych?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the average weight of cars each year?",
            "pl": "Jaka jest średnia waga samochodów każdego roku?"
        },
        "query": {
            "en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
            "pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the average weight and year for each year?",
            "pl": "Jaka jest średnia waga i rok dla każdego roku?"
        },
        "query": {
            "en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
            "pl": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "Which European countries have at least 3 car manufacturers?",
            "pl": "Które kraje europejskie mają co najmniej 3 producentów samochodów?"
        },
        "query": {
            "en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europa' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the names of all European countries with at least 3 manufacturers?",
            "pl": "Jak nazywają się wszystkie kraje europejskie z co najmniej 3 producentami?"
        },
        "query": {
            "en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
            "pl": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europa' GROUP BY T1.CountryName HAVING count(*)  >=  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
            "pl": "Jaka jest maksymalna moc i marka modeli samochodów z 3 cylindrami?"
        },
        "query": {
            "en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
            "pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
            "pl": "Jaka jest największa moc w modelach z 3 cylindrami i jaka to marka?"
        },
        "query": {
            "en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
            "pl": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
            "pl": "Który model oszczędza najwięcej benzyny? Oznacza to, że ma maksymalną liczbę mil na galon."
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the car wmodel with the highest mpg?",
            "pl": "Jaki jest model samochodu o najwyższym zużyciu paliwa?"
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What is the average horsepower of the cars before or in 1980?",
            "pl": "Jaka jest średnia moc samochodów przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <=  1980;",
            "pl": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <=  1980;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What is the average horsepower for all cards produced before or in 1980?",
            "pl": "Jaka jest średnia moc wszystkich kart wyprodukowanych przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <=  1980;",
            "pl": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <=  1980;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What is the average edispl of the cars of model tesla?",
            "pl": "Jaki jest średni edispl samochodów modelu tesla?"
        },
        "query": {
            "en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'tesla';",
            "pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'tesla';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What is the average edispl for all teslas?",
            "pl": "Jaki jest średni edispl dla wszystkich tesli?"
        },
        "query": {
            "en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'tesla';",
            "pl": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'tesla';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the maximum accelerate for different number of cylinders?",
            "pl": "Jakie jest maksymalne przyspieszenie dla różnej liczby cylindrów?"
        },
        "query": {
            "en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the maximum accelerate for all the different cylinders?",
            "pl": "Jakie jest maksymalne przyspieszenie dla wszystkich cylindrów?"
        },
        "query": {
            "en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
            "pl": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which model has the most version(make) of cars?",
            "pl": "Który model ma najwięcej wersji (marek) samochodów?"
        },
        "query": {
            "en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
            "pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What model has the most different versions?",
            "pl": "Który model ma najwięcej różnych wersji?"
        },
        "query": {
            "en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
            "pl": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many cars have more than 4 cylinders?",
            "pl": "Ile samochodów ma więcej niż 4 cylindry?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of cars with more than 4 cylinders?",
            "pl": "Jaka jest liczba samochodów z więcej niż 4 cylindrami?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "how many cars were produced in the last two years?",
            "pl": "Ile samochodów wyprodukowano w ciągu ostatnich dwóch lat?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  >=  2019;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  >=  2019;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "In the last two years, how many cars were made?",
            "pl": "Ile samochodów wyprodukowano w ciągu ostatnich dwóch lat?"
        },
        "query": {
            "en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  >=  2019;",
            "pl": "SELECT count(*) FROM CARS_DATA WHERE YEAR  >=  2019;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "How many car models were produced by American Motor?",
            "pl": "Ile modeli samochodów wyprodukowała firma American Motor?"
        },
        "query": {
            "en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
            "pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What is the number of car models created by American Motor?",
            "pl": "Jaka jest liczba modeli samochodów stworzonych przez American Motor?"
        },
        "query": {
            "en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
            "pl": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which makers designed more than 3 car models? List full name and the id.",
            "pl": "Którzy producenci zaprojektowali więcej niż 3 modele samochodów? Wymień pełną nazwę i identyfikator."
        },
        "query": {
            "en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
            "pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the names and ids of all makers with more than 3 models?",
            "pl": "Jakie są nazwy i identyfikatory wszystkich producentów posiadających więcej niż 3 modele?"
        },
        "query": {
            "en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
            "pl": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
            "pl": "Jakie charakterystyczne modele są produkowane przez producenta o pełnej nazwie General Motors lub ważą więcej niż 3500?"
        },
        "query": {
            "en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
            "pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
            "pl": "Jakie są różne modele stworzone przez producenta samochodów General Motors lub ważące ponad 3500?"
        },
        "query": {
            "en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
            "pl": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
            "pl": "W których latach produkowano samochody ważące nie mniej niż 3000 i nie więcej niż 4000?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
            "pl": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
            "pl": "W jakich latach produkowano samochody ważące mniej niż 4000 i samochody ważące więcej niż 3000?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
            "pl": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the horsepower of the car with the largest accelerate?",
            "pl": "Jaka jest moc samochodu z największym przyspieszeniem?"
        },
        "query": {
            "en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
            "pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the horsepower of the car with the greatest accelerate?",
            "pl": "Jaka jest moc samochodu z największym przyspieszeniem?"
        },
        "query": {
            "en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
            "pl": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "For model tesla, how many cylinders does the car with the least accelerate have?",
            "pl": "Dla modelu tesla, ile cylindrów ma samochód z najmniejszym przyspieszeniem?"
        },
        "query": {
            "en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'tesla' ORDER BY T1.accelerate ASC LIMIT 1;",
            "pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'tesla' ORDER BY T1.accelerate ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "For a tesla model, how many cylinders does the version with least accelerate have?",
            "pl": "Ile cylindrów w modelu Tesla ma wersja z najmniejszym przyspieszeniem?"
        },
        "query": {
            "en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'tesla' ORDER BY T1.accelerate ASC LIMIT 1;",
            "pl": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'tesla' ORDER BY T1.accelerate ASC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many cars have a larger accelerate than the car with the largest horsepower?",
            "pl": "Ile samochodów ma większe przyspieszenie niż samochód o największej mocy?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
            "pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
            "pl": "Jaka jest liczba samochodów z większym przyspieszeniem niż ten z największą mocą?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
            "pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many countries has more than 2 car makers?",
            "pl": "Ile krajów ma więcej niż 2 producentów samochodów?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
            "pl": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of countries with more than 2 car makers?",
            "pl": "Jaka jest liczba krajów z więcej niż 2 producentami samochodów?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
            "pl": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "How many cars has over 6 cylinders?",
            "pl": "Ile samochodów ma ponad 6 cylindrów?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
            "pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What is the number of carsw ith over 6 cylinders?",
            "pl": "Jaka jest liczba samochodów z ponad 6 cylindrami?"
        },
        "query": {
            "en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
            "pl": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "For the cars with 4 cylinders, which model has the largest horsepower?",
            "pl": "W przypadku samochodów z 4 cylindrami, który model ma największą moc?"
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "For all of the 4 cylinder cars, which model has the most horsepower?",
            "pl": "Który model samochodu z 4 cylindrami ma największą moc?"
        },
        "query": {
            "en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
            "pl": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
            "pl": "Spośród samochodów o mocy większej niż najniższa, które nie mają więcej niż 3 cylindry? Wymień markę i nazwę samochodu."
        },
        "query": {
            "en": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
            "pl": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?",
            "pl": "Wśród samochodów, które nie mają minimalnej mocy, jakie są identyfikatory marek i nazwy wszystkich tych, które mają mniej niż 4 cylindry?"
        },
        "query": {
            "en": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
            "pl": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What is the maximum miles per gallon of the car with 8 cylinders or produced before or in 1980?",
            "pl": "Jaka jest maksymalna liczba mil na galon samochodu z 8 cylindrami lub wyprodukowanego przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <=  1980 ORDER BY mpg DESC LIMIT 1;",
            "pl": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <=  1980 ORDER BY mpg DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 2,
        "question": {
            "en": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before or in 1980?",
            "pl": "Jaki jest maksymalny mpg samochodów, które miały 8 cylindrów lub które zostały wyprodukowane przed lub w 1980 roku?"
        },
        "query": {
            "en": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <=  1980 ORDER BY mpg DESC LIMIT 1;",
            "pl": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <=  1980 ORDER BY mpg DESC LIMIT 1;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "Which models are lighter than 3500 but not built by the 'Ford Motor'?",
            "pl": "Które modele są lżejsze niż 3500, ale nie są produkowane przez \"Ford Motor\"?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
            "pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor?",
            "pl": "Jakie są różne modele, które są lżejsze niż 3500, ale nie zostały zbudowane przez Ford Motor?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
            "pl": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the name of the countries where there is not a single car maker?",
            "pl": "Jak nazywają się kraje, w których nie ma ani jednego producenta samochodów?"
        },
        "query": {
            "en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
            "pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the names of the countries with no car makers?",
            "pl": "Jak nazywają się kraje, w których nie ma producentów samochodów?"
        },
        "query": {
            "en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
            "pl": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.",
            "pl": "Którzy producenci samochodów produkują co najmniej 2 modele i więcej niż 3 marki samochodów? Wymień id i producenta."
        },
        "query": {
            "en": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
            "pl": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 0,
        "question": {
            "en": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
            "pl": "Jakie są identyfikatory i producenci wszystkich producentów samochodów, którzy produkują co najmniej 2 modele i więcej niż 3 samochody?"
        },
        "query": {
            "en": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
            "pl": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What are the id and names of the countries which have more than 3 car makers or produce the 'tesla' model?",
            "pl": "Jakie są identyfikatory i nazwy krajów, które mają więcej niż 3 producentów samochodów lub produkują model \"Tesla\"?"
        },
        "query": {
            "en": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'tesla';",
            "pl": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'tesla';"
        }
    },
    {
        "db_id": "car_1",
        "type": 3,
        "question": {
            "en": "What are the ids and names of all countries that either have more than 3 car makers or produce teslas?",
            "pl": "Jakie są identyfikatory i nazwy wszystkich krajów, które mają więcej niż 3 producentów samochodów lub produkują tesle?"
        },
        "query": {
            "en": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'tesla';",
            "pl": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'tesla';"
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Which country does Airline \"JetBlue\" belong to?",
            "pl": "Do jakiego kraju należy linia lotnicza \"JetBlue\"?"
        },
        "query": {
            "en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What country is Jetblue affiliated with?",
            "pl": "Z jakim krajem powiązane jest Jetblue?"
        },
        "query": {
            "en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What is the abbreviation of Airline \"JetBlue\"?",
            "pl": "Jaki jest skrót od linii lotniczych \"JetBlue\"?"
        },
        "query": {
            "en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Which abbreviation corresponds to JetBlue?",
            "pl": "Który skrót odpowiada JetBlue?"
        },
        "query": {
            "en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "List all american airline names and their abbreviations.",
            "pl": "Wymień wszystkie nazwy amerykańskich linii lotniczych i ich skróty."
        },
        "query": {
            "en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
            "pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are american airline names and abbreviations for airlines?",
            "pl": "Jakie są nazwy i skróty amerykańskich linii lotniczych?"
        },
        "query": {
            "en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
            "pl": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "List the airport code and name in Jackson.",
            "pl": "Wymień kod i nazwę lotniska w Jackson."
        },
        "query": {
            "en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Jackson\"",
            "pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Give the airport code and airport name corresonding to the Syracuse.",
            "pl": "Podaj kod i nazwę lotniska odpowiadającego Syracuse."
        },
        "query": {
            "en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Syracuse\"",
            "pl": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Syracuse\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "How many airlines do we have?",
            "pl": "Ile mamy linii lotniczych?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES",
            "pl": "SELECT count(*) FROM AIRLINES"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the total number of airlines?",
            "pl": "Jaka jest łączna liczba linii lotniczych?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES",
            "pl": "SELECT count(*) FROM AIRLINES"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "How many airports do we have?",
            "pl": "Ile mamy lotnisk?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRPORTS",
            "pl": "SELECT count(*) FROM AIRPORTS"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Return the number of  airports.",
            "pl": "Zwróć liczbę lotnisk."
        },
        "query": {
            "en": "SELECT count(*) FROM AIRPORTS",
            "pl": "SELECT count(*) FROM AIRPORTS"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "How many flights do we have?",
            "pl": "Ile mamy lotów?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS",
            "pl": "SELECT count(*) FROM FLIGHTS"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Return the number of flights.",
            "pl": "Zwróć liczbę lotów."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS",
            "pl": "SELECT count(*) FROM FLIGHTS"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airline has abbreviation 'UAL'?",
            "pl": "Która linia lotnicza ma skrót \"UAL\"?"
        },
        "query": {
            "en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
            "pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Give the airline with abbreviation 'UAL'.",
            "pl": "Podaj linię lotniczą ze skrótem \"UAL\"."
        },
        "query": {
            "en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
            "pl": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many airlines are from America?",
            "pl": "Ile linii lotniczych pochodzi z Ameryki?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
            "pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Return the number of airlines in the America.",
            "pl": "Zwróć liczbę linii lotniczych w Ameryce."
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
            "pl": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which city and country is the Alton airport at?",
            "pl": "W jakim mieście i kraju znajduje się lotnisko Alton?"
        },
        "query": {
            "en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
            "pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Give the city and country for the Alton airport.",
            "pl": "Podaj miasto i kraj, w którym znajduje się lotnisko Alton."
        },
        "query": {
            "en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
            "pl": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the airport name for airport 'AKO'?",
            "pl": "Jaka jest nazwa lotniska \"AKO?"
        },
        "query": {
            "en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
            "pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Return the name of the airport with code 'AKO'.",
            "pl": "Zwróć nazwę lotniska z kodem \"AKO\"."
        },
        "query": {
            "en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
            "pl": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are airport names at 'Jackson'?",
            "pl": "Jakie są nazwy lotnisk w \"Jackson\"?"
        },
        "query": {
            "en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Jackson\"",
            "pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are the names of airports in Jackson?",
            "pl": "Jak nazywają się lotniska w Jackson?"
        },
        "query": {
            "en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Jackson\"",
            "pl": "SELECT AirportName FROM AIRPORTS WHERE City = \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "How many flights depart from 'APG'?",
            "pl": "Ile lotów rozpoczyna się od \"APG\"?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
            "pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Count the number of flights departing from 'APG'.",
            "pl": "Policz liczbę lotów odlatujących z \"APG\"."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
            "pl": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "How many flights have destination ATO?",
            "pl": "Ile lotów ma miejsce docelowe ATO?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
            "pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Count the number of flights into ATO.",
            "pl": "Policz liczbę lotów do ATO."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
            "pl": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights depart from Jackson?",
            "pl": "Ile lotów rozpoczyna się w Jackson?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Return the number of flights departing from Jackson.",
            "pl": "Zwróć liczbę lotów odlatujących z Jackson."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights arriving in Jackson city?",
            "pl": "Ile lotów przylatuje do miasta Jackson?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Return the number of flights arriving in Jackson.",
            "pl": "Zwróć liczbę lotów przylatujących do Jackson."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights depart from City 'Syracuse' and have destination City 'Ashley'?",
            "pl": "Ile lotów rozpoczyna się w mieście \"Syracuse\" i ma miejsce docelowe w mieście \"Ashley\"?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Syracuse\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Syracuse\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights fly from Syracuse to Ashley?",
            "pl": "Ile jest lotów z Syracuse do Ashley?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Syracuse\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Syracuse\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights does airline 'JetBlue' have?",
            "pl": "Ile lotów obsługują linie lotnicze JetBlue?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Give the number of Jetblue flights.",
            "pl": "Podaj liczbę lotów linii Jetblue."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many 'JetBlue' flights go to Airport 'ASY'?",
            "pl": "Ile lotów \"JetBlue\" odbywa się na lotnisko \"ASY\"?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.DestAirport  =  \"ASY\"",
            "pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.DestAirport  =  \"ASY\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Count the number of JetBlue flights arriving in ASY Airport.",
            "pl": "Policz liczbę lotów JetBlue przylatujących na lotnisko ASY."
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.DestAirport  =  \"ASY\"",
            "pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.DestAirport  =  \"ASY\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many 'JetBlue' flights depart from Airport 'AHD'?",
            "pl": "Ile lotów \"JetBlue\" odlatuje z lotniska \"AHD\"?"
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.SourceAirport  =  \"AHD\"",
            "pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.SourceAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Return the number of JetBlue flights leaving from AHD Airport.",
            "pl": "Zwróć liczbę lotów JetBlue z lotniska AHD."
        },
        "query": {
            "en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.SourceAirport  =  \"AHD\"",
            "pl": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"JetBlue Airways\" AND T2.SourceAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many JetBlue flights go to City 'Aberdeen'?",
            "pl": "Ile lotów JetBlue odbywa się do miasta Aberdeen?"
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Count the number of JetBlue flights that arrive in Aberdeen.",
            "pl": "Policz liczbę lotów JetBlue, które przylatują do Aberdeen."
        },
        "query": {
            "en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which city has most number of arriving flights?",
            "pl": "Które miasto ma największą liczbę przylatujących lotów?"
        },
        "query": {
            "en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which city has the most frequent destination airport?",
            "pl": "Które miasto ma najczęściej wybierane lotnisko docelowe?"
        },
        "query": {
            "en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which city has most number of departing flights?",
            "pl": "Które miasto ma najwięcej odlatujących lotów?"
        },
        "query": {
            "en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which city is the most frequent source airport?",
            "pl": "Które miasto jest najczęściej wybieranym lotniskiem?"
        },
        "query": {
            "en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the code of airport that has the highest number of flights?",
            "pl": "Jaki jest kod lotniska, które obsługuje największą liczbę lotów?"
        },
        "query": {
            "en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the airport code of the airport with the most flights?",
            "pl": "Jaki jest kod lotniska obsługującego najwięcej lotów?"
        },
        "query": {
            "en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the code of airport that has fewest number of flights?",
            "pl": "Jaki jest kod lotniska, które ma najmniejszą liczbę lotów?"
        },
        "query": {
            "en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Give the code of the airport with the least flights.",
            "pl": "Podaj kod lotniska z najmniejszą liczbą lotów."
        },
        "query": {
            "en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "pl": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airline has most number of flights?",
            "pl": "Która linia lotnicza ma najwięcej lotów?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What airline serves the most flights?",
            "pl": "Która linia lotnicza obsługuje najwięcej lotów?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find the abbreviation and country of the airline that has fewest number of flights?",
            "pl": "Znajdź skrót i kraj linii lotniczej, która ma najmniejszą liczbę lotów?"
        },
        "query": {
            "en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
            "pl": "Jaki jest skrót nazwy linii lotniczej z najmniejszą liczbą lotów i w jakim kraju się ona znajduje?"
        },
        "query": {
            "en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "pl": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What are airlines that have some flight departing from airport 'AHD'?",
            "pl": "Jakie linie lotnicze oferują loty z lotniska \"AHD?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have a flight with source airport AHD?",
            "pl": "Które linie lotnicze mają loty ze źródłowym lotniskiem AHD?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What are airlines that have flights arriving at airport 'AHD'?",
            "pl": "Jakie linie lotnicze obsługują loty na lotnisko \"AHD?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have a flight with destination airport AHD?",
            "pl": "Które linie lotnicze mają loty z lotniskiem docelowym AHD?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
            "pl": "Znajdź wszystkie linie lotnicze, które oferują loty z obu lotnisk 'APG' i \"CVO."
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have departing flights from both APG and CVO airports?",
            "pl": "Które linie lotnicze oferują loty z lotnisk APG i CVO?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
            "pl": "Znajdź wszystkie linie lotnicze, które mają loty z lotniska \"CVO, ale nie z 'APG'."
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have departures from CVO but not from APG airports?",
            "pl": "Które linie lotnicze mają wyloty z CVO, ale nie z lotnisk APG?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find all airlines that have at least 10 flights.",
            "pl": "Znajdź wszystkie linie lotnicze, które mają co najmniej 10 lotów."
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have at least 10 flights?",
            "pl": "Które linie lotnicze mają co najmniej 10 lotów?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find all airlines that have fewer than 200 flights.",
            "pl": "Znajdź wszystkie linie lotnicze, które wykonują mniej niż 200 lotów."
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airlines have less than 200 flights?",
            "pl": "Które linie lotnicze obsługują mniej niż 200 lotów?"
        },
        "query": {
            "en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
            "pl": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200"
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are flight numbers belonging to \"JetBlue\"?",
            "pl": "Jakie są numery lotów należące do \"JetBlue\"?"
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Which flight numbers correspond to JetBlue flights?",
            "pl": "Które numery lotów odpowiadają lotom JetBlue?"
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"JetBlue Airways\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"JetBlue Airways\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What are flight numbers of flights departing from Airport \"APG\"?",
            "pl": "Jakie są numery lotów odlatujących z lotniska \"APG\"?"
        },
        "query": {
            "en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
            "pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Give the flight numbers of flights leaving from APG.",
            "pl": "Podaj numery lotów odlatujących z APG."
        },
        "query": {
            "en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
            "pl": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "What are flight numbers of flights arriving at Airport \"APG\"?",
            "pl": "Jakie są numery lotów przylatujących na lotnisko \"APG\"?"
        },
        "query": {
            "en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
            "pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Give the flight numbers of flights landing at APG.",
            "pl": "Podaj numery lotów lądujących w APG."
        },
        "query": {
            "en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
            "pl": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are flight numbers of flights departing from \"Jackson\"?",
            "pl": "Jakie są numery lotów odlatujących z \"Jackson\"?"
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Give the flight numbers of flights leaving from Jackson.",
            "pl": "Podaj numery lotów odlatujących z Jackson."
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "What are flight numbers of flights arriving at \"Jackson\"?",
            "pl": "Jakie są numery lotów przylatujących do \"Jackson\"?"
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Give the flight numbers of flights arriving in Jackson.",
            "pl": "Podaj numery lotów przylatujących do Jackson."
        },
        "query": {
            "en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\"",
            "pl": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "Find the number of flights landing in the  Syracuse or Jackson.",
            "pl": "Znajdź liczbę lotów lądujących w Syracuse lub Jackson."
        },
        "query": {
            "en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Syracuse\" OR T2.city  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Syracuse\" OR T2.city  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 3,
        "question": {
            "en": "How many flights land in Syracuse or Jackson?",
            "pl": "Ile lotów ląduje w Syracuse lub Jackson?"
        },
        "query": {
            "en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Syracuse\" OR T2.city  =  \"Jackson\"",
            "pl": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Syracuse\" OR T2.city  =  \"Jackson\""
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Find the name of airports which do not have any flight in and out.",
            "pl": "Znajdź nazwy lotnisk, które nie obsługują żadnych lotów tam i z powrotem."
        },
        "query": {
            "en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
            "pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
        }
    },
    {
        "db_id": "flight_2",
        "type": 0,
        "question": {
            "en": "Which airports do not have departing or arriving flights?",
            "pl": "Które lotniska nie mają odlatujących lub przylatujących lotów?"
        },
        "query": {
            "en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
            "pl": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "How many documents do we have?",
            "pl": "Ile mamy dokumentów?"
        },
        "query": {
            "en": "SELECT count(*) FROM Documents",
            "pl": "SELECT count(*) FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Count the number of documents.",
            "pl": "Policz liczbę dokumentów."
        },
        "query": {
            "en": "SELECT count(*) FROM Documents",
            "pl": "SELECT count(*) FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "List document IDs with its names and descriptions.",
            "pl": "Wyświetl identyfikatory dokumentów wraz z ich nazwami i opisami."
        },
        "query": {
            "en": "SELECT document_id ,  document_name ,  document_description FROM Documents",
            "pl": "SELECT document_id ,  document_name ,  document_description FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Show all the ids with its names and descriptions for all documents?",
            "pl": "Pokaż wszystkie identyfikatory wraz z nazwami i opisami dla wszystkich dokumentów?"
        },
        "query": {
            "en": "SELECT document_id ,  document_name ,  document_description FROM Documents",
            "pl": "SELECT document_id ,  document_name ,  document_description FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Show the name with template id of documents with description with the letter 'w' in it?",
            "pl": "Pokaż nazwę z identyfikatorem szablonu dokumentów z opisem zawierającym literę \"w\"?"
        },
        "query": {
            "en": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
            "pl": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Return the names with document and template ids for documents that contain the letter w in their description.",
            "pl": "Zwróć nazwy z identyfikatorami dokumentów i szablonów dla dokumentów zawierających literę w w opisie."
        },
        "query": {
            "en": "SELECT document_name , Document_ID, template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
            "pl": "SELECT document_name , Document_ID, template_id FROM Documents WHERE Document_Description LIKE \"%w%\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "What is the description for document named \"Robbin CV\" with its document and template id?",
            "pl": "Jaki jest opis dokumentu o nazwie \"Robbin CV\" z jego identyfikatorem dokumentu i szablonu?"
        },
        "query": {
            "en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
            "pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Return the description with document and template id of the document with the name Robbin CV.",
            "pl": "Zwróć opis z identyfikatorem dokumentu i szablonu dokumentu o nazwie Robbin CV."
        },
        "query": {
            "en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
            "pl": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "How many different templates do all document use?",
            "pl": "Z ilu różnych szablonów korzystają wszystkie dokumenty?"
        },
        "query": {
            "en": "SELECT count(DISTINCT template_id) FROM Documents",
            "pl": "SELECT count(DISTINCT template_id) FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Count the number of different templates used for documents.",
            "pl": "Policz liczbę różnych szablonów używanych dla dokumentów."
        },
        "query": {
            "en": "SELECT count(DISTINCT template_id) FROM Documents",
            "pl": "SELECT count(DISTINCT template_id) FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "How many documents are using the PPT template?",
            "pl": "Ile dokumentów korzysta z szablonu PPT?"
        },
        "query": {
            "en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
            "pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Count the number of documents that use the PPT template type.",
            "pl": "Policz liczbę dokumentów korzystających z szablonu typu PPT."
        },
        "query": {
            "en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
            "pl": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Show all template ids and the number of documents using each template.",
            "pl": "Pokaż wszystkie identyfikatory szablonów i liczbę dokumentów korzystających z każdego szablonu."
        },
        "query": {
            "en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What are all different template ids used for documents, and how many times were each of them used?",
            "pl": "Jakie są różne identyfikatory szablonów używane w dokumentach i ile razy użyto każdego z nich?"
        },
        "query": {
            "en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
            "pl": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What is the effective date period for the template used by the most documents?",
            "pl": "Jaki jest okres obowiązywania szablonu używanego w większości dokumentów?"
        },
        "query": {
            "en": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date range of the template that is used for the greatest number of documents.",
            "pl": "Zwróć zakres dat obowiązywania szablonu, który jest używany dla największej liczby dokumentów."
        },
        "query": {
            "en": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Show ids for all templates that are used by more than one document.",
            "pl": "Pokaż identyfikatory wszystkich szablonów, które są używane przez więcej niż jeden dokument."
        },
        "query": {
            "en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What are the template ids of any templates used in more than a single document?",
            "pl": "Jakie są identyfikatory szablonów używanych w więcej niż jednym dokumencie?"
        },
        "query": {
            "en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
            "pl": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Show ids for all templates not used by any document.",
            "pl": "Pokaż identyfikatory wszystkich szablonów nieużywanych przez żaden dokument."
        },
        "query": {
            "en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
            "pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What are the ids for templates that are not used in any documents?",
            "pl": "Jakie są identyfikatory szablonów, które nie są używane w żadnych dokumentach?"
        },
        "query": {
            "en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
            "pl": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "How many templates do we have?",
            "pl": "Ile mamy szablonów?"
        },
        "query": {
            "en": "SELECT count(*) FROM Templates",
            "pl": "SELECT count(*) FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Count the number of templates.",
            "pl": "Policz liczbę szablonów."
        },
        "query": {
            "en": "SELECT count(*) FROM Templates",
            "pl": "SELECT count(*) FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show effective date period, and template type codes for all templates.",
            "pl": "Pokaż datę wejścia w życie, okres i kody typów szablonów dla wszystkich szablonów."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date period, and type codes for each template?",
            "pl": "Jaka jest data wejścia w życie, okres i kody typu dla każdego szablonu?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show all effective date period for all templates.",
            "pl": "Pokaż wszystkie daty wejścia w życie dla wszystkich szablonów."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date range from to?",
            "pl": "Jaki jest zakres dat wejścia w życie od do?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date range with template type code PP or PPT?",
            "pl": "Jaki jest zakres dat obowiązywania szablonu o kodzie typu PP lub PPT?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date range that have the code PP or PPT.",
            "pl": "Zwróć zakres dat wejścia w życie z kodem PP lub PPT."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Give me the effective date period whose template type code is CV?",
            "pl": "Podaj mi okres daty wejścia w życie, którego kod typu szablonu to CV?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"CV\"",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"CV\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date period of the template type CV.",
            "pl": "Zwróć okres daty wejścia w życie szablonu typu CV."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"CV\"",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates WHERE template_type_code  =  \"CV\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What is the effective date period and template type code for the template with version number later than 5?",
            "pl": "Jaki jest okres obowiązywania i kod typu szablonu dla szablonu z numerem wersji późniejszym niż 5?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates WHERE version_number  >  5",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates WHERE version_number  >  5"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date period and template type codes of templates with a version number greater than 5.",
            "pl": "Zwróć okres daty wejścia w życie i kody typów szablonów z numerem wersji większym niż 5."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates WHERE version_number  >  5",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  template_type_code FROM Templates WHERE version_number  >  5"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show all effective date period and number of templates for each.",
            "pl": "Pokaż wszystkie okresy obowiązywania i liczbę szablonów dla każdego z nich."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  count(*) FROM Templates GROUP BY template_type_code",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  count(*) FROM Templates GROUP BY template_type_code"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date period, and how many templates correspond to each?",
            "pl": "Jakie są okresy obowiązywania i ile szablonów odpowiada każdemu z nich?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To ,  count(*) FROM Templates GROUP BY template_type_code",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To ,  count(*) FROM Templates GROUP BY template_type_code"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Which effective date period has most number of templates?",
            "pl": "Który okres daty wejścia w życie ma najwięcej szablonów?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date period that the most templates belong to.",
            "pl": "Zwróć okres daty wejścia w życie, do którego należy większość szablonów."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show all effective date period with less than three templates.",
            "pl": "Pokaż wszystkie okresy daty wejścia w życie z mniej niż trzema szablonami."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date period that have fewer than 3 templates?",
            "pl": "Jakie są okresy daty wejścia w życie, które mają mniej niż 3 szablony?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates GROUP BY template_type_code HAVING count(*)  <  3"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What the smallest version number and its effective date date from and to?",
            "pl": "Jaki jest najmniejszy numer wersji i jej data wejścia w życie od i do?"
        },
        "query": {
            "en": "SELECT min(Version_Number) ,  Date_Effective_From ,  Date_Effective_To FROM Templates",
            "pl": "SELECT min(Version_Number) ,  Date_Effective_From ,  Date_Effective_To FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the lowest version number, along with its corresponding effective date date from and to.",
            "pl": "Zwróć najniższy numer wersji wraz z odpowiadającą mu datą wejścia w życie od i do."
        },
        "query": {
            "en": "SELECT min(Version_Number) ,  Date_Effective_From ,  Date_Effective_To FROM Templates",
            "pl": "SELECT min(Version_Number) ,  Date_Effective_From ,  Date_Effective_To FROM Templates"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What is the effective date range of the template used by document with the name \"Data base\"?",
            "pl": "Jaki jest zakres dat obowiązywania szablonu używanego przez dokument o nazwie \"Baza danych\"?"
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Baza danych\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date range of the template that is used by a document named Data base.",
            "pl": "Zwraca zakres dat obowiązywania szablonu używanego przez dokument o nazwie Data base."
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Baza danych\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Show all document names along with document and template id using templates with template type code BK.",
            "pl": "Pokaż wszystkie nazwy dokumentów wraz z identyfikatorem dokumentu i szablonu za pomocą szablonów z kodem typu szablonu BK."
        },
        "query": {
            "en": "SELECT T2.document_name, T2.Document_ID, T2.template_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
            "pl": "SELECT T2.document_name, T2.Document_ID, T2.template_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 5,
        "question": {
            "en": "Return the names of documents with document and template id that use templates with the code BK?",
            "pl": "Zwróć nazwy dokumentów z identyfikatorem dokumentu i szablonu, które używają szablonów z kodem BK?"
        },
        "query": {
            "en": "SELECT T2.document_name, T2.Document_ID, T2.template_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
            "pl": "SELECT T2.document_name, T2.Document_ID, T2.template_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show all effective date from and to, and the number of documents using each type.",
            "pl": "Pokaż wszystkie daty wejścia w życie od i do oraz liczbę dokumentów korzystających z każdego typu."
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are effective date from and to, and how many documents use each type?",
            "pl": "Czym są daty wejścia w życie od i do oraz ile dokumentów korzysta z każdego typu?"
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Which effective date period is used by most number of documents?",
            "pl": "Która data wejścia w życie jest używana w największej liczbie dokumentów?"
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date period that is most commonly used in documents.",
            "pl": "Zwróć okres daty wejścia w życie, który jest najczęściej używany w dokumentach."
        },
        "query": {
            "en": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.Date_Effective_From ,  T1.Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Show all effective date from and to that are not used by any document.",
            "pl": "Pokaż wszystkie efektywne daty od i do, które nie są używane przez żaden dokument."
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates EXCEPT SELECT Date_Effective_From ,  Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates EXCEPT SELECT Date_Effective_From ,  Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date from and to that are not used for any document?",
            "pl": "Jakie są daty wejścia w życie od i do, które nie są używane w żadnym dokumencie?"
        },
        "query": {
            "en": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates EXCEPT SELECT Date_Effective_From ,  Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
            "pl": "SELECT Date_Effective_From ,  Date_Effective_To FROM Templates EXCEPT SELECT Date_Effective_From ,  Date_Effective_To FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Show all template type codes and descriptions.",
            "pl": "Pokaż wszystkie kody i opisy typów szablonów."
        },
        "query": {
            "en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
            "pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What are the type codes and descriptions for all template types?",
            "pl": "Jakie są kody typów i opisy dla wszystkich typów szablonów?"
        },
        "query": {
            "en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
            "pl": "SELECT template_type_code ,  template_type_description FROM Ref_template_types"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What is the template type descriptions for template type code \"AD\".",
            "pl": "Jaki jest opis typu szablonu dla kodu typu szablonu \"AD\"."
        },
        "query": {
            "en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
            "pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Return the template type description of the template type with the code AD.",
            "pl": "Zwróć opis typu szablonu z kodem AD."
        },
        "query": {
            "en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
            "pl": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What is the template type code for template type description \"Book\".",
            "pl": "Jaki jest kod typu szablonu dla opisu typu szablonu \"Książka\"."
        },
        "query": {
            "en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
            "pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Książka\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Return the type code of the template type with the description \"Book\".",
            "pl": "Zwróć kod typu szablonu z opisem \"Książka\"."
        },
        "query": {
            "en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
            "pl": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Książka\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "What are the distinct template type descriptions for the templates ever used by any document?",
            "pl": "Jakie są odrębne opisy typów szablonów dla szablonów kiedykolwiek używanych w jakimkolwiek dokumencie?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
            "pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 0,
        "question": {
            "en": "Return the different descriptions for templates that have been used in a document.",
            "pl": "Zwróć różne opisy szablonów, które zostały użyte w dokumencie."
        },
        "query": {
            "en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
            "pl": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID"
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "What are the effective date range from to with template type description \"Presentation\".",
            "pl": "Jaki jest zakres dat obowiązywania od do z opisem typu szablonu \"Prezentacja\"."
        },
        "query": {
            "en": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
            "pl": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Prezentacja\""
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "type": 1,
        "question": {
            "en": "Return the effective date period corresponding to templates with the description 'Presentation'.",
            "pl": "Zwróć okres daty wejścia w życie odpowiadający szablonom z opisem \"Prezentacja\"."
        },
        "query": {
            "en": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
            "pl": "SELECT T2.Date_Effective_From ,  T2.Date_Effective_To FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Prezentacja\""
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Find both player names in each match.",
            "pl": "Znajdź nazwiska obu graczy w każdym meczu."
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches",
            "pl": "SELECT loser_name, winner_name FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Give me both player names in each match?",
            "pl": "Podaj mi nazwiska obu graczy w każdym meczu?"
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches",
            "pl": "SELECT loser_name, winner_name FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Find both player ages in each match.",
            "pl": "Znajdź wiek obu graczy w każdym meczu."
        },
        "query": {
            "en": "SELECT winner_age, loser_age FROM matches",
            "pl": "SELECT winner_age, loser_age FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Give me both player ages in each match.",
            "pl": "Podaj wiek obu zawodników w każdym meczu."
        },
        "query": {
            "en": "SELECT winner_age, loser_age FROM matches",
            "pl": "SELECT winner_age, loser_age FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 3,
        "question": {
            "en": "List the first name and birth date of all American players.",
            "pl": "Wymień imię i datę urodzenia wszystkich amerykańskich graczy."
        },
        "query": {
            "en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
            "pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 3,
        "question": {
            "en": "What are the first names and birth dates of American players?",
            "pl": "Jakie są imiona i daty urodzenia amerykańskich graczy?"
        },
        "query": {
            "en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
            "pl": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "Find the average loser and winner age of all matches.",
            "pl": "Znajdź średni wiek zwycięzcy i przegranego we wszystkich meczach."
        },
        "query": {
            "en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
            "pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "What are the average loser and winner ages across matches?",
            "pl": "Jaki jest średni wiek przegranego i zwycięzcy w poszczególnych meczach?"
        },
        "query": {
            "en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
            "pl": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "Find their all average rank including winner and loser in each matches.",
            "pl": "Znajdź ich wszystkie średnie rankingi, w tym zwycięzcę i przegranego w każdym meczu."
        },
        "query": {
            "en": "SELECT avg(winner_rank), avg(loser_rank) FROM matches",
            "pl": "SELECT avg(winner_rank), avg(loser_rank) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "What is the average rank for all players including winner and loser in all matches?",
            "pl": "Jaka jest średnia ranga wszystkich graczy, w tym zwycięzcy i przegranego we wszystkich meczach?"
        },
        "query": {
            "en": "SELECT avg(winner_rank), avg(loser_rank) FROM matches",
            "pl": "SELECT avg(winner_rank), avg(loser_rank) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "Find the highest rank of all players including winner and loser in all matches.",
            "pl": "Znajdź najwyższą pozycję wszystkich graczy, w tym zwycięzcę i przegranego we wszystkich meczach."
        },
        "query": {
            "en": "SELECT min(winner_rank), min(loser_rank) FROM matches",
            "pl": "SELECT min(winner_rank), min(loser_rank) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 5,
        "question": {
            "en": "What is the best rank of all players including winner and loser across all matches?",
            "pl": "Jaka jest najlepsza ranga wszystkich graczy, w tym zwycięzcy i przegranego we wszystkich meczach?"
        },
        "query": {
            "en": "SELECT min(winner_rank), min(loser_rank) FROM matches",
            "pl": "SELECT min(winner_rank), min(loser_rank) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "find the number of distinct country codes of all players.",
            "pl": "znajdź liczbę różnych kodów krajów wszystkich graczy."
        },
        "query": {
            "en": "SELECT count(DISTINCT country_code) FROM players",
            "pl": "SELECT count(DISTINCT country_code) FROM players"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many distinct countries do players come from?",
            "pl": "Z ilu różnych krajów pochodzą gracze?"
        },
        "query": {
            "en": "SELECT count(DISTINCT country_code) FROM players",
            "pl": "SELECT count(DISTINCT country_code) FROM players"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the number of distinct name of losers.",
            "pl": "Znajdź liczbę różnych nazw przegranych."
        },
        "query": {
            "en": "SELECT count(DISTINCT loser_name) FROM matches",
            "pl": "SELECT count(DISTINCT loser_name) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many different loser names are there?",
            "pl": "Ile jest różnych imion przegranych?"
        },
        "query": {
            "en": "SELECT count(DISTINCT loser_name) FROM matches",
            "pl": "SELECT count(DISTINCT loser_name) FROM matches"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the name of tourney that has more than 10 matches.",
            "pl": "Znajdź nazwę turnieju, w którym rozegrano więcej niż 10 meczów."
        },
        "query": {
            "en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
            "pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the names of tournaments that have more than 10 matches?",
            "pl": "Jak nazywają się turnieje, w których odbywa się więcej niż 10 meczów?"
        },
        "query": {
            "en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
            "pl": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "List the names of all match players including winner and loser who played in both 2013 and 2016.",
            "pl": "Wymień nazwiska wszystkich graczy meczowych, w tym zwycięzcy i przegranego, którzy grali zarówno w 2013, jak i 2016 roku."
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2016",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2016"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "What are the names of all match players including winner and loser who played in both 2013 and 2016?",
            "pl": "Jakie są nazwiska wszystkich zawodników, którzy grali w meczach 2013 i 2016, w tym zwycięzcy i przegranego?"
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2016",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2016"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "List the all player name in each matche who played in years of 2013 or 2016.",
            "pl": "Wymień nazwiska wszystkich graczy w każdym meczu, którzy grali w latach 2013 lub 2016."
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Including winner and loser, Give me all player name of each matche in 2013 or 2016 year?",
            "pl": "Wliczając zwycięzcę i przegranego, podaj mi nazwiska wszystkich graczy z każdego meczu w 2013 lub 2016 roku?"
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
            "pl": "Jaki jest kod kraju i imię zawodniczek, które wygrały w turniejach WTA Championships i Australian Open?"
        },
        "query": {
            "en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
            "pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Mistrzostwa WTA' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
            "pl": "Jakie są imiona i kody krajów zawodniczek, które wygrały zarówno WTA Championships, jak i Australian Open?"
        },
        "query": {
            "en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
            "pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Mistrzostwa WTA' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the first name and country code of the oldest player.",
            "pl": "Znajdź imię i kod kraju najstarszego gracza."
        },
        "query": {
            "en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
            "pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What is the first name and country code of the oldest player?",
            "pl": "Jakie jest imię i kod kraju najstarszego gracza?"
        },
        "query": {
            "en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
            "pl": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "List the first and last name of all players order of their birth date from old to young.",
            "pl": "Wymień imiona i nazwiska wszystkich graczy w kolejności od najstarszego do najmłodszego."
        },
        "query": {
            "en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
            "pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "What are the full names of all players, sorted from oldest to youngest?",
            "pl": "Jakie są pełne imiona i nazwiska wszystkich graczy, posortowane od najstarszego do najmłodszego?"
        },
        "query": {
            "en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
            "pl": "SELECT first_name ,  last_name FROM players ORDER BY birth_date"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "List the first and last name of all players who are left / L hand in the order of their date of birth from the oldest to the youngest.",
            "pl": "Wymień imię i nazwisko wszystkich graczy, którzy są leworęczni / lewonożni, w kolejności od najstarszego do najmłodszego według daty urodzenia."
        },
        "query": {
            "en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
            "pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "What are the name of all left handed players, in order of date of birth from the young to the old?",
            "pl": "Jak nazywają się wszyscy leworęczni gracze w kolejności od najmłodszych do najstarszych?"
        },
        "query": {
            "en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date desc",
            "pl": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date desc"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the first name and country code of the player who did the most number of tours.",
            "pl": "Znajdź imię i nazwisko oraz kod kraju gracza, który odbył najwięcej tras koncertowych."
        },
        "query": {
            "en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
            "pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What is the first name and country code of the player with the most tours?",
            "pl": "Jakie jest imię i kod kraju gracza z największą liczbą podróży?"
        },
        "query": {
            "en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
            "pl": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the year that has the most number of matches.",
            "pl": "Znajdź rok z największą liczbą dopasowań."
        },
        "query": {
            "en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Which year had the most matches?",
            "pl": "W którym roku rozegrano najwięcej meczów?"
        },
        "query": {
            "en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "Find the name and rank points of the player who won the most times.",
            "pl": "Znajdź imię i nazwisko oraz punkty rankingowe gracza, który wygrał najwięcej razy."
        },
        "query": {
            "en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 2,
        "question": {
            "en": "What is the name of the player who has won the most matches, and how many rank points does this player have?",
            "pl": "Jak nazywa się gracz, który wygrał najwięcej meczów i ile ma punktów rankingowych?"
        },
        "query": {
            "en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Find all match player name including winner and loser where the winner has the highest rank points and participated in the Australian Open tourney.",
            "pl": "Znajdź wszystkie nazwiska graczy, w tym zwycięzcę i przegranego, gdzie zwycięzca ma najwięcej punktów rankingowych i brał udział w turnieju Australian Open."
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "What are the match player names including winner and loser where the winner had the most rank points and participated in the Australian Open tournament?",
            "pl": "Jakie są nazwiska graczy, w tym zwycięzcy i przegranego meczu, w którym zwycięzca miał najwięcej punktów rankingowych i brał udział w turnieju Australian Open?"
        },
        "query": {
            "en": "SELECT loser_name, winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "pl": "SELECT loser_name, winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Including winner and loser, find all the player names in each match with greatest number of minutes.",
            "pl": "Uwzględniając zwycięzcę i przegranego, znajdź nazwiska wszystkich graczy z największą liczbą minut w każdym meczu."
        },
        "query": {
            "en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
            "pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "In each match, what are the winner with loser names who played in the longest match?",
            "pl": "W każdym meczu, jakie są nazwiska zwycięzcy i przegranego, którzy grali w najdłuższym meczu?"
        },
        "query": {
            "en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
            "pl": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the average ranking for each player and their first name.",
            "pl": "Znajdź średni ranking dla każdego gracza i jego imienia."
        },
        "query": {
            "en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the first names of all players, and their average rankings?",
            "pl": "Jakie są imiona wszystkich graczy i ich średnie rankingi?"
        },
        "query": {
            "en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "pl": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Find the total ranking points for each player and their name.",
            "pl": "Znajdź łączną liczbę punktów rankingowych dla każdego gracza i jego imię."
        },
        "query": {
            "en": "SELECT sum(ranking_points) ,  T1.first_name, T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "pl": "SELECT sum(ranking_points) ,  T1.first_name, T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "What are the names of all players, and their total ranking points?",
            "pl": "Jakie są nazwiska wszystkich graczy i ich łączna liczba punktów rankingowych?"
        },
        "query": {
            "en": "SELECT sum(ranking_points) ,  T1.first_name, T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
            "pl": "SELECT sum(ranking_points) ,  T1.first_name, T1.last_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "find the number of players for each country.",
            "pl": "Znajdź liczbę graczy dla każdego kraju."
        },
        "query": {
            "en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many players are from each country?",
            "pl": "Ilu graczy pochodzi z każdego kraju?"
        },
        "query": {
            "en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
            "pl": "SELECT count(*) ,  country_code FROM players GROUP BY country_code"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "find the code of the country where has the greatest number of players.",
            "pl": "Znajdź kod kraju, w którym jest najwięcej graczy."
        },
        "query": {
            "en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What is the code of the country with the most players?",
            "pl": "Jaki jest kod kraju z największą liczbą graczy?"
        },
        "query": {
            "en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the codes of countries that have more than 50 players.",
            "pl": "Znajdź kody krajów, które mają więcej niż 50 graczy."
        },
        "query": {
            "en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the codes of countries with more than 50 players?",
            "pl": "Jakie są kody krajów z ponad 50 graczami?"
        },
        "query": {
            "en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
            "pl": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the total number of tours for each ranking date.",
            "pl": "Znajdź całkowitą liczbę podróży dla każdej daty rankingu."
        },
        "query": {
            "en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
            "pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many total tours were there for each ranking date?",
            "pl": "Ile było łącznie wycieczek dla każdej daty rankingu?"
        },
        "query": {
            "en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
            "pl": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the number of matches happened in each year.",
            "pl": "Znajdź liczbę meczów rozegranych w każdym roku."
        },
        "query": {
            "en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many matches were played in each year?",
            "pl": "Ile meczów rozegrano w każdym roku?"
        },
        "query": {
            "en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
            "pl": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the name and rank of the 3 youngest winners across all matches.",
            "pl": "Znajdź nazwisko i rangę 3 najmłodszych zwycięzców we wszystkich meczach."
        },
        "query": {
            "en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
            "pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "What are the names and ranks of the three youngest winners across all matches?",
            "pl": "Jakie są nazwiska i rangi trzech najmłodszych zwycięzców we wszystkich meczach?"
        },
        "query": {
            "en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
            "pl": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many different winners both participated in the WTA Championships and were left handed?",
            "pl": "Ilu różnych zwycięzców brało udział w Mistrzostwach WTA i było leworęcznych?"
        },
        "query": {
            "en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
            "pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Mistrzostwa WTA' AND winner_hand  =  'L'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the number of left handed winners who participated in the WTA Championships.",
            "pl": "Znajdź liczbę leworęcznych zwycięzców, którzy wzięli udział w Mistrzostwach WTA."
        },
        "query": {
            "en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
            "pl": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Mistrzostwa WTA' AND winner_hand  =  'L'"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "Find the name and birth date of the winner who has the highest rank points in all matches.",
            "pl": "Znajdź imię i nazwisko oraz datę urodzenia zwycięzcy, który zdobył najwięcej punktów rankingowych we wszystkich meczach."
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
            "pl": "SELECT T1.first_name , T1.last_name ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 1,
        "question": {
            "en": "What is the name and birth date of the player with the most winner rank points across all matches?",
            "pl": "Jakie jest imię i nazwisko oraz data urodzenia gracza z największą liczbą punktów w rankingu zwycięzców we wszystkich meczach?"
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name  ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
            "pl": "SELECT T1.first_name , T1.last_name  ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "Find the number of players for each hand type.",
            "pl": "Znajdź liczbę graczy dla każdego typu rozdania."
        },
        "query": {
            "en": "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "pl": "SELECT count(*) ,  hand FROM players GROUP BY hand"
        }
    },
    {
        "db_id": "wta_1",
        "type": 0,
        "question": {
            "en": "How many players are there for each hand type?",
            "pl": "Ilu jest graczy dla każdego typu ręki?"
        },
        "query": {
            "en": "SELECT count(*) ,  hand FROM players GROUP BY hand",
            "pl": "SELECT count(*) ,  hand FROM players GROUP BY hand"
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "type": 1,
        "question": {
            "en": "what are all the addresse lines?",
            "pl": "Jakie są wszystkie linie adresowe?"
        },
        "query": {
            "en": "SELECT line_1 ,  line_2, line_3 FROM addresses",
            "pl": "SELECT line_1 ,  line_2, line_3 FROM addresses"
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "type": 1,
        "question": {
            "en": "Give me the three addresse lines?",
            "pl": "Podaj mi trzy linie adresowe?"
        },
        "query": {
            "en": "SELECT line_1 ,  line_2, line_3 FROM addresses",
            "pl": "SELECT line_1 ,  line_2, line_3 FROM addresses"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "How many first shows?",
            "pl": "Ile pierwszych występów?"
        },
        "query": {
            "en": "SELECT count(*) FROM show where If_first_show = 'T'",
            "pl": "SELECT count(*) FROM show where If_first_show = 'T'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "Count the number of first show.",
            "pl": "Policz liczbę pierwszych pokazów."
        },
        "query": {
            "en": "SELECT count(*) FROM show where If_first_show = 'T'",
            "pl": "SELECT count(*) FROM show where If_first_show = 'T'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "List the names of conductors in ascending order of age.",
            "pl": "Wymień nazwiska dyrygentów w kolejności rosnącej według wieku."
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY birthday desc",
            "pl": "SELECT Name FROM conductor ORDER BY birthday desc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the names of conductors, ordered by age?",
            "pl": "Jak nazywają się dyrygenci uporządkowani według wieku?"
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY birthday desc",
            "pl": "SELECT Name FROM conductor ORDER BY birthday desc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 3,
        "question": {
            "en": "What are the names of american conductors?",
            "pl": "Jak nazywają się amerykańscy dyrygenci?"
        },
        "query": {
            "en": "SELECT Name FROM conductor WHERE Nationality = 'USA'",
            "pl": "SELECT Name FROM conductor WHERE Nationality = 'USA'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 3,
        "question": {
            "en": "Return the names of american conductors.",
            "pl": "Zwróć nazwiska amerykańskich dyrygentów."
        },
        "query": {
            "en": "SELECT Name FROM conductor WHERE Nationality = 'USA'",
            "pl": "SELECT Name FROM conductor WHERE Nationality = 'USA'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the record companies of orchestras in the order of founded years from oldest to latest?",
            "pl": "Jakie są wytwórnie płytowe orkiestr w kolejności od najstarszej do najnowszej?"
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc",
            "pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "Return the record companies of orchestras, sorted by the founded year from oldest to latest.",
            "pl": "Zwróć wytwórnie płytowe orkiestr, posortowane według roku założenia od najstarszego do najnowszego."
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc",
            "pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "What is the average attendance of non-first shows?",
            "pl": "Jaka jest średnia frekwencja na pokazach innych niż pierwsze?"
        },
        "query": {
            "en": "SELECT avg(Attendance) FROM SHOW where If_first_show = 'F'",
            "pl": "SELECT avg(Attendance) FROM SHOW where If_first_show = 'F'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "Return the average attendance across all non-first shows.",
            "pl": "Zwróć średnią frekwencję we wszystkich pokazach innych niż pierwsze."
        },
        "query": {
            "en": "SELECT avg(Attendance) FROM SHOW where If_first_show = 'F'",
            "pl": "SELECT avg(Attendance) FROM SHOW where If_first_show = 'F'"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
            "pl": "Jaki jest maksymalny i minimalny udział występów, których typ nie jest \"finałem na żywo\"?"
        },
        "query": {
            "en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
            "pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Finał na żywo\""
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
            "pl": "Zwróć maksymalne i minimalne udziały dla występów, które nie mają typu \"Finał na żywo\"."
        },
        "query": {
            "en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
            "pl": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Finał na żywo\""
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "How many different nationalities do conductors have?",
            "pl": "Ile różnych narodowości mają dyrygenci?"
        },
        "query": {
            "en": "SELECT count(DISTINCT Nationality) FROM conductor",
            "pl": "SELECT count(DISTINCT Nationality) FROM conductor"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Count the number of different nationalities of conductors.",
            "pl": "Policz liczbę różnych narodowości dyrygentów."
        },
        "query": {
            "en": "SELECT count(DISTINCT Nationality) FROM conductor",
            "pl": "SELECT count(DISTINCT Nationality) FROM conductor"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "List names of conductors in ascending order of age.",
            "pl": "Wymień nazwiska dyrygentów w kolejności rosnącej według wieku."
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY birthday DESC",
            "pl": "SELECT Name FROM conductor ORDER BY birthday DESC"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the names of conductors, sorted ascending by age?",
            "pl": "Jakie są nazwiska dyrygentów, posortowane rosnąco według wieku?"
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY birthday DESC",
            "pl": "SELECT Name FROM conductor ORDER BY birthday DESC"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "List the name of the conductor with the longest work.",
            "pl": "Wymień nazwisko dyrygenta z najdłuższą pracą."
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
            "pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What is the name of the conductor who has worked the longest?",
            "pl": "Jak nazywa się dyrygent, który pracuje najdłużej?"
        },
        "query": {
            "en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
            "pl": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Show the names of conductors and the orchestras they have conducted.",
            "pl": "Pokaż nazwiska dyrygentów i orkiestry, którymi dyrygowali."
        },
        "query": {
            "en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
            "pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
            "pl": "Jakie są nazwiska dyrygentów i orkiestr, którymi dyrygowali?"
        },
        "query": {
            "en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
            "pl": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Show the names of conductors that have conducted more than one orchestras.",
            "pl": "Podaj nazwiska dyrygentów, którzy prowadzili więcej niż jedną orkiestrę."
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "What are the names of conductors who have conducted at more than one orchestra?",
            "pl": "Jakie są nazwiska dyrygentów, którzy dyrygowali więcej niż jedną orkiestrą?"
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Show the name of the conductor that has conducted the most number of orchestras.",
            "pl": "Wskaż nazwisko dyrygenta, który poprowadził najwięcej orkiestr."
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "What is the name of the conductor who has conducted the most orchestras?",
            "pl": "Jak nazywa się dyrygent, który poprowadził najwięcej orkiestr?"
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "Please show the name of the conductor who has conducted the oldest orchestras.",
            "pl": "Podaj nazwisko dyrygenta, który prowadził najstarsze orkiestry."
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID order by Year_of_Founded asc limit 1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID order by Year_of_Founded asc limit 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the names of conductors who have conducted the latest orchestras?",
            "pl": "Jakie są nazwiska dyrygentów, którzy prowadzili najnowsze orkiestry?"
        },
        "query": {
            "en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID order by Year_of_Founded  desc limit 1",
            "pl": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID order by Year_of_Founded  desc limit 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "Please show the different record companies and the corresponding number of orchestras.",
            "pl": "Wskaż różne wytwórnie płytowe i odpowiadającą im liczbę orkiestr."
        },
        "query": {
            "en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "How many orchestras does each record company manage?",
            "pl": "Iloma orkiestrami zarządza każda wytwórnia płytowa?"
        },
        "query": {
            "en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
            "pl": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "Please show the record formats of orchestras in ascending order of age.",
            "pl": "Pokaż formaty nagrań orkiestr w kolejności rosnącej według wieku."
        },
        "query": {
            "en": "SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded desc",
            "pl": "SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded desc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the major record formats of orchestras, sorted by their age?",
            "pl": "Jakie są główne formaty nagrań orkiestr, posortowane według ich wieku?"
        },
        "query": {
            "en": "SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded desc",
            "pl": "SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded desc"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "List the record company shared by the oldest orchestras.",
            "pl": "Wymień wytwórnię płytową wspólną dla najstarszych orkiestr."
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc LIMIT 1",
            "pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded asc LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What is the record company used by the newest orchestras?",
            "pl": "Z usług jakiej wytwórni korzystają najnowsze orkiestry?"
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded desc LIMIT 1",
            "pl": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded desc LIMIT 1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "List the names of orchestras that have no performance.",
            "pl": "Wymień nazwy orkiestr, które nie mają występów."
        },
        "query": {
            "en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
            "pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 0,
        "question": {
            "en": "What are the orchestras that do not have any performances?",
            "pl": "Jakie są orkiestry, które nie mają żadnych występów?"
        },
        "query": {
            "en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
            "pl": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "Show the record companies shared by orchestras founded before or in 2003.",
            "pl": "Pokaż wytwórnie płytowe współdzielone przez orkiestry założone przed lub w 2003 roku."
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <=  2003",
            "pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <=  2003"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 2,
        "question": {
            "en": "What are the record companies that are used by both orchestras founded after or in 2003?",
            "pl": "Z jakich wytwórni korzystają obie orkiestry założone po lub w 2003 roku?"
        },
        "query": {
            "en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >=  2003",
            "pl": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >=  2003"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "Find the number of first shows in \"Glebe Park\".",
            "pl": "Znajdź liczbę pierwszych występów w \"Glebe Park\"."
        },
        "query": {
            "en": "SELECT COUNT(*) FROM show WHERE Result  =  \"Glebe Park\" and If_first_show  =  \"T\"",
            "pl": "SELECT COUNT(*) FROM show WHERE Result  =  \"Glebe Park\" and If_first_show  =  \"T\""
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "Count the number of all first shows in \"Glebe Park\"",
            "pl": "Policz liczbę wszystkich pierwszych pokazów w \"Glebe Park\"."
        },
        "query": {
            "en": "SELECT COUNT(*) FROM show WHERE Result  =  \"Glebe Park\" and If_first_show  =  \"T\"",
            "pl": "SELECT COUNT(*) FROM show WHERE Result  =  \"Glebe Park\" and If_first_show  =  \"T\""
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "Show the type in which performance that have given more than one non-first show.",
            "pl": "Wskaż typ występu, w którym dano więcej niż jeden występ niepierwszy."
        },
        "query": {
            "en": "SELECT Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID WHERE If_first_show = 'F' GROUP BY T2.Performance_ID HAVING COUNT(*)  >  1",
            "pl": "SELECT Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID WHERE If_first_show = 'F' GROUP BY T2.Performance_ID HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "new_orchestra",
        "type": 4,
        "question": {
            "en": "What are type of performances that have had more than one non-first show?",
            "pl": "Jakie są rodzaje występów, które miały więcej niż jeden niepierwszy występ?"
        },
        "query": {
            "en": "SELECT Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID Where If_first_show = 'F' GROUP BY T2.Performance_ID HAVING COUNT(*)  >  1",
            "pl": "SELECT Type FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID Where If_first_show = 'F' GROUP BY T2.Performance_ID HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which states have both owners and professionals living there?",
            "pl": "W których stanach mieszkają zarówno właściciele, jak i profesjonaliści?"
        },
        "query": {
            "en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
            "pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the states where both owners and professionals live.",
            "pl": "Znajdź stany, w których mieszkają zarówno właściciele, jak i profesjonaliści."
        },
        "query": {
            "en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
            "pl": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What is the average age of the dogs who have gone through any treatments?",
            "pl": "Jaki jest średni wiek psów, które przeszły jakiekolwiek leczenie?"
        },
        "query": {
            "en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
            "pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the average age of the dogs who went through treatments.",
            "pl": "Znajdź średni wiek psów, które przeszły leczenie."
        },
        "query": {
            "en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
            "pl": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
            "pl": "Którzy specjaliści mieszkają w stanie Indiana lub przeprowadzili więcej niż 2 zabiegi? Wymień jego imię, nazwisko i telefon komórkowy."
        },
        "query": {
            "en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
            "pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
            "pl": "Znajdź identyfikator, nazwisko i telefon komórkowy specjalistów, którzy mieszkają w stanie Indiana lub wykonali więcej niż dwa zabiegi."
        },
        "query": {
            "en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
            "pl": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
            "pl": "Które psy nie kosztowały właściciela więcej niż 1000 zł za leczenie? Wymień imiona psów."
        },
        "query": {
            "en": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
            "pl": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What are the names of the dogs for which the owner spent more than 1000 for treatment?",
            "pl": "Jak nazywają się psy, na których leczenie właściciel wydał ponad 1000 zł?"
        },
        "query": {
            "en": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
            "pl": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which first names are used for professionals or owners but are not used as dog names?",
            "pl": "Które imiona są używane przez profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów?"
        },
        "query": {
            "en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
            "pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the first names that are used for professionals or owners but are not used as dog names.",
            "pl": "Znajdź imiona, które są używane dla profesjonalistów lub właścicieli, ale nie są używane jako imiona dla psów."
        },
        "query": {
            "en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
            "pl": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which professional did not operate any treatment on dogs? List the professional's id, and name.",
            "pl": "Który specjalista nie wykonywał żadnych zabiegów na psach? Wymień identyfikator i nazwisko specjalisty."
        },
        "query": {
            "en": "SELECT professional_id ,  first_name , last_name FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
            "pl": "SELECT professional_id ,  first_name , last_name FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Give me the id, and name of the professionals who did not perform any treatment on dogs.",
            "pl": "Podaj mi identyfikator i nazwisko specjalistów, którzy nie wykonywali żadnych zabiegów na psach."
        },
        "query": {
            "en": "SELECT professional_id ,  first_name , last_name FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
            "pl": "SELECT professional_id ,  first_name , last_name FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which owner owns the most dogs? List the owner id, and name.",
            "pl": "Który właściciel ma najwięcej psów? Podaj identyfikator i imię właściciela."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Return the owner id and name of the owner who has the most dogs.",
            "pl": "Zwróć identyfikator i nazwę właściciela, który ma najwięcej psów."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which professionals have done at least two treatments? List the professional's id, home and phone number.",
            "pl": "Którzy specjaliści wykonali co najmniej dwa zabiegi? Wymień imię i nazwisko specjalisty, adres domowy i numer telefonu."
        },
        "query": {
            "en": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "pl": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are the id, home and phone number of the professionals who have performed two or more treatments?",
            "pl": "Jaki jest identyfikator, miejsce zamieszkania i numer telefonu specjalistów, którzy wykonali dwa lub więcej zabiegów?"
        },
        "query": {
            "en": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "pl": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "What is the name of the breed with the most abandoned dogs?",
            "pl": "Jak nazywa się rasa z największą liczbą porzuconych psów?"
        },
        "query": {
            "en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code where abandoned_yn = 1 GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code where abandoned_yn = 1 GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "Which breed do the most abandoned dogs have? Give me the breed name.",
            "pl": "Jakiej rasy jest najwięcej porzuconych psów? Podaj mi nazwę rasy."
        },
        "query": {
            "en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code where abandoned_yn = 1 GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code where abandoned_yn = 1 GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
            "pl": "Który właściciel zapłacił za najwięcej zabiegów na swoich psach? Wymień identyfikator i nazwisko właściciela."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
            "pl": "Podaj mi identyfikator i nazwisko właściciela, który wydał najwięcej na leczenie swoich psów."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What is the description of the treatment type that costs the least money in total?",
            "pl": "Jaki jest opis rodzaju leczenia, które kosztuje łącznie najmniej pieniędzy?"
        },
        "query": {
            "en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Give me the description of the treatment type whose total cost is the lowest.",
            "pl": "Podaj opis rodzaju leczenia, którego całkowity koszt jest najniższy."
        },
        "query": {
            "en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "pl": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
            "pl": "Który właściciel zapłacił łącznie największą kwotę za swoje psy? Pokaż identyfikator i kod pocztowy właściciela."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
            "pl": "Znajdź identyfikator i kod pocztowy właściciela, który wydał łącznie najwięcej pieniędzy na swoje psy."
        },
        "query": {
            "en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "pl": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which professionals have done at least two types of treatments? List the professional id and name.",
            "pl": "Którzy specjaliści wykonali co najmniej dwa rodzaje zabiegów? Wymień imię i nazwisko specjalisty."
        },
        "query": {
            "en": "SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "pl": "SELECT T1.professional_id ,  T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Find the id and home and phone number of the professionals who operate two or more types of treatments.",
            "pl": "Znajdź identyfikator, dom i numer telefonu specjalistów, którzy obsługują dwa lub więcej rodzajów zabiegów."
        },
        "query": {
            "en": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
            "pl": "SELECT T1.professional_id ,  T1.home_phone ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are the name of the professionals who have done treatment with cost below average?",
            "pl": "Jak nazywają się specjaliści, którzy przeprowadzili leczenie przy kosztach poniżej średniej?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "pl": "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which professionals have operated a treatment that costs less than the average? Give me their names.",
            "pl": "Którzy specjaliści przeprowadzili leczenie, które kosztuje mniej niż średnia? Podaj ich nazwiska."
        },
        "query": {
            "en": "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "pl": "SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "List the date of each treatment, together with the name of the professional who operated it.",
            "pl": "Wymień datę każdego zabiegu wraz z nazwiskiem specjalisty, który go przeprowadził."
        },
        "query": {
            "en": "SELECT T1.date_of_treatment ,  T2.first_name , T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
            "pl": "SELECT T1.date_of_treatment ,  T2.first_name , T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are the date and the operating professional's name of each treatment?",
            "pl": "Jaka jest data i nazwisko specjalisty wykonującego każdy zabieg?"
        },
        "query": {
            "en": "SELECT T1.date_of_treatment ,  T2.first_name , T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
            "pl": "SELECT T1.date_of_treatment ,  T2.first_name , T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "List the cost of each treatment and the corresponding treatment type description.",
            "pl": "Wymień koszt każdego zabiegu i odpowiadający mu opis rodzaju zabiegu."
        },
        "query": {
            "en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
            "pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What are the cost and treatment type description of each treatment?",
            "pl": "Jaki jest koszt i opis każdego rodzaju leczenia?"
        },
        "query": {
            "en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
            "pl": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "List each owner's name, and the size of his for her dog.",
            "pl": "Wymień imię i nazwisko każdego właściciela oraz rozmiar jego psa."
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "pl": "SELECT T1.first_name , T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are each owner's name, and the size of their dog?",
            "pl": "Jak nazywają się właściciele i jakiej wielkości są ich psy?"
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "pl": "SELECT T1.first_name , T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "List pairs of the owner's names and the dogs's name.",
            "pl": "Wymień pary imion właścicieli i psów."
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "pl": "SELECT T1.first_name , T1.last_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are each owner's name and their dogs's name?",
            "pl": "Jak nazywają się poszczególni właściciele i ich psy?"
        },
        "query": {
            "en": "SELECT T1.first_name , T1.last_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
            "pl": "SELECT T1.first_name , T1.last_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "List the names of the dogs of the rarest breed and the treatment dates of them.",
            "pl": "Wymień nazwy psów najrzadszych ras i daty ich leczenia."
        },
        "query": {
            "en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Which dogs are of the rarest breed? Show their names and treatment dates.",
            "pl": "Które psy należą do najrzadszych ras? Podaj ich imiona i daty leczenia."
        },
        "query": {
            "en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "pl": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 3,
        "question": {
            "en": "Which dogs are owned by someone who lives in VA? List the owner's first name and the dog's name.",
            "pl": "Które psy są własnością kogoś, kto mieszka w VA? Wymień imię właściciela i imię psa."
        },
        "query": {
            "en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
            "pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Wirginia'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 3,
        "question": {
            "en": "Find the first names of owners living in VA and the names of dogs they own.",
            "pl": "Znajdź imiona właścicieli mieszkających w VA i imiona psów, które posiadają."
        },
        "query": {
            "en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
            "pl": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Wirginia'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What is the treatment date from dog arriving to departing?",
            "pl": "Jaka jest data leczenia od przybycia psa do odlotu?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
            "pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Find the dog treatment period from arriving to departing date.",
            "pl": "Znajdź okres leczenia psa od daty przyjazdu do daty wyjazdu."
        },
        "query": {
            "en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
            "pl": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "List the last name of the owner owning the youngest dog.",
            "pl": "Podaj nazwisko właściciela najmłodszego psa."
        },
        "query": {
            "en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Who owns the youngest dog? Give me his or her last name.",
            "pl": "Kto jest właścicielem najmłodszego psa? Podaj jego lub jej nazwisko."
        },
        "query": {
            "en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "pl": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 3,
        "question": {
            "en": "List the emails of the professionals who live in the state of HI or WI.",
            "pl": "Podaj adresy e-mail specjalistów, którzy mieszkają w stanie HI lub WI."
        },
        "query": {
            "en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
            "pl": "SELECT email_address FROM Professionals WHERE state  =  'Hawaje' OR state  =  'Wisconsin'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 3,
        "question": {
            "en": "What are the emails of the professionals living in either the state of HI or WI?",
            "pl": "Jakie są e-maile profesjonalistów mieszkających w stanie HI lub WI?"
        },
        "query": {
            "en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
            "pl": "SELECT email_address FROM Professionals WHERE state  =  'Hawaje' OR state  =  'Wisconsin'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "What are the arriving date and the departing date of all the abandoned dogs?",
            "pl": "Jaka jest data przybycia i data odejścia wszystkich porzuconych psów?"
        },
        "query": {
            "en": "SELECT date_arrived ,  date_departed FROM Dogs where abandoned_yn = 1",
            "pl": "SELECT date_arrived ,  date_departed FROM Dogs where abandoned_yn = 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "List the arrival date and the departure date for all the abandoned dogs.",
            "pl": "Podaj datę przybycia i datę wyjazdu wszystkich porzuconych psów."
        },
        "query": {
            "en": "SELECT date_arrived ,  date_departed FROM Dogs where abandoned_yn = 1",
            "pl": "SELECT date_arrived ,  date_departed FROM Dogs where abandoned_yn = 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How many dogs went through any treatments?",
            "pl": "Ile psów przeszło jakiekolwiek leczenie?"
        },
        "query": {
            "en": "SELECT count(DISTINCT dog_id) FROM Treatments",
            "pl": "SELECT count(DISTINCT dog_id) FROM Treatments"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Count the number of dogs that went through a treatment.",
            "pl": "Policz liczbę psów, które przeszły leczenie."
        },
        "query": {
            "en": "SELECT count(DISTINCT dog_id) FROM Treatments",
            "pl": "SELECT count(DISTINCT dog_id) FROM Treatments"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How many professionals have performed any treatment to dogs?",
            "pl": "Ilu specjalistów wykonywało jakiekolwiek zabiegi na psach?"
        },
        "query": {
            "en": "SELECT count(DISTINCT professional_id) FROM Treatments",
            "pl": "SELECT count(DISTINCT professional_id) FROM Treatments"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the number of professionals who have ever treated dogs.",
            "pl": "Znajdź liczbę specjalistów, którzy kiedykolwiek leczyli psy."
        },
        "query": {
            "en": "SELECT count(DISTINCT professional_id) FROM Treatments",
            "pl": "SELECT count(DISTINCT professional_id) FROM Treatments"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which professionals live in a city containing the substring 'West'? List his or her name.",
            "pl": "Którzy specjaliści mieszkają w mieście zawierającym podciąg \"Zachód\"? Wymień ich nazwiska."
        },
        "query": {
            "en": "SELECT first_name , last_name FROM professionals WHERE city LIKE '%Zachód%'",
            "pl": "SELECT first_name , last_name FROM professionals WHERE city LIKE '%Zachód%'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Find the name of the professionals living in a city that contains the substring 'West'.",
            "pl": "Znajdź nazwiska specjalistów mieszkających w mieście, które zawiera podciąg \"Zachód\"."
        },
        "query": {
            "en": "SELECT first_name , last_name FROM professionals WHERE city LIKE '%Zachód%'",
            "pl": "SELECT first_name , last_name FROM professionals WHERE city LIKE '%Zachód%'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Which owners live in the state whose name contains the substring 'North'? List his name.",
            "pl": "Którzy właściciele mieszkają w stanie, którego nazwa zawiera podciąg \"Północ\"? Wymień jego nazwisko."
        },
        "query": {
            "en": "SELECT first_name , last_name FROM Owners WHERE state LIKE '%Północ%'",
            "pl": "SELECT first_name , last_name FROM Owners WHERE state LIKE '%Północ%'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "Return the name of the owners living in a state whose name contains the substring 'North'.",
            "pl": "Zwróć nazwę właścicieli mieszkających w stanie, którego nazwa zawiera podciąg \"Północ\"."
        },
        "query": {
            "en": "SELECT first_name , last_name FROM Owners WHERE state LIKE '%Północ%'",
            "pl": "SELECT first_name , last_name FROM Owners WHERE state LIKE '%Północ%'"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "How many abandoned dogs have an age below the average?",
            "pl": "Ile porzuconych psów ma wiek poniżej średniej?"
        },
        "query": {
            "en": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and age  <  ( SELECT avg(age) FROM Dogs )",
            "pl": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and age  <  ( SELECT avg(age) FROM Dogs )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "Count the number of abandoned dogs of an age below the average.",
            "pl": "Policz liczbę porzuconych psów w wieku poniżej średniej."
        },
        "query": {
            "en": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and age  <  ( SELECT avg(age) FROM Dogs )",
            "pl": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and age  <  ( SELECT avg(age) FROM Dogs )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How much does the most recent treatment cost?",
            "pl": "Ile kosztuje ostatnie leczenie?"
        },
        "query": {
            "en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
            "pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Show me the cost of the most recently performed treatment.",
            "pl": "Pokaż koszt ostatnio wykonanego zabiegu."
        },
        "query": {
            "en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
            "pl": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "How many abandoned dogs have not gone through any treatment?",
            "pl": "Ile porzuconych psów nie przeszło żadnego leczenia?"
        },
        "query": {
            "en": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and dog_id NOT IN ( SELECT dog_id FROM Treatments )",
            "pl": "SELECT count(*) FROM Dogs WHERE abandoned_yn = 1 and dog_id NOT IN ( SELECT dog_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Tell me the number of dogs that have received any treatment.",
            "pl": "Podaj liczbę psów, które zostały poddane leczeniu."
        },
        "query": {
            "en": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
            "pl": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "How many owners temporarily do not have any abandoned dogs?",
            "pl": "Ilu właścicieli tymczasowo nie ma żadnych porzuconych psów?"
        },
        "query": {
            "en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs where abandoned_yn = 1 )",
            "pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs where abandoned_yn = 1 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "Find the number of owners who do not own any abandoned dogs at this moment.",
            "pl": "Znajdź liczbę właścicieli, którzy nie posiadają obecnie żadnych porzuconych psów."
        },
        "query": {
            "en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs where abandoned_yn = 1 )",
            "pl": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs where abandoned_yn = 1 )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How many professionals did not operate any treatment on dogs?",
            "pl": "Ilu specjalistów nie przeprowadziło żadnego zabiegu na psach?"
        },
        "query": {
            "en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
            "pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the number of professionals who have not treated any dogs.",
            "pl": "Znajdź liczbę specjalistów, którzy nie leczyli żadnego psa."
        },
        "query": {
            "en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
            "pl": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "List the dog name, age and weight of the abandoned dogs? 1 stands for yes, and 0 stands for no.",
            "pl": "Wymień imię, wiek i wagę porzuconych psów? 1 oznacza tak, a 0 oznacza nie."
        },
        "query": {
            "en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
            "pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
            "pl": "Jakie są imiona, wiek i waga psów, które zostały porzucone? Zwróć uwagę, że 1 oznacza \"tak\", a 0 oznacza \"nie\" w tabelach."
        },
        "query": {
            "en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
            "pl": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "What is the average age of all the abandoned dogs?",
            "pl": "Jaki jest średni wiek wszystkich porzuconych psów?"
        },
        "query": {
            "en": "SELECT avg(age) FROM Dogs where abandoned_yn = 1",
            "pl": "SELECT avg(age) FROM Dogs where abandoned_yn = 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 4,
        "question": {
            "en": "Compute the average age of all the abandoned dogs.",
            "pl": "Oblicz średni wiek wszystkich porzuconych psów."
        },
        "query": {
            "en": "SELECT avg(age) FROM Dogs where abandoned_yn = 1",
            "pl": "SELECT avg(age) FROM Dogs where abandoned_yn = 1"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What is the age of the oldest dog?",
            "pl": "Jaki jest wiek najstarszego psa?"
        },
        "query": {
            "en": "SELECT max(age) FROM Dogs",
            "pl": "SELECT max(age) FROM Dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Tell me the age of the oldest dog.",
            "pl": "Podaj wiek najstarszego psa."
        },
        "query": {
            "en": "SELECT max(age) FROM Dogs",
            "pl": "SELECT max(age) FROM Dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How much does each charge type costs? List both charge type and amount.",
            "pl": "Ile kosztuje każdy rodzaj opłaty? Wymień zarówno rodzaj opłaty, jak i kwotę."
        },
        "query": {
            "en": "SELECT charge_type ,  charge_amount FROM Charges",
            "pl": "SELECT charge_type ,  charge_amount FROM Charges"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "List each charge type and its amount.",
            "pl": "Wymień każdy rodzaj opłaty i jej kwotę."
        },
        "query": {
            "en": "SELECT charge_type ,  charge_amount FROM Charges",
            "pl": "SELECT charge_type ,  charge_amount FROM Charges"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "How much does the most expensive charge type costs?",
            "pl": "Ile kosztuje najdroższy typ doładowania?"
        },
        "query": {
            "en": "SELECT max(charge_amount) FROM Charges",
            "pl": "SELECT max(charge_amount) FROM Charges"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What is the charge amount of the most expensive charge type?",
            "pl": "Jaka jest kwota doładowania najdroższego typu doładowania?"
        },
        "query": {
            "en": "SELECT max(charge_amount) FROM Charges",
            "pl": "SELECT max(charge_amount) FROM Charges"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "List the email and name of all the professionals.",
            "pl": "Podaj adres e-mail i imię i nazwisko wszystkich specjalistów."
        },
        "query": {
            "en": "SELECT email_address , first_name , last_name FROM professionals",
            "pl": "SELECT email_address , first_name , last_name FROM professionals"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are the email, and name of each professional?",
            "pl": "Jaki jest adres e-mail i nazwisko każdego specjalisty?"
        },
        "query": {
            "en": "SELECT email_address , first_name , last_name FROM professionals",
            "pl": "SELECT email_address , first_name , last_name FROM professionals"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "What are all the possible breed type and size type combinations?",
            "pl": "Jakie są wszystkie możliwe kombinacje typu rasy i rozmiaru?"
        },
        "query": {
            "en": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
            "pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 0,
        "question": {
            "en": "Find the distinct breed type and size type combinations for dogs.",
            "pl": "Znajdź różne kombinacje typu rasy i rozmiaru dla psów."
        },
        "query": {
            "en": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
            "pl": "SELECT DISTINCT breed_code ,  size_code FROM dogs"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "List the name of all the professionals along with the description of the treatment they have done.",
            "pl": "Wymień nazwiska wszystkich specjalistów wraz z opisem przeprowadzonego przez nich leczenia."
        },
        "query": {
            "en": "SELECT DISTINCT T1.first_name , T1.last_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
            "pl": "SELECT DISTINCT T1.first_name , T1.last_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
        }
    },
    {
        "db_id": "dog_kennels",
        "type": 1,
        "question": {
            "en": "What are each professional's name and description of the treatment they have performed?",
            "pl": "Podaj imię i nazwisko każdego specjalisty oraz opis przeprowadzonego przez niego zabiegu."
        },
        "query": {
            "en": "SELECT DISTINCT T1.first_name , T1.last_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
            "pl": "SELECT DISTINCT T1.first_name , T1.last_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "How many singers are there?",
            "pl": "Ilu jest piosenkarzy?"
        },
        "query": {
            "en": "SELECT count(*) FROM singer",
            "pl": "SELECT count(*) FROM singer"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What is the count of singers?",
            "pl": "Jaka jest liczba piosenkarzy?"
        },
        "query": {
            "en": "SELECT count(*) FROM singer",
            "pl": "SELECT count(*) FROM singer"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "List the name of singers in ascending order of age.",
            "pl": "Wymień nazwiska piosenkarzy w kolejności rosnącej według wieku."
        },
        "query": {
            "en": "SELECT Name FROM singer ORDER BY Birth_Year desc",
            "pl": "SELECT Name FROM singer ORDER BY Birth_Year desc"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "What are the names of singers ordered by ascending age?",
            "pl": "Jakie są nazwiska piosenkarzy uporządkowane według rosnącego wieku?"
        },
        "query": {
            "en": "SELECT Name FROM singer ORDER BY Birth_Year desc",
            "pl": "SELECT Name FROM singer ORDER BY Birth_Year desc"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What are the birth year and citizenship of singers?",
            "pl": "Jaki jest rok urodzenia i obywatelstwo piosenkarzy?"
        },
        "query": {
            "en": "SELECT Birth_Year ,  Citizenship FROM singer",
            "pl": "SELECT Birth_Year ,  Citizenship FROM singer"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What are the birth years and citizenships of the singers?",
            "pl": "Jakie są lata urodzenia i obywatelstwa piosenkarzy?"
        },
        "query": {
            "en": "SELECT Birth_Year ,  Citizenship FROM singer",
            "pl": "SELECT Birth_Year ,  Citizenship FROM singer"
        }
    },
    {
        "db_id": "singer",
        "type": 3,
        "question": {
            "en": "List the name of singers who is not French.",
            "pl": "Wymień nazwiska piosenkarzy, którzy nie są Francuzami."
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
            "pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\""
        }
    },
    {
        "db_id": "singer",
        "type": 3,
        "question": {
            "en": "What are the names of the singers who are not French?",
            "pl": "Jak nazywają się piosenkarze, którzy nie są Francuzami?"
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
            "pl": "SELECT Name FROM singer WHERE Citizenship != \"Francja\""
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "Show the name of singers whose birth year is earlier than or in 1948?",
            "pl": "Pokaż nazwiska piosenkarzy, których rok urodzenia jest wcześniejszy niż lub w 1948 roku?"
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Birth_Year  <=  1948",
            "pl": "SELECT Name FROM singer WHERE Birth_Year  <=  1948"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "What are the names of the singers whose birth years are earlier than or in 1948?",
            "pl": "Jak nazywają się piosenkarze, którzy urodzili się wcześniej niż w 1948 roku?"
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Birth_Year  <=  1948",
            "pl": "SELECT Name FROM singer WHERE Birth_Year  <=  1948"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "What is the name of the singer with the youngest age?",
            "pl": "Jak nazywa się piosenkarka w najmłodszym wieku?"
        },
        "query": {
            "en": "SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1",
            "pl": "SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "What is the name of the singer who is the youngest?",
            "pl": "Jak nazywa się piosenkarka, która jest najmłodsza?"
        },
        "query": {
            "en": "SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1",
            "pl": "SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "Show different citizenship of singers and the number of singers of each citizenship.",
            "pl": "Pokaż różne obywatelstwa piosenkarzy i liczbę piosenkarzy każdego obywatelstwa."
        },
        "query": {
            "en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
            "pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "For each citizenship, how many singers are from that country?",
            "pl": "Dla każdego obywatelstwa, ilu piosenkarzy pochodzi z tego kraju?"
        },
        "query": {
            "en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
            "pl": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "Please show the most common citizenship of singers.",
            "pl": "Wskaż najpopularniejsze obywatelstwo piosenkarzy."
        },
        "query": {
            "en": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
            "pl": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What is the msot common singer citizenship?",
            "pl": "Jakie jest najczęstsze obywatelstwo piosenkarza?"
        },
        "query": {
            "en": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
            "pl": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "Show different citizenships and the highest net worth of singers of each citizenship.",
            "pl": "Pokaż różne obywatelstwa i najwyższą wartość netto piosenkarzy z każdego obywatelstwa."
        },
        "query": {
            "en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "For each citizenship, what is the highest net worth?",
            "pl": "Jaka jest najwyższa wartość netto dla każdego obywatelstwa?"
        },
        "query": {
            "en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
            "pl": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "Show the names of the highest sales songs.",
            "pl": "Pokaż nazwy najlepiej sprzedających się utworów."
        },
        "query": {
            "en": "SELECT Title FROM song order by Sales desc limit 1",
            "pl": "SELECT Title FROM song order by Sales desc limit 1"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "What are names of the highest sales songs?",
            "pl": "Jakie są nazwy najlepiej sprzedających się utworów?"
        },
        "query": {
            "en": "SELECT Title FROM song order by Sales desc limit 1",
            "pl": "SELECT Title FROM song order by Sales desc limit 1"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "Show distinct names of singers that have songs with sales more than 300000.",
            "pl": "Pokaż różne nazwiska piosenkarzy, którzy mają utwory ze sprzedażą powyżej 300000."
        },
        "query": {
            "en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
            "pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "what are the different names of the singers that have sales more than 300000?",
            "pl": "Jakie są różne nazwiska piosenkarzy, których sprzedaż przekroczyła 300000?"
        },
        "query": {
            "en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
            "pl": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "Show the names of singers that have more than one song.",
            "pl": "Pokaż nazwiska piosenkarzy, którzy mają więcej niż jedną piosenkę."
        },
        "query": {
            "en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What are the names of the singers that have more than one songs?",
            "pl": "Jak nazywają się piosenkarze, którzy mają więcej niż jedną piosenkę?"
        },
        "query": {
            "en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
            "pl": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "Show the names of singers and the max highest position of their songs.",
            "pl": "Pokaż nazwiska piosenkarzy i najwyższe pozycje ich utworów."
        },
        "query": {
            "en": "SELECT T1.Name ,  max(T2.Highest_Position) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "pl": "SELECT T1.Name ,  max(T2.Highest_Position) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
        }
    },
    {
        "db_id": "singer",
        "type": 5,
        "question": {
            "en": "For each singer name, what is the maximum highest position for their songs?",
            "pl": "Dla każdego nazwiska piosenkarza, jakie jest maksymalne najwyższe miejsce dla jego piosenki?"
        },
        "query": {
            "en": "SELECT T1.Name ,  max(T2.Highest_Position) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
            "pl": "SELECT T1.Name ,  max(T2.Highest_Position) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "List the name of singers that do not have any song.",
            "pl": "Wymień nazwiska piosenkarzy, którzy nie mają żadnej piosenki."
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
            "pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
        }
    },
    {
        "db_id": "singer",
        "type": 0,
        "question": {
            "en": "What is the sname of every sing that does not have any song?",
            "pl": "Jak nazywa się każda piosenka, która nie ma żadnego utworu?"
        },
        "query": {
            "en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
            "pl": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "Show the citizenship shared by singers with birth year before or in 1945.",
            "pl": "Pokaż obywatelstwo wspólne dla piosenkarzy urodzonych przed lub w 1945 roku."
        },
        "query": {
            "en": "SELECT Citizenship FROM singer WHERE Birth_Year  <=  1945",
            "pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <=  1945"
        }
    },
    {
        "db_id": "singer",
        "type": 2,
        "question": {
            "en": "What are the citizenships that are shared by singers with a birth year before or in 1945?",
            "pl": "Jakie obywatelstwa posiadają piosenkarze urodzeni przed lub w 1945 roku?"
        },
        "query": {
            "en": "SELECT Citizenship FROM singer WHERE Birth_Year  <=  1945",
            "pl": "SELECT Citizenship FROM singer WHERE Birth_Year  <=  1945"
        }
    }
]